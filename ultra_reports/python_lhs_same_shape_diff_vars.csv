file,lineno,lhs,rhs_sig,rhs_shape,rhs_vars,line
.\check_companies.py,6,DB_PATH,"('Call', ('Attr', 'os.path', 'join'), (('Call', ('Attr', 'os', 'getcwd'), (), ()), ('Const', ""'data'""), ('Const', ""'app_data.db'"")), ())","('Call', 3, 0)",os,"DB_PATH = os.path.join(os.getcwd(), 'data', 'app_data.db')"
.\check_db.py,8,DB_PATH,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'BASE_DIR'), ('Const', ""'data'""), ('Const', ""'app_data.db'"")), ())","('Call', 3, 0)","BASE_DIR,os","DB_PATH = os.path.join(BASE_DIR, 'data', 'app_data.db')"
.\update_tariffs.py,8,DB_PATH,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'BASE_DIR'), ('Const', ""'data'""), ('Const', ""'app_data.db'"")), ())","('Call', 3, 0)","BASE_DIR,os","DB_PATH = os.path.join(BASE_DIR, 'data', 'app_data.db')"
.\data_input.py,285,EFFECTIVE_GOOGLE_API_KEY,"('Name', 'Maps_API_KEY_FROM_ENV')","('Name',)",Maps_API_KEY_FROM_ENV,EFFECTIVE_GOOGLE_API_KEY = Maps_API_KEY_FROM_ENV
.\data_input.py,289,EFFECTIVE_GOOGLE_API_KEY,"('Name', 'api_key_from_db')","('Name',)",api_key_from_db,EFFECTIVE_GOOGLE_API_KEY = api_key_from_db
.\pdf_ui.py,1280,_,"('Call', ('Name', 'add_customer_document'), (('Name', 'created_customer_id'), ('Name', 'pdf_bytes_to_download')), (('display_name', ('Name', 'file_name')), ('doc_type', ('Const', ""'offer_pdf'"")), ('project_id', ('Name', 'created_project_id')), ('suggested_filename', ('Name', 'file_name'))))","('Call', 2, 4)","add_customer_document,created_customer_id,created_project_id,file_name,pdf_bytes_to_download",_ = add_customer_document(
.\pdf_ui.py,1295,_,"('Call', ('Name', 'add_customer_document'), (('Name', 'created_customer_id'), ('Name', 'snapshot')), (('display_name', ('Name', 'json_name')), ('doc_type', ('Const', ""'project_json'"")), ('project_id', ('Name', 'created_project_id')), ('suggested_filename', ('Name', 'json_name'))))","('Call', 2, 4)","add_customer_document,created_customer_id,created_project_id,json_name,snapshot",_ = add_customer_document(
.\admin_panel.py,141,_add_company_document_safe,"('Name', '_dummy_add_company_document')","('Name',)",_dummy_add_company_document,_add_company_document_safe: Callable = _dummy_add_company_document
.\admin_panel.py,1758,_add_company_document_safe,"('Name', 'db_add_company_document_func')","('Name',)",db_add_company_document_func,_delete_company_safe = db_delete_company_func; _set_default_company_safe = db_set_default_company_func; _add_company_document_safe = db_add_company_document_func
.\admin_panel.py,136,_add_company_safe,"('Name', '_dummy_add_company')","('Name',)",_dummy_add_company,_add_company_safe: Callable = _dummy_add_company
.\admin_panel.py,1757,_add_company_safe,"('Name', 'db_add_company_func')","('Name',)",db_add_company_func,_list_companies_safe = db_list_companies_func; _add_company_safe = db_add_company_func; _get_company_by_id_safe = db_get_company_by_id_func; _update_company_safe = db_update_company_func
.\admin_panel.py,129,_add_product_safe,"('Name', '_dummy_add_product')","('Name',)",_dummy_add_product,_add_product_safe: Callable = _dummy_add_product
.\admin_panel.py,1755,_add_product_safe,"('Name', 'add_product_func')","('Name',)",add_product_func,_list_products_safe = list_products_func; _add_product_safe = add_product_func; _update_product_safe = update_product_func; _delete_product_safe = delete_product_func
.\admin_panel.py,143,_delete_company_document_safe,"('Name', '_dummy_delete_company_document')","('Name',)",_dummy_delete_company_document,_delete_company_document_safe: Callable = _dummy_delete_company_document
.\admin_panel.py,1759,_delete_company_document_safe,"('Name', 'db_delete_company_document_func')","('Name',)",db_delete_company_document_func,_list_company_documents_safe = db_list_company_documents_func; _delete_company_document_safe = db_delete_company_document_func
.\admin_panel.py,139,_delete_company_safe,"('Name', '_dummy_delete_company')","('Name',)",_dummy_delete_company,_delete_company_safe: Callable = _dummy_delete_company
.\admin_panel.py,1758,_delete_company_safe,"('Name', 'db_delete_company_func')","('Name',)",db_delete_company_func,_delete_company_safe = db_delete_company_func; _set_default_company_safe = db_set_default_company_func; _add_company_document_safe = db_add_company_document_func
.\admin_panel.py,131,_delete_product_safe,"('Name', '_dummy_delete_product')","('Name',)",_dummy_delete_product,_delete_product_safe: Callable = _dummy_delete_product
.\admin_panel.py,1755,_delete_product_safe,"('Name', 'delete_product_func')","('Name',)",delete_product_func,_list_products_safe = list_products_func; _add_product_safe = add_product_func; _update_product_safe = update_product_func; _delete_product_safe = delete_product_func
.\doc_output.py,68,_generate_offer_pdf_safe,"('Name', '_dummy_generate_offer_pdf')","('Name',)",_dummy_generate_offer_pdf,_generate_offer_pdf_safe = _dummy_generate_offer_pdf
.\doc_output.py,71,_generate_offer_pdf_safe,"('Name', 'generate_offer_pdf')","('Name',)",generate_offer_pdf,_generate_offer_pdf_safe = generate_offer_pdf
.\pdf_ui.py,37,_generate_offer_pdf_safe,"('Name', '_dummy_generate_offer_pdf')","('Name',)",_dummy_generate_offer_pdf,_generate_offer_pdf_safe = _dummy_generate_offer_pdf
.\pdf_ui.py,40,_generate_offer_pdf_safe,"('Name', 'generate_offer_pdf')","('Name',)",generate_offer_pdf,_generate_offer_pdf_safe = generate_offer_pdf
.\admin_panel.py,137,_get_company_by_id_safe,"('Name', '_dummy_get_company_by_id')","('Name',)",_dummy_get_company_by_id,_get_company_by_id_safe: Callable = _dummy_get_company_by_id
.\admin_panel.py,1757,_get_company_by_id_safe,"('Name', 'db_get_company_by_id_func')","('Name',)",db_get_company_by_id_func,_list_companies_safe = db_list_companies_func; _add_company_safe = db_add_company_func; _get_company_by_id_safe = db_get_company_by_id_func; _update_company_safe = db_update_company_func
.\admin_panel.py,132,_get_product_by_id_safe,"('Name', '_dummy_get_product_by_id')","('Name',)",_dummy_get_product_by_id,_get_product_by_id_safe: Callable = _dummy_get_product_by_id
.\admin_panel.py,1756,_get_product_by_id_safe,"('Name', 'get_product_by_id_func')","('Name',)",get_product_by_id_func,_get_product_by_id_safe = get_product_by_id_func; _get_product_by_model_name_safe = get_product_by_model_name_func; _list_product_categories_safe = list_product_categories_func
.\admin_panel.py,133,_get_product_by_model_name_safe,"('Name', '_dummy_get_product_by_model_name')","('Name',)",_dummy_get_product_by_model_name,_get_product_by_model_name_safe: Callable = _dummy_get_product_by_model_name
.\admin_panel.py,1756,_get_product_by_model_name_safe,"('Name', 'get_product_by_model_name_func')","('Name',)",get_product_by_model_name_func,_get_product_by_id_safe = get_product_by_id_func; _get_product_by_model_name_safe = get_product_by_model_name_func; _list_product_categories_safe = list_product_categories_func
.\admin_panel.py,135,_list_companies_safe,"('Name', '_dummy_list_companies')","('Name',)",_dummy_list_companies,_list_companies_safe: Callable = _dummy_list_companies
.\admin_panel.py,1757,_list_companies_safe,"('Name', 'db_list_companies_func')","('Name',)",db_list_companies_func,_list_companies_safe = db_list_companies_func; _add_company_safe = db_add_company_func; _get_company_by_id_safe = db_get_company_by_id_func; _update_company_safe = db_update_company_func
.\admin_panel.py,142,_list_company_documents_safe,"('Name', '_dummy_list_company_documents')","('Name',)",_dummy_list_company_documents,_list_company_documents_safe: Callable = _dummy_list_company_documents
.\admin_panel.py,1759,_list_company_documents_safe,"('Name', 'db_list_company_documents_func')","('Name',)",db_list_company_documents_func,_list_company_documents_safe = db_list_company_documents_func; _delete_company_document_safe = db_delete_company_document_func
.\admin_panel.py,134,_list_product_categories_safe,"('Name', '_dummy_list_product_categories')","('Name',)",_dummy_list_product_categories,_list_product_categories_safe: Callable = _dummy_list_product_categories
.\admin_panel.py,1756,_list_product_categories_safe,"('Name', 'list_product_categories_func')","('Name',)",list_product_categories_func,_get_product_by_id_safe = get_product_by_id_func; _get_product_by_model_name_safe = get_product_by_model_name_func; _list_product_categories_safe = list_product_categories_func
.\admin_panel.py,128,_list_products_safe,"('Name', '_dummy_list_products')","('Name',)",_dummy_list_products,_list_products_safe: Callable = _dummy_list_products
.\admin_panel.py,1755,_list_products_safe,"('Name', 'list_products_func')","('Name',)",list_products_func,_list_products_safe = list_products_func; _add_product_safe = add_product_func; _update_product_safe = update_product_func; _delete_product_safe = delete_product_func
.\admin_panel.py,124,_load_admin_setting_safe,"('Name', '_dummy_load_admin_setting')","('Name',)",_dummy_load_admin_setting,_load_admin_setting_safe: Callable = _dummy_load_admin_setting
.\admin_panel.py,1753,_load_admin_setting_safe,"('Name', 'load_admin_setting_func')","('Name',)",load_admin_setting_func,_load_admin_setting_safe = load_admin_setting_func; _save_admin_setting_safe = save_admin_setting_func
.\admin_panel.py,126,_parse_price_matrix_csv_safe,"('Name', '_dummy_parse_price_matrix_csv')","('Name',)",_dummy_parse_price_matrix_csv,_parse_price_matrix_csv_safe: Callable = _dummy_parse_price_matrix_csv
.\admin_panel.py,1754,_parse_price_matrix_csv_safe,"('Name', 'parse_price_matrix_csv_func')","('Name',)",parse_price_matrix_csv_func,_parse_price_matrix_csv_safe = parse_price_matrix_csv_func
.\admin_panel.py,1762,_parse_price_matrix_excel_func,"('Name', 'passed_excel_parser')","('Name',)",passed_excel_parser,if passed_excel_parser and callable(passed_excel_parser): _parse_price_matrix_excel_func = passed_excel_parser
.\admin_panel.py,1763,_parse_price_matrix_excel_func,"('Name', 'parse_module_price_matrix_excel')","('Name',)",parse_module_price_matrix_excel,elif callable(parse_module_price_matrix_excel): _parse_price_matrix_excel_func = parse_module_price_matrix_excel
.\admin_panel.py,1768,_parse_price_matrix_excel_func,"('Name', '_dummy_parse_excel_admin_final')","('Name',)",_dummy_parse_excel_admin_final,_parse_price_matrix_excel_func = _dummy_parse_excel_admin_final
.\admin_panel.py,125,_save_admin_setting_safe,"('Name', '_dummy_save_admin_setting')","('Name',)",_dummy_save_admin_setting,_save_admin_setting_safe: Callable = _dummy_save_admin_setting
.\admin_panel.py,1753,_save_admin_setting_safe,"('Name', 'save_admin_setting_func')","('Name',)",save_admin_setting_func,_load_admin_setting_safe = load_admin_setting_func; _save_admin_setting_safe = save_admin_setting_func
.\admin_panel.py,140,_set_default_company_safe,"('Name', '_dummy_set_default_company')","('Name',)",_dummy_set_default_company,_set_default_company_safe: Callable = _dummy_set_default_company
.\admin_panel.py,1758,_set_default_company_safe,"('Name', 'db_set_default_company_func')","('Name',)",db_set_default_company_func,_delete_company_safe = db_delete_company_func; _set_default_company_safe = db_set_default_company_func; _add_company_document_safe = db_add_company_document_func
.\admin_panel.py,138,_update_company_safe,"('Name', '_dummy_update_company')","('Name',)",_dummy_update_company,_update_company_safe: Callable = _dummy_update_company
.\admin_panel.py,1757,_update_company_safe,"('Name', 'db_update_company_func')","('Name',)",db_update_company_func,_list_companies_safe = db_list_companies_func; _add_company_safe = db_add_company_func; _get_company_by_id_safe = db_get_company_by_id_func; _update_company_safe = db_update_company_func
.\admin_panel.py,130,_update_product_safe,"('Name', '_dummy_update_product')","('Name',)",_dummy_update_product,_update_product_safe: Callable = _dummy_update_product
.\admin_panel.py,1755,_update_product_safe,"('Name', 'update_product_func')","('Name',)",update_product_func,_list_products_safe = list_products_func; _add_product_safe = add_product_func; _update_product_safe = update_product_func; _delete_product_safe = delete_product_func
.\database.py,79,abs_path,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'customer_dir'), ('Name', 'safe_name')), ())","('Call', 2, 0)","customer_dir,os,safe_name","abs_path = os.path.join(customer_dir, safe_name)"
.\database.py,164,abs_path,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'DATA_DIR'), ('Name', 'rel_path')), ())","('Call', 2, 0)","DATA_DIR,os,rel_path","abs_path = os.path.join(DATA_DIR, rel_path)"
.\database.py,1456,absolute_path_on_disk,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'company_specific_docs_dir'), ('Name', 'final_safe_filename')), ())","('Call', 2, 0)","company_specific_docs_dir,final_safe_filename,os","absolute_path_on_disk = os.path.join(company_specific_docs_dir, final_safe_filename)"
.\database.py,1522,absolute_path_on_disk,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'company_images_dir'), ('Name', 'final_safe_filename')), ())","('Call', 2, 0)","company_images_dir,final_safe_filename,os","absolute_path_on_disk = os.path.join(company_images_dir, final_safe_filename)"
.\pdf_erstellen_komplett.py,68,active_company,"('BoolOp', 'Or', (('Call', ('Name', 'db_get_active_company'), (), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",db_get_active_company,active_company = db_get_active_company() or {}
.\tests\test_main_pdf.py,71,active_company,"('BoolOp', 'Or', (('Call', ('Name', 'get_active_company'), (), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",get_active_company,active_company = get_active_company() or {}
.\tools\test_main_pdf.py,71,active_company,"('BoolOp', 'Or', (('Call', ('Name', 'get_active_company'), (), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",get_active_company,active_company = get_active_company() or {}
.\doc_output.py,1850,active_company,"('Call', ('Name', 'get_active_company_details_func'), (), ())","('Call', 0, 0)",get_active_company_details_func,active_company = get_active_company_details_func()
.\gui.py,587,active_company,"('Call', ('Attr', 'database_module', 'get_active_company'), (), ())","('Call', 0, 0)",database_module,active_company = database_module.get_active_company()
.\pdf_ui.py,264,active_company,"('Call', ('Name', 'get_active_company_details_func'), (), ())","('Call', 0, 0)",get_active_company_details_func,active_company = get_active_company_details_func()
.\pdf_ui.py,1423,active_company,"('Call', ('Name', 'get_active_company_details_func'), (), ())","('Call', 0, 0)",get_active_company_details_func,active_company = get_active_company_details_func()
.\admin_panel.py,224,active_company_id,"('Call', ('Name', 'int'), (('Name', 'active_company_id_str'),), ())","('Call', 1, 0)","active_company_id_str,int",active_company_id = int(active_company_id_str)
.\central_pdf_system.py,1978,active_company_id,"('Call', ('Attr', 'company_info', 'get'), (('Const', ""'id'""),), ())","('Call', 1, 0)",company_info,active_company_id = company_info.get('id')
.\pdf_erstellen_komplett.py,69,active_company_id,"('Call', ('Attr', 'active_company', 'get'), (('Const', ""'id'""),), ())","('Call', 1, 0)",active_company,"active_company_id = active_company.get(""id"")"
.\crm.py,332,address,"('Call', ('Attr', 'st', 'text_input'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'street_label'""), ('Const', ""'Straße'"")), ()),), (('value', ('Call', ('Attr', 'customer_to_edit', 'get'), (('Const', ""'address'""), ('Const', ""''"")), ())),))","('Call', 1, 1)","customer_to_edit,get_text_crm,st,texts","address = st.text_input(get_text_crm(texts, ""street_label"", ""Straße""), value=customer_to_edit.get('address', ''))"
.\crm_pipeline_ui.py,227,address,"('Call', ('Attr', 'st', 'text_area'), (('Const', ""'Adresse'""),), (('placeholder', ('Const', ""'Straße, PLZ Ort'"")),))","('Call', 1, 1)",st,"address = st.text_area(""Adresse"", placeholder=""Straße, PLZ Ort"")"
.\admin_panel.py,1792,admin_tab_labels_definition,"('Other', 'ListComp')","('Other', 'ListComp')","admin_tab_keys_definition,get_text_local,key","admin_tab_labels_definition = [get_text_local(key, key.replace(""admin_tab_"","""").replace(""_"","" "").title()) for key in admin_tab_keys_definition]"
.\admin_panel.py,1796,admin_tab_labels_definition,"('Other', 'ListComp')","('Other', 'ListComp')","admin_tab_keys_definition,key","admin_tab_labels_definition = [key.replace(""admin_tab_"", """").replace(""_"", "" "").title() for key in admin_tab_keys_definition]"
.\analysis.py,1869,ah,"('BoolOp', 'Or', (('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'stromkosten_haushalt_euro_jahr'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","_parse_float,project_data","ah = _parse_float(project_data.get(""stromkosten_haushalt_euro_jahr"")) or 0.0"
.\analysis.py,1886,ah,"('BoolOp', 'Or', (('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'stromkosten_haushalt_euro_jahr'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","_parse_float,project_details","ah = _parse_float(project_details.get(""stromkosten_haushalt_euro_jahr"")) or 0.0"
.\pdf_generator.py,2306,airplane_km_equiv,"('Other', 'IfExp')","('Other', 'IfExp')",co2_savings_val,airplane_km_equiv = co2_savings_val / 0.23 if co2_savings_val > 0 else 0.0
.\pv_visuals.py,249,airplane_km_equiv,"('Other', 'IfExp')","('Other', 'IfExp')",co2_savings,airplane_km_equiv = co2_savings / 0.23 if co2_savings > 0 else 0.0
.\pdf_template_engine\placeholders.py,1732,al,"('Call', ('Attr', 'aval', 'lower'), (), ())","('Call', 0, 0)",aval,al = aval.lower()
.\pdf_template_engine\placeholders.py,1744,al,"('Call', ('Attr', 'str(aval)', 'lower'), (), ())","('Call', 0, 0)","aval,str",al = str(aval).lower()
.\multi_offer_generator.py,176,all_companies,"('Call', ('Attr', 'self', 'get_available_companies'), (), ())","('Call', 0, 0)",self,all_companies = self.get_available_companies()
.\multi_offer_generator_new.py,172,all_companies,"('Call', ('Attr', 'self', 'get_available_companies'), (), ())","('Call', 0, 0)",self,all_companies = self.get_available_companies()
.\multi_offer_generator_old.py,127,all_companies,"('Call', ('Attr', 'self', 'get_available_companies'), (), ())","('Call', 0, 0)",self,all_companies = self.get_available_companies()
.\multi_offer_generator_old.py,480,all_companies,"('Call', ('Attr', 'self', 'get_available_companies'), (), ())","('Call', 0, 0)",self,all_companies = self.get_available_companies()
.\multi_offer_generator_old.py,1309,all_companies,"('Call', ('Name', 'list_all_companies'), (), ())","('Call', 0, 0)",list_all_companies,all_companies = list_all_companies()
.\pdf_styles.py,874,all_themes,"('Dict', (('UNPACK', ('Attr', 'self', 'predefined_themes')), ('UNPACK', ('Attr', 'st.session_state', 'custom_themes'))))","('Dict', 2)","self,st","all_themes = {**self.predefined_themes, **st.session_state.custom_themes}"
.\pdf_styles.py,1228,all_themes,"('Dict', (('UNPACK', ('Attr', 'manager', 'predefined_themes')), ('UNPACK', ('Attr', 'st.session_state', 'custom_themes'))))","('Dict', 2)","manager,st","all_themes = {**manager.predefined_themes, **st.session_state.custom_themes}"
.\pdf_erstellen_komplett.py,127,analysis_results,"('Call', ('Name', '_read_json'), (('Name', 'analysis_json'),), ())","('Call', 1, 0)","_read_json,analysis_json",analysis_results = _read_json(analysis_json)
.\pdf_erstellen_komplett.py,204,analysis_results,"('Call', ('Attr', 'json', 'loads'), (('Call', ('Attr', 'aj.read()', 'decode'), (('Const', ""'utf-8'""),), ()),), ())","('Call', 1, 0)","aj,json","analysis_results = json.loads(aj.read().decode(""utf-8""))"
.\pdf_generator.py,1767,analysis_results,"('Call', ('Name', 'dict'), (('BoolOp', 'Or', (('Dict', ()), ('Name', 'analysis_results'))),), ())","('Call', 1, 0)","analysis_results,dict",analysis_results = dict(analysis_results or {})
.\central_pdf_system.py,461,analysis_results,"('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'analysis_results'""), ('Dict', ())), ())","('Call', 2, 0)",kwargs,"analysis_results = kwargs.get('analysis_results', {})"
.\central_pdf_system.py,166,analysis_results,"('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'analysis_results'""), ('Dict', ())), ())","('Call', 2, 0)",kwargs,"analysis_results = kwargs.get('analysis_results', {})"
.\central_pdf_system.py,407,analysis_results,"('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'analysis_results'""), ('Dict', ())), ())","('Call', 2, 0)",kwargs,"analysis_results = kwargs.get('analysis_results', {})"
.\central_pdf_system.py,1985,analysis_results,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'calculation_results'""), ('Dict', ())), ())","('Call', 2, 0)",st,"analysis_results = st.session_state.get('calculation_results', {})"
.\pdf_erstellen_komplett.py,179,analysis_results,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'calculation_results'""), ('Dict', ())), ())","('Call', 2, 0)",st,"analysis_results = st.session_state.get(""calculation_results"", {})"
.\pdf_template_engine\placeholders.py,560,anlage_kwp,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'anlage_kwp'""),), ())","('Call', 1, 0)",analysis_results,"anlage_kwp = analysis_results.get(""anlage_kwp"")"
.\pdf_template_engine\placeholders.py,569,anlage_kwp,"('Call', ('Attr', 'project_details', 'get'), (('Const', ""'anlage_kwp'""),), ())","('Call', 1, 0)",project_details,"anlage_kwp = project_details.get(""anlage_kwp"")"
.\analysis.py,9088,anlage_kwp,"('Call', ('Attr', 'results', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '0.0')), ())","('Call', 2, 0)",results,"anlage_kwp = results.get('anlage_kwp', 0.0)"
.\analysis.py,9195,anlage_kwp,"('Call', ('Attr', 'results', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '0.0')), ())","('Call', 2, 0)",results,"anlage_kwp = results.get('anlage_kwp', 0.0)"
.\analysis.py,8915,anlage_kwp,"('Call', ('Attr', 'results', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '1.0')), ())","('Call', 2, 0)",results,"anlage_kwp = results.get('anlage_kwp', 1.0)"
.\live_preview_helpers.py,147,anlage_kwp,"('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '0.0')), ())","('Call', 2, 0)",results_for_display,"anlage_kwp = results_for_display.get('anlage_kwp', 0.0)"
.\analysis.py,6505,annual_benefit,"('Call', ('Attr', 'rec', 'get'), (('Const', ""'annual_benefit'""), ('Const', '0')), ())","('Call', 2, 0)",rec,"annual_benefit = rec.get(""annual_benefit"", 0)"
.\calculations.py,1374,annual_benefit,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'annual_financial_benefit_year1'""), ('Const', '1500')), ())","('Call', 2, 0)",calc_results,"annual_benefit = calc_results.get(""annual_financial_benefit_year1"", 1500)"
.\calculations.py,1388,annual_benefit,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'annual_financial_benefit_year1'""), ('Const', '1500')), ())","('Call', 2, 0)",calc_results,"annual_benefit = calc_results.get(""annual_financial_benefit_year1"", 1500)"
.\calculations.py,1822,annual_benefit,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'annual_financial_benefit_year1'""), ('Const', '1500')), ())","('Call', 2, 0)",calc_results,"annual_benefit = calc_results.get(""annual_financial_benefit_year1"", 1500)"
.\calculations.py,1768,annual_benefit,"('Call', ('Attr', 'np.random', 'normal'), (('Name', 'base_annual_benefit'), ('Mult', (('Const', '0.15'), ('Name', 'base_annual_benefit')))), ())","('Call', 2, 0)","base_annual_benefit,np",annual_benefit = np.random.normal(
.\calculations.py,3613,annual_co2_savings_kg,"('Mult', (('Name', 'annual_pv_production_kwh'), ('Name', 'co2_emission_factor_kg_per_kwh')))","('Mult', (('Name',), ('Name',)))","annual_pv_production_kwh,co2_emission_factor_kg_per_kwh",annual_co2_savings_kg = (
.\calculations_extended.py,374,annual_co2_savings_kg,"('Mult', (('Name', 'CO2_EMISSIONS_GRID_KWH'), ('Name', 'annual_production_kwh')))","('Mult', (('Name',), ('Name',)))","CO2_EMISSIONS_GRID_KWH,annual_production_kwh",annual_co2_savings_kg = annual_production_kwh * CO2_EMISSIONS_GRID_KWH
.\calculations.py,1087,annual_consumption,"('Call', ('Attr', 'base_data', 'get'), (('Const', ""'annual_consumption_kwh'""), ('Const', '5000')), ())","('Call', 2, 0)",base_data,"annual_consumption = base_data.get(""annual_consumption_kwh"", 5000)"
.\live_preview_helpers.py,47,annual_consumption,"('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_consumption_kwh'""), ('Const', '3000.0')), ())","('Call', 2, 0)",results,"annual_consumption = results.get('annual_consumption_kwh', 3000.0)"
.\analysis.py,8354,annual_cost,"('Other', 'IfExp')","('Other', 'IfExp')","loan_result,locals",annual_cost = (
.\analysis.py,8367,annual_cost,"('Other', 'IfExp')","('Other', 'IfExp')","leasing_result,locals",annual_cost = (
.\live_preview_helpers.py,62,annual_feed_in_revenue,"('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_feedin_revenue_euro'""), ('Const', '0.0')), ())","('Call', 2, 0)",results,"annual_feed_in_revenue = results.get('annual_feedin_revenue_euro', 0.0)"
.\live_preview_helpers.py,138,annual_feed_in_revenue,"('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'annual_feed_in_revenue_euro'""), ('Const', '0.0')), ())","('Call', 2, 0)",results_for_display,"annual_feed_in_revenue = results_for_display.get('annual_feed_in_revenue_euro', 0.0)"
.\heatpump_ui.py,556,annual_old_cost,"('Div', ('Mult', (('Name', 'gas_price'), ('Name', 'heat_demand_kwh'))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Name',))), ('Const',))","gas_price,heat_demand_kwh",annual_old_cost = heat_demand_kwh * gas_price / 100
.\heatpump_ui.py,907,annual_old_cost,"('Div', ('Mult', (('Name', 'gas_price'), ('Name', 'heat_demand_kwh'))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Name',))), ('Const',))","gas_price,heat_demand_kwh",annual_old_cost = heat_demand_kwh * gas_price / 100
.\heatpump_ui.py,558,annual_old_cost,"('Div', ('Mult', (('Name', 'heat_demand_kwh'), ('Name', 'oil_price'))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Name',))), ('Const',))","heat_demand_kwh,oil_price",annual_old_cost = heat_demand_kwh * oil_price / 100
.\heatpump_ui.py,560,annual_old_cost,"('Div', ('Mult', (('Name', 'electricity_price'), ('Name', 'heat_demand_kwh'))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Name',))), ('Const',))","electricity_price,heat_demand_kwh",annual_old_cost = heat_demand_kwh * electricity_price / 100
.\heatpump_ui.py,909,annual_old_cost,"('Div', ('Mult', (('Name', 'heat_demand_kwh'), ('Name', 'oil_price'))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Name',))), ('Const',))","heat_demand_kwh,oil_price",annual_old_cost = heat_demand_kwh * oil_price / 100
.\heatpump_ui.py,911,annual_old_cost,"('Div', ('Mult', (('Name', 'electricity_price'), ('Name', 'heat_demand_kwh'))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Name',))), ('Const',))","electricity_price,heat_demand_kwh",annual_old_cost = heat_demand_kwh * electricity_price / 100
.\analysis.py,8984,annual_production,"('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '0.0')), ())","('Call', 2, 0)",results,"annual_production = results.get('annual_pv_production_kwh', 0.0)"
.\calculations.py,905,annual_production,"('Call', ('Attr', 'base_data', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '10000')), ())","('Call', 2, 0)",base_data,"annual_production = base_data.get(""annual_pv_production_kwh"", 10000)"
.\calculations.py,1120,annual_production,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'expected_annual_production'""), ('Const', '10000')), ())","('Call', 2, 0)",project_data,"annual_production = project_data.get(""expected_annual_production"", 10000)"
.\calculations.py,1241,annual_production,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '8000')), ())","('Call', 2, 0)",calc_results,"annual_production = calc_results.get(""annual_pv_production_kwh"", 8000)"
.\calculations.py,1317,annual_production,"('Call', ('Attr', 'lcoe_params', 'get'), (('Const', ""'annual_production'""), ('Const', '10000')), ())","('Call', 2, 0)",lcoe_params,"annual_production = lcoe_params.get(""annual_production"", 10000)"
.\calculations.py,1732,annual_production,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '10000')), ())","('Call', 2, 0)",calc_results,"annual_production = calc_results.get(""annual_pv_production_kwh"", 10000)"
.\calculations.py,1920,annual_production,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '10000')), ())","('Call', 2, 0)",calc_results,"annual_production = calc_results.get(""annual_pv_production_kwh"", 10000)"
.\calculations_extended.py,404,annual_production,"('Call', ('Attr', 'offer_data', 'get'), (('Const', ""'annual_production_kwh'""), ('Const', '0')), ())","('Call', 2, 0)",offer_data,"annual_production = offer_data.get(""annual_production_kwh"", 0)"
.\calculations.py,2245,annual_production_kwh,"('Call', ('Attr', ""data.get('outputs', {}).get('totals', {}).get('fixed', {})"", 'get'), (('Const', ""'E_y'""), ('Const', '0.0')), ())","('Call', 2, 0)",data,annual_production_kwh = (
.\live_calculation_engine.py,15,annual_production_kwh,"('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '0')), ())","('Call', 2, 0)",results,"annual_production_kwh = results.get('annual_pv_production_kwh', 0)"
.\live_preview_helpers.py,135,annual_production_kwh,"('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '0.0')), ())","('Call', 2, 0)",results_for_display,"annual_production_kwh = results_for_display.get('annual_pv_production_kwh', 0.0)"
.\analysis.py,374,annual_savings,"('Add', (('Name', 'annual_electricity_savings'), ('Name', 'annual_feedin_revenue')))","('Add', (('Name',), ('Name',)))","annual_electricity_savings,annual_feedin_revenue",annual_savings = annual_feedin_revenue + annual_electricity_savings
.\analysis.py,8804,annual_savings,"('Add', (('Name', 'consumption_savings'), ('Name', 'feed_in_revenue')))","('Add', (('Name',), ('Name',)))","consumption_savings,feed_in_revenue",annual_savings = feed_in_revenue + consumption_savings
.\analysis.py,368,annual_savings,"('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_total_savings_euro'""), ('Const', '0.0')), ())","('Call', 2, 0)",results,"annual_savings = results.get('annual_total_savings_euro', 0.0)"
.\calculations_extended.py,403,annual_savings,"('Call', ('Attr', 'offer_data', 'get'), (('Const', ""'annual_savings'""), ('Const', '0')), ())","('Call', 2, 0)",offer_data,"annual_savings = offer_data.get(""annual_savings"", 0)"
.\central_pdf_system.py,506,annual_savings,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'annual_savings'""), ('Const', ""'N/A'"")), ())","('Call', 2, 0)",analysis_results,"annual_savings = analysis_results.get('annual_savings', 'N/A')"
.\heatpump_ui.py,991,annual_savings,"('Call', ('Attr', 'integration_data', 'get'), (('Const', ""'total_annual_savings'""), ('Name', 'annual_savings')), ())","('Call', 2, 0)","annual_savings,integration_data","annual_savings = integration_data.get('total_annual_savings', annual_savings)"
.\live_preview_helpers.py,152,annual_savings,"('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'annual_savings_total_euro'""), ('Const', '0.0')), ())","('Call', 2, 0)",results_for_display,"annual_savings = results_for_display.get('annual_savings_total_euro', 0.0)"
.\multi_offer_generator_old.py,860,annual_savings,"('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_financial_benefit_year1'""), ('Const', ""'N/A'"")), ())","('Call', 2, 0)",results,"annual_savings = results.get('annual_financial_benefit_year1', 'N/A')"
.\calculations_heatpump.py,114,annual_savings,"('Sub', ('Name', 'annual_alternative_cost'), ('Name', 'annual_electricity_cost'))","('Sub', ('Name',), ('Name',))","annual_alternative_cost,annual_electricity_cost",annual_savings = annual_alternative_cost - annual_electricity_cost
.\heatpump_ui.py,562,annual_savings,"('Sub', ('Name', 'annual_old_cost'), ('Name', 'annual_hp_cost'))","('Sub', ('Name',), ('Name',))","annual_hp_cost,annual_old_cost",annual_savings = annual_old_cost - annual_hp_cost
.\heatpump_ui.py,913,annual_savings,"('Sub', ('Name', 'annual_old_cost'), ('Name', 'annual_hp_cost'))","('Sub', ('Name',), ('Name',))","annual_hp_cost,annual_old_cost",annual_savings = annual_old_cost - annual_hp_cost
.\crm_calendar_ui.py,310,apt_type,"('Call', ('Attr', 'self.appointment_types', 'get'), (('Subscript', ('Name', 'appointment'), ('Const', ""'type'"")), ('Subscript', ('Attr', 'self', 'appointment_types'), ('Const', ""'consultation'""))), ())","('Call', 2, 0)","appointment,self","apt_type = self.appointment_types.get(appointment['type'], self.appointment_types['consultation'])"
.\crm_calendar_ui.py,146,apt_type,"('Call', ('Attr', 'self.appointment_types', 'get'), (('Subscript', ('Name', 'apt'), ('Const', ""'type'"")), ('Subscript', ('Attr', 'self', 'appointment_types'), ('Const', ""'consultation'""))), ())","('Call', 2, 0)","apt,self","apt_type = self.appointment_types.get(apt['type'], self.appointment_types['consultation'])"
.\excel_eval.py,396,args,"('Call', ('Attr', 'p', 'parse_args'), (), ())","('Call', 0, 0)",p,args = p.parse_args()
.\pdf_atomizer.py,396,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args = ap.parse_args()
.\dev_tools\kakerlake_ultra_cleaner.py,610,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args=ap.parse_args(); out=ensure_dir(args.out)
.\mnt\data\kakerlake_ultra_cleaner.py,610,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args=ap.parse_args(); out=ensure_dir(args.out)
.\notwendig oder nicht\wichtig\repo_porter.py,615,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args = ap.parse_args()
.\notwendig oder nicht\wichtig\repo_porter_select.py,117,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args = ap.parse_args()
.\notwendig oder nicht\wichtig\repo_to_json.py,327,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args = ap.parse_args()
.\tools\kakerlake_ultra_cleaner.py,611,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args=ap.parse_args(); out=ensure_dir(args.out)
.\tools\repo_porter.py,615,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args = ap.parse_args()
.\tools\repo_porter_select.py,117,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args = ap.parse_args()
.\tools\repo_to_json.py,327,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args = ap.parse_args()
.\notwendig oder nicht\python_function_recipes.py,164,as_num,"('Call', ('Attr', 'pd', 'to_numeric'), (('Name', 'rv'),), (('errors', ('Const', ""'coerce'"")),))","('Call', 1, 1)","pd,rv","as_num = pd.to_numeric(rv, errors='coerce')"
.\notwendig oder nicht\python_function_recipes.py,189,as_num,"('Call', ('Attr', 'pd', 'to_numeric'), (('Name', 'rng'),), (('errors', ('Const', ""'coerce'"")),))","('Call', 1, 1)","pd,rng","as_num = pd.to_numeric(rng, errors='coerce')"
.\admin_product_attributes_ui.py,48,attrs,"('Call', ('Name', 'list_attributes'), (('Call', ('Name', 'int'), (('Subscript', ('Name', 'prod'), ('Const', ""'id'"")),), ()),), ())","('Call', 1, 0)","int,list_attributes,prod",attrs = list_attributes(int(prod['id']))
.\product_attributes.py,202,attrs,"('Call', ('Name', 'list_attributes'), (('Name', 'pid'),), ())","('Call', 1, 0)","list_attributes,pid",attrs = list_attributes(pid)
.\pdf_template_engine\placeholders.py,1724,aval,"('Call', ('Name', '_get_attr_any'), (('Name', 'inv_id'), ('List', (('Const', ""'inverter_type'""), ('Const', ""'wr_typ'""), ('Const', ""'typ wechselrichter'""), ('Const', ""'typ'""), ('Const', ""'inverter_typ'"")))), ())","('Call', 2, 0)","_get_attr_any,inv_id","aval = _get_attr_any(inv_id, ["
.\pdf_template_engine\placeholders.py,1730,aval,"('Call', ('Name', '_get_attr_any'), (('Name', 'inv_id'), ('List', (('Const', ""'inverter_phases'""), ('Const', ""'phasen'""), ('Const', ""'phases'""), ('Const', ""'wr_phasen'"")))), ())","('Call', 2, 0)","_get_attr_any,inv_id","aval = _get_attr_any(inv_id, [""inverter_phases"", ""phasen"", ""phases"", ""wr_phasen""])"
.\pdf_template_engine\placeholders.py,1740,aval,"('Call', ('Name', '_get_attr_any'), (('Name', 'inv_id'), ('List', (('Const', ""'inverter_shading_management'""), ('Const', ""'shade_management'""), ('Const', ""'shading_management'""), ('Const', ""'schattenmanagement'"")))), ())","('Call', 2, 0)","_get_attr_any,inv_id","aval = _get_attr_any(inv_id, [""inverter_shading_management"", ""shade_management"", ""shading_management"", ""schattenmanagement""])"
.\pdf_template_engine\placeholders.py,1754,aval,"('Call', ('Name', '_get_attr_any'), (('Name', 'inv_id'), ('List', (('Const', ""'inverter_backup_capable'""), ('Const', ""'backup'""), ('Const', ""'notstrom'""), ('Const', ""'notstromfaehig'""), ('Const', ""'ersatzstrom'"")))), ())","('Call', 2, 0)","_get_attr_any,inv_id","aval = _get_attr_any(inv_id, [""inverter_backup_capable"", ""backup"", ""notstrom"", ""notstromfaehig"", ""ersatzstrom""])"
.\pdf_template_engine\placeholders.py,1758,aval,"('Call', ('Name', '_get_attr_any'), (('Name', 'inv_id'), ('List', (('Const', ""'inverter_smart_home_integration'""), ('Const', ""'smart_home'""), ('Const', ""'smarthome'""), ('Const', ""'smart home'"")))), ())","('Call', 2, 0)","_get_attr_any,inv_id","aval = _get_attr_any(inv_id, [""inverter_smart_home_integration"", ""smart_home"", ""smarthome"", ""smart home""])"
.\pdf_template_engine\placeholders.py,1762,aval,"('Call', ('Name', '_get_attr_any'), (('Name', 'inv_id'), ('List', (('Const', ""'inverter_guarantee_text'""), ('Const', ""'garantie'""), ('Const', ""'garantie_text'""), ('Const', ""'warranty_text'"")))), ())","('Call', 2, 0)","_get_attr_any,inv_id","aval = _get_attr_any(inv_id, [""inverter_guarantee_text"", ""garantie"", ""garantie_text"", ""warranty_text""])"
.\pdf_template_engine\placeholders.py,1926,aval,"('Call', ('Name', '_get_attr_any_sto'), (('Name', 'sto_id'), ('List', (('Const', ""'storage_extension_module_size_kwh'""), ('Const', ""'extension_module_kwh'""), ('Const', ""'expansion_module'""), ('Const', ""'erweiterungsmodul'""), ('Const', ""'erweiterungsmodul_kwh'"")))), ())","('Call', 2, 0)","_get_attr_any_sto,sto_id","aval = _get_attr_any_sto(sto_id, ["
.\pdf_template_engine\placeholders.py,1933,aval,"('Call', ('Name', '_get_attr_any_sto'), (('Name', 'sto_id'), ('List', (('Const', ""'storage_max_size_kwh'""), ('Const', ""'max_capacity_kwh'""), ('Const', ""'max_size_kwh'""), ('Const', ""'max_speichergroesse'""), ('Const', ""'max_speichergröße'""), ('Const', ""'max_storage_size'""), ('Const', ""'max. speichergröße'"")))), ())","('Call', 2, 0)","_get_attr_any_sto,sto_id","aval = _get_attr_any_sto(sto_id, ["
.\pdf_template_engine\placeholders.py,1940,aval,"('Call', ('Name', '_get_attr_any_sto'), (('Name', 'sto_id'), ('List', (('Const', ""'storage_backup_text'""), ('Const', ""'backup'""), ('Const', ""'notstrom'""), ('Const', ""'ersatzstrom'""), ('Const', ""'reserve'"")))), ())","('Call', 2, 0)","_get_attr_any_sto,sto_id","aval = _get_attr_any_sto(sto_id, [""storage_backup_text"", ""backup"", ""notstrom"", ""ersatzstrom"", ""reserve""])"
.\pdf_template_engine\placeholders.py,1944,aval,"('Call', ('Name', '_get_attr_any_sto'), (('Name', 'sto_id'), ('List', (('Const', ""'storage_outdoor_capability'""), ('Const', ""'outdoor'""), ('Const', ""'outdoorfaehig'""), ('Const', ""'outdoor_fähig'"")))), ())","('Call', 2, 0)","_get_attr_any_sto,sto_id","aval = _get_attr_any_sto(sto_id, [""storage_outdoor_capability"", ""outdoor"", ""outdoorfaehig"", ""outdoor_fähig""])"
.\pdf_template_engine\placeholders.py,1948,aval,"('Call', ('Name', '_get_attr_any_sto'), (('Name', 'sto_id'), ('List', (('Const', ""'storage_warranty_text'""), ('Const', ""'garantie_text'""), ('Const', ""'warranty_text'""), ('Const', ""'garantie'"")))), ())","('Call', 2, 0)","_get_attr_any_sto,sto_id","aval = _get_attr_any_sto(sto_id, [""storage_warranty_text"", ""garantie_text"", ""warranty_text"", ""garantie""])"
.\pdf_template_engine\placeholders.py,1953,aval,"('Call', ('Name', '_get_attr_any_sto'), (('Name', 'sto_id'), ('List', (('Const', ""'dod_percent'""), ('Const', ""'dod'""), ('Const', ""'entladetiefe'"")))), ())","('Call', 2, 0)","_get_attr_any_sto,sto_id","aval = _get_attr_any_sto(sto_id, [""dod_percent"", ""dod"", ""entladetiefe""])"
.\pdf_template_engine\placeholders.py,1959,aval,"('Call', ('Name', '_get_attr_any_sto'), (('Name', 'sto_id'), ('List', (('Const', ""'max_cycles'""), ('Const', ""'zyklen'""), ('Const', ""'cycle_count'"")))), ())","('Call', 2, 0)","_get_attr_any_sto,sto_id","aval = _get_attr_any_sto(sto_id, [""max_cycles"", ""zyklen"", ""cycle_count""])"
.\analysis.py,1870,az,"('BoolOp', 'Or', (('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'stromkosten_heizung_euro_jahr'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","_parse_float,project_data","az = _parse_float(project_data.get(""stromkosten_heizung_euro_jahr"")) or 0.0"
.\analysis.py,1887,az,"('BoolOp', 'Or', (('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'stromkosten_heizung_euro_jahr'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","_parse_float,project_details","az = _parse_float(project_details.get(""stromkosten_heizung_euro_jahr"")) or 0.0"
.\pdf_generator.py,613,b,"('Call', ('Name', 'int'), (('Subscript', ('Name', '_hex'), ('Other', 'Slice')), ('Const', '16')), ())","('Call', 2, 0)","_hex,int","r = int(_hex[1:3], 16); g = int(_hex[3:5], 16); b = int(_hex[5:7], 16)"
.\pdf_generator.py,614,b,"('Call', ('Name', 'min'), (('Const', '255'), ('Add', (('Const', '16'), ('Name', 'b')))), ())","('Call', 2, 0)","b,min","b = min(255, b + 16)  # +16 Blauanteil"
.\analysis.py,7077,backup_data,"('Dict', (('KV', ('Const', ""'project_data_summary'""), ('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '0')), ())), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '0')), ())), ('KV', ('Const', ""'total_investment_brutto'""), ('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'total_investment_brutto'""), ('Const', '0')), ()))))), ('KV', ('Const', ""'results'""), ('Call', ('Attr', 'results_for_display', 'copy'), (), ())), ('KV', ('Const', ""'timestamp'""), ('Name', 'timestamp'))))","('Dict', 3)","results_for_display,timestamp",backup_data = {
.\calculations.py,3960,backup_data,"('Dict', (('KV', ('Const', ""'project_data_summary'""), ('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Call', ('Attr', 'results', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '0')), ())), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '0')), ())), ('KV', ('Const', ""'total_investment_brutto'""), ('Call', ('Attr', 'results', 'get'), (('Const', ""'total_investment_brutto'""), ('Const', '0')), ()))))), ('KV', ('Const', ""'results'""), ('Call', ('Attr', 'results', 'copy'), (), ())), ('KV', ('Const', ""'timestamp'""), ('Name', 'timestamp'))))","('Dict', 3)","results,timestamp",backup_data = {
.\pdf_widgets.py,274,base,"('BoolOp', 'Or', (('Call', ('Attr', 'base', 'strip'), (('Const', ""'-_'""),), ()), ('Const', ""'custom'"")))","('BoolOp', 'Or', 2)",base,"base = base.strip(""-_"") or ""custom"""
.\tools\import_module_attributes_generic.py,37,base,"('BoolOp', 'Or', (('Call', ('Name', '_pdf_canonical_map'), (), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",_pdf_canonical_map,base = _pdf_canonical_map() or {}
.\analysis.py,1914,base,"('Call', ('Name', 'float'), (('Call', ('Name', 'max'), (('Const', '0.0'), ('Name', 'base_annual_cost')), ()),), ())","('Call', 1, 0)","base_annual_cost,float,max","base = float(max(0.0, base_annual_cost))"
.\excel_eval.py,252,base,"('Call', ('Name', 'Path'), (('Name', 'base'),), ())","('Call', 1, 0)","Path,base",base = Path(base)
.\heatpump_pricing.py,197,base,"('Call', ('Name', 'calculate_base_price'), (('Name', 'comps'),), ())","('Call', 1, 0)","calculate_base_price,comps",base = calculate_base_price(comps)
.\heatpump_ui.py,1138,base,"('Call', ('Name', 'calculate_base_price'), (('Name', 'comps'),), ())","('Call', 1, 0)","calculate_base_price,comps",base = calculate_base_price(comps)
.\pdf_widgets.py,273,base,"('Call', ('Attr', ""''"", 'join'), (('Other', 'GeneratorExp'),), ())","('Call', 1, 0)","ch,section_name","base = """".join(ch.lower() if (ch.isalnum() or ch in ""-_"") else ""-"" for ch in section_name.strip())"
.\dev_tools\kakerlake_ultra_cleaner.py,49,base,"('Call', ('Attr', 'ast', 'unparse'), (('Attr', 'node', 'value'),), ())","('Call', 1, 0)","ast,node",try: base=ast.unparse(node.value)
.\mnt\data\kakerlake_ultra_cleaner.py,49,base,"('Call', ('Attr', 'ast', 'unparse'), (('Attr', 'node', 'value'),), ())","('Call', 1, 0)","ast,node",try: base=ast.unparse(node.value)
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,144,base,"('Call', ('Name', 'calculate_base_price'), (('Name', 'comps'),), ())","('Call', 1, 0)","calculate_base_price,comps",base = calculate_base_price(comps)
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_ui.py.insert.py,63,base,"('Call', ('Name', 'calculate_base_price'), (('Name', 'comps'),), ())","('Call', 1, 0)","calculate_base_price,comps",base = calculate_base_price(comps)
.\notwendig oder nicht\wichtig\portings\patches\heatpump_ui.py.insert.py,64,base,"('Call', ('Name', 'calculate_base_price'), (('Name', 'comps'),), ())","('Call', 1, 0)","calculate_base_price,comps",base = calculate_base_price(comps)
.\tools\kakerlake_ultra_cleaner.py,50,base,"('Call', ('Attr', 'ast', 'unparse'), (('Attr', 'node', 'value'),), ())","('Call', 1, 0)","ast,node",try: base=ast.unparse(node.value)
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,144,base,"('Call', ('Name', 'calculate_base_price'), (('Name', 'comps'),), ())","('Call', 1, 0)","calculate_base_price,comps",base = calculate_base_price(comps)
.\tools\out_selected\patches\heatpump_ui.py.insert.py,63,base,"('Call', ('Name', 'calculate_base_price'), (('Name', 'comps'),), ())","('Call', 1, 0)","calculate_base_price,comps",base = calculate_base_price(comps)
.\tools\portings\patches\heatpump_ui.py.insert.py,64,base,"('Call', ('Name', 'calculate_base_price'), (('Name', 'comps'),), ())","('Call', 1, 0)","calculate_base_price,comps",base = calculate_base_price(comps)
.\heatpump_pricing.py,228,base,"('Call', ('Attr', 'offer', 'get'), (('Const', ""'base'""), ('Dict', ())), ())","('Call', 2, 0)",offer,"base = offer.get(""base"", {})"
.\multi_offer_generator_old.py,1062,base,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'base_price'""), ('Const', '20000')), ())","('Call', 2, 0)",st,"base = st.session_state.get('base_price', 20000)"
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,176,base,"('Call', ('Attr', 'offer', 'get'), (('Const', ""'base'""), ('Dict', ())), ())","('Call', 2, 0)",offer,"base = offer.get(""base"", {})"
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,176,base,"('Call', ('Attr', 'offer', 'get'), (('Const', ""'base'""), ('Dict', ())), ())","('Call', 2, 0)",offer,"base = offer.get(""base"", {})"
.\gui.py,147,base_cost,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'base_matrix_price_netto'""), ('Const', '0.0')), ())","('Call', 2, 0)",calc_results,"base_cost = calc_results.get(""base_matrix_price_netto"", 0.0)"
.\gui.py,149,base_cost,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'base_matrix_price_netto'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,"base_cost = st.session_state.get(""base_matrix_price_netto"", 0.0)"
.\pdf_ui.py,95,base_cost,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'base_matrix_price_netto'""), ('Const', '0.0')), ())","('Call', 2, 0)",calc_results,"base_cost = calc_results.get(""base_matrix_price_netto"", 0.0)"
.\pdf_ui.py,97,base_cost,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'base_matrix_price_netto'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,"base_cost = st.session_state.get(""base_matrix_price_netto"", 0.0)"
.\pdf_template_engine\dynamic_overlay.py,906,base_page,"('Name', 'bg_page')","('Name',)",bg_page,base_page = bg_page
.\pdf_template_engine\dynamic_overlay.py,908,base_page,"('Name', 'extra_bg_page')","('Name',)",extra_bg_page,base_page = extra_bg_page
.\pdf_generator.py,672,base_reader,"('Call', ('Name', 'PdfReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'main7'),), ()),), ())","('Call', 1, 0)","PdfReader,io,main7",base_reader = PdfReader(io.BytesIO(main7))
.\pdf_template_engine\dynamic_overlay.py,978,base_reader,"('Call', ('Name', 'PdfReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'base_pdf'),), ()),), ())","('Call', 1, 0)","PdfReader,base_pdf,io",base_reader = PdfReader(io.BytesIO(base_pdf))
.\pdf_template_engine\placeholders.py,627,bat_kwh,"('Name', 'ui_kwh')","('Name',)",ui_kwh,bat_kwh = ui_kwh
.\pdf_template_engine\placeholders.py,640,bat_kwh,"('Name', 'val')","('Name',)",val,bat_kwh = val
.\pdf_template_engine\placeholders.py,618,bat_kwh,"('Name', 'val')","('Name',)",val,bat_kwh = val
.\calculations.py,762,battery_capacity,"('Call', ('Attr', 'base_data', 'get'), (('Const', ""'battery_capacity_kwh'""), ('Const', '10')), ())","('Call', 2, 0)",base_data,"battery_capacity = base_data.get(""battery_capacity_kwh"", 10)"
.\calculations.py,1025,battery_capacity,"('Call', ('Attr', 'base_data', 'get'), (('Const', ""'battery_capacity_kwh'""), ('Const', '10')), ())","('Call', 2, 0)",base_data,"battery_capacity = base_data.get(""battery_capacity_kwh"", 10)"
.\calculations.py,1064,battery_capacity,"('Call', ('Attr', 'base_data', 'get'), (('Const', ""'battery_capacity_kwh'""), ('Const', '0')), ())","('Call', 2, 0)",base_data,"battery_capacity = base_data.get(""battery_capacity_kwh"", 0)"
.\central_pdf_system.py,489,battery_capacity,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'battery_capacity_kwh'""), ('Const', ""'N/A'"")), ())","('Call', 2, 0)",project_data,"battery_capacity = project_data.get('battery_capacity_kwh', 'N/A')"
.\live_calculation_engine.py,19,battery_capacity_kwh,"('Call', ('Attr', 'results', 'get'), (('Const', ""'battery_capacity_kwh'""), ('Const', '0')), ())","('Call', 2, 0)",results,"battery_capacity_kwh = results.get('battery_capacity_kwh', 0)"
.\live_preview_helpers.py,136,battery_capacity_kwh,"('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'battery_capacity_kwh'""), ('Const', '0.0')), ())","('Call', 2, 0)",results_for_display,"battery_capacity_kwh = results_for_display.get('battery_capacity_kwh', 0.0)"
.\live_preview_helpers.py,193,battery_capacity_kwh_correct,"('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'selected_storage_storage_power_kw'""), ('Const', '0.0')), ())","('Call', 2, 0)",results_for_display,"battery_capacity_kwh_correct = results_for_display.get('selected_storage_storage_power_kw', 0.0)"
.\live_preview_helpers.py,199,battery_capacity_kwh_correct,"('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_storage_storage_power_kw'""), ('Const', '0.0')), ())","('Call', 2, 0)",project_details,"battery_capacity_kwh_correct = project_details.get('selected_storage_storage_power_kw', 0.0)"
.\live_preview_helpers.py,203,battery_capacity_kwh_correct,"('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'battery_capacity_kwh'""), ('Const', '0.0')), ())","('Call', 2, 0)",results_for_display,"battery_capacity_kwh_correct = results_for_display.get('battery_capacity_kwh', 0.0)"
.\calculations.py,1429,battery_discharge,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'annual_battery_discharge_kwh'""), ('Const', '1200')), ())","('Call', 2, 0)",calc_results,"battery_discharge = calc_results.get(""annual_battery_discharge_kwh"", 1200)"
.\notwendig oder nicht\custom_dynamic_calculation.py,75,battery_discharge,"('Call', ('Name', 'min'), (('Name', 'remaining_consumption'), ('Name', 'battery_charge')), ())","('Call', 2, 0)","battery_charge,min,remaining_consumption","battery_discharge = min(remaining_consumption, battery_charge)"
.\notwendig oder nicht\wichtig\out_selected\patches\tools\custom_dynamic_calculation.py.insert.py,38,battery_discharge,"('Call', ('Name', 'min'), (('Name', 'remaining_consumption'), ('Name', 'battery_charge')), ())","('Call', 2, 0)","battery_charge,min,remaining_consumption","battery_discharge = min(remaining_consumption, battery_charge)"
.\notwendig oder nicht\wichtig\portings\patches\tools\custom_dynamic_calculation.py.insert.py,39,battery_discharge,"('Call', ('Name', 'min'), (('Name', 'remaining_consumption'), ('Name', 'battery_charge')), ())","('Call', 2, 0)","battery_charge,min,remaining_consumption","battery_discharge = min(remaining_consumption, battery_charge)"
.\tools\custom_dynamic_calculation.py,75,battery_discharge,"('Call', ('Name', 'min'), (('Name', 'remaining_consumption'), ('Name', 'battery_charge')), ())","('Call', 2, 0)","battery_charge,min,remaining_consumption","battery_discharge = min(remaining_consumption, battery_charge)"
.\tools\out_selected\patches\tools\custom_dynamic_calculation.py.insert.py,38,battery_discharge,"('Call', ('Name', 'min'), (('Name', 'remaining_consumption'), ('Name', 'battery_charge')), ())","('Call', 2, 0)","battery_charge,min,remaining_consumption","battery_discharge = min(remaining_consumption, battery_charge)"
.\tools\portings\patches\tools\custom_dynamic_calculation.py.insert.py,39,battery_discharge,"('Call', ('Name', 'min'), (('Name', 'remaining_consumption'), ('Name', 'battery_charge')), ())","('Call', 2, 0)","battery_charge,min,remaining_consumption","battery_discharge = min(remaining_consumption, battery_charge)"
.\pdf_template_engine\dynamic_overlay.py,927,bh,"('Call', ('Name', 'float'), (('Attr', 'base_page.mediabox', 'height'),), ())","('Call', 1, 0)","base_page,float",bh = float(base_page.mediabox.height)
.\pdf_template_engine\dynamic_overlay.py,951,bh,"('Call', ('Name', 'float'), (('Attr', 'ov_page.mediabox', 'height'),), ())","('Call', 1, 0)","float,ov_page",bh = float(ov_page.mediabox.height)
.\dev_tools\kakerlake_ultra_cleaner.py,286,body,"('Call', ('Name', 'list'), (('Attr', 'mod', 'body'),), ())","('Call', 1, 0)","list,mod",body=list(mod.body); insert_idx=0
.\dev_tools\kakerlake_ultra_cleaner.py,305,body,"('Call', ('Name', 'list'), (('Attr', 'module', 'body'),), ())","('Call', 1, 0)","list,module",body=list(module.body); insert_idx=0
.\mnt\data\kakerlake_ultra_cleaner.py,286,body,"('Call', ('Name', 'list'), (('Attr', 'mod', 'body'),), ())","('Call', 1, 0)","list,mod",body=list(mod.body); insert_idx=0
.\mnt\data\kakerlake_ultra_cleaner.py,305,body,"('Call', ('Name', 'list'), (('Attr', 'module', 'body'),), ())","('Call', 1, 0)","list,module",body=list(module.body); insert_idx=0
.\tools\kakerlake_ultra_cleaner.py,287,body,"('Call', ('Name', 'list'), (('Attr', 'mod', 'body'),), ())","('Call', 1, 0)","list,mod",body=list(mod.body); insert_idx=0
.\tools\kakerlake_ultra_cleaner.py,306,body,"('Call', ('Name', 'list'), (('Attr', 'module', 'body'),), ())","('Call', 1, 0)","list,module",body=list(module.body); insert_idx=0
.\tools\schema_extractor.py,30,body,"('Call', ('Attr', 'm', 'group'), (('Const', '2'),), ())","('Call', 1, 0)",m,body = m.group(2)
.\admin_panel.py,774,brand,"('BoolOp', 'Or', (('Call', ('Attr', 'p', 'get'), (('Const', ""'brand'""),), ()), ('Const', ""''"")))","('BoolOp', 'Or', 2)",p,brand = p.get('brand') or ''
.\debug_brand_extraction.py,55,brand,"('BoolOp', 'Or', (('Call', ('Attr', 'prod_data', 'get'), (('Const', ""'brand'""),), ()), ('Call', ('Attr', 'prod_data', 'get'), (('Const', ""'brand_name'""),), ())))","('BoolOp', 'Or', 2)",prod_data,brand = prod_data.get('brand_name') or prod_data.get('brand')
.\admin_logo_management_ui.py,46,brand,"('Call', ('Attr', ""product.get('brand', '')"", 'strip'), (), ())","('Call', 0, 0)",product,"brand = product.get('brand', '').strip()"
.\pdf_generator.py,1589,brand,"('Call', ('Attr', ""product_details.get('brand', '')"", 'strip'), (), ())","('Call', 0, 0)",product_details,"brand = product_details.get('brand', '').strip()"
.\product_attributes.py,243,brand,"('Call', ('Attr', ""row.get(brand_col) or ''"", 'strip'), (), ())","('Call', 0, 0)","brand_col,row",brand = (row.get(brand_col) or '').strip()
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,24,brand,"('Call', ('Attr', ""product.get('brand', '')"", 'strip'), (), ())","('Call', 0, 0)",product,"brand = product.get('brand', '').strip()"
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,25,brand,"('Call', ('Attr', ""product.get('brand', '')"", 'strip'), (), ())","('Call', 0, 0)",product,"brand = product.get('brand', '').strip()"
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,24,brand,"('Call', ('Attr', ""product.get('brand', '')"", 'strip'), (), ())","('Call', 0, 0)",product,"brand = product.get('brand', '').strip()"
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,25,brand,"('Call', ('Attr', ""product.get('brand', '')"", 'strip'), (), ())","('Call', 0, 0)",product,"brand = product.get('brand', '').strip()"
.\pdf_generator.py,699,buf,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buf = io.BytesIO(); writer.write(buf)
.\pdf_generator.py,429,buf,"('Call', ('Attr', '_io', 'BytesIO'), (), ())","('Call', 0, 0)",_io,buf = _io.BytesIO()
.\pdf_styles.py,372,buf,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buf = io.BytesIO()
.\pdf_styles.py,808,buf,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buf = io.BytesIO()
.\tests\test_numbering.py,27,buf,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buf = io.BytesIO()
.\tools\test_numbering.py,27,buf,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buf = io.BytesIO()
.\central_pdf_system.py,455,buffer,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buffer = io.BytesIO()
.\create_png_test_images.py,41,buffer,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buffer = io.BytesIO()
.\pdf_generator.py,3063,buffer,"('Call', ('Name', 'BytesIO'), (), ())","('Call', 0, 0)",BytesIO,buffer = BytesIO()
.\pdf_helpers.py,186,buffer,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buffer = io.BytesIO()
.\notwendig oder nicht\wichtig\portings\patches\create_png_test_images.py.insert.py,41,buffer,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buffer = io.BytesIO()
.\notwendig oder nicht\wichtig\portings\patches\test_brand_logos.py.insert.py,43,buffer,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buffer = io.BytesIO()
.\pdf_template_engine\dynamic_overlay.py,325,buffer,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buffer = io.BytesIO()
.\tests\test_brand_logos.py,40,buffer,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buffer = io.BytesIO()
.\tools\portings\patches\create_png_test_images.py.insert.py,41,buffer,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buffer = io.BytesIO()
.\tools\portings\patches\test_brand_logos.py.insert.py,43,buffer,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buffer = io.BytesIO()
.\pdf_template_engine\dynamic_overlay.py,926,bw,"('Call', ('Name', 'float'), (('Attr', 'base_page.mediabox', 'width'),), ())","('Call', 1, 0)","base_page,float",bw = float(base_page.mediabox.width)
.\pdf_template_engine\dynamic_overlay.py,950,bw,"('Call', ('Name', 'float'), (('Attr', 'ov_page.mediabox', 'width'),), ())","('Call', 1, 0)","float,ov_page",bw = float(ov_page.mediabox.width)
.\pdf_generator.py,1214,c,"('Call', ('Attr', 'canvas', 'Canvas'), (('Name', 'output_filename'),), (('pagesize', ('Name', 'A4')),))","('Call', 1, 1)","A4,canvas,output_filename","c = canvas.Canvas(output_filename, pagesize=A4)"
.\pdf_template_engine\dynamic_overlay.py,326,c,"('Call', ('Attr', 'canvas', 'Canvas'), (('Name', 'buffer'),), (('pagesize', ('Name', 'A4')),))","('Call', 1, 1)","A4,buffer,canvas","c = canvas.Canvas(buffer, pagesize=A4)"
.\tests\test_numbering.py,28,c,"('Call', ('Attr', 'canvas', 'Canvas'), (('Name', 'buf'),), (('pagesize', ('Name', 'A4')),))","('Call', 1, 1)","A4,buf,canvas","c = canvas.Canvas(buf, pagesize=A4)"
.\tools\test_numbering.py,28,c,"('Call', ('Attr', 'canvas', 'Canvas'), (('Name', 'buf'),), (('pagesize', ('Name', 'A4')),))","('Call', 1, 1)","A4,buf,canvas","c = canvas.Canvas(buf, pagesize=A4)"
.\heatpump_ui.py,406,candidates,"('Call', ('Name', 'sorted'), (('Name', 'candidates'),), (('key', ('Other', 'Lambda')),))","('Call', 1, 1)","abs,candidates,hp,required_kw,sorted","candidates = sorted(candidates, key=lambda hp: abs(hp.get('heating_power', 0) - required_kw))"
.\heatpump_ui.py,868,candidates,"('Call', ('Name', 'sorted'), (('Name', 'candidates'),), (('key', ('Other', 'Lambda')),))","('Call', 1, 1)","abs,candidates,float,hp,required_kw,sorted","candidates = sorted(candidates, key=lambda hp: abs(float(hp.get('heating_power', 0) or 0) - required_kw))"
.\heatpump_ui.py,395,candidates,"('Other', 'ListComp')","('Other', 'ListComp')","heatpump_type,heatpumps_db,hp",candidates = [hp for hp in heatpumps_db if hp.get('type') == heatpump_type]
.\heatpump_ui.py,397,candidates,"('Other', 'ListComp')","('Other', 'ListComp')","candidates,hp,manufacturer_preference",candidates = [hp for hp in candidates if hp.get('manufacturer') == manufacturer_preference]
.\pdf_generator.py,2305,car_km_equiv,"('Call', ('Attr', 'current_analysis_results_pdf', 'get'), (('Const', ""'co2_equivalent_car_km_per_year'""), ('Const', '0.0')), ())","('Call', 2, 0)",current_analysis_results_pdf,"car_km_equiv = current_analysis_results_pdf.get('co2_equivalent_car_km_per_year', 0.0)"
.\pv_visuals.py,246,car_km_equiv,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'co2_equivalent_car_km_per_year'""), ('Const', '0.0')), ())","('Call', 2, 0)",analysis_results,"car_km_equiv = analysis_results.get('co2_equivalent_car_km_per_year', 0.0)"
.\calculations.py,1392,cash_flows,"('Add', (('List', (('USub', ('Name', 'investment')),)), ('Mult', (('List', (('Name', 'annual_benefit'),)), ('Name', 'lifetime')))))","('Add', (('List', 1), ('Mult', (('List', 1), ('Name',)))))","annual_benefit,investment,lifetime",cash_flows = [-investment] + [annual_benefit] * lifetime
.\calculations_extended.py,61,cash_flows,"('Add', (('List', (('USub', ('Name', 'investment')),)), ('Mult', (('List', (('Name', 'annual_savings'),)), ('Name', 'LIFESPAN_YEARS')))))","('Add', (('List', 1), ('Mult', (('List', 1), ('Name',)))))","LIFESPAN_YEARS,annual_savings,investment",cash_flows = [-investment] + [annual_savings] * LIFESPAN_YEARS
.\admin_panel.py,773,cat,"('BoolOp', 'Or', (('Call', ('Attr', 'p', 'get'), (('Const', ""'category'""),), ()), ('Const', ""''"")))","('BoolOp', 'Or', 2)",p,cat = p.get('category') or ''
.\pdf_atomizer.py,211,cat,"('BoolOp', 'Or', (('Call', ('Name', 'getattr'), (('Name', 'pdf'), ('Const', ""'Root'""), ('Const', 'None')), ()), ('Subscript', ('Attr', 'pdf', 'trailer'), ('Const', ""'/Root'""))))","('BoolOp', 'Or', 2)","getattr,pdf","cat = getattr(pdf, ""Root"", None) or pdf.trailer[""/Root""]"
.\product_attributes.py,241,category,"('Call', ('Attr', ""row.get(category_col) or ''"", 'strip'), (), ())","('Call', 0, 0)","category_col,row",category = (row.get(category_col) or '').strip()
.\tools\import_module_attributes_generic.py,290,category,"('Call', ('Attr', ""norm.get('category') or default_category or 'Modul'"", 'strip'), (), ())","('Call', 0, 0)","default_category,norm","category = (norm.get(""category"") or default_category or ""Modul"").strip()"
.\pdf_template_engine\placeholders.py,768,charge_sum,"('Call', ('Name', 'sum'), (('Other', 'GeneratorExp'),), ())","('Call', 1, 0)","float,monthly_storage_charge,sum,v",charge_sum = sum(float(v or 0) for v in monthly_storage_charge)
.\pdf_template_engine\placeholders.py,775,charge_sum,"('Call', ('Name', 'float'), (('Name', 'battery_expected_annual_kwh'),), ())","('Call', 1, 0)","battery_expected_annual_kwh,float",charge_sum = float(battery_expected_annual_kwh)
.\analysis.py,5392,chart_cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'len'), (('Name', 'modern_charts'),), ()),), ())","('Call', 1, 0)","len,modern_charts,st",chart_cols = st.columns(len(modern_charts))
.\central_pdf_system.py,1504,chart_cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,chart_cols = st.columns(2)
.\pdf_generator.py,1877,chart_config,"('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'chart_config'""), ('Dict', ())), ())","('Call', 2, 0)",inclusion_options,"chart_config = inclusion_options.get(""chart_config"", {})"
.\pdf_ui.py,532,chart_config,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'chart_config'""), ('Dict', ())), ())","('Call', 2, 0)",st,"chart_config = st.session_state.get('chart_config', {})"
.\analysis.py,2118,chart_data,"('Dict', (('KV', ('Const', ""'x'""), ('Other', 'ListComp')), ('KV', ('Const', ""'y'""), ('Name', 'power'))))","('Dict', 2)","h,hours,power","chart_data = {""x"": [f""{h}:00"" for h in hours], ""y"": power}"
.\analysis.py,2170,chart_data,"('Dict', (('KV', ('Const', ""'labels'""), ('Name', 'days')), ('KV', ('Const', ""'values'""), ('Name', 'weekly_production'))))","('Dict', 2)","days,weekly_production","chart_data = {""labels"": days, ""values"": weekly_production}"
.\analysis.py,2268,chart_data,"('Dict', (('KV', ('Const', ""'labels'""), ('Name', 'month_labels')), ('KV', ('Const', ""'values'""), ('Name', 'production_data'))))","('Dict', 2)","month_labels,production_data","chart_data = {""labels"": month_labels, ""values"": production_data}"
.\analysis.py,2343,chart_data,"('Dict', (('KV', ('Const', ""'labels'""), ('Name', 'scenarios')), ('KV', ('Const', ""'values'""), ('Name', 'roi_values'))))","('Dict', 2)","roi_values,scenarios","chart_data = {""labels"": scenarios, ""values"": roi_values}"
.\analysis.py,2460,chart_data,"('Dict', (('KV', ('Const', ""'labels'""), ('Name', 'month_labels')), ('KV', ('Const', ""'values'""), ('Name', 'einnahmen'))))","('Dict', 2)","einnahmen,month_labels","chart_data = {""labels"": month_labels, ""values"": einnahmen}"
.\analysis.py,2756,chart_data,"('Dict', (('KV', ('Const', ""'categories'""), ('Name', 'anbieter')), ('KV', ('Const', ""'series'""), ('List', (('Dict', (('KV', ('Const', ""'data'""), ('Name', 'gesamt')), ('KV', ('Const', ""'name'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'annual_costs_label_switcher'""), ('Const', ""'Jahreskosten (€)'"")), ())))),)))))","('Dict', 2)","anbieter,gesamt,get_text,texts",chart_data = {
.\analysis.py,3955,chart_data,"('Dict', (('KV', ('Const', ""'categories'""), ('Name', 'jahre_sim_labels')), ('KV', ('Const', ""'series'""), ('List', (('Dict', (('KV', ('Const', ""'data'""), ('Name', 'eigen_sim_kwh')), ('KV', ('Const', ""'name'""), ('Const', ""'Eigenverbrauch (kWh)'"")))), ('Dict', (('KV', ('Const', ""'data'""), ('Name', 'einspeisung_sim_kwh')), ('KV', ('Const', ""'name'""), ('Const', ""'Einspeisung (kWh)'"")))))))))","('Dict', 2)","eigen_sim_kwh,einspeisung_sim_kwh,jahre_sim_labels",chart_data = {
.\analysis.py,4026,chart_data,"('Dict', (('KV', ('Const', ""'categories'""), ('Other', 'ListComp')), ('KV', ('Const', ""'series'""), ('List', ()))))","('Dict', 2)","jahr,jahre_axis","chart_data = {""categories"": [f""Jahr {jahr}"" for jahr in jahre_axis], ""series"": []}"
.\analysis.py,4140,chart_data,"('Dict', (('KV', ('Const', ""'x'""), ('Name', 'month_labels')), ('KV', ('Const', ""'y'""), ('Name', 'ev_monat_grad'))))","('Dict', 2)","ev_monat_grad,month_labels","chart_data = {""x"": month_labels, ""y"": ev_monat_grad}"
.\analysis.py,4291,chart_data,"('Dict', (('KV', ('Const', ""'categories'""), ('Name', 'labels')), ('KV', ('Const', ""'series'""), ('List', ()))))","('Dict', 2)",labels,chart_data = {
.\analysis.py,4400,chart_data,"('Dict', (('KV', ('Const', ""'categories'""), ('Name', 'month_labels')), ('KV', ('Const', ""'series'""), ('List', (('Dict', (('KV', ('Const', ""'data'""), ('Name', 'kosten_vorher')), ('KV', ('Const', ""'name'""), ('Const', ""'Kosten Vorher (ohne Photovoltaik)'"")))), ('Dict', (('KV', ('Const', ""'data'""), ('Name', 'kosten_nachher')), ('KV', ('Const', ""'name'""), ('Const', ""'Kosten Nachher (mit Photovoltaik)'"")))))))))","('Dict', 2)","kosten_nachher,kosten_vorher,month_labels",chart_data = {
.\analysis.py,4477,chart_data,"('Dict', (('KV', ('Const', ""'x'""), ('Other', 'ListComp')), ('KV', ('Const', ""'y'""), ('Name', 'kum_vorteile'))))","('Dict', 2)","int,jahre_axis,kum_vorteile,year","chart_data = {""x"": [f""Jahr {int(year)}"" for year in jahre_axis], ""y"": kum_vorteile}"
.\analysis.py,5037,chart_data,"('Dict', (('KV', ('Const', ""'labels'""), ('Call', ('Name', 'list'), (('Name', 'labels'),), ())), ('KV', ('Const', ""'values'""), ('Call', ('Name', 'list'), (('Name', 'values'),), ()))))","('Dict', 2)","labels,list,values","chart_data = {""labels"": list(labels), ""values"": list(values)}"
.\analysis.py,5189,chart_data,"('Dict', (('KV', ('Const', ""'labels'""), ('Call', ('Name', 'list'), (('Name', 'labels'),), ())), ('KV', ('Const', ""'values'""), ('Call', ('Name', 'list'), (('Name', 'values'),), ()))))","('Dict', 2)","labels,list,values","chart_data = {""labels"": list(labels), ""values"": list(values)}"
.\analysis.py,2783,chart_data,"('Dict', (('KV', ('Const', ""'labels'""), ('Other', 'ListComp')), ('KV', ('Const', ""'x'""), ('Name', 'anbieter')), ('KV', ('Const', ""'y'""), ('Name', 'gesamt'))))","('Dict', 3)","anbieter,arbeitspreis,enumerate,gesamt,grundgebuehr,i,name",chart_data = {
.\analysis.py,3738,chart_data,"('Dict', (('KV', ('Const', ""'series_data'""), ('List', (('Dict', (('KV', ('Const', ""'customdata'""), ('Other', 'ListComp')), ('KV', ('Const', ""'hovertemplate'""), ('Const', ""'<b>Maßnahme:</b> %{x}<br><b>Kosten:</b> %{customdata[0]:.2f} €<br><b>Nutzen:</b> %{customdata[1]:.2f} €<br><b>Rendite:</b> %{customdata[2]:.2f}%<extra></extra>'"")), ('KV', ('Const', ""'name'""), ('Const', ""'Gesamtrendite (%)'"")), ('KV', ('Const', ""'x'""), ('Name', 'massnahmen_labels')), ('KV', ('Const', ""'y'""), ('Name', 'effizienz_roi')))),))), ('KV', ('Const', ""'x'""), ('Name', 'massnahmen_labels')), ('KV', ('Const', ""'y'""), ('Name', 'effizienz_roi'))))","('Dict', 3)","effizienz_roi,kosten,kosten_abs,massnahmen_labels,nutzen,nutzwert_simuliert_abs,roi,zip",chart_data = {
.\analysis.py,3831,chart_data,"('Dict', (('KV', ('Const', ""'series_data'""), ('List', (('Dict', (('KV', ('Const', ""'name'""), ('Const', ""'Simulierter Nutzenverlauf'"")), ('KV', ('Const', ""'x'""), ('Other', 'ListComp')), ('KV', ('Const', ""'y'""), ('Call', ('Attr', 'nutzwert_illustrativ_eur', 'tolist'), (), ())))),))), ('KV', ('Const', ""'x'""), ('Other', 'ListComp')), ('KV', ('Const', ""'y'""), ('Call', ('Attr', 'nutzwert_illustrativ_eur', 'tolist'), (), ()))))","('Dict', 3)","cap,kapazitaet_range_kwh,nutzwert_illustrativ_eur",chart_data = {
.\analysis.py,4199,chart_data,"('Dict', (('KV', ('Const', ""'series_data'""), ('List', (('Dict', (('KV', ('Const', ""'customdata'""), ('Other', 'ListComp')), ('KV', ('Const', ""'hovertemplate'""), ('Const', ""'<b>Projekt:</b> %{x}<br><b>Investition:</b> %{customdata[0]:.2f} €<br><b>Jährl. Nutzen:</b> %{customdata[1]:.2f} €<br><b>Jährl. ROI:</b> %{customdata[2]:.2f}%<extra></extra>'"")), ('KV', ('Const', ""'name'""), ('Const', ""'ROI-Vergleich (%)'"")), ('KV', ('Const', ""'x'""), ('Name', 'labels')), ('KV', ('Const', ""'y'""), ('Name', 'roi_opts')))),))), ('KV', ('Const', ""'x'""), ('Name', 'labels')), ('KV', ('Const', ""'y'""), ('Name', 'roi_opts'))))","('Dict', 3)","ben,benefit_opts,inv,invest_opts,labels,roi,roi_opts,zip",chart_data = {
.\analysis.py,2889,chart_data,"('Dict', (('KV', ('Const', ""'series_data'""), ('List', (('Dict', (('KV', ('Const', ""'x'""), ('Other', 'ListComp')), ('KV', ('Const', ""'y'""), ('Name', 'co2_savings_tonnes_per_year')))), ('Dict', (('KV', ('Const', ""'x'""), ('Other', 'ListComp')), ('KV', ('Const', ""'y'""), ('Name', 'wert_co2_eur_per_year'))))))), ('KV', ('Const', ""'series_names'""), ('List', (('Const', ""'CO₂-Einsparung (t)'""), ('Const', ""'Monetärer Wert (€)'"")))), ('KV', ('Const', ""'x'""), ('Other', 'ListComp')), ('KV', ('Const', ""'y'""), ('List', (('Name', 'co2_savings_tonnes_per_year'), ('Name', 'wert_co2_eur_per_year'))))))","('Dict', 4)","co2_savings_tonnes_per_year,jahre_axis,wert_co2_eur_per_year,year",chart_data = {
.\analysis.py,3607,chart_data,"('Dict', (('KV', ('Const', ""'labels'""), ('Other', 'ListComp')), ('KV', ('Const', ""'values'""), ('Name', 'co2_savings_tonnes_per_year')), ('KV', ('Const', ""'x'""), ('Name', 'jahre_axis')), ('KV', ('Const', ""'y'""), ('Name', 'co2_savings_tonnes_per_year'))))","('Dict', 4)","co2_savings_tonnes_per_year,jahre_axis,year",chart_data = {
.\analysis.py,6754,chart_keys,"('Other', 'ListComp')","('Other', 'ListComp')","data,k","chart_keys = [k for k in data.keys() if ""chart"" in k.lower()]"
.\multi_offer_generator.py,1041,chart_keys,"('Other', 'ListComp')","('Other', 'ListComp')","calc_results,k",chart_keys = [k for k in calc_results.keys() if k.endswith('_chart_bytes') and calc_results[k] is not None]
.\analysis.py,2049,chart_type,"('Call', ('Attr', 'st', 'selectbox'), (('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'daily_prod_chart_type_label'""), ('Const', ""'Diagrammtyp'"")), ()), ('List', (('Const', ""'Säulen'""), ('Const', ""'Balken'""), ('Const', ""'Strich'""), ('Const', ""'Kreis'""), ('Const', ""'Donut'"")))), (('key', ('Const', ""'daily_prod_chart_type_switcher'"")),))","('Call', 2, 1)","get_text,st,texts",chart_type = st.selectbox(
.\analysis.py,1317,chart_type,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Diagrammtyp:'""), ('List', (('Const', ""'Säulen'""), ('Const', ""'Balken'""), ('Const', ""'Kreis'""), ('Const', ""'Donut'"")))), (('key', ('Other', 'JoinedStr')),))","('Call', 2, 1)","chart_key,st",chart_type = st.selectbox(
.\analysis.py,2611,chart_type,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Diagrammtyp:'""), ('List', (('Const', ""'Säulen'""), ('Const', ""'Strich'""), ('Const', ""'Balken'"")))), (('key', ('Const', ""'prod_vs_cons_type'"")),))","('Call', 2, 1)",st,chart_type = st.selectbox(
.\analysis.py,397,cheated,"('Call', ('Name', 'max'), (('Const', '0.1'), ('Sub', ('Name', 'amortisation_years'), ('Name', 'red'))), ())","('Call', 2, 0)","amortisation_years,max,red","cheated = max(0.1, amortisation_years - red)"
.\analysis.py,405,cheated,"('Call', ('Name', 'max'), (('Const', '0.1'), ('Mult', (('Name', 'amortisation_years'), ('Sub', ('Const', '1'), ('Div', ('Name', 'pct'), ('Const', '100.0')))))), ())","('Call', 2, 0)","amortisation_years,max,pct","cheated = max(0.1, amortisation_years * (1 - pct / 100.0))"
.\calculations.py,3329,cheated,"('Call', ('Name', 'max'), (('Const', '0.1'), ('Sub', ('Name', 'original'), ('Name', 'red'))), ())","('Call', 2, 0)","max,original,red","cheated = max(0.1, original - red)"
.\calculations.py,3337,cheated,"('Call', ('Name', 'max'), (('Const', '0.1'), ('Mult', (('Name', 'original'), ('Sub', ('Const', '1'), ('Div', ('Name', 'pct'), ('Const', '100.0')))))), ())","('Call', 2, 0)","max,original,pct","cheated = max(0.1, original * (1 - pct / 100.0))"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,81,chosen,"('Name', 'default_parts_under_10_eur_per_kwh')","('Name',)",default_parts_under_10_eur_per_kwh,chosen = default_parts_under_10_eur_per_kwh
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,77,chosen,"('Name', 'norm')","('Name',)",norm,chosen = norm
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,103,chosen,"('Name', 'default_parts_under_10_eur_per_kwh')","('Name',)",default_parts_under_10_eur_per_kwh,chosen = default_parts_under_10_eur_per_kwh
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,99,chosen,"('Name', 'norm')","('Name',)",norm,chosen = norm
.\pdf_template_engine\placeholders.py,120,chosen,"('Name', 'default_parts_under_10_eur_per_kwh')","('Name',)",default_parts_under_10_eur_per_kwh,chosen = default_parts_under_10_eur_per_kwh
.\pdf_template_engine\placeholders.py,116,chosen,"('Name', 'norm')","('Name',)",norm,chosen = norm
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,81,chosen,"('Name', 'default_parts_under_10_eur_per_kwh')","('Name',)",default_parts_under_10_eur_per_kwh,chosen = default_parts_under_10_eur_per_kwh
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,77,chosen,"('Name', 'norm')","('Name',)",norm,chosen = norm
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,103,chosen,"('Name', 'default_parts_under_10_eur_per_kwh')","('Name',)",default_parts_under_10_eur_per_kwh,chosen = default_parts_under_10_eur_per_kwh
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,99,chosen,"('Name', 'norm')","('Name',)",norm,chosen = norm
.\pdf_styles.py,583,circle,"('Call', ('Name', 'Circle'), (('Tuple', (('Const', '0.5'), ('Const', '0.5'))), ('Const', '0.4')), (('edgecolor', ('Subscript', ('Subscript', ('Name', 'theme_config'), ('Const', ""'colors'"")), ('Const', '4'))), ('facecolor', ('Const', ""'none'"")), ('linewidth', ('Const', '10'))))","('Call', 2, 3)","Circle,theme_config","circle = Circle((0.5, 0.5), 0.4, facecolor='none',"
.\pdf_styles.py,508,circle,"('Call', ('Name', 'Circle'), (('Subscript', ('Name', 'info'), ('Const', ""'pos'"")), ('Subscript', ('Name', 'info'), ('Const', ""'size'""))), (('edgecolor', ('Const', ""'white'"")), ('facecolor', ('Subscript', ('Subscript', ('Name', 'theme_config'), ('Const', ""'colors'"")), ('Const', '0'))), ('linewidth', ('Const', '3'))))","('Call', 2, 3)","Circle,info,theme_config","circle = Circle(info['pos'], info['size'],"
.\calculations.py,2098,cleaned_value_str,"('Call', ('Attr', 'cleaned_value_str', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",cleaned_value_str,"cleaned_value_str = cleaned_value_str.replace("","", ""."")"
.\calculations.py,2088,cleaned_value_str,"('Call', ('Attr', 'value', 'replace'), (('Const', ""','""), ('Const', ""''"")), ())","('Call', 2, 0)",value,cleaned_value_str = value.replace(
.\calculations.py,2094,cleaned_value_str,"('Call', ('Attr', 'value', 'replace'), (('Const', ""'.'""), ('Const', ""''"")), ())","('Call', 2, 0)",value,cleaned_value_str = value.replace(
.\pdf_generator.py,752,cleaned_value_str,"('Call', ('Attr', 'cleaned_value_str', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",cleaned_value_str,"cleaned_value_str = cleaned_value_str.replace(',', '.')"
.\pdf_generator.py,750,cleaned_value_str,"('Call', ('Attr', 'value', 'replace'), (('Const', ""','""), ('Const', ""''"")), ())","('Call', 2, 0)",value,"if value.rfind('.') > value.rfind(','): cleaned_value_str = value.replace(',', '')"
.\pdf_generator.py,751,cleaned_value_str,"('Call', ('Attr', 'value', 'replace'), (('Const', ""'.'""), ('Const', ""''"")), ())","('Call', 2, 0)",value,"elif value.rfind(',') > value.rfind('.'): cleaned_value_str = value.replace('.', '')"
.\analysis.py,3421,co2_cumulative,"('Other', 'ListComp')","('Other', 'ListComp')","env_results,year,years",co2_cumulative = [
.\analysis.py,9020,co2_cumulative,"('Other', 'ListComp')","('Other', 'ListComp')","co2_annual,year,years",co2_cumulative = [co2_annual * year / 1000 for year in years]
.\dev_tools\kakerlake_ultra_cleaner.py,332,code,"('Name', 'new')","('Name',)",new,"write_text(path, new); code=new"
.\dev_tools\kakerlake_ultra_cleaner.py,458,code,"('Name', 'new')","('Name',)",new,"write_text(path, new); code=new"
.\mnt\data\kakerlake_ultra_cleaner.py,332,code,"('Name', 'new')","('Name',)",new,"write_text(path, new); code=new"
.\mnt\data\kakerlake_ultra_cleaner.py,458,code,"('Name', 'new')","('Name',)",new,"write_text(path, new); code=new"
.\tools\kakerlake_ultra_cleaner.py,2,code,"('Name', 'r')","('Name',)",r,code = r#!/usr/bin/env python3
.\tools\kakerlake_ultra_cleaner.py,333,code,"('Name', 'new')","('Name',)",new,"write_text(path, new); code=new"
.\tools\kakerlake_ultra_cleaner.py,459,code,"('Name', 'new')","('Name',)",new,"write_text(path, new); code=new"
.\notwendig oder nicht\python_function_recipes.py,36,col_idx,"('Subscript', ('Attr', ""key_row.sort_values(kind='mergesort')"", 'index'), ('Name', 'pos'))","('Subscript',)","key_row,pos",col_idx = key_row.sort_values(kind='mergesort').index[pos]
.\notwendig oder nicht\python_function_recipes.py,41,col_idx,"('Subscript', ('Attr', 'hits', 'index'), ('Const', '0'))","('Subscript',)",hits,col_idx = hits.index[0]
.\doc_output.py,249,color_scheme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Farb-Schema auswählen'""),), (('format_func', ('Other', 'Lambda')), ('key', ('Const', ""'pdf_color_scheme'"")), ('options', ('List', (('Const', ""'PROFESSIONAL'""), ('Const', ""'SOLAR'""), ('Const', ""'ECO'""), ('Const', ""'MODERN'""), ('Const', ""'CUSTOM'""))))))","('Call', 1, 3)","st,x",color_scheme = st.selectbox(
.\options.py,272,color_scheme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""' Farbschema'""),), (('help', ('Const', ""'Wählen Sie Ihr bevorzugtes Farbschema'"")), ('index', ('Call', ('Attr', ""['Standard', 'Ocean Blue', 'Forest Green', 'Sunset Orange', 'Purple Rain', 'Monochrome']"", 'index'), (('Name', 'current_color_scheme'),), ())), ('options', ('List', (('Const', ""'Standard'""), ('Const', ""'Ocean Blue'""), ('Const', ""'Forest Green'""), ('Const', ""'Sunset Orange'""), ('Const', ""'Purple Rain'""), ('Const', ""'Monochrome'""))))))","('Call', 1, 3)","current_color_scheme,st",color_scheme = st.selectbox(
.\analysis.py,1397,color_scheme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Farbschema:'""), ('List', (('Const', ""'Standard'""), ('Const', ""'Grün-Töne'""), ('Const', ""'Blau-Töne'""), ('Const', ""'Warm'""), ('Const', ""'Kalt'""), ('Const', ""'Bunt'"")))), (('key', ('Other', 'JoinedStr')),))","('Call', 2, 1)","chart_key,st",color_scheme = st.selectbox(
.\analysis.py,1063,color_scheme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Farbschema:'""), ('List', (('Const', ""'Standard'""), ('Const', ""'Grün-Töne'""), ('Const', ""'Blau-Töne'""), ('Const', ""'Warm'""), ('Const', ""'Kalt'""), ('Const', ""'Bunt'"")))), (('key', ('Other', 'JoinedStr')),))","('Call', 2, 1)","chart_key,st",color_scheme = st.selectbox(
.\analysis.py,2616,color_scheme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Farbschema:'""), ('List', (('Const', ""'Standard'""), ('Const', ""'Grün-Blau'""), ('Const', ""'Rot-Grün'""), ('Const', ""'Warm'""), ('Const', ""'Kalt'"")))), (('key', ('Const', ""'prod_vs_cons_colors'"")),))","('Call', 2, 1)",st,color_scheme = st.selectbox(
.\analysis.py,1413,colors,"('Call', ('Attr', 'color_palettes', 'get'), (('Name', 'color_scheme'), ('List', (('Const', ""'#1f77b4'""), ('Const', ""'#ff7f0e'""), ('Const', ""'#2ca02c'"")))), ())","('Call', 2, 0)","color_palettes,color_scheme","colors = color_palettes.get(color_scheme, [""#1f77b4"", ""#ff7f0e"", ""#2ca02c""])"
.\analysis.py,2631,colors,"('Call', ('Attr', 'color_palettes', 'get'), (('Name', 'color_scheme'), ('List', (('Const', ""'#1f77b4'""), ('Const', ""'#ff7f0e'"")))), ())","('Call', 2, 0)","color_palettes,color_scheme","colors = color_palettes.get(color_scheme, [""#1f77b4"", ""#ff7f0e""])"
.\analysis.py,1100,colors,"('Call', ('Attr', 'color_palettes', 'get'), (('Name', 'color_scheme'), ('Name', 'default_colors')), ())","('Call', 2, 0)","color_palettes,color_scheme,default_colors","colors = color_palettes.get(color_scheme, default_colors)"
.\admin_panel.py,2053,cols,"('Call', ('Attr', 'st', 'columns'), (('Name', 'cols_per_row'),), ())","('Call', 1, 0)","cols_per_row,st",cols = st.columns(cols_per_row)
.\admin_product_attributes_ui.py,50,cols,"('Call', ('Attr', 'st', 'columns'), (('List', (('Const', '2'), ('Const', '3'), ('Const', '1'), ('Const', '1'), ('Const', '1'))),), ())","('Call', 1, 0)",st,"cols = st.columns([2,3,1,1,1])"
.\crm.py,491,cols,"('Call', ('Attr', 'st', 'columns'), (('List', (('Const', '3'), ('Const', '2'), ('Const', '2'), ('Const', '2'))),), ())","('Call', 1, 0)",st,"cols = st.columns([3, 2, 2, 2])"
.\crm_calendar_ui.py,113,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '7'),), ())","('Call', 1, 0)",st,cols = st.columns(7)
.\crm_calendar_ui.py,121,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '7'),), ())","('Call', 1, 0)",st,cols = st.columns(7)
.\crm_pipeline_ui.py,139,cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'len'), (('Name', 'active_stages'),), ()),), ())","('Call', 1, 0)","active_stages,len,st",cols = st.columns(len(active_stages))
.\multi_offer_generator.py,182,cols,"('Call', ('Attr', 'st', 'columns'), (('List', (('Const', '3'), ('Const', '1'))),), ())","('Call', 1, 0)",st,"cols = st.columns([3, 1])"
.\multi_offer_generator.py,292,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '3'),), ())","('Call', 1, 0)",st,cols = st.columns(3)
.\multi_offer_generator.py,116,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,cols = st.columns(2)
.\multi_offer_generator.py,145,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,cols = st.columns(2)
.\multi_offer_generator_new.py,204,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,cols = st.columns(2)
.\multi_offer_generator_new.py,111,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,cols = st.columns(2)
.\multi_offer_generator_new.py,141,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,cols = st.columns(2)
.\multi_offer_generator_old.py,150,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,cols = st.columns(2)
.\multi_offer_generator_old.py,503,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,cols = st.columns(2)
.\multi_offer_generator_old.py,103,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,cols = st.columns(2)
.\multi_offer_generator_old.py,456,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,cols = st.columns(2)
.\multi_offer_generator_old.py,1317,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '3'),), ())","('Call', 1, 0)",st,cols = st.columns(3)
.\pdf_styles.py,818,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '3'),), ())","('Call', 1, 0)",st,cols = st.columns(3)
.\pdf_styles.py,897,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '4'),), ())","('Call', 1, 0)",st,cols = st.columns(4)
.\pdf_styles.py,1064,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '5'),), ())","('Call', 1, 0)",st,cols = st.columns(5)
.\pdf_ui.py,788,cols,"('Call', ('Attr', 'st', 'columns'), (('Add', (('Call', ('Name', 'len'), (('Subscript', ('Subscript', ('Attr', 'st', 'session_state'), ('Const', ""'temp_table_data'"")), ('Const', ""'headers'"")),), ()), ('Const', '1'))),), ())","('Call', 1, 0)","len,st",cols = st.columns(len(st.session_state['temp_table_data']['headers']) + 1)
.\components\progress_settings.py,195,cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'len'), (('Name', 'PRESET_THEMES'),), ()),), ())","('Call', 1, 0)","PRESET_THEMES,len,st",cols = st.columns(len(PRESET_THEMES))
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_settings.py.insert.py,174,cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'len'), (('Name', 'PRESET_THEMES'),), ()),), ())","('Call', 1, 0)","PRESET_THEMES,len,st",cols = st.columns(len(PRESET_THEMES))
.\notwendig oder nicht\wichtig\portings\patches\components\progress_settings.py.insert.py,183,cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'len'), (('Name', 'PRESET_THEMES'),), ()),), ())","('Call', 1, 0)","PRESET_THEMES,len,st",cols = st.columns(len(PRESET_THEMES))
.\tools\out_selected\patches\components\progress_settings.py.insert.py,174,cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'len'), (('Name', 'PRESET_THEMES'),), ()),), ())","('Call', 1, 0)","PRESET_THEMES,len,st",cols = st.columns(len(PRESET_THEMES))
.\tools\portings\patches\components\progress_settings.py.insert.py,183,cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'len'), (('Name', 'PRESET_THEMES'),), ()),), ())","('Call', 1, 0)","PRESET_THEMES,len,st",cols = st.columns(len(PRESET_THEMES))
.\notwendig oder nicht\excel_range_reader.py,70,cols,"('Other', 'ListComp')","('Other', 'ListComp')","first_row,str,x",cols = [str(x) for x in first_row]
.\tools\schema_extractor.py,87,cols,"('Other', 'ListComp')","('Other', 'ListComp')","c,im","tname = im.group(1); cols = [c.strip() for c in im.group(2).split(',')]"
.\multi_offer_generator.py,1177,companies_selected,"('Call', ('Attr', 'self', 'render_company_selection'), (), ())","('Call', 0, 0)",self,companies_selected = self.render_company_selection()
.\multi_offer_generator.py,1225,companies_selected,"('Call', ('Attr', 'generator', 'render_company_selection'), (), ())","('Call', 0, 0)",generator,companies_selected = generator.render_company_selection()
.\multi_offer_generator_new.py,433,companies_selected,"('Call', ('Attr', 'self', 'render_company_selection'), (), ())","('Call', 0, 0)",self,companies_selected = self.render_company_selection()
.\heatpump_ui.py,1059,company_info,"('BoolOp', 'Or', (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'active_company_info'""), ('Dict', ())), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",st,"company_info = st.session_state.get('active_company_info', {}) or {}"
.\pdf_erstellen_komplett.py,183,company_info,"('BoolOp', 'Or', (('Call', ('Name', 'get_active_company'), (), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",get_active_company,company_info = get_active_company() or {}
.\pdf_template_engine\placeholders.py,422,company_info,"('BoolOp', 'Or', (('Dict', ()), ('Name', 'company_info')))","('BoolOp', 'Or', 2)",company_info,company_info = company_info or {}
.\tests\test_main_pdf.py,72,company_info,"('BoolOp', 'Or', (('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Hamburg'"")), ('KV', ('Const', ""'email'""), ('Const', ""'info@ding-solar.de'"")), ('KV', ('Const', ""'name'""), ('Const', ""'DING Solar GmbH'"")), ('KV', ('Const', ""'phone'""), ('Const', ""'+49 40 123456'"")), ('KV', ('Const', ""'short_name'""), ('Const', ""'DING'"")), ('KV', ('Const', ""'street'""), ('Const', ""'Sonnenweg 1'"")), ('KV', ('Const', ""'website'""), ('Const', ""'https://ding-solar.de'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'20095'"")))), ('Name', 'active_company')))","('BoolOp', 'Or', 2)",active_company,company_info = active_company or {
.\tools\test_main_pdf.py,72,company_info,"('BoolOp', 'Or', (('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Hamburg'"")), ('KV', ('Const', ""'email'""), ('Const', ""'info@ding-solar.de'"")), ('KV', ('Const', ""'name'""), ('Const', ""'DING Solar GmbH'"")), ('KV', ('Const', ""'phone'""), ('Const', ""'+49 40 123456'"")), ('KV', ('Const', ""'short_name'""), ('Const', ""'DING'"")), ('KV', ('Const', ""'street'""), ('Const', ""'Sonnenweg 1'"")), ('KV', ('Const', ""'website'""), ('Const', ""'https://ding-solar.de'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'20095'"")))), ('Name', 'active_company')))","('BoolOp', 'Or', 2)",active_company,company_info = active_company or {
.\multi_offer_generator_old.py,1127,company_info,"('Call', ('Name', 'get_company_by_id'), (('Name', 'company_id'),), ())","('Call', 1, 0)","company_id,get_company_by_id",company_info = get_company_by_id(company_id)
.\multi_offer_generator_old.py,1238,company_info,"('Call', ('Name', 'get_company_by_id'), (('Name', 'company_id'),), ())","('Call', 1, 0)","company_id,get_company_by_id",company_info = get_company_by_id(company_id)
.\pdf_erstellen_komplett.py,128,company_info,"('Call', ('Name', '_read_json'), (('Name', 'company_json'),), ())","('Call', 1, 0)","_read_json,company_json",company_info = _read_json(company_json)
.\pdf_erstellen_komplett.py,211,company_info,"('Call', ('Attr', 'json', 'loads'), (('Call', ('Attr', 'cj.read()', 'decode'), (('Const', ""'utf-8'""),), ()),), ())","('Call', 1, 0)","cj,json","company_info = json.loads(cj.read().decode(""utf-8""))"
.\admin_panel.py,1547,company_info_for_pdf,"('Name', 'active_company_data')","('Name',)",active_company_data,if active_company_data: company_info_for_pdf = active_company_data; company_logo_b64_for_pdf = active_company_data.get('logo_base64')
.\doc_output.py,1855,company_info_for_pdf,"('Name', 'active_company')","('Name',)",active_company,company_info_for_pdf = active_company
.\admin_panel.py,1547,company_logo_b64_for_pdf,"('Call', ('Attr', 'active_company_data', 'get'), (('Const', ""'logo_base64'""),), ())","('Call', 1, 0)",active_company_data,if active_company_data: company_info_for_pdf = active_company_data; company_logo_b64_for_pdf = active_company_data.get('logo_base64')
.\doc_output.py,1856,company_logo_b64_for_pdf,"('Call', ('Attr', 'active_company', 'get'), (('Const', ""'logo_base64'""),), ())","('Call', 1, 0)",active_company,company_logo_b64_for_pdf = active_company.get('logo_base64')
.\crm.py,330,company_name,"('Call', ('Attr', 'st', 'text_input'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'company_name_label'""), ('Const', ""'Firmenname (optional)'"")), ()),), (('value', ('Call', ('Attr', 'customer_to_edit', 'get'), (('Const', ""'company_name'""), ('Const', ""''"")), ())),))","('Call', 1, 1)","customer_to_edit,get_text_crm,st,texts","company_name = st.text_input(get_text_crm(texts, ""company_name_label"", ""Firmenname (optional)""), value=customer_to_edit.get('company_name', ''))"
.\crm_pipeline_ui.py,223,company_name,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Firmenname *'""),), (('placeholder', ('Const', ""'z.B. Mustermann GmbH'"")),))","('Call', 1, 1)",st,"company_name = st.text_input(""Firmenname *"", placeholder=""z.B. Mustermann GmbH"")"
.\central_pdf_system.py,463,company_name,"('Call', ('Attr', 'company_info', 'get'), (('Const', ""'name'""), ('Const', ""'Unbekannte Firma'"")), ())","('Call', 2, 0)",company_info,"company_name = company_info.get('name', 'Unbekannte Firma')"
.\multi_offer_generator.py,601,company_name,"('Call', ('Attr', 'company', 'get'), (('Const', ""'name'""), ('Other', 'JoinedStr')), ())","('Call', 2, 0)","company,company_id","company_name = company.get(""name"", f""Firma_{company_id}"")  # Überschreibe mit echtem Namen"
.\multi_offer_generator_new.py,301,company_name,"('Call', ('Attr', 'company', 'get'), (('Const', ""'name'""), ('Other', 'JoinedStr')), ())","('Call', 2, 0)","company,company_id","company_name = company.get(""name"", f""Firma_{company_id}"")"
.\multi_offer_generator_old.py,1239,company_name,"('Other', 'IfExp')","('Other', 'IfExp')","company_id,company_info","company_name = company_info.get('name', f'Firma_{company_id}') if company_info else f'Firma_{company_id}'"
.\multi_offer_generator_old.py,1420,company_name,"('Other', 'IfExp')","('Other', 'IfExp')","company,company_id","company_name = company['name'] if company else f""Firma {company_id}"""
.\multi_offer_generator_old.py,1453,company_name,"('Other', 'IfExp')","('Other', 'IfExp')","company,company_id","company_name = company['name'] if company else f""Firma {company_id}"""
.\components\progress_demo.py,159,config,"('Attr', 'progress_manager', 'config')","('Attr',)",progress_manager,config = progress_manager.config
.\components\progress_manager.py,99,config,"('Attr', 'st.session_state', 'progress_config')","('Attr',)",st,config = st.session_state.progress_config
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,156,config,"('Attr', 'st.session_state', 'progress_config')","('Attr',)",st,config = st.session_state.progress_config
.\tools\out_selected\patches\components\progress_manager.py.insert.py,156,config,"('Attr', 'st.session_state', 'progress_config')","('Attr',)",st,config = st.session_state.progress_config
.\multi_offer_generator_old.py,1000,config,"('Subscript', ('Attr', 'st.session_state', 'multi_offer_pdf_configs'), ('Name', 'company_id'))","('Subscript',)","company_id,st",config = st.session_state.multi_offer_pdf_configs[company_id]
.\pdf_generator.py,2202,config,"('Subscript', ('Name', 'financing_config'), ('Name', 'scenario'))","('Subscript',)","financing_config,scenario",config = financing_config[scenario]
.\multi_offer_generator.py,1181,config_ready,"('Call', ('Attr', 'self', 'render_offer_configuration'), (), ())","('Call', 0, 0)",self,config_ready = self.render_offer_configuration()
.\multi_offer_generator.py,1229,config_ready,"('Call', ('Attr', 'generator', 'render_offer_configuration'), (), ())","('Call', 0, 0)",generator,config_ready = generator.render_offer_configuration()
.\multi_offer_generator_new.py,437,config_ready,"('Call', ('Attr', 'self', 'render_offer_configuration'), (), ())","('Call', 0, 0)",self,config_ready = self.render_offer_configuration()
.\brand_logo_db.py,51,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\brand_logo_db.py,101,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\brand_logo_db.py,147,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\brand_logo_db.py,195,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\brand_logo_db.py,253,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\brand_logo_db.py,294,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\brand_logo_db.py,345,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\brand_logo_db.py,377,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm.py,253,conn,"('Call', ('Name', 'get_db_connection_func'), (), ())","('Call', 0, 0)",get_db_connection_func,conn = get_db_connection_func()
.\crm_calendar_ui.py,354,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_calendar_ui.py,420,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_calendar_ui.py,500,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_calendar_ui.py,530,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_pipeline_ui.py,520,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_pipeline_ui.py,561,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_pipeline_ui.py,622,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_pipeline_ui.py,654,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_pipeline_ui.py,711,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_pipeline_ui.py,744,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_pipeline_ui.py,764,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,55,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,277,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,321,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,363,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,379,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,461,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,509,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,962,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1096,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1121,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1158,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1171,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1185,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1196,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1209,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1225,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1318,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1329,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1340,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1379,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1403,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1426,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1442,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1474,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1496,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1549,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1577,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1611,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1635,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1651,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1680,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1700,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1719,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1737,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1760,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,68,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,101,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,135,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,153,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,669,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1918,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\migrate_logo_database.py,16,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\multi_offer_generator.py,655,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\pdf_ui.py,1210,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\product_attributes.py,41,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\product_attributes.py,85,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\product_attributes.py,117,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\product_attributes.py,150,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\product_db.py,143,conn,"('Call', ('Name', 'get_db_connection_safe_pd'), (), ())","('Call', 0, 0)",get_db_connection_safe_pd,conn = get_db_connection_safe_pd()
.\product_db.py,179,conn,"('Call', ('Name', 'get_db_connection_safe_pd'), (), ())","('Call', 0, 0)",get_db_connection_safe_pd,conn = get_db_connection_safe_pd();
.\product_db.py,201,conn,"('Call', ('Name', 'get_db_connection_safe_pd'), (), ())","('Call', 0, 0)",get_db_connection_safe_pd,conn = get_db_connection_safe_pd();
.\product_db.py,213,conn,"('Call', ('Name', 'get_db_connection_safe_pd'), (), ())","('Call', 0, 0)",get_db_connection_safe_pd,conn = get_db_connection_safe_pd();
.\product_db.py,238,conn,"('Call', ('Name', 'get_db_connection_safe_pd'), (), ())","('Call', 0, 0)",get_db_connection_safe_pd,conn = get_db_connection_safe_pd();
.\product_db.py,249,conn,"('Call', ('Name', 'get_db_connection_safe_pd'), (), ())","('Call', 0, 0)",get_db_connection_safe_pd,conn = get_db_connection_safe_pd();
.\product_db.py,260,conn,"('Call', ('Name', 'get_db_connection_safe_pd'), (), ())","('Call', 0, 0)",get_db_connection_safe_pd,conn = get_db_connection_safe_pd();
.\product_db.py,279,conn,"('Call', ('Name', 'get_db_connection_safe_pd'), (), ())","('Call', 0, 0)",get_db_connection_safe_pd,conn = get_db_connection_safe_pd();
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,46,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,99,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,148,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,199,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,263,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,307,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,361,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\out_selected\patches\migrate_logo_database.py.insert.py,15,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,54,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,114,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,170,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,228,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,306,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,357,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,418,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\portings\patches\migrate_logo_database.py.insert.py,16,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,25,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tests\test_logo_integration.py,26,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\smoke_crm_save.py,8,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\out_selected\patches\brand_logo_db.py.insert.py,46,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\out_selected\patches\brand_logo_db.py.insert.py,99,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\out_selected\patches\brand_logo_db.py.insert.py,148,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\out_selected\patches\brand_logo_db.py.insert.py,199,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\out_selected\patches\brand_logo_db.py.insert.py,263,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\out_selected\patches\brand_logo_db.py.insert.py,307,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\out_selected\patches\brand_logo_db.py.insert.py,361,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\out_selected\patches\migrate_logo_database.py.insert.py,15,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\portings\patches\brand_logo_db.py.insert.py,54,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\portings\patches\brand_logo_db.py.insert.py,114,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\portings\patches\brand_logo_db.py.insert.py,170,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\portings\patches\brand_logo_db.py.insert.py,228,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\portings\patches\brand_logo_db.py.insert.py,306,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\portings\patches\brand_logo_db.py.insert.py,357,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\portings\patches\brand_logo_db.py.insert.py,418,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\portings\patches\migrate_logo_database.py.insert.py,16,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\portings\patches\test_logo_integration.py.insert.py,25,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\check_companies.py,15,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Name', 'DB_PATH'),), ())","('Call', 1, 0)","DB_PATH,sqlite3",conn = sqlite3.connect(DB_PATH)
.\check_db.py,14,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Name', 'DB_PATH'),), ())","('Call', 1, 0)","DB_PATH,sqlite3",conn = sqlite3.connect(DB_PATH)
.\check_product_images.py,6,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Const', ""'data/app_data.db'""),), ())","('Call', 1, 0)",sqlite3,conn = sqlite3.connect('data/app_data.db')
.\check_product_image_details.py,7,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Const', ""'data/app_data.db'""),), ())","('Call', 1, 0)",sqlite3,conn = sqlite3.connect('data/app_data.db')
.\crm.py,747,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Const', ""':memory:'""),), ())","('Call', 1, 0)",sqlite3,conn = sqlite3.connect(':memory:')
.\database.py,270,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Name', 'DB_PATH'),), ())","('Call', 1, 0)","DB_PATH,sqlite3",conn = sqlite3.connect(DB_PATH)
.\database.py,1808,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Name', 'DB_PATH'),), ())","('Call', 1, 0)","DB_PATH,sqlite3",conn = sqlite3.connect(DB_PATH)
.\database.py,1865,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Name', 'DB_PATH'),), ())","('Call', 1, 0)","DB_PATH,sqlite3",conn = sqlite3.connect(DB_PATH)
.\database.py,1961,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Name', 'DB_PATH'),), ())","('Call', 1, 0)","DB_PATH,sqlite3",conn = sqlite3.connect(DB_PATH)
.\update_tariffs.py,29,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Name', 'DB_PATH'),), ())","('Call', 1, 0)","DB_PATH,sqlite3",conn = sqlite3.connect(DB_PATH)
.\notwendig oder nicht\wichtig\portings\patches\check_product_images.py.insert.py,11,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Const', ""'data/app_data.db'""),), ())","('Call', 1, 0)",sqlite3,conn = sqlite3.connect('data/app_data.db')
.\notwendig oder nicht\wichtig\portings\patches\check_product_image_details.py.insert.py,12,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Const', ""'data/app_data.db'""),), ())","('Call', 1, 0)",sqlite3,conn = sqlite3.connect('data/app_data.db')
.\tools\portings\patches\check_product_images.py.insert.py,11,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Const', ""'data/app_data.db'""),), ())","('Call', 1, 0)",sqlite3,conn = sqlite3.connect('data/app_data.db')
.\tools\portings\patches\check_product_image_details.py.insert.py,12,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Const', ""'data/app_data.db'""),), ())","('Call', 1, 0)",sqlite3,conn = sqlite3.connect('data/app_data.db')
.\clean_unicode_emojis.py,74,content,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,content = f.read()
.\clean_unicode_emojis.py,151,content,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,content = f.read()
.\pdf_migration.py,185,content,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,content = f.read()
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,274,content,"('Call', ('Attr', 'page', 'get_contents'), (), ())","('Call', 0, 0)",page,content = page.get_contents()
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,156,content,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,content = f.read()
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,308,content,"('Call', ('Attr', 'page', 'get_contents'), (), ())","('Call', 0, 0)",page,content = page.get_contents()
.\pdf_template_engine\dynamic_overlay.py,828,content,"('Call', ('Attr', 'page', 'get_contents'), (), ())","('Call', 0, 0)",page,content = page.get_contents()
.\tests\test_logo_integration.py,136,content,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,content = f.read()
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,274,content,"('Call', ('Attr', 'page', 'get_contents'), (), ())","('Call', 0, 0)",page,content = page.get_contents()
.\tools\portings\patches\test_logo_integration.py.insert.py,156,content,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,content = f.read()
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,308,content,"('Call', ('Attr', 'page', 'get_contents'), (), ())","('Call', 0, 0)",page,content = page.get_contents()
.\clean_unicode_emojis.py,92,content,"('Call', ('Attr', 'content', 'replace'), (('Name', 'pattern'), ('Name', 'replacement')), ())","('Call', 2, 0)","content,pattern,replacement","content = content.replace(pattern, replacement)"
.\pdf_generator.py,2688,content,"('Call', ('Attr', 'item', 'get'), (('Const', ""'content'""), ('Const', ""''"")), ())","('Call', 2, 0)",item,"content = item.get('content', '')"
.\admin_product_attributes_ui.py,30,count,"('Call', ('Name', 'import_attributes_from_csv'), (('Attr', 'tmp', 'name'),), ())","('Call', 1, 0)","import_attributes_from_csv,tmp",count = import_attributes_from_csv(tmp.name)
.\clean_unicode_emojis.py,90,count,"('Call', ('Attr', 'content', 'count'), (('Name', 'pattern'),), ())","('Call', 1, 0)","content,pattern",count = content.count(pattern)
.\clean_unicode_emojis.py,158,count,"('Call', ('Attr', 'content', 'count'), (('Name', 'pattern'),), ())","('Call', 1, 0)","content,pattern",count = content.count(pattern)
.\notwendig oder nicht\python_function_recipes.py,160,crit,"('Call', ('Attr', 'str(criteria)', 'strip'), (), ())","('Call', 0, 0)","criteria,str",crit = str(criteria).strip()
.\notwendig oder nicht\python_function_recipes.py,185,crit,"('Call', ('Attr', 'str(criteria_pairs[i + 1])', 'strip'), (), ())","('Call', 0, 0)","criteria_pairs,i,str",crit = str(criteria_pairs[i+1]).strip()
.\notwendig oder nicht\wichtig\repo_porter_select.py,80,cur_key,"('Tuple', (('Call', ('Attr', 'kind', 'strip'), (), ()), ('Call', ('Attr', 'qual', 'strip'), (), ())))","('Tuple', 2)","kind,qual","cur_key = (kind.strip(), qual.strip())"
.\notwendig oder nicht\wichtig\repo_porter_select.py,82,cur_key,"('Tuple', (('Const', ""'unknown'""), ('Const', ""'unknown'"")))","('Tuple', 2)",,"cur_key = (""unknown"", ""unknown"")"
.\tools\repo_porter_select.py,80,cur_key,"('Tuple', (('Call', ('Attr', 'kind', 'strip'), (), ()), ('Call', ('Attr', 'qual', 'strip'), (), ())))","('Tuple', 2)","kind,qual","cur_key = (kind.strip(), qual.strip())"
.\tools\repo_porter_select.py,82,cur_key,"('Tuple', (('Const', ""'unknown'""), ('Const', ""'unknown'"")))","('Tuple', 2)",,"cur_key = (""unknown"", ""unknown"")"
.\admin_panel.py,825,current_category_attr,"('BoolOp', 'Or', (('Const', ""''""), ('Other', 'IfExp')))","('BoolOp', 'Or', 2)","dict,isinstance,selected_prod","current_category_attr = (selected_prod.get('category') if isinstance(selected_prod, dict) else '') or ''"
.\admin_panel.py,1093,current_category_attr,"('BoolOp', 'Or', (('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'category'""),), ()), ('Const', ""''"")))","('BoolOp', 'Or', 2)",product_data_for_manual_form,current_category_attr = product_data_for_manual_form.get('category') or ''
.\admin_panel.py,1265,current_global_constants,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'global_constants'""), ('Dict', ())), ())","('Call', 2, 0)",load_admin_setting_func,"current_global_constants = load_admin_setting_func('global_constants', {})"
.\admin_panel.py,1468,current_global_constants,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'global_constants'""), ('Name', '_DEFAULT_GLOBAL_CONSTANTS_FALLBACK')), ())","('Call', 2, 0)","_DEFAULT_GLOBAL_CONSTANTS_FALLBACK,load_admin_setting_func","current_global_constants = load_admin_setting_func('global_constants', _DEFAULT_GLOBAL_CONSTANTS_FALLBACK)"
.\analysis.py,6935,current_price_increase_for_ui,"('Call', ('Name', 'float'), (('Call', ('Attr', 'results', 'get'), (('Const', ""'electricity_price_increase_rate_effective_percent'""), ('Name', 'admin_default_price_increase')), ()),), ())","('Call', 1, 0)","admin_default_price_increase,float,results",current_price_increase_for_ui = float(
.\analysis.py,6948,current_price_increase_for_ui,"('Call', ('Name', 'float'), (('Call', ('Attr', 'previous_calc_results', 'get'), (('Const', ""'electricity_price_increase_rate_effective_percent'""), ('Name', 'admin_default_price_increase')), ()),), ())","('Call', 1, 0)","admin_default_price_increase,float,previous_calc_results",current_price_increase_for_ui = float(
.\analysis.py,6934,current_sim_years_for_ui,"('Call', ('Name', 'int'), (('Subscript', ('Name', 'results'), ('Const', ""'simulation_period_years_effective'"")),), ())","('Call', 1, 0)","int,results","current_sim_years_for_ui = int(results[""simulation_period_years_effective""])"
.\analysis.py,6945,current_sim_years_for_ui,"('Call', ('Name', 'int'), (('Subscript', ('Name', 'previous_calc_results'), ('Const', ""'simulation_period_years_effective'"")),), ())","('Call', 1, 0)","int,previous_calc_results",current_sim_years_for_ui = int(
.\admin_panel.py,1293,current_val_for_field,"('Call', ('Name', 'float'), (('Subscript', ('Subscript', ('Name', 'current_specific_yields_map'), ('Name', 'ori')), ('Name', 'tilt_val_str_loop')),), ())","('Call', 1, 0)","current_specific_yields_map,float,ori,tilt_val_str_loop","if isinstance(current_specific_yields_map.get(ori), dict) and tilt_val_str_loop in current_specific_yields_map[ori]: current_val_for_field = float(current_specific_yields_map[ori][tilt_val_str_loop])"
.\admin_panel.py,1294,current_val_for_field,"('Call', ('Name', 'float'), (('Subscript', ('Subscript', ('Name', 'default_yield_map_template'), ('Name', 'ori')), ('Name', 'tilt_val_str_loop')),), ())","('Call', 1, 0)","default_yield_map_template,float,ori,tilt_val_str_loop","elif isinstance(default_yield_map_template.get(ori), dict) and tilt_val_str_loop in default_yield_map_template[ori]: current_val_for_field = float(default_yield_map_template[ori][tilt_val_str_loop])"
.\multi_offer_generator.py,671,cust_payload,"('Dict', (('KV', ('Const', ""'address'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'address'""),), ())), ('KV', ('Const', ""'city'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'city'""),), ())), ('KV', ('Const', ""'company_name'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'company_name'""),), ())), ('KV', ('Const', ""'creation_date'""), ('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())), ('KV', ('Const', ""'email'""), ('Name', 'email_val')), ('KV', ('Const', ""'first_name'""), ('BoolOp', 'Or', (('Const', ""'Interessent'""), ('Name', 'first_name')))), ('KV', ('Const', ""'house_number'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'house_number'""),), ())), ('KV', ('Const', ""'income_tax_rate_percent'""), ('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'income_tax_rate_percent'""),), ()), ('Const', '0.0'))),), ())), ('KV', ('Const', ""'last_name'""), ('BoolOp', 'Or', (('Const', ""'Unbekannt'""), ('Name', 'last_name')))), ('KV', ('Const', ""'phone_landline'""), ('BoolOp', 'Or', (('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'phone'""),), ()), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'phone_landline'""),), ())))), ('KV', ('Const', ""'phone_mobile'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'phone_mobile'""),), ())), ('KV', ('Const', ""'region'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'region'""),), ())), ('KV', ('Const', ""'salutation'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'salutation'""),), ())), ('KV', ('Const', ""'state'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'state'""),), ())), ('KV', ('Const', ""'title'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'title'""),), ())), ('KV', ('Const', ""'zip_code'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'zip_code'""),), ()))))","('Dict', 16)","customer_data,datetime,email_val,first_name,float,last_name",cust_payload = {
.\pdf_ui.py,1227,cust_payload,"('Dict', (('KV', ('Const', ""'address'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'address'""),), ())), ('KV', ('Const', ""'city'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'city'""),), ())), ('KV', ('Const', ""'company_name'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'company_name'""),), ())), ('KV', ('Const', ""'creation_date'""), ('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())), ('KV', ('Const', ""'email'""), ('Name', 'email_val')), ('KV', ('Const', ""'first_name'""), ('BoolOp', 'Or', (('Const', ""'Interessent'""), ('Name', 'first_name')))), ('KV', ('Const', ""'house_number'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'house_number'""),), ())), ('KV', ('Const', ""'income_tax_rate_percent'""), ('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'income_tax_rate_percent'""),), ()), ('Const', '0.0'))),), ())), ('KV', ('Const', ""'last_name'""), ('BoolOp', 'Or', (('Const', ""'Unbekannt'""), ('Name', 'last_name')))), ('KV', ('Const', ""'phone_landline'""), ('BoolOp', 'Or', (('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'phone'""),), ()), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'phone_landline'""),), ())))), ('KV', ('Const', ""'phone_mobile'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'phone_mobile'""),), ())), ('KV', ('Const', ""'region'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'region'""),), ())), ('KV', ('Const', ""'salutation'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'salutation'""),), ())), ('KV', ('Const', ""'state'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'state'""),), ())), ('KV', ('Const', ""'title'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'title'""),), ())), ('KV', ('Const', ""'zip_code'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'zip_code'""),), ()))))","('Dict', 16)","datetime,email_val,first_name,float,last_name,project_data",cust_payload = {
.\analysis.py,7844,customer_data,"('Call', ('Attr', ""st.session_state.get('project_data', {})"", 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"customer_data = st.session_state.get(""project_data"", {}).get(""customer_data"", {})"
.\analysis.py,6667,customer_data,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"customer_data = project_data.get(""customer_data"", {})"
.\analysis.py,7764,customer_data,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"customer_data = project_data.get(""customer_data"", {})"
.\analysis.py,7831,customer_data,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"customer_data = project_data.get(""customer_data"", {})"
.\calculations.py,2349,customer_data,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"customer_data = project_data.get(""customer_data"", {})"
.\doc_output.py,117,customer_data,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"customer_data = project_data.get('customer_data', {})"
.\multi_offer_generator.py,110,customer_data,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"customer_data = project_data.get(""customer_data"", {})"
.\multi_offer_generator_new.py,105,customer_data,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"customer_data = project_data.get(""customer_data"", {})"
.\multi_offer_generator_old.py,1298,customer_data,"('Call', ('Attr', 'st.session_state.multi_offer_project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"customer_data = st.session_state.multi_offer_project_data.get('customer_data', {})"
.\pdf_generator.py,2983,customer_data,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"customer_data = project_data.get('customer_data', {})"
.\pdf_ui.py,329,customer_data,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"customer_data = project_data.get('customer_data', {})"
.\multi_offer_generator.py,1173,customer_data_ready,"('Call', ('Attr', 'self', 'render_customer_input'), (), ())","('Call', 0, 0)",self,customer_data_ready = self.render_customer_input()
.\multi_offer_generator.py,1220,customer_data_ready,"('Call', ('Attr', 'generator', 'render_customer_input'), (), ())","('Call', 0, 0)",generator,customer_data_ready = generator.render_customer_input()
.\multi_offer_generator_new.py,429,customer_data_ready,"('Call', ('Attr', 'self', 'render_customer_input'), (), ())","('Call', 0, 0)",self,customer_data_ready = self.render_customer_input()
.\central_pdf_system.py,2054,customer_name,"('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'last_name'""), ('Const', ""'Kunde'"")), ())","('Call', 2, 0)",project_data,"customer_name = project_data.get('customer_data', {}).get('last_name', 'Kunde')"
.\gui.py,503,customer_name,"('Call', ('Attr', ""project_data_fallback.get('customer_data', {})"", 'get'), (('Const', ""'last_name'""), ('Const', ""'Unbekannt'"")), ())","('Call', 2, 0)",project_data_fallback,"customer_name = project_data_fallback.get('customer_data', {}).get('last_name', 'Unbekannt')"
.\multi_offer_generator_old.py,618,customer_name,"('Call', ('Attr', ""offer_data.get('customer', {})"", 'get'), (('Const', ""'name'""), ('Const', ""'Unbekannter_Kunde'"")), ())","('Call', 2, 0)",offer_data,"customer_name = offer_data.get(""customer"", {}).get(""name"", ""Unbekannter_Kunde"")"
.\multi_offer_generator_old.py,1299,customer_name,"('Other', 'JoinedStr')","('Other', 'JoinedStr')",customer_data,"customer_name = f""{customer_data.get('first_name', '')} {customer_data.get('last_name', '')}"""
.\multi_offer_generator_old.py,836,customer_name,"('Other', 'JoinedStr')","('Other', 'JoinedStr')",customer,"customer_name = f""{customer['first_name']} {customer['last_name']}"""
.\calculations.py,28,d,"('Call', ('Name', '_coerce'), (('Name', 'part'),), ())","('Call', 1, 0)","_coerce,part",d = _coerce(part)
.\heatpump_pricing.py,45,d,"('Call', ('Name', 'asdict'), (('Name', 'self'),), ())","('Call', 1, 0)","asdict,self",d = asdict(self)
.\notwendig oder nicht\wichtig\repo_porter.py,90,d,"('Call', ('Name', 'Path'), (('Name', 'dp'),), ())","('Call', 1, 0)","Path,dp",d = Path(dp)
.\notwendig oder nicht\wichtig\repo_to_json.py,116,d,"('Call', ('Name', 'Path'), (('Name', 'dp'),), ())","('Call', 1, 0)","Path,dp",d = Path(dp)
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,236,d,"('Call', ('Name', 'asdict'), (('Name', 'self'),), ())","('Call', 1, 0)","asdict,self",d = asdict(self)
.\tools\kakerlake_ultra_cleaner.py,254,d,"('Call', ('Name', '_coerce'), (('Name', 'part'),), ())","('Call', 1, 0)","_coerce,part",d = _coerce(part)
.\tools\repo_porter.py,90,d,"('Call', ('Name', 'Path'), (('Name', 'dp'),), ())","('Call', 1, 0)","Path,dp",d = Path(dp)
.\tools\repo_to_json.py,116,d,"('Call', ('Name', 'Path'), (('Name', 'dp'),), ())","('Call', 1, 0)","Path,dp",d = Path(dp)
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,236,d,"('Call', ('Name', 'asdict'), (('Name', 'self'),), ())","('Call', 1, 0)","asdict,self",d = asdict(self)
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,120,dark_blue,"('Call', ('Name', 'Color'), (('Const', '0.07'), ('Const', '0.34'), ('Const', '0.6')), ())","('Call', 3, 0)",Color,"dark_blue = Color(0.07, 0.34, 0.60)"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,138,dark_blue,"('Call', ('Name', 'Color'), (('Const', '0.07'), ('Const', '0.34'), ('Const', '0.6')), ())","('Call', 3, 0)",Color,"dark_blue = Color(0.07, 0.34, 0.60)"
.\pdf_template_engine\dynamic_overlay.py,633,dark_blue,"('Call', ('Name', 'Color'), (('Const', '0.07'), ('Const', '0.34'), ('Const', '0.6')), ())","('Call', 3, 0)",Color,"dark_blue = Color(0.07, 0.34, 0.60)"
.\pdf_template_engine\dynamic_overlay.py,547,dark_blue,"('Call', ('Name', '_Color'), (('Const', '0.07'), ('Const', '0.34'), ('Const', '0.6')), ())","('Call', 3, 0)",_Color,"dark_blue = _Color(0.07, 0.34, 0.60)"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,120,dark_blue,"('Call', ('Name', 'Color'), (('Const', '0.07'), ('Const', '0.34'), ('Const', '0.6')), ())","('Call', 3, 0)",Color,"dark_blue = Color(0.07, 0.34, 0.60)"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,138,dark_blue,"('Call', ('Name', 'Color'), (('Const', '0.07'), ('Const', '0.34'), ('Const', '0.6')), ())","('Call', 3, 0)",Color,"dark_blue = Color(0.07, 0.34, 0.60)"
.\calculations.py,2234,data,"('Call', ('Attr', 'response', 'json'), (), ())","('Call', 0, 0)",response,data = response.json()
.\data_input.py,116,data,"('Call', ('Attr', 'response', 'json'), (), ())","('Call', 0, 0)",response,data = response.json()
.\pdf_atomizer.py,121,data,"('Call', ('Attr', 'collections', 'OrderedDict'), (), ())","('Call', 0, 0)",collections,data = collections.OrderedDict()
.\notwendig oder nicht\wichtig\repo_to_json.py,174,data,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,data = f.read()
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,49,data,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,data = f.read()
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,51,data,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,data = f.read()
.\pdf_template_engine\dynamic_overlay.py,81,data,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,data = f.read()
.\tools\count_pages.py,8,data,"('Call', ('Attr', 'p', 'read_bytes'), (), ())","('Call', 0, 0)",p,data = p.read_bytes()
.\tools\repo_to_json.py,174,data,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,data = f.read()
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,49,data,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,data = f.read()
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,51,data,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,data = f.read()
.\pdf_generator.py,271,data,"('Call', ('Attr', 'content', 'get'), (('Const', ""'data'""),), ())","('Call', 1, 0)",content,"data = content.get(""data"")"
.\notwendig oder nicht\calculations_cli.py,41,data,"('Call', ('Attr', 'json', 'load'), (('Attr', 'sys', 'stdin'),), ())","('Call', 1, 0)","json,sys","data: Dict[str, Any] = json.load(sys.stdin)"
.\notwendig oder nicht\keine ahnung\calculations_cli.py,41,data,"('Call', ('Attr', 'json', 'load'), (('Attr', 'sys', 'stdin'),), ())","('Call', 1, 0)","json,sys","data: Dict[str, Any] = json.load(sys.stdin)"
.\notwendig oder nicht\need or not\calculations_cli.py,41,data,"('Call', ('Attr', 'json', 'load'), (('Attr', 'sys', 'stdin'),), ())","('Call', 1, 0)","json,sys","data: Dict[str, Any] = json.load(sys.stdin)"
.\notwendig oder nicht\wichtig\repo_to_json.py,169,data,"('Call', ('Attr', 'f', 'read'), (('Name', 'max_bytes'),), ())","('Call', 1, 0)","f,max_bytes",data = f.read(max_bytes)
.\pdf_template_engine\placeholders.py,1210,data,"('Call', ('Name', 'get_product_by_model_name'), (('Name', 'model_name'),), ())","('Call', 1, 0)","get_product_by_model_name,model_name",data = get_product_by_model_name(model_name)
.\tools\import_module_attributes_generic.py,430,data,"('Call', ('Attr', 'json', 'load'), (('Name', 'f'),), ())","('Call', 1, 0)","f,json",data = json.load(f)
.\tools\import_module_attributes_generic.py,444,data,"('Call', ('Attr', 'yaml', 'safe_load'), (('Name', 'f'),), ())","('Call', 1, 0)","f,yaml",data = yaml.safe_load(f)
.\tools\repo_to_json.py,169,data,"('Call', ('Attr', 'f', 'read'), (('Name', 'max_bytes'),), ())","('Call', 1, 0)","f,max_bytes",data = f.read(max_bytes)
.\pdf_generator.py,242,data,"('Subscript', ('Attr', 'self', 'offer_data'), ('Const', ""'selected_heatpump_data'""))","('Subscript',)",self,data = self.offer_data['selected_heatpump_data']
.\notwendig oder nicht\excel_range_reader.py,69,data,"('Subscript', ('Name', 'vals'), ('Other', 'Slice'))","('Subscript',)",vals,data = vals[1:]
.\product_db.py,308,database.DB_PATH,"('Name', 'test_db_file')","('Name',)",test_db_file,database.DB_PATH = test_db_file
.\product_db.py,322,database.DB_PATH,"('Name', '_original_db_path_pdb')","('Name',)",_original_db_path_pdb,database.DB_PATH = _original_db_path_pdb
.\pdf_erstellen_komplett.py,19,de_path,"('Div', ('Name', 'base_dir'), ('Const', ""'de.json'""))","('Div', ('Name',), ('Const',))",base_dir,"de_path = base_dir / ""de.json"""
.\tests\test_main_pdf.py,35,de_path,"('Div', ('Name', 'root'), ('Const', ""'de.json'""))","('Div', ('Name',), ('Const',))",root,de_path = root / 'de.json'
.\tools\test_main_pdf.py,35,de_path,"('Div', ('Name', 'root'), ('Const', ""'de.json'""))","('Div', ('Name',), ('Const',))",root,de_path = root / 'de.json'
.\calculations.py,2507,debug_msg,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","pvgis_enabled,pvgis_setting_raw","debug_msg = f""DEBUG: PV GIS Status - Raw: '{pvgis_setting_raw}', Enabled: {pvgis_enabled}"""
.\calculations.py,2516,debug_msg,"('Other', 'JoinedStr')","('Other', 'JoinedStr')",pvgis_enabled,"debug_msg = f""DEBUG: PV GIS Fallback - Enabled: {pvgis_enabled} (Database not available)"""
.\admin_panel.py,1648,delete_button_key,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","WIDGET_KEY_SUFFIX,template_type_key","delete_button_key = f""delete_template_{template_type_key}{WIDGET_KEY_SUFFIX}_outer_btn"""
.\crm.py,288,delete_button_key,"('Other', 'JoinedStr')","('Other', 'JoinedStr')",customer,"delete_button_key = f""del_customer_{customer['id']}"""
.\admin_logo_management_ui.py,231,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'df_data'),), ())","('Call', 1, 0)","df_data,pd",df = pd.DataFrame(df_data)
.\admin_logo_positions_ui.py,183,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'table_data'),), ())","('Call', 1, 0)","pd,table_data",df = pd.DataFrame(table_data)
.\analysis.py,1142,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Dict', (('KV', ('Const', ""'x'""), ('Subscript', ('Name', 'data'), ('Const', ""'x'""))), ('KV', ('Const', ""'y'""), ('Subscript', ('Name', 'data'), ('Const', ""'y'""))))),), ())","('Call', 1, 0)","data,pd","df = pd.DataFrame({""x"": data[""x""], ""y"": data[""y""]})"
.\analysis.py,1185,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Dict', (('KV', ('Const', ""'labels'""), ('Subscript', ('Name', 'data'), ('Const', ""'labels'""))), ('KV', ('Const', ""'values'""), ('Subscript', ('Name', 'data'), ('Const', ""'values'""))))),), ())","('Call', 1, 0)","data,pd","df = pd.DataFrame({""labels"": data[""labels""], ""values"": data[""values""]})"
.\analysis.py,1324,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Dict', (('KV', ('Const', ""'x'""), ('Subscript', ('Name', 'data'), ('Const', ""'x'""))), ('KV', ('Const', ""'y'""), ('Subscript', ('Name', 'data'), ('Const', ""'y'""))))),), ())","('Call', 1, 0)","data,pd","df = pd.DataFrame({""x"": data[""x""], ""y"": data[""y""]})"
.\analysis.py,1429,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'df_data'),), ())","('Call', 1, 0)","df_data,pd",df = pd.DataFrame(df_data)
.\analysis.py,1333,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Dict', (('KV', ('Const', ""'labels'""), ('Subscript', ('Name', 'data'), ('Const', ""'labels'""))), ('KV', ('Const', ""'values'""), ('Subscript', ('Name', 'data'), ('Const', ""'values'""))))),), ())","('Call', 1, 0)","data,pd","df = pd.DataFrame({""labels"": data[""labels""], ""values"": data[""values""]})"
.\calculations.py,424,df,"('Call', ('Attr', 'df', 'set_index'), (('Subscript', ('Name', 'potential_index_cols'), ('Const', '0')),), ())","('Call', 1, 0)","df,potential_index_cols",df = df.set_index(potential_index_cols[0])
.\excel_eval.py,226,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Other', 'ListComp'),), ())","('Call', 1, 0)","pd,r,rows",df = pd.DataFrame([{
.\dev_tools\kakerlake_ultra_cleaner.py,521,df,"('Call', ('Attr', 'pd.DataFrame(rows)', 'sort_values'), (('Const', ""'path'""),), ())","('Call', 1, 0)","pd,rows","df=pd.DataFrame(rows).sort_values(""path"")"
.\mnt\data\kakerlake_ultra_cleaner.py,521,df,"('Call', ('Attr', 'pd.DataFrame(rows)', 'sort_values'), (('Const', ""'path'""),), ())","('Call', 1, 0)","pd,rows","df=pd.DataFrame(rows).sort_values(""path"")"
.\notwendig oder nicht\excel_range_reader.py,41,df,"('Call', ('Attr', 'pd.read_csv(path, dtype=str)', 'fillna'), (('Const', ""''""),), ())","('Call', 1, 0)","path,pd,str","df = pd.read_csv(path, dtype=str).fillna("""")"
.\notwendig oder nicht\excel_range_reader.py,45,df,"('Call', ('Name', '_load_sheet_cells'), (('Name', 'sheet_name'),), ())","('Call', 1, 0)","_load_sheet_cells,sheet_name",df = _load_sheet_cells(sheet_name)
.\notwendig oder nicht\excel_range_reader.py,73,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'vals'),), ())","('Call', 1, 0)","pd,vals",df = pd.DataFrame(vals)
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,224,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'df_data'),), ())","('Call', 1, 0)","df_data,pd",df = pd.DataFrame(df_data)
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_positions_ui.py.insert.py,158,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'table_data'),), ())","('Call', 1, 0)","pd,table_data",df = pd.DataFrame(table_data)
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,275,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'df_data'),), ())","('Call', 1, 0)","df_data,pd",df = pd.DataFrame(df_data)
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_positions_ui.py.insert.py,159,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'table_data'),), ())","('Call', 1, 0)","pd,table_data",df = pd.DataFrame(table_data)
.\tools\kakerlake_ultra_cleaner.py,522,df,"('Call', ('Attr', 'pd.DataFrame(rows)', 'sort_values'), (('Const', ""'path'""),), ())","('Call', 1, 0)","pd,rows","df=pd.DataFrame(rows).sort_values(""path"")"
.\tools\xlsx_validator.py,20,df,"('Call', ('Attr', 'pd', 'read_excel'), (('Name', 'file_path'),), ())","('Call', 1, 0)","file_path,pd",df = pd.read_excel(file_path)
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,224,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'df_data'),), ())","('Call', 1, 0)","df_data,pd",df = pd.DataFrame(df_data)
.\tools\out_selected\patches\admin_logo_positions_ui.py.insert.py,158,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'table_data'),), ())","('Call', 1, 0)","pd,table_data",df = pd.DataFrame(table_data)
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,275,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'df_data'),), ())","('Call', 1, 0)","df_data,pd",df = pd.DataFrame(df_data)
.\tools\portings\patches\admin_logo_positions_ui.py.insert.py,159,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'table_data'),), ())","('Call', 1, 0)","pd,table_data",df = pd.DataFrame(table_data)
.\notwendig oder nicht\excel_range_reader.py,74,df,"('Call', ('Attr', 'df', 'apply'), (('Attr', 'pd', 'to_numeric'),), (('errors', ('Const', ""'ignore'"")),))","('Call', 1, 1)","df,pd","df = df.apply(pd.to_numeric, errors=""ignore"")"
.\notwendig oder nicht\excel_range_reader.py,71,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'data'),), (('columns', ('Name', 'cols')),))","('Call', 1, 1)","cols,data,pd","df = pd.DataFrame(data, columns=cols)"
.\tools\import_module_attributes_generic.py,401,df,"('Call', ('Attr', 'pd', 'read_csv'), (('Name', 'path'),), (('sep', ('Const', ""';'"")),))","('Call', 1, 1)","path,pd","df = pd.read_csv(path, sep=';')"
.\admin_panel.py,168,df,"('Call', ('Attr', 'pd', 'read_excel'), (('Name', 'excel_file_like'),), (('header', ('Const', '0')), ('index_col', ('Const', '0'))))","('Call', 1, 2)","excel_file_like,pd","df = pd.read_excel(excel_file_like, index_col=0, header=0)"
.\calculations.py,509,df,"('Call', ('Attr', 'pd', 'read_excel'), (('Name', 'excel_file_like'),), (('header', ('Const', '0')), ('index_col', ('Const', '0'))))","('Call', 1, 2)","excel_file_like,pd","df = pd.read_excel(excel_file_like, index_col=0, header=0)"
.\tools\import_module_attributes_generic.py,398,df,"('Call', ('Attr', 'pd', 'read_csv'), (('Name', 'path'),), (('engine', ('Const', ""'python'"")), ('sep', ('Const', 'None'))))","('Call', 1, 2)","path,pd","df = pd.read_csv(path, sep=None, engine='python')"
.\admin_panel.py,678,df_products_import,"('Name', 'df_temp_auto')","('Name',)",df_temp_auto,df_products_import = df_temp_auto; detected_encoding = enc; break
.\admin_panel.py,683,df_products_import,"('Name', 'df_temp_semicolon')","('Name',)",df_temp_semicolon,df_products_import = df_temp_semicolon; detected_encoding = enc; break
.\pdf_template_engine\placeholders.py,791,direct_sc_sum,"('Call', ('Name', 'min'), (('Name', 'direct_sc_sum'), ('Call', ('Name', 'max'), (('Const', '0.0'), ('Name', 'annual_prod_float')), ())), ())","('Call', 2, 0)","annual_prod_float,direct_sc_sum,max,min","direct_sc_sum = min(direct_sc_sum, max(0.0, annual_prod_float))"
.\pdf_template_engine\placeholders.py,793,direct_sc_sum,"('Call', ('Name', 'min'), (('Name', 'direct_sc_sum'), ('Call', ('Name', 'max'), (('Const', '0.0'), ('Name', 'cons_total')), ())), ())","('Call', 2, 0)","cons_total,direct_sc_sum,max,min","direct_sc_sum = min(direct_sc_sum, max(0.0, cons_total))"
.\pdf_template_engine\placeholders.py,769,discharge_sc_sum,"('Call', ('Name', 'sum'), (('Other', 'GeneratorExp'),), ())","('Call', 1, 0)","float,monthly_storage_discharge_sc,sum,v",discharge_sc_sum = sum(float(v or 0) for v in monthly_storage_discharge_sc)
.\pdf_template_engine\placeholders.py,776,discharge_sc_sum,"('Call', ('Name', 'float'), (('Name', 'battery_expected_annual_kwh'),), ())","('Call', 1, 0)","battery_expected_annual_kwh,float",discharge_sc_sum = float(battery_expected_annual_kwh)
.\pdf_template_engine\placeholders.py,801,discharge_sc_sum,"('Call', ('Name', 'min'), (('Name', 'discharge_sc_sum'), ('Name', 'charge_sum')), ())","('Call', 2, 0)","charge_sum,discharge_sc_sum,min","discharge_sc_sum = min(discharge_sc_sum, charge_sum)"
.\pdf_template_engine\placeholders.py,800,discharge_sc_sum,"('Call', ('Name', 'min'), (('Name', 'discharge_sc_sum'), ('Call', ('Name', 'max'), (('Const', '0.0'), ('Sub', ('Name', 'cons_total'), ('Name', 'direct_sc_sum'))), ())), ())","('Call', 2, 0)","cons_total,direct_sc_sum,discharge_sc_sum,max,min","discharge_sc_sum = min(discharge_sc_sum, max(0.0, cons_total - direct_sc_sum))"
.\multi_offer_generator_old.py,1063,discount,"('Div', ('Mult', (('Name', 'base'), ('Subscript', ('Subscript', ('Name', 'config'), ('Const', ""'custom_pricing'"")), ('Const', ""'discount_percent'"")))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Subscript',))), ('Const',))","base,config",discount = base * config['custom_pricing']['discount_percent'] / 100
.\multi_offer_generator_old.py,1142,discount,"('Div', ('Mult', (('Name', 'base_price'), ('Subscript', ('Subscript', ('Name', 'config'), ('Const', ""'custom_pricing'"")), ('Const', ""'discount_percent'"")))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Subscript',))), ('Const',))","base_price,config",discount = base_price * config['custom_pricing']['discount_percent'] / 100
.\analysis.py,5224,discount_percent,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_discount_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,discount_percent = st.session_state.get(
.\gui.py,152,discount_percent,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_discount_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,"discount_percent = st.session_state.get(""pricing_modifications_discount_slider"", 0.0)"
.\live_preview_helpers.py,27,discount_percent,"('Call', ('Attr', 'modifications', 'get'), (('Const', ""'discount_percent'""), ('Const', '0.0')), ())","('Call', 2, 0)",modifications,"discount_percent = modifications.get('discount_percent', 0.0)"
.\pdf_ui.py,99,discount_percent,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_discount_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,"discount_percent = st.session_state.get(""pricing_modifications_discount_slider"", 0.0)"
.\calculations.py,1319,discount_rate,"('Call', ('Attr', 'lcoe_params', 'get'), (('Const', ""'discount_rate'""), ('Const', '0.04')), ())","('Call', 2, 0)",lcoe_params,"discount_rate = lcoe_params.get(""discount_rate"", 0.04)"
.\calculations.py,1771,discount_rate,"('Call', ('Attr', 'np.random', 'normal'), (('Const', '0.04'), ('Const', '0.01')), ())","('Call', 2, 0)",np,"discount_rate = np.random.normal(0.04, 0.01)"
.\pdf_zu_markdown.py,21,doc,"('Call', ('Attr', 'fitz', 'open'), (('Name', 'INPUT_PDF'),), ())","('Call', 1, 0)","INPUT_PDF,fitz",doc = fitz.open(INPUT_PDF)
.\teilen.py,21,doc,"('Call', ('Attr', 'fitz', 'open'), (('Name', 'INPUT_PDF'),), ())","('Call', 1, 0)","INPUT_PDF,fitz",doc = fitz.open(INPUT_PDF)
.\utils\export_coords.py,14,doc,"('Call', ('Attr', 'pdfplumber', 'open'), (('Name', 'pdf_file'),), ())","('Call', 1, 0)","pdf_file,pdfplumber",doc = pdfplumber.open(pdf_file)
.\utils\remove_text.py,16,doc,"('Call', ('Attr', 'fitz', 'open'), (('Name', 'pdf_in'),), ())","('Call', 1, 0)","fitz,pdf_in",doc = fitz.open(pdf_in)
.\pdf_generator.py,146,doc,"('Call', ('Name', 'SimpleDocTemplate'), (('Attr', 'self', 'filename'),), (('bottomMargin', ('Mult', (('Const', '3'), ('Name', 'cm')))), ('leftMargin', ('Mult', (('Const', '2'), ('Name', 'cm')))), ('pagesize', ('Name', 'A4')), ('rightMargin', ('Mult', (('Const', '2'), ('Name', 'cm')))), ('topMargin', ('Mult', (('Const', '3'), ('Name', 'cm'))))))","('Call', 1, 5)","A4,SimpleDocTemplate,cm,self","doc = SimpleDocTemplate(self.filename, pagesize=A4,"
.\pdf_helpers.py,189,doc,"('Call', ('Name', 'SimpleDocTemplate'), (('Name', 'buffer'),), (('bottomMargin', ('Mult', (('Const', '3'), ('Name', 'cm')))), ('leftMargin', ('Mult', (('Const', '2'), ('Name', 'cm')))), ('pagesize', ('Name', 'A4')), ('rightMargin', ('Mult', (('Const', '2'), ('Name', 'cm')))), ('topMargin', ('Mult', (('Const', '3'), ('Name', 'cm'))))))","('Call', 1, 5)","A4,SimpleDocTemplate,buffer,cm",doc = SimpleDocTemplate(
.\tools\pv_berechnungen_50.py,198,doc,"('Call', ('Name', 'SimpleDocTemplate'), (('Name', 'filename'),), (('bottomMargin', ('Mult', (('Const', '2'), ('Name', 'cm')))), ('leftMargin', ('Mult', (('Const', '2'), ('Name', 'cm')))), ('pagesize', ('Name', 'A4')), ('rightMargin', ('Mult', (('Const', '2'), ('Name', 'cm')))), ('topMargin', ('Mult', (('Const', '2'), ('Name', 'cm'))))))","('Call', 1, 5)","A4,SimpleDocTemplate,cm,filename","doc = SimpleDocTemplate(filename, pagesize=A4,"
.\pdf_generator.py,1223,draw_function,"('Call', ('Attr', 'MODULE_MAP', 'get'), (('Name', 'module_id'),), ())","('Call', 1, 0)","MODULE_MAP,module_id",draw_function = MODULE_MAP.get(module_id)
.\pdf_generator.py,157,draw_function,"('Call', ('Attr', 'module_map', 'get'), (('Name', 'module_id'),), ())","('Call', 1, 0)","module_id,module_map",draw_function = module_map.get(module_id)
.\notwendig oder nicht\wichtig\repo_porter.py,542,dst_lines,"('Call', ('Name', 'insert_at_line'), (('Name', 'dst_lines'), ('List', (('Other', 'Starred'), ('Const', ""''""))), ('Name', 'insert_line')), ())","('Call', 3, 0)","dst_lines,insert_at_line,insert_line,to_add","dst_lines = insert_at_line(dst_lines, [*to_add, """"], insert_line)"
.\notwendig oder nicht\wichtig\repo_porter.py,565,dst_lines,"('Call', ('Name', 'insert_at_line'), (('Name', 'dst_lines'), ('Add', (('List', (('Const', ""''""),)), ('Name', 'chosen'))), ('Name', 'anchor_line')), ())","('Call', 3, 0)","anchor_line,chosen,dst_lines,insert_at_line","dst_lines = insert_at_line(dst_lines, chosen + [""""], anchor_line)"
.\notwendig oder nicht\wichtig\repo_porter.py,574,dst_lines,"('Call', ('Name', 'insert_at_line'), (('Name', 'dst_lines'), ('Add', (('List', (('Const', ""''""),)), ('Name', 'adjusted'))), ('Name', 'anchor_line')), ())","('Call', 3, 0)","adjusted,anchor_line,dst_lines,insert_at_line","dst_lines = insert_at_line(dst_lines, adjusted + [""""], anchor_line)"
.\tools\repo_porter.py,542,dst_lines,"('Call', ('Name', 'insert_at_line'), (('Name', 'dst_lines'), ('List', (('Other', 'Starred'), ('Const', ""''""))), ('Name', 'insert_line')), ())","('Call', 3, 0)","dst_lines,insert_at_line,insert_line,to_add","dst_lines = insert_at_line(dst_lines, [*to_add, """"], insert_line)"
.\tools\repo_porter.py,565,dst_lines,"('Call', ('Name', 'insert_at_line'), (('Name', 'dst_lines'), ('Add', (('List', (('Const', ""''""),)), ('Name', 'chosen'))), ('Name', 'anchor_line')), ())","('Call', 3, 0)","anchor_line,chosen,dst_lines,insert_at_line","dst_lines = insert_at_line(dst_lines, chosen + [""""], anchor_line)"
.\tools\repo_porter.py,574,dst_lines,"('Call', ('Name', 'insert_at_line'), (('Name', 'dst_lines'), ('Add', (('List', (('Const', ""''""),)), ('Name', 'adjusted'))), ('Name', 'anchor_line')), ())","('Call', 3, 0)","adjusted,anchor_line,dst_lines,insert_at_line","dst_lines = insert_at_line(dst_lines, adjusted + [""""], anchor_line)"
.\analysis.py,4584,dynamic_color_list,"('Other', 'IfExp')","('Other', 'IfExp')","primary,secondary",dynamic_color_list = (
.\analysis.py,4750,dynamic_color_list,"('Other', 'IfExp')","('Other', 'IfExp')",primary,dynamic_color_list = [primary] if primary else None
.\analysis.py,4850,dynamic_color_list,"('Other', 'IfExp')","('Other', 'IfExp')",primary,dynamic_color_list = [primary] if primary else None
.\analysis.py,4988,dynamic_color_list,"('Other', 'IfExp')","('Other', 'IfExp')","primary,secondary",dynamic_color_list = (
.\debug_logo_pdf.py,56,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\debug_logo_rendering.py,37,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\pdf_erstellen_komplett.py,131,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\simple_logo_test.py,55,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_pdf.py.insert.py,55,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_rendering.py.insert.py,36,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\notwendig oder nicht\wichtig\portings\patches\simple_logo_test.py.insert.py,54,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\notwendig oder nicht\wichtig\portings\patches\test_product_images.py.insert.py,42,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\notwendig oder nicht\wichtig\portings\patches\test_section_titles_logos.py.insert.py,57,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\notwendig oder nicht\wichtig\portings\patches\test_wirtschaftlichkeit.py.insert.py,46,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'mock_project_data'), ('Name', 'mock_analysis_results'), ('Name', 'mock_company_info')), ())","('Call', 3, 0)","build_dynamic_data,mock_analysis_results,mock_company_info,mock_project_data",dynamic_data = build_dynamic_data(
.\tests\test_product_images.py,42,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\tests\test_section_titles_logos.py,58,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\tests\test_wirtschaftlichkeit.py,45,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'mock_project_data'), ('Name', 'mock_analysis_results'), ('Name', 'mock_company_info')), ())","('Call', 3, 0)","build_dynamic_data,mock_analysis_results,mock_company_info,mock_project_data",dynamic_data = build_dynamic_data(
.\tools\portings\patches\debug_logo_pdf.py.insert.py,55,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\portings\patches\debug_logo_rendering.py.insert.py,36,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\portings\patches\simple_logo_test.py.insert.py,54,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\portings\patches\test_product_images.py.insert.py,42,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\portings\patches\test_section_titles_logos.py.insert.py,57,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\portings\patches\test_wirtschaftlichkeit.py.insert.py,46,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'mock_project_data'), ('Name', 'mock_analysis_results'), ('Name', 'mock_company_info')), ())","('Call', 3, 0)","build_dynamic_data,mock_analysis_results,mock_company_info,mock_project_data",dynamic_data = build_dynamic_data(
.\calculations.py,3249,einspeiseverguetung_ct_per_kwh,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'einspeiseverguetung_data_to_use[-1]', 'get'), (('Const', ""'ct_per_kwh'""), ('Const', '0.0')), ()), ('Const', '0.0'))),), ())","('Call', 1, 0)","einspeiseverguetung_data_to_use,float",einspeiseverguetung_ct_per_kwh = float(
.\calculations.py,3242,einspeiseverguetung_ct_per_kwh,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'entry', 'get'), (('Const', ""'ct_per_kwh'""), ('Const', '0.0')), ()), ('Const', '0.0'))),), ())","('Call', 1, 0)","entry,float",einspeiseverguetung_ct_per_kwh = float(
.\crm.py,339,email,"('Call', ('Attr', 'st', 'text_input'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'email_label'""), ('Const', ""'E-Mail'"")), ()),), (('value', ('Call', ('Attr', 'customer_to_edit', 'get'), (('Const', ""'email'""), ('Const', ""''"")), ())),))","('Call', 1, 1)","customer_to_edit,get_text_crm,st,texts","email = st.text_input(get_text_crm(texts, ""email_label"", ""E-Mail""), value=customer_to_edit.get('email', ''))"
.\crm_pipeline_ui.py,225,email,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'E-Mail'""),), (('placeholder', ('Const', ""'max@mustermann.de'"")),))","('Call', 1, 1)",st,"email = st.text_input(""E-Mail"", placeholder=""max@mustermann.de"")"
.\multi_offer_generator.py,664,email_val,"('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'email'""), ('Const', ""''"")), ())","('Call', 2, 0)",customer_data,"email_val = customer_data.get('email', '')"
.\pdf_ui.py,1221,email_val,"('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'email'""), ('Const', ""''"")), ())","('Call', 2, 0)",project_data,"email_val = project_data.get('customer_data', {}).get('email', '')"
.\crm_calendar_ui.py,379,end_date,"('Call', ('Name', 'datetime'), (('Add', (('Const', '1'), ('Name', 'year'))), ('Const', '1'), ('Const', '1')), ())","('Call', 3, 0)","datetime,year","end_date = datetime(year + 1, 1, 1)"
.\crm_calendar_ui.py,381,end_date,"('Call', ('Name', 'datetime'), (('Name', 'year'), ('Add', (('Const', '1'), ('Name', 'month'))), ('Const', '1')), ())","('Call', 3, 0)","datetime,month,year","end_date = datetime(year, month + 1, 1)"
.\excel_eval.py,149,eng,"('Call', ('Name', 'ExcelEngineHeadless'), (('Name', 'path'),), ())","('Call', 1, 0)","ExcelEngineHeadless,path",eng = ExcelEngineHeadless(path)
.\excel_eval.py,144,eng,"('Call', ('Name', 'ExcelEngineXlwings'), (('Name', 'path'),), ())","('Call', 1, 0)","ExcelEngineXlwings,path",eng = ExcelEngineXlwings(path)
.\excel_eval.py,153,eng,"('Call', ('Name', 'ExcelEngineHeadless'), (('Name', 'path'),), ())","('Call', 1, 0)","ExcelEngineHeadless,path",eng = ExcelEngineHeadless(path)
.\excel_eval.py,170,eng,"('Call', ('Name', 'ExcelEngineXlwings'), (('Name', 'path'),), ())","('Call', 1, 0)","ExcelEngineXlwings,path",eng = ExcelEngineXlwings(path)
.\excel_eval.py,157,eng,"('Call', ('Name', 'ExcelEngineXlwings'), (('Name', 'path'),), ())","('Call', 1, 0)","ExcelEngineXlwings,path",eng = ExcelEngineXlwings(path)
.\excel_eval.py,173,eng,"('Call', ('Name', 'ExcelEngineHeadless'), (('Name', 'path'),), ())","('Call', 1, 0)","ExcelEngineHeadless,path",eng = ExcelEngineHeadless(path)
.\gui.py,111,error_message,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","e,module_name","error_message = f""Import-Fehler Modul '{module_name}': {e}"""
.\gui.py,115,error_message,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","e_general_import,module_name","error_message = f""Allg. Import-Fehler Modul '{module_name}': {e_general_import}"""
.\locales.py,52,error_msg,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","e_json,file_path","error_msg = f""JSON-Dekodierungsfehler in {file_path}: {e_json}"""
.\locales.py,58,error_msg,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","e,file_path","error_msg = f""Allgemeiner Fehler beim Laden von {file_path}: {e}"""
.\calculations.py,2284,error_msg_pvgis,"('Add', (('BoolOp', 'Or', (('Call', ('Attr', 'texts', 'get'), (('Const', ""'pvgis_http_error'""), ('Const', ""'PVGIS API HTTP-Fehler'"")), ()), ('Const', ""''""))), ('Other', 'JoinedStr')))","('Add', (('BoolOp', 'Or', 2), ('Other', 'JoinedStr')))","status_code_val,texts",error_msg_pvgis = (
.\calculations.py,2307,error_msg_pvgis,"('Add', (('BoolOp', 'Or', (('Call', ('Attr', 'texts', 'get'), (('Const', ""'pvgis_connection_error'""), ('Const', ""'PVGIS API Verbindungsfehler. Ist das Internet verfügbar und die API erreichbar?'"")), ()), ('Const', ""''""))), ('Other', 'JoinedStr')))","('Add', (('BoolOp', 'Or', 2), ('Other', 'JoinedStr')))","e_conn,texts",error_msg_pvgis = (
.\calculations.py,2317,error_msg_pvgis,"('Add', (('BoolOp', 'Or', (('Call', ('Attr', 'texts', 'get'), (('Const', ""'pvgis_request_error'""), ('Const', ""'PVGIS API Allgemeiner Anfragefehler.'"")), ()), ('Const', ""''""))), ('Other', 'JoinedStr')))","('Add', (('BoolOp', 'Or', 2), ('Other', 'JoinedStr')))","e_req,texts",error_msg_pvgis = (
.\calculations.py,2330,error_msg_pvgis,"('Add', (('BoolOp', 'Or', (('Call', ('Attr', 'texts', 'get'), (('Const', ""'pvgis_unknown_error'""), ('Const', ""'PVGIS API: Unbekannter Fehler.'"")), ()), ('Const', ""''""))), ('Other', 'JoinedStr')))","('Add', (('BoolOp', 'Or', 2), ('Other', 'JoinedStr')))","e_pvgis_unknown,texts",error_msg_pvgis = (
.\tools\xlsx_validator.py,104,excel_row,"('Add', (('Const', '2'), ('Name', 'idx')))","('Add', (('Const',), ('Name',)))",idx,excel_row = idx + 2
.\tools\xlsx_validator.py,57,excel_row,"('Add', (('Const', '2'), ('Name', 'row_idx')))","('Add', (('Const',), ('Name',)))",row_idx,excel_row = row_idx + 2  # +2 wegen Header und 0-basiertem Index
.\tools\xlsx_validator.py,68,excel_row,"('Add', (('Const', '2'), ('Name', 'row_idx')))","('Add', (('Const',), ('Name',)))",row_idx,excel_row = row_idx + 2
.\tools\xlsx_validator.py,86,excel_row,"('Add', (('Const', '2'), ('Name', 'idx')))","('Add', (('Const',), ('Name',)))",idx,excel_row = idx + 2
.\crm.py,212,existing_columns,"('Other', 'ListComp')","('Other', 'ListComp')","info,table_info_cursor",existing_columns = [info[1] for info in table_info_cursor]
.\database.py,934,existing_columns,"('Other', 'ListComp')","('Other', 'ListComp')","cursor,row",existing_columns = [row[1] for row in cursor.fetchall()]
.\migrate_logo_database.py,25,existing_columns,"('Other', 'ListComp')","('Other', 'ListComp')","cursor,row",existing_columns = [row[1] for row in cursor.fetchall()]
.\notwendig oder nicht\wichtig\out_selected\patches\migrate_logo_database.py.insert.py,24,existing_columns,"('Other', 'ListComp')","('Other', 'ListComp')","cursor,row",existing_columns = [row[1] for row in cursor.fetchall()]
.\notwendig oder nicht\wichtig\portings\patches\migrate_logo_database.py.insert.py,25,existing_columns,"('Other', 'ListComp')","('Other', 'ListComp')","cursor,row",existing_columns = [row[1] for row in cursor.fetchall()]
.\tools\out_selected\patches\migrate_logo_database.py.insert.py,24,existing_columns,"('Other', 'ListComp')","('Other', 'ListComp')","cursor,row",existing_columns = [row[1] for row in cursor.fetchall()]
.\tools\portings\patches\migrate_logo_database.py.insert.py,25,existing_columns,"('Other', 'ListComp')","('Other', 'ListComp')","cursor,row",existing_columns = [row[1] for row in cursor.fetchall()]
.\dev_tools\kakerlake_ultra_cleaner.py,516,ext,"('Call', ('Attr', 'os.path.splitext(fn)[1]', 'lower'), (), ())","('Call', 0, 0)","fn,os","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\mnt\data\kakerlake_ultra_cleaner.py,516,ext,"('Call', ('Attr', 'os.path.splitext(fn)[1]', 'lower'), (), ())","('Call', 0, 0)","fn,os","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\notwendig oder nicht\wichtig\repo_to_json.py,176,ext,"('Call', ('Attr', 'path.suffix', 'lower'), (), ())","('Call', 0, 0)",path,ext = path.suffix.lower()
.\tools\kakerlake_ultra_cleaner.py,517,ext,"('Call', ('Attr', 'os.path.splitext(fn)[1]', 'lower'), (), ())","('Call', 0, 0)","fn,os","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\tools\repo_to_json.py,176,ext,"('Call', ('Attr', 'path.suffix', 'lower'), (), ())","('Call', 0, 0)",path,ext = path.suffix.lower()
.\notwendig oder nicht\wichtig\repo_to_json.py,231,f,"('Call', ('Attr', 'gzip', 'open'), (('Name', 'out_path'), ('Const', ""'wb'"")), ())","('Call', 2, 0)","gzip,out_path","f = gzip.open(out_path, ""wb"")"
.\notwendig oder nicht\wichtig\repo_to_json.py,234,f,"('Call', ('Name', 'open'), (('Name', 'out_path'), ('Const', ""'wb'"")), ())","('Call', 2, 0)","open,out_path","f = open(out_path, ""wb"")"
.\tools\repo_to_json.py,231,f,"('Call', ('Attr', 'gzip', 'open'), (('Name', 'out_path'), ('Const', ""'wb'"")), ())","('Call', 2, 0)","gzip,out_path","f = gzip.open(out_path, ""wb"")"
.\tools\repo_to_json.py,234,f,"('Call', ('Name', 'open'), (('Name', 'out_path'), ('Const', ""'wb'"")), ())","('Call', 2, 0)","open,out_path","f = open(out_path, ""wb"")"
.\crm.py,180,fields,"('Call', ('Attr', ""', '"", 'join'), (('Call', ('Attr', 'data_to_save', 'keys'), (), ()),), ())","('Call', 1, 0)",data_to_save,"fields = ', '.join(data_to_save.keys())"
.\crm.py,225,fields,"('Call', ('Attr', ""', '"", 'join'), (('Call', ('Attr', 'insert_data', 'keys'), (), ()),), ())","('Call', 1, 0)",insert_data,"fields = ', '.join(insert_data.keys())"
.\product_db.py,170,fields,"('Call', ('Attr', ""', '"", 'join'), (('Call', ('Attr', 'insert_data', 'keys'), (), ()),), ())","('Call', 1, 0)",insert_data,"fields = ', '.join(insert_data.keys()); placeholders = ', '.join(['?'] * len(insert_data))"
.\crm.py,173,fields,"('Other', 'ListComp')","('Other', 'ListComp')","data_to_save,k","fields = [f""{k}=?"" for k in data_to_save if k != 'id']"
.\crm.py,218,fields,"('Other', 'ListComp')","('Other', 'ListComp')","insert_data,k","fields = [f""{k}=?"" for k in insert_data if k != 'id']"
.\analysis.py,3198,fig,"('Call', ('Attr', 'go', 'Figure'), (), (('data', ('List', (('Call', ('Attr', 'go', 'Sankey'), (), (('link', ('Call', ('Name', 'dict'), (), (('source', ('List', (('Const', '0'), ('Const', '0'), ('Const', '3'), ('Const', '1')))), ('target', ('List', (('Const', '1'), ('Const', '2'), ('Const', '4'), ('Const', '4')))), ('value', ('List', (('Subscript', ('Name', 'system_data'), ('Const', ""'self_consumption_kwh'"")), ('Subscript', ('Name', 'grid_results'), ('Const', ""'grid_feed_in_kwh'"")), ('Subscript', ('Name', 'grid_results'), ('Const', ""'grid_purchase_kwh'"")), ('Subscript', ('Name', 'system_data'), ('Const', ""'self_consumption_kwh'"")))))))), ('node', ('Call', ('Name', 'dict'), (), (('color', ('List', (('Const', ""'#F59E0B'""), ('Const', ""'#10B981'""), ('Const', ""'#3B82F6'""), ('Const', ""'#EF4444'""), ('Const', ""'#6B7280'"")))), ('label', ('List', (('Const', ""'Photovoltaik-Erzeugung'""), ('Const', ""'Eigenverbrauch'""), ('Const', ""'Netzeinspeisung'""), ('Const', ""'Netzbezug'""), ('Const', ""'Gesamtverbrauch'"")))), ('line', ('Call', ('Name', 'dict'), (), (('color', ('Const', ""'black'"")), ('width', ('Const', '0.5'))))), ('pad', ('Const', '15')), ('thickness', ('Const', '20'))))))),))),))","('Call', 0, 1)","dict,go,grid_results,system_data",fig = go.Figure(
.\analysis.py,5595,fig,"('Call', ('Attr', 'go', 'Figure'), (), (('data', ('List', (('Call', ('Attr', 'go', 'Sankey'), (), (('link', ('Call', ('Name', 'dict'), (), (('color', ('Subscript', ('Name', 'energy_flows'), ('Const', ""'colors'""))), ('source', ('Subscript', ('Name', 'energy_flows'), ('Const', ""'sources'""))), ('target', ('Subscript', ('Name', 'energy_flows'), ('Const', ""'targets'""))), ('value', ('Subscript', ('Name', 'energy_flows'), ('Const', ""'values'"")))))), ('node', ('Call', ('Name', 'dict'), (), (('color', ('List', (('Const', ""'#F59E0B'""), ('Const', ""'#10B981'""), ('Const', ""'#3B82F6'""), ('Const', ""'#6366F1'""), ('Const', ""'#8B5CF6'""), ('Const', ""'#EF4444'""), ('Const', ""'#6B7280'""), ('Const', ""'#DC2626'"")))), ('label', ('List', (('Const', ""'Photovoltaik-Erzeugung'""), ('Const', ""'Direktverbrauch'""), ('Const', ""'Batterieladung'""), ('Const', ""'Netzeinspeisung'""), ('Const', ""'Batterieentladung'""), ('Const', ""'Netzbezug'""), ('Const', ""'Hausverbrauch'""), ('Const', ""'Verluste'"")))), ('line', ('Call', ('Name', 'dict'), (), (('color', ('Const', ""'black'"")), ('width', ('Const', '0.5'))))), ('pad', ('Const', '15')), ('thickness', ('Const', '20'))))))),))),))","('Call', 0, 1)","dict,energy_flows,go",fig = go.Figure(
.\analysis.py,5789,fig,"('Call', ('Attr', 'go', 'Figure'), (), (('data', ('Call', ('Attr', 'go', 'Heatmap'), (), (('colorscale', ('Const', ""'RdYlGn_r'"")), ('hovertemplate', ('Const', ""'Monat: %{y}<br>Stunde: %{x}:00<br>Verschattung: %{z:.2f}%<extra></extra>'"")), ('text', ('Name', 'shading_matrix')), ('textfont', ('Dict', (('KV', ('Const', ""'size'""), ('Const', '10')),))), ('texttemplate', ('Const', ""'%{text:.2f}%'"")), ('x', ('Name', 'hours')), ('y', ('Name', 'months')), ('z', ('Name', 'shading_matrix'))))),))","('Call', 0, 1)","go,hours,months,shading_matrix",fig = go.Figure(
.\analysis.py,3244,fig,"('Call', ('Attr', 'px', 'pie'), (), (('color_discrete_map', ('Dict', (('KV', ('Const', ""'Bewölkt'""), ('Const', ""'#9CA3AF'"")), ('KV', ('Const', ""'Regnerisch'""), ('Const', ""'#6B7280'"")), ('KV', ('Const', ""'Sonnig'""), ('Const', ""'#F59E0B'"")), ('KV', ('Const', ""'Teilweise bewölkt'""), ('Const', ""'#FCD34D'""))))), ('names', ('Call', ('Name', 'list'), (('Call', ('Attr', 'weather_data', 'keys'), (), ()),), ())), ('title', ('Const', ""'Jahresertrag nach Wetterlage'"")), ('values', ('Call', ('Name', 'list'), (('Call', ('Attr', 'weather_data', 'values'), (), ()),), ()))))","('Call', 0, 4)","list,px,weather_data",fig = px.pie(
.\analysis.py,5856,fig,"('Call', ('Name', 'make_subplots'), (), (('cols', ('Const', '1')), ('rows', ('Const', '2')), ('subplot_titles', ('Tuple', (('Const', ""'Modultemperatur'""), ('Const', ""'Leistungsverlust durch Temperatur'"")))), ('vertical_spacing', ('Const', '0.1'))))","('Call', 0, 4)",make_subplots,fig = make_subplots(
.\analysis.py,2076,fig,"('Call', ('Attr', 'px', 'pie'), (), (('hole', ('Name', 'hole')), ('names', ('Other', 'ListComp')), ('title', ('Name', 'title')), ('values', ('Name', 'shares'))))","('Call', 0, 4)","h,hole,hours,px,shares,title",fig = px.pie(
.\analysis.py,2124,fig,"('Call', ('Name', 'create_universal_2d_chart'), (), (('chart_key', ('Const', ""'daily_production'"")), ('data', ('Name', 'chart_data')), ('default_chart_type', ('Const', ""'Säulen'"")), ('title', ('Name', 'daily_title')), ('x_label', ('Const', ""'Stunde'"")), ('y_label', ('Const', ""'Leistung (kWh)'""))))","('Call', 0, 6)","chart_data,create_universal_2d_chart,daily_title",fig = create_universal_2d_chart(
.\analysis.py,2176,fig,"('Call', ('Name', 'create_universal_2d_chart'), (), (('chart_key', ('Const', ""'weekly_production'"")), ('data', ('Name', 'chart_data')), ('default_chart_type', ('Const', ""'Säulen'"")), ('title', ('Name', 'weekly_title')), ('x_label', ('Const', ""'Wochentag'"")), ('y_label', ('Const', ""'Produktion (kWh)'""))))","('Call', 0, 6)","chart_data,create_universal_2d_chart,weekly_title",fig = create_universal_2d_chart(
.\analysis.py,2276,fig,"('Call', ('Name', 'create_universal_2d_chart'), (), (('chart_key', ('Const', ""'yearly_production'"")), ('data', ('Name', 'chart_data')), ('default_chart_type', ('Const', ""'Säulen'"")), ('title', ('Name', 'yearly_title')), ('x_label', ('Const', ""'Monat'"")), ('y_label', ('Const', ""'Produktion (kWh)'""))))","('Call', 0, 6)","chart_data,create_universal_2d_chart,yearly_title",fig = create_universal_2d_chart(
.\analysis.py,2351,fig,"('Call', ('Name', 'create_universal_2d_chart'), (), (('chart_key', ('Const', ""'project_roi_matrix'"")), ('data', ('Name', 'chart_data')), ('default_chart_type', ('Const', ""'Säulen'"")), ('title', ('Name', 'proj_title')), ('x_label', ('Const', ""'Szenario'"")), ('y_label', ('Const', ""'ROI (%)'""))))","('Call', 0, 6)","chart_data,create_universal_2d_chart,proj_title",fig = create_universal_2d_chart(
.\analysis.py,2468,fig,"('Call', ('Name', 'create_universal_2d_chart'), (), (('chart_key', ('Const', ""'feed_in_revenue'"")), ('data', ('Name', 'chart_data')), ('default_chart_type', ('Const', ""'Säulen'"")), ('title', ('Name', 'feedin_title')), ('x_label', ('Const', ""'Monat'"")), ('y_label', ('Const', ""'Einnahmen (€)'""))))","('Call', 0, 6)","chart_data,create_universal_2d_chart,feedin_title",fig = create_universal_2d_chart(
.\analysis.py,2766,fig,"('Call', ('Name', 'create_multi_series_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'analysis_tariff_cube_switcher_key_v6_final'"")), ('title', ('Name', 'title')), ('x_label', ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'provider_label_switcher'""), ('Const', ""'Anbieter'"")), ())), ('y_label', ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'costs_label_switcher'""), ('Const', ""'Kosten (€)'"")), ()))))","('Call', 1, 4)","chart_data,create_multi_series_2d_chart,get_text,texts,title",fig = create_multi_series_2d_chart(
.\analysis.py,2798,fig,"('Call', ('Name', 'create_universal_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'analysis_tariff_cube_switcher_key_v6_final'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Anbieter'"")), ('y_label', ('Const', ""'Gesamtkosten €/Jahr'""))))","('Call', 1, 4)","chart_data,create_universal_2d_chart,title",fig = create_universal_2d_chart(
.\analysis.py,2908,fig,"('Call', ('Name', 'create_universal_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'analysis_co2_savings_value_switcher_key_v6_final'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Jahr'"")), ('y_label', ('Const', ""'Werte'""))))","('Call', 1, 4)","chart_data,create_universal_2d_chart,title",fig = create_universal_2d_chart(
.\analysis.py,3620,fig,"('Call', ('Name', 'create_universal_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'co2_savings_modern_2d_chart'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Jahr'"")), ('y_label', ('Const', ""'Werte'""))))","('Call', 1, 4)","chart_data,create_universal_2d_chart,title",fig = create_universal_2d_chart(
.\analysis.py,3763,fig,"('Call', ('Name', 'create_universal_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'investment_value_modern_2d_chart'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Maßnahme'"")), ('y_label', ('Const', ""'Gesamtrendite (%)'""))))","('Call', 1, 4)","chart_data,create_universal_2d_chart,title",fig = create_universal_2d_chart(
.\analysis.py,3865,fig,"('Call', ('Name', 'create_universal_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'storage_effect_modern_2d_chart'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Speicherkapazität (kWh)'"")), ('y_label', ('Const', ""'Jährl. Einsparpotenzial (€)'""))))","('Call', 1, 4)","chart_data,create_universal_2d_chart,title",fig = create_universal_2d_chart(
.\analysis.py,3969,fig,"('Call', ('Name', 'create_multi_series_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'analysis_selfuse_stack_switcher_key_v6_final'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Simulationsjahr'"")), ('y_label', ('Const', ""'Energie (kWh)'""))))","('Call', 1, 4)","chart_data,create_multi_series_2d_chart,title",fig = create_multi_series_2d_chart(
.\analysis.py,4043,fig,"('Call', ('Name', 'create_multi_series_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'analysis_cost_growth_switcher_key_v6_final'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Simulationsjahr'"")), ('y_label', ('Const', ""'Strompreis (€/kWh)'""))))","('Call', 1, 4)","chart_data,create_multi_series_2d_chart,title",fig = create_multi_series_2d_chart(
.\analysis.py,4148,fig,"('Call', ('Name', 'create_universal_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'selfuse_ratio_modern_2d_chart'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Monat'"")), ('y_label', ('Const', ""'Eigenversorgungsgrad (%)'""))))","('Call', 1, 4)","chart_data,create_universal_2d_chart,title",fig = create_universal_2d_chart(
.\analysis.py,4222,fig,"('Call', ('Name', 'create_universal_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'roi_comparison_modern_2d_chart'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Projekt'"")), ('y_label', ('Const', ""'Jährlicher ROI (%)'""))))","('Call', 1, 4)","chart_data,create_universal_2d_chart,title",fig = create_universal_2d_chart(
.\analysis.py,4304,fig,"('Call', ('Name', 'create_multi_series_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'scenario_comparison_modern_2d_chart'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Szenario'"")), ('y_label', ('Const', ""'Betrag (€)'""))))","('Call', 1, 4)","chart_data,create_multi_series_2d_chart,title",fig = create_multi_series_2d_chart(
.\analysis.py,4414,fig,"('Call', ('Name', 'create_multi_series_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'tariff_comparison_modern_2d_chart'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Monat'"")), ('y_label', ('Const', ""'Stromkosten (€)'""))))","('Call', 1, 4)","chart_data,create_multi_series_2d_chart,title",fig = create_multi_series_2d_chart(
.\analysis.py,4485,fig,"('Call', ('Name', 'create_universal_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'income_projection_modern_2d_chart'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Simulationsjahr'"")), ('y_label', ('Const', ""'Kumulierte Vorteile (€)'""))))","('Call', 1, 4)","chart_data,create_universal_2d_chart,title",fig = create_universal_2d_chart(
.\analysis.py,4763,fig,"('Call', ('Attr', 'px', 'line'), (('Name', 'df_proj'),), (('markers', ('Const', 'True')), ('title', ('Name', 'title_text_proj')), ('x', ('Const', ""'Jahr'"")), ('y', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'projected_annual_cost_label'""), ('Const', ""'Jährliche Stromkosten ohne Photovoltaik (€)'"")), ()))))","('Call', 1, 4)","df_proj,get_text,px,texts_local,title_text_proj",fig = px.line(
.\analysis.py,4863,fig,"('Call', ('Attr', 'px', 'area'), (('Name', 'df_cf'),), (('markers', ('Const', 'True')), ('title', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'chart_title_cumulative_cashflow'""), ('Const', ""'Kumulierter Cashflow über die Laufzeit (2D)'"")), ())), ('x', ('Const', ""'Jahr'"")), ('y', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'cumulative_cashflow_label'""), ('Const', ""'Kumulierter Cashflow (€)'"")), ()))))","('Call', 1, 4)","df_cf,get_text,px,texts_local",fig = px.area(
.\analysis.py,5043,fig,"('Call', ('Name', 'create_four_type_chart'), (('Name', 'chart_data'),), (('chart_key', ('Other', 'JoinedStr')), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Kategorie'"")), ('y_label', ('Const', ""'Anteil (%)'""))))","('Call', 1, 4)","chart_data,chart_key_prefix,create_four_type_chart,title",fig = create_four_type_chart(
.\analysis.py,5193,fig,"('Call', ('Name', 'create_four_type_chart'), (('Name', 'chart_data'),), (('chart_key', ('Other', 'JoinedStr')), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Nutzungsart'"")), ('y_label', ('Const', ""'Anteil (%)'""))))","('Call', 1, 4)","chart_data,chart_key_prefix,create_four_type_chart,title",fig = create_four_type_chart(
.\analysis.py,6365,fig,"('Call', ('Attr', 'px', 'pie'), (('Name', 'materials_df'),), (('color_discrete_map', ('Dict', (('KV', ('Const', ""'Aluminium'""), ('Const', ""'#6B7280'"")), ('KV', ('Const', ""'Glas'""), ('Const', ""'#10B981'"")), ('KV', ('Const', ""'Kunststoff'""), ('Const', ""'#EF4444'"")), ('KV', ('Const', ""'Kupfer'""), ('Const', ""'#F59E0B'"")), ('KV', ('Const', ""'Silizium'""), ('Const', ""'#3B82F6'"")), ('KV', ('Const', ""'Sonstiges'""), ('Const', ""'#8B5CF6'""))))), ('names', ('Const', ""'material'"")), ('title', ('Const', ""'Materialzusammensetzung der Photovoltaik-Anlage'"")), ('values', ('Const', ""'weight_kg'""))))","('Call', 1, 4)","materials_df,px",fig = px.pie(
.\analysis.py,4775,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df_proj'),), (('text_auto', ('Const', 'True')), ('title', ('Name', 'title_text_proj')), ('x', ('Const', ""'Jahr'"")), ('y', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'projected_annual_cost_label'""), ('Const', ""'Jährliche Stromkosten ohne Photovoltaik (€)'"")), ()))))","('Call', 1, 4)","df_proj,get_text,px,texts_local,title_text_proj",fig = px.bar(
.\analysis.py,4787,fig,"('Call', ('Attr', 'px', 'line'), (('Name', 'df_proj'),), (('markers', ('Const', 'True')), ('title', ('Name', 'title_text_proj')), ('x', ('Const', ""'Jahr'"")), ('y', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'projected_annual_cost_label'""), ('Const', ""'Jährliche Stromkosten ohne Photovoltaik (€)'"")), ()))))","('Call', 1, 4)","df_proj,get_text,px,texts_local,title_text_proj",fig = px.line(
.\analysis.py,4877,fig,"('Call', ('Attr', 'px', 'line'), (('Name', 'df_cf'),), (('markers', ('Const', 'True')), ('title', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'chart_title_cumulative_cashflow'""), ('Const', ""'Kumulierter Cashflow über die Laufzeit (2D)'"")), ())), ('x', ('Const', ""'Jahr'"")), ('y', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'cumulative_cashflow_label'""), ('Const', ""'Kumulierter Cashflow (€)'"")), ()))))","('Call', 1, 4)","df_cf,get_text,px,texts_local",fig = px.line(
.\analysis.py,1326,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('labels', ('Dict', (('KV', ('Const', ""'x'""), ('Name', 'x_label')), ('KV', ('Const', ""'y'""), ('Name', 'y_label'))))), ('title', ('Name', 'title')), ('x', ('Const', ""'x'"")), ('y', ('Const', ""'y'""))))","('Call', 1, 4)","df,px,title,x_label,y_label","fig = px.bar(df, x=""x"", y=""y"", title=title, labels={""x"": x_label, ""y"": y_label})"
.\analysis.py,4891,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df_cf'),), (('text_auto', ('Const', 'True')), ('title', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'chart_title_cumulative_cashflow'""), ('Const', ""'Kumulierter Cashflow über die Laufzeit (2D)'"")), ())), ('x', ('Const', ""'Jahr'"")), ('y', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'cumulative_cashflow_label'""), ('Const', ""'Kumulierter Cashflow (€)'"")), ()))))","('Call', 1, 4)","df_cf,get_text,px,texts_local",fig = px.bar(
.\analysis.py,4905,fig,"('Call', ('Attr', 'px', 'area'), (('Name', 'df_cf'),), (('markers', ('Const', 'True')), ('title', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'chart_title_cumulative_cashflow'""), ('Const', ""'Kumulierter Cashflow über die Laufzeit (2D)'"")), ())), ('x', ('Const', ""'Jahr'"")), ('y', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'cumulative_cashflow_label'""), ('Const', ""'Kumulierter Cashflow (€)'"")), ()))))","('Call', 1, 4)","df_cf,get_text,px,texts_local",fig = px.area(
.\analysis.py,1335,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('labels', ('Dict', (('KV', ('Const', ""'labels'""), ('Name', 'x_label')), ('KV', ('Const', ""'values'""), ('Name', 'y_label'))))), ('title', ('Name', 'title')), ('x', ('Const', ""'labels'"")), ('y', ('Const', ""'values'""))))","('Call', 1, 4)","df,px,title,x_label,y_label","fig = px.bar(df, x=""labels"", y=""values"", title=title, labels={""labels"": x_label, ""values"": y_label})"
.\analysis.py,1480,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'data'),), (('color_discrete_sequence', ('Name', 'colors')), ('title', ('Name', 'title')), ('x', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '0'))), ('y', ('Subscript', ('Attr', 'data', 'columns'), ('Other', 'Slice')))))","('Call', 1, 4)","colors,data,px,title",fig = px.bar(
.\analysis.py,2682,fig,"('Call', ('Attr', 'px', 'line'), (('Name', 'df_comparison'),), (('color_discrete_sequence', ('Name', 'colors')), ('title', ('Const', ""'Verbrauch vs. Produktion (Jahr 1)'"")), ('x', ('Const', ""'Monat'"")), ('y', ('List', (('Const', ""'Verbrauch (kWh)'""), ('Const', ""'Produktion (kWh)'""))))))","('Call', 1, 4)","colors,df_comparison,px",fig = px.line(
.\analysis.py,1238,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'data'),), (('color_discrete_sequence', ('Name', 'colors')), ('title', ('Name', 'title')), ('x', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '0'))), ('y', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '1')))))","('Call', 1, 4)","colors,data,px,title",fig = px.bar(
.\analysis.py,1331,fig,"('Call', ('Attr', 'px', 'pie'), (('Name', 'df'),), (('hole', ('Name', 'hole')), ('names', ('Const', ""'x'"")), ('title', ('Name', 'title')), ('values', ('Const', ""'y'""))))","('Call', 1, 4)","df,hole,px,title","fig = px.pie(df, names=""x"", values=""y"", title=title, hole=hole)"
.\analysis.py,1340,fig,"('Call', ('Attr', 'px', 'pie'), (('Name', 'df'),), (('hole', ('Name', 'hole')), ('names', ('Const', ""'labels'"")), ('title', ('Name', 'title')), ('values', ('Const', ""'values'""))))","('Call', 1, 4)","df,hole,px,title","fig = px.pie(df, names=""labels"", values=""values"", title=title, hole=hole)"
.\analysis.py,1246,fig,"('Call', ('Attr', 'px', 'line'), (('Name', 'data'),), (('color_discrete_sequence', ('Name', 'colors')), ('title', ('Name', 'title')), ('x', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '0'))), ('y', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '1')))))","('Call', 1, 4)","colors,data,px,title",fig = px.line(
.\analysis.py,1499,fig,"('Call', ('Attr', 'px', 'line'), (('Name', 'data'),), (('color_discrete_sequence', ('Name', 'colors')), ('title', ('Name', 'title')), ('x', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '0'))), ('y', ('Subscript', ('Attr', 'data', 'columns'), ('Other', 'Slice')))))","('Call', 1, 4)","colors,data,px,title",fig = px.line(
.\analysis.py,4627,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df_monthly'),), (('barmode', ('Const', ""'group'"")), ('labels', ('Dict', (('KV', ('Const', ""'Monat'""), ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'month_axis_label_chart'""), ('Const', ""'Monat'"")), ())),))), ('title', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'chart_title_monthly_comparison'""), ('Const', ""'Monatlicher Vergleich: Produktion vs. Verbrauch (Jahr 1)'"")), ())), ('x', ('Const', ""'Monat'"")), ('y', ('List', (('Name', 'prod_label_fig'), ('Name', 'cons_label_fig'))))))","('Call', 1, 5)","cons_label_fig,df_monthly,get_text,prod_label_fig,px,texts_local",fig = px.bar(
.\analysis.py,1155,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('labels', ('Dict', (('KV', ('Const', ""'x'""), ('Name', 'x_label')), ('KV', ('Const', ""'y'""), ('Name', 'y_label'))))), ('title', ('Name', 'title')), ('x', ('Const', ""'x'"")), ('y', ('Const', ""'y'""))))","('Call', 1, 5)","colors,df,px,title,x_label,y_label",fig = px.bar(
.\analysis.py,1432,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('labels', ('Dict', (('KV', ('Const', ""'value'""), ('Name', 'y_label')), ('KV', ('Const', ""'variable'""), ('Const', ""'Datenreihe'""))))), ('title', ('Name', 'title')), ('x', ('Const', ""'Kategorie'"")), ('y', ('Subscript', ('Attr', 'df', 'columns'), ('Other', 'Slice')))))","('Call', 1, 5)","colors,df,px,title,y_label",fig = px.bar(
.\analysis.py,2673,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df_comparison'),), (('barmode', ('Const', ""'group'"")), ('color_discrete_sequence', ('Name', 'colors')), ('title', ('Const', ""'Verbrauch vs. Produktion (Jahr 1)'"")), ('x', ('Const', ""'Monat'"")), ('y', ('List', (('Const', ""'Verbrauch (kWh)'""), ('Const', ""'Produktion (kWh)'""))))))","('Call', 1, 5)","colors,df_comparison,px",fig = px.bar(
.\analysis.py,1164,fig,"('Call', ('Attr', 'px', 'line'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('labels', ('Dict', (('KV', ('Const', ""'x'""), ('Name', 'x_label')), ('KV', ('Const', ""'y'""), ('Name', 'y_label'))))), ('title', ('Name', 'title')), ('x', ('Const', ""'x'"")), ('y', ('Const', ""'y'""))))","('Call', 1, 5)","colors,df,px,title,x_label,y_label",fig = px.line(
.\analysis.py,1198,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('labels', ('Dict', (('KV', ('Const', ""'labels'""), ('Name', 'x_label')), ('KV', ('Const', ""'values'""), ('Name', 'y_label'))))), ('title', ('Name', 'title')), ('x', ('Const', ""'labels'"")), ('y', ('Const', ""'values'""))))","('Call', 1, 5)","colors,df,px,title,x_label,y_label",fig = px.bar(
.\analysis.py,1229,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'data'),), (('color_discrete_sequence', ('Name', 'colors')), ('orientation', ('Const', ""'h'"")), ('title', ('Name', 'title')), ('x', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '1'))), ('y', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '0')))))","('Call', 1, 5)","colors,data,px,title",fig = px.bar(
.\analysis.py,1328,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('labels', ('Dict', (('KV', ('Const', ""'x'""), ('Name', 'y_label')), ('KV', ('Const', ""'y'""), ('Name', 'x_label'))))), ('orientation', ('Const', ""'h'"")), ('title', ('Name', 'title')), ('x', ('Const', ""'y'"")), ('y', ('Const', ""'x'""))))","('Call', 1, 5)","df,px,title,x_label,y_label","fig = px.bar(df, x=""y"", y=""x"", orientation=""h"", title=title, labels={""y"": x_label, ""x"": y_label})"
.\analysis.py,1174,fig,"('Call', ('Attr', 'px', 'pie'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('hole', ('Name', 'hole')), ('names', ('Const', ""'x'"")), ('title', ('Name', 'title')), ('values', ('Const', ""'y'""))))","('Call', 1, 5)","colors,df,hole,px,title",fig = px.pie(
.\analysis.py,1207,fig,"('Call', ('Attr', 'px', 'line'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('labels', ('Dict', (('KV', ('Const', ""'labels'""), ('Name', 'x_label')), ('KV', ('Const', ""'values'""), ('Name', 'y_label'))))), ('title', ('Name', 'title')), ('x', ('Const', ""'labels'"")), ('y', ('Const', ""'values'""))))","('Call', 1, 5)","colors,df,px,title,x_label,y_label",fig = px.line(
.\analysis.py,1337,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('labels', ('Dict', (('KV', ('Const', ""'labels'""), ('Name', 'x_label')), ('KV', ('Const', ""'values'""), ('Name', 'y_label'))))), ('orientation', ('Const', ""'h'"")), ('title', ('Name', 'title')), ('x', ('Const', ""'values'"")), ('y', ('Const', ""'labels'""))))","('Call', 1, 5)","df,px,title,x_label,y_label","fig = px.bar(df, x=""values"", y=""labels"", orientation=""h"", title=title, labels={""values"": y_label, ""labels"": x_label})"
.\analysis.py,1453,fig,"('Call', ('Attr', 'px', 'line'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('labels', ('Dict', (('KV', ('Const', ""'value'""), ('Name', 'y_label')), ('KV', ('Const', ""'variable'""), ('Const', ""'Datenreihe'""))))), ('title', ('Name', 'title')), ('x', ('Const', ""'Kategorie'"")), ('y', ('Subscript', ('Attr', 'df', 'columns'), ('Other', 'Slice')))))","('Call', 1, 5)","colors,df,px,title,y_label",fig = px.line(
.\analysis.py,1489,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'data'),), (('color_discrete_sequence', ('Name', 'colors')), ('orientation', ('Const', ""'h'"")), ('title', ('Name', 'title')), ('x', ('Subscript', ('Attr', 'data', 'columns'), ('Other', 'Slice'))), ('y', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '0')))))","('Call', 1, 5)","colors,data,px,title",fig = px.bar(
.\analysis.py,1217,fig,"('Call', ('Attr', 'px', 'pie'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('hole', ('Name', 'hole')), ('names', ('Const', ""'labels'"")), ('title', ('Name', 'title')), ('values', ('Const', ""'values'""))))","('Call', 1, 5)","colors,df,hole,px,title",fig = px.pie(
.\analysis.py,1468,fig,"('Call', ('Attr', 'px', 'pie'), (('Name', 'pie_df'),), (('color_discrete_sequence', ('Name', 'colors')), ('hole', ('Name', 'hole')), ('names', ('Const', ""'Reihe'"")), ('title', ('Name', 'title')), ('values', ('Const', ""'Wert'""))))","('Call', 1, 5)","colors,hole,pie_df,px,title",fig = px.pie(
.\analysis.py,1255,fig,"('Call', ('Attr', 'px', 'pie'), (('Name', 'data'),), (('color_discrete_sequence', ('Name', 'colors')), ('hole', ('Name', 'hole')), ('names', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '0'))), ('title', ('Name', 'title')), ('values', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '1')))))","('Call', 1, 5)","colors,data,hole,px,title",fig = px.pie(
.\analysis.py,1510,fig,"('Call', ('Attr', 'px', 'pie'), (('Name', 'pie_df'),), (('color_discrete_sequence', ('Name', 'colors')), ('hole', ('Name', 'hole')), ('names', ('Const', ""'Reihe'"")), ('title', ('Name', 'title')), ('values', ('Const', ""'Wert'""))))","('Call', 1, 5)","colors,hole,pie_df,px,title",fig = px.pie(
.\analysis.py,1145,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('labels', ('Dict', (('KV', ('Const', ""'x'""), ('Name', 'y_label')), ('KV', ('Const', ""'y'""), ('Name', 'x_label'))))), ('orientation', ('Const', ""'h'"")), ('title', ('Name', 'title')), ('x', ('Const', ""'y'"")), ('y', ('Const', ""'x'""))))","('Call', 1, 6)","colors,df,px,title,x_label,y_label",fig = px.bar(
.\analysis.py,6142,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'sensitivity_df'),), (('color', ('Const', ""'impact'"")), ('color_continuous_scale', ('Const', ""'RdBu_r'"")), ('orientation', ('Const', ""'h'"")), ('title', ('Const', ""'Einfluss der Parameter auf NPV'"")), ('x', ('Const', ""'impact'"")), ('y', ('Const', ""'parameter'""))))","('Call', 1, 6)","px,sensitivity_df",fig = px.bar(
.\analysis.py,1188,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('labels', ('Dict', (('KV', ('Const', ""'labels'""), ('Name', 'x_label')), ('KV', ('Const', ""'values'""), ('Name', 'y_label'))))), ('orientation', ('Const', ""'h'"")), ('title', ('Name', 'title')), ('x', ('Const', ""'values'"")), ('y', ('Const', ""'labels'""))))","('Call', 1, 6)","colors,df,px,title,x_label,y_label",fig = px.bar(
.\analysis.py,1442,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('labels', ('Dict', (('KV', ('Const', ""'value'""), ('Name', 'y_label')), ('KV', ('Const', ""'variable'""), ('Const', ""'Datenreihe'""))))), ('orientation', ('Const', ""'h'"")), ('title', ('Name', 'title')), ('x', ('Subscript', ('Attr', 'df', 'columns'), ('Other', 'Slice'))), ('y', ('Const', ""'Kategorie'""))))","('Call', 1, 6)","colors,df,px,title,y_label",fig = px.bar(
.\analysis.py,2690,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df_comparison'),), (('barmode', ('Const', ""'group'"")), ('color_discrete_sequence', ('Name', 'colors')), ('orientation', ('Const', ""'h'"")), ('title', ('Const', ""'Verbrauch vs. Produktion (Jahr 1)'"")), ('x', ('List', (('Const', ""'Verbrauch (kWh)'""), ('Const', ""'Produktion (kWh)'"")))), ('y', ('Const', ""'Monat'""))))","('Call', 1, 6)","colors,df_comparison,px",fig = px.bar(
.\admin_logo_management_ui.py,75,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\admin_logo_management_ui.py,159,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\crm.py,475,file_bytes,"('Call', ('Attr', 'up', 'read'), (), ())","('Call', 0, 0)",up,file_bytes = up.read()
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,59,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,149,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,80,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,190,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,59,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,149,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,80,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,190,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\doc_output.py,2366,file_name,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","customer_name_for_file,str,timestamp_file","file_name = f""Angebot_{str(customer_name_for_file).replace(' ', '_')}_{timestamp_file}.pdf"""
.\pdf_ui.py,1177,file_name,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","file_name_customer_part,timestamp_file","file_name = f""Angebot_{file_name_customer_part}_{timestamp_file}.pdf"""
.\database.py,1620,file_path,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'COMPANY_DOCS_BASE_DIR'), ('Subscript', ('Name', 'row'), ('Const', ""'file_path'""))), ())","('Call', 2, 0)","COMPANY_DOCS_BASE_DIR,os,row","file_path = os.path.join(COMPANY_DOCS_BASE_DIR, row['file_path'])"
.\database.py,1659,file_path,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'COMPANY_DOCS_BASE_DIR'), ('Subscript', ('Name', 'row'), ('Const', ""'file_path'""))), ())","('Call', 2, 0)","COMPANY_DOCS_BASE_DIR,os,row","file_path = os.path.join(COMPANY_DOCS_BASE_DIR, row['file_path'])"
.\locales.py,22,file_path,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'current_dir'), ('Other', 'JoinedStr')), ())","('Call', 2, 0)","current_dir,lang_code,os","file_path = os.path.join(current_dir, f""{lang_code}.json"")"
.\debug_logo_pdf.py,91,file_size,"('Call', ('Attr', 'os.path', 'getsize'), (('Name', 'temp_output'),), ())","('Call', 1, 0)","os,temp_output",file_size = os.path.getsize(temp_output)
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_pdf.py.insert.py,90,file_size,"('Call', ('Attr', 'os.path', 'getsize'), (('Name', 'temp_output'),), ())","('Call', 1, 0)","os,temp_output",file_size = os.path.getsize(temp_output)
.\notwendig oder nicht\wichtig\portings\patches\test_final_pdf_logos.py.insert.py,87,file_size,"('Call', ('Name', 'len'), (('Name', 'pdf_bytes'),), ())","('Call', 1, 0)","len,pdf_bytes",file_size = len(pdf_bytes)
.\notwendig oder nicht\wichtig\portings\patches\test_pdf_logos.py.insert.py,91,file_size,"('Call', ('Attr', 'os.path', 'getsize'), (('Name', 'temp_pdf_path'),), ())","('Call', 1, 0)","os,temp_pdf_path",file_size = os.path.getsize(temp_pdf_path)
.\tests\test_final_pdf_logos.py,88,file_size,"('Call', ('Name', 'len'), (('Name', 'pdf_bytes'),), ())","('Call', 1, 0)","len,pdf_bytes",file_size = len(pdf_bytes)
.\tests\test_pdf_logos.py,92,file_size,"('Call', ('Attr', 'os.path', 'getsize'), (('Name', 'temp_pdf_path'),), ())","('Call', 1, 0)","os,temp_pdf_path",file_size = os.path.getsize(temp_pdf_path)
.\tools\portings\patches\debug_logo_pdf.py.insert.py,90,file_size,"('Call', ('Attr', 'os.path', 'getsize'), (('Name', 'temp_output'),), ())","('Call', 1, 0)","os,temp_output",file_size = os.path.getsize(temp_output)
.\tools\portings\patches\test_final_pdf_logos.py.insert.py,87,file_size,"('Call', ('Name', 'len'), (('Name', 'pdf_bytes'),), ())","('Call', 1, 0)","len,pdf_bytes",file_size = len(pdf_bytes)
.\tools\portings\patches\test_pdf_logos.py.insert.py,91,file_size,"('Call', ('Attr', 'os.path', 'getsize'), (('Name', 'temp_pdf_path'),), ())","('Call', 1, 0)","os,temp_pdf_path",file_size = os.path.getsize(temp_pdf_path)
.\central_pdf_system.py,2056,filename,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","customer_name,selected_layout,timestamp","filename = f""Angebot_{customer_name}_{selected_layout}_{timestamp}.pdf"""
.\gui.py,504,filename,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","customer_name,datetime","filename = f""Angebot_{customer_name}_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf"""
.\multi_offer_generator_old.py,625,filename,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","current_date,offer_id,safe_customer_name","filename = f""Angebot_{current_date}_{offer_id}_{safe_customer_name}.pdf"""
.\multi_offer_generator_old.py,1245,filename,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","datetime,safe_company_name,safe_customer_name","filename = f""Angebot_{safe_customer_name}_{safe_company_name}_{datetime.now().strftime('%Y%m%d')}.pdf"""
.\pdf_erstellen_komplett.py,246,filename,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","base_dir,os,project_data,str","filename = f""Angebot_{project_data.get('customer_data',{}).get('last_name','Unbekannt')}_{os.path.basename(str(base_dir))}.pdf"""
.\analysis.py,1668,final_colorway,"('Name', 'dynamic_colors')","('Name',)",dynamic_colors,final_colorway = dynamic_colors
.\analysis.py,1681,final_colorway,"('Name', 'color_discrete_sequence')","('Name',)",color_discrete_sequence,final_colorway = color_discrete_sequence
.\analysis.py,1692,final_colorway,"('Name', 'px_color_sequence')","('Name',)",px_color_sequence,final_colorway = px_color_sequence
.\doc_output.py,2254,financing_config,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'financing_config'""), ('Dict', ())), ())","('Call', 2, 0)",st,"financing_config = st.session_state.get('financing_config', {})"
.\pdf_generator.py,1876,financing_config,"('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'financing_config'""), ('Dict', ())), ())","('Call', 2, 0)",inclusion_options,"financing_config = inclusion_options.get(""financing_config"", {})"
.\pdf_ui.py,487,financing_config,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'financing_config'""), ('Dict', ())), ())","('Call', 2, 0)",st,"financing_config = st.session_state.get('financing_config', {})"
.\analysis.py,6741,financing_data,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'financing_pdf_export_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"financing_data = st.session_state.get(""financing_pdf_export_data"", {})"
.\doc_output.py,1735,financing_data,"('Call', ('Name', 'prepare_financing_data_for_pdf_export'), (('Name', 'analysis_results'), ('Name', 'texts')), ())","('Call', 2, 0)","analysis_results,prepare_financing_data_for_pdf_export,texts","financing_data = prepare_financing_data_for_pdf_export(analysis_results, texts)"
.\pdf_generator.py,688,first,"('Call', ('Attr', ""str(cust.get('first_name') or '')"", 'strip'), (), ())","('Call', 0, 0)","cust,str",first = str(cust.get('first_name') or '').strip()
.\pdf_template_engine\placeholders.py,439,first,"('Call', ('Attr', ""as_str(customer.get('first_name') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,customer","first = as_str(customer.get(""first_name"") or """").strip()"
.\pdf_template_engine\placeholders.py,474,first,"('Call', ('Attr', ""as_str(customer.get('first_name') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,customer","first = as_str(customer.get(""first_name"") or """").strip()"
.\multi_offer_generator.py,662,first_name,"('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'first_name'""), ('Const', ""''"")), ())","('Call', 2, 0)",customer_data,"first_name = customer_data.get('first_name', '')"
.\pdf_generator.py,1396,first_name,"('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'first_name'""), ('Const', ""''"")), ())","('Call', 2, 0)",customer_data,"first_name = customer_data.get(""first_name"", """")"
.\pdf_ui.py,1219,first_name,"('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'first_name'""), ('Const', ""''"")), ())","('Call', 2, 0)",project_data,"first_name = project_data.get('customer_data', {}).get('first_name', '')"
.\pdf_template_engine\placeholders.py,1318,first_word,"('Other', 'IfExp')","('Other', 'IfExp')",module_name,"first_word = module_name.split()[0] if module_name.split() else """""
.\pdf_template_engine\placeholders.py,1578,first_word,"('Other', 'IfExp')","('Other', 'IfExp')",inverter_name,"first_word = inverter_name.split()[0] if inverter_name.split() else """""
.\pdf_template_engine\placeholders.py,1785,first_word,"('Other', 'IfExp')","('Other', 'IfExp')",storage_name,"first_word = storage_name.split()[0] if storage_name.split() else """""
.\admin_panel.py,1479,font_family,"('Call', ('Attr', 'st', 'text_input'), (('Call', ('Name', 'get_text_local'), (('Const', ""'admin_viz_font_family_label'""), ('Const', ""'Schriftfamilie...'"")), ()),), (('key', ('Other', 'JoinedStr')), ('value', ('Call', ('Attr', 'viz_settings', 'get'), (('Const', ""'chart_font_family'""), ('Call', ('Attr', 'default_viz_settings_fallback', 'get'), (('Const', ""'chart_font_family'""),), ())), ()))))","('Call', 1, 2)","WIDGET_KEY_SUFFIX,default_viz_settings_fallback,get_text_local,st,viz_settings","font_family = st.text_input(get_text_local(""admin_viz_font_family_label"", ""Schriftfamilie...""), value=viz_settings.get(""chart_font_family"", default_viz_settings_fallback.get(""chart_font_family"")), key=f""viz_font_family_input{WIDGET_KEY_SUFFIX}"")"
.\doc_output.py,1634,font_family,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Schriftart'""),), (('key', ('Const', ""'pdf_font_family'"")), ('options', ('List', (('Const', ""'ARIAL'""), ('Const', ""'HELVETICA'""), ('Const', ""'TIMES'""), ('Const', ""'CALIBRI'""), ('Const', ""'CUSTOM'""))))))","('Call', 1, 2)",st,font_family = st.selectbox(
.\analysis.py,1619,font_family,"('Call', ('Attr', 'specific_settings', 'get'), (('Const', ""'chart_font_family'""), ('Call', ('Name', '_safe_viz_get'), (('Name', 'viz_settings'), ('Const', ""'chart_font_family'""), ('Const', ""'Arial, sans-serif'"")), ())), ())","('Call', 2, 0)","_safe_viz_get,specific_settings,viz_settings",font_family = specific_settings.get(
.\doc_output.py,1315,font_family,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""' Schriftart:'""), ('List', (('Const', ""'Arial'""), ('Const', ""'Helvetica'""), ('Const', ""'Times New Roman'""), ('Const', ""'Calibri'""), ('Const', ""'Georgia'""), ('Const', ""'Verdana'""), ('Const', ""'Roboto'""), ('Const', ""'Open Sans'"")))), ())","('Call', 2, 0)",st,font_family = st.selectbox(
.\pdf_template_engine\dynamic_overlay.py,454,font_name,"('Call', ('Attr', 'elem', 'get'), (('Const', ""'font'""), ('Const', ""'Helvetica'"")), ())","('Call', 2, 0)",elem,"font_name = elem.get(""font"", ""Helvetica"")"
.\pdf_template_engine\dynamic_overlay.py,555,font_name,"('Call', ('Attr', 'meta', 'get'), (('Const', ""'font'""), ('Const', ""'Helvetica-Bold'"")), ())","('Call', 2, 0)",meta,"font_name = meta.get(""font"", ""Helvetica-Bold"")"
.\pdf_template_engine\dynamic_overlay.py,455,font_size,"('Call', ('Name', 'float'), (('Call', ('Attr', 'elem', 'get'), (('Const', ""'font_size'""), ('Const', '10.0')), ()),), ())","('Call', 1, 0)","elem,float","font_size = float(elem.get(""font_size"", 10.0))"
.\pdf_template_engine\dynamic_overlay.py,556,font_size,"('Call', ('Name', 'float'), (('Call', ('Attr', 'meta', 'get'), (('Const', ""'font_size'""), ('Const', '10.49')), ()),), ())","('Call', 1, 0)","float,meta","font_size = float(meta.get(""font_size"", 10.49))"
.\analysis_utils.py,91,formatted,"('Call', ('Attr', ""f'{value:,.{decimal_places}f}'"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)","decimal_places,value","formatted = f""{value:,.{decimal_places}f}"".replace(',', '.')"
.\analysis_utils.py,54,formatted,"('Call', ('Attr', ""f'{value:,.0f}'"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",value,"formatted = f""{value:,.0f}"".replace(',', '.')"
.\analysis_utils.py,58,formatted,"('Call', ('Attr', ""formatted.replace(',', 'TEMP').replace('.', ',')"", 'replace'), (('Const', ""'TEMP'""), ('Const', ""'.'"")), ())","('Call', 2, 0)",formatted,"formatted = formatted.replace(',', 'TEMP').replace('.', ',').replace('TEMP', '.')"
.\german_formatting.py,22,formatted,"('Call', ('Attr', ""f'{num_value:,.0f}'.replace(',', 'X').replace('.', ',')"", 'replace'), (('Const', ""'X'""), ('Const', ""'.'"")), ())","('Call', 2, 0)",num_value,"formatted = f""{num_value:,.0f}"".replace("","", ""X"").replace(""."", "","").replace(""X"", ""."")"
.\german_formatting.py,24,formatted,"('Call', ('Attr', ""f'{num_value:,.{decimals}f}'.replace(',', 'X').replace('.', ',')"", 'replace'), (('Const', ""'X'""), ('Const', ""'.'"")), ())","('Call', 2, 0)","decimals,num_value","formatted = f""{num_value:,.{decimals}f}"".replace("","", ""X"").replace(""."", "","").replace(""X"", ""."")"
.\live_preview_helpers.py,86,formatted,"('Call', ('Attr', ""f'{value:,.0f}'"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",value,"formatted = f""{value:,.0f}"".replace(',', '.')"
.\live_preview_helpers.py,89,formatted,"('Call', ('Attr', ""formatted.replace(',', 'TEMP').replace('.', ',')"", 'replace'), (('Const', ""'TEMP'""), ('Const', ""'.'"")), ())","('Call', 2, 0)",formatted,"formatted = formatted.replace(',', 'TEMP').replace('.', ',').replace('TEMP', '.')"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,114,formatted,"('Call', ('Attr', ""f'{num:,.0f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)",num,"formatted = f""{num:,.0f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,116,formatted,"('Call', ('Attr', ""f'{num:,.{decimal_places}f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)","decimal_places,num","formatted = f""{num:,.{decimal_places}f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,150,formatted,"('Call', ('Attr', ""f'{num:,.0f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)",num,"formatted = f""{num:,.0f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,152,formatted,"('Call', ('Attr', ""f'{num:,.{decimal_places}f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)","decimal_places,num","formatted = f""{num:,.{decimal_places}f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\pdf_template_engine\placeholders.py,401,formatted,"('Call', ('Attr', ""f'{num:,.0f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)",num,"formatted = f""{num:,.0f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\pdf_template_engine\placeholders.py,403,formatted,"('Call', ('Attr', ""f'{num:,.{decimal_places}f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)","decimal_places,num","formatted = f""{num:,.{decimal_places}f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,114,formatted,"('Call', ('Attr', ""f'{num:,.0f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)",num,"formatted = f""{num:,.0f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,116,formatted,"('Call', ('Attr', ""f'{num:,.{decimal_places}f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)","decimal_places,num","formatted = f""{num:,.{decimal_places}f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,150,formatted,"('Call', ('Attr', ""f'{num:,.0f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)",num,"formatted = f""{num:,.0f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,152,formatted,"('Call', ('Attr', ""f'{num:,.{decimal_places}f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)","decimal_places,num","formatted = f""{num:,.{decimal_places}f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\analysis_utils.py,60,formatted,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","decimal_places,value","formatted = f""{value:,.{decimal_places}f}"""
.\analysis_utils.py,56,formatted,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","decimal_places,value","formatted = f""{value:,.{decimal_places}f}"""
.\live_preview_helpers.py,88,formatted,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","decimal_places,value","formatted = f""{value:,.{decimal_places}f}"""
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,119,formatted,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","decimal_places,num","formatted = f""{num:.{decimal_places}f}"""
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,155,formatted,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","decimal_places,num","formatted = f""{num:.{decimal_places}f}"""
.\pdf_template_engine\placeholders.py,406,formatted,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","decimal_places,num","formatted = f""{num:.{decimal_places}f}"""
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,119,formatted,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","decimal_places,num","formatted = f""{num:.{decimal_places}f}"""
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,155,formatted,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","decimal_places,num","formatted = f""{num:.{decimal_places}f}"""
.\pdf_generator.py,504,fp_val,"('Call', ('Attr', 'safe_analysis_results', 'get'), (('Const', ""'final_price'""),), ())","('Call', 1, 0)",safe_analysis_results,fp_val = safe_analysis_results.get('final_price')
.\pdf_generator.py,510,fp_val,"('Call', ('Attr', 'live', 'get'), (('Const', ""'final_price'""),), ())","('Call', 1, 0)",live,fp_val = live.get('final_price')
.\pdf_generator.py,1596,full_product_name,"('Name', 'brand')","('Name',)",brand,full_product_name = brand
.\pdf_generator.py,1598,full_product_name,"('Name', 'model')","('Name',)",model,full_product_name = model
.\pdf_generator.py,1600,full_product_name,"('Name', 'component_name_text')","('Name',)",component_name_text,full_product_name = component_name_text
.\multi_offer_generator.py,1250,generator,"('Call', ('Name', 'MultiCompanyOfferGenerator'), (), ())","('Call', 0, 0)",MultiCompanyOfferGenerator,generator = MultiCompanyOfferGenerator()
.\multi_offer_generator_new.py,447,generator,"('Call', ('Name', 'MultiCompanyOfferGenerator'), (), ())","('Call', 0, 0)",MultiCompanyOfferGenerator,generator = MultiCompanyOfferGenerator()
.\multi_offer_generator_old.py,1263,generator,"('Call', ('Name', 'EnhancedMultiOfferGenerator'), (), ())","('Call', 0, 0)",EnhancedMultiOfferGenerator,generator = EnhancedMultiOfferGenerator()
.\data_input.py,41,get_db_connection_safe,"('Name', 'Dummy_get_db_connection_input')","('Name',)",Dummy_get_db_connection_input,get_db_connection_safe = Dummy_get_db_connection_input
.\data_input.py,50,get_db_connection_safe,"('Name', 'real_get_db_connection')","('Name',)",real_get_db_connection,get_db_connection_safe = real_get_db_connection
.\crm.py,16,get_db_connection_safe_crm,"('Name', 'real_get_db_connection')","('Name',)",real_get_db_connection,get_db_connection_safe_crm = real_get_db_connection
.\crm.py,21,get_db_connection_safe_crm,"('Name', '_dummy_get_db_connection_ie')","('Name',)",_dummy_get_db_connection_ie,get_db_connection_safe_crm = _dummy_get_db_connection_ie
.\crm.py,27,get_db_connection_safe_crm,"('Name', '_dummy_get_db_connection_ex')","('Name',)",_dummy_get_db_connection_ex,get_db_connection_safe_crm = _dummy_get_db_connection_ex
.\product_db.py,21,get_db_connection_safe_pd,"('Name', 'get_db_connection')","('Name',)",get_db_connection,get_db_connection_safe_pd = get_db_connection
.\product_db.py,27,get_db_connection_safe_pd,"('Name', '_dummy_get_db_connection_ie')","('Name',)",_dummy_get_db_connection_ie,get_db_connection_safe_pd = _dummy_get_db_connection_ie
.\product_db.py,33,get_db_connection_safe_pd,"('Name', '_dummy_get_db_connection_ex')","('Name',)",_dummy_get_db_connection_ex,get_db_connection_safe_pd = _dummy_get_db_connection_ex
.\data_input.py,45,get_product_by_id_safe,"('Name', 'Dummy_get_product_by_id_input')","('Name',)",Dummy_get_product_by_id_input,get_product_by_id_safe = Dummy_get_product_by_id_input
.\data_input.py,54,get_product_by_id_safe,"('Name', 'real_get_product_by_id')","('Name',)",real_get_product_by_id,get_product_by_id_safe = real_get_product_by_id
.\data_input.py,44,get_product_by_model_name_safe,"('Name', 'Dummy_get_product_by_model_name_input')","('Name',)",Dummy_get_product_by_model_name_input,get_product_by_model_name_safe = Dummy_get_product_by_model_name_input
.\data_input.py,53,get_product_by_model_name_safe,"('Name', 'real_get_product_by_model_name')","('Name',)",real_get_product_by_model_name,get_product_by_model_name_safe = real_get_product_by_model_name
.\solar_calculator.py,25,get_product_by_model_name_safe,"('Name', '_dummy_get_product_by_model_name')","('Name',)",_dummy_get_product_by_model_name,get_product_by_model_name_safe = _dummy_get_product_by_model_name  # type: ignore
.\calculations.py,2358,global_constants,"('Call', ('Name', 'real_load_admin_setting'), (('Const', ""'global_constants'""),), ())","('Call', 1, 0)",real_load_admin_setting,"global_constants = real_load_admin_setting(""global_constants"")"
.\calculations.py,2360,global_constants,"('Call', ('Name', 'Dummy_load_admin_setting_calc'), (('Const', ""'global_constants'""),), ())","('Call', 1, 0)",Dummy_load_admin_setting_calc,"global_constants = Dummy_load_admin_setting_calc(""global_constants"")"
.\heatpump_ui.py,476,heatpump,"('Subscript', ('Name', 'heatpump_data'), ('Const', ""'selected_heatpump'""))","('Subscript',)",heatpump_data,heatpump = heatpump_data['selected_heatpump']
.\heatpump_ui.py,962,heatpump,"('Subscript', ('Name', 'heatpump_data'), ('Const', ""'selected_heatpump'""))","('Subscript',)",heatpump_data,heatpump = heatpump_data['selected_heatpump']
.\heatpump_ui.py,889,heatpump,"('Subscript', ('Attr', 'st.session_state', 'heatpump_data'), ('Const', ""'selected_heatpump'""))","('Subscript',)",st,heatpump = st.session_state.heatpump_data['selected_heatpump']
.\pdf_preview.py,249,height,"('Call', ('Name', 'int'), (('Div', ('Mult', (('Attr', 'img', 'height'), ('Name', 'preview_zoom'))), ('Const', '100')),), ())","('Call', 1, 0)","img,int,preview_zoom",height = int(img.height * preview_zoom / 100)
.\pdf_preview.py,305,height,"('Call', ('Name', 'int'), (('Div', ('Mult', (('Attr', 'current_img', 'height'), ('Name', 'preview_zoom'))), ('Const', '100')),), ())","('Call', 1, 0)","current_img,int,preview_zoom",height = int(current_img.height * preview_zoom / 100)
.\analysis.py,1864,hh,"('BoolOp', 'Or', (('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'stromkosten_haushalt_euro_monat'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","_parse_float,project_data","hh = _parse_float(project_data.get(""stromkosten_haushalt_euro_monat"")) or 0.0"
.\analysis.py,1882,hh,"('BoolOp', 'Or', (('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'stromkosten_haushalt_euro_monat'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","_parse_float,project_details","hh = _parse_float(project_details.get(""stromkosten_haushalt_euro_monat"")) or 0.0"
.\pdf_template_engine\placeholders.py,976,hh,"('BoolOp', 'Or', (('Call', ('Name', 'parse_float'), (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'stromkosten_haushalt_euro_monat'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","parse_float,project_data","hh = parse_float(project_data.get(""stromkosten_haushalt_euro_monat"")) or 0.0"
.\pdf_template_engine\placeholders.py,984,hh,"('BoolOp', 'Or', (('Call', ('Name', 'parse_float'), (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'stromkosten_haushalt_euro_monat'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","parse_float,project_details","hh = parse_float(project_details.get(""stromkosten_haushalt_euro_monat"")) or 0.0"
.\notwendig oder nicht\python_function_recipes.py,243,hits,"('Subscript', ('Name', 'table'), ('Compare', ('Name', 'key_col'), ('Eq',), (('Name', 'lookup_value'),)))","('Subscript',)","key_col,lookup_value,table",hits = table[key_col == lookup_value]
.\notwendig oder nicht\python_function_recipes.py,38,hits,"('Subscript', ('Name', 'key_row'), ('Compare', ('Name', 'key_row'), ('Eq',), (('Name', 'lookup_value'),)))","('Subscript',)","key_row,lookup_value",hits = key_row[key_row == lookup_value]
.\notwendig oder nicht\python_function_recipes.py,79,hits,"('Subscript', ('Name', 's'), ('Compare', ('Name', 's'), ('Eq',), (('Name', 'lookup_value'),)))","('Subscript',)","lookup_value,s",hits = s[s == lookup_value]
.\pdf_ui.py,218,hp_offer,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'heatpump_offer'""),), ())","('Call', 1, 0)",st,hp_offer = st.session_state.get('heatpump_offer')
.\pdf_ui.py,241,hp_offer,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'heatpump_offer'""),), ())","('Call', 1, 0)",st,hp_offer = st.session_state.get('heatpump_offer')
.\pdf_template_engine\placeholders.py,2485,hp_offer,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'heatpump_offer'""),), ())","('Call', 1, 0)",project_data,"hp_offer = project_data.get(""heatpump_offer"")"
.\analysis.py,1865,hz,"('BoolOp', 'Or', (('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'stromkosten_heizung_euro_monat'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","_parse_float,project_data","hz = _parse_float(project_data.get(""stromkosten_heizung_euro_monat"")) or 0.0"
.\analysis.py,1883,hz,"('BoolOp', 'Or', (('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'stromkosten_heizung_euro_monat'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","_parse_float,project_details","hz = _parse_float(project_details.get(""stromkosten_heizung_euro_monat"")) or 0.0"
.\pdf_template_engine\placeholders.py,977,hz,"('BoolOp', 'Or', (('Call', ('Name', 'parse_float'), (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'stromkosten_heizung_euro_monat'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","parse_float,project_data","hz = parse_float(project_data.get(""stromkosten_heizung_euro_monat"")) or 0.0"
.\pdf_template_engine\placeholders.py,985,hz,"('BoolOp', 'Or', (('Call', ('Name', 'parse_float'), (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'stromkosten_heizung_euro_monat'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","parse_float,project_details","hz = parse_float(project_details.get(""stromkosten_heizung_euro_monat"")) or 0.0"
.\admin_logo_management_ui.py,103,image,"('Call', ('Attr', 'Image', 'open'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'logo_bytes'),), ()),), ())","('Call', 1, 0)","Image,io,logo_bytes",image = Image.open(io.BytesIO(logo_bytes))
.\admin_logo_management_ui.py,169,image,"('Call', ('Attr', 'Image', 'open'), (('Name', 'uploaded_file'),), ())","('Call', 1, 0)","Image,uploaded_file",image = Image.open(uploaded_file)
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,90,image,"('Call', ('Attr', 'Image', 'open'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'logo_bytes'),), ()),), ())","('Call', 1, 0)","Image,io,logo_bytes",image = Image.open(io.BytesIO(logo_bytes))
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,159,image,"('Call', ('Attr', 'Image', 'open'), (('Name', 'uploaded_file'),), ())","('Call', 1, 0)","Image,uploaded_file",image = Image.open(uploaded_file)
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,121,image,"('Call', ('Attr', 'Image', 'open'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'logo_bytes'),), ()),), ())","('Call', 1, 0)","Image,io,logo_bytes",image = Image.open(io.BytesIO(logo_bytes))
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,200,image,"('Call', ('Attr', 'Image', 'open'), (('Name', 'uploaded_file'),), ())","('Call', 1, 0)","Image,uploaded_file",image = Image.open(uploaded_file)
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,90,image,"('Call', ('Attr', 'Image', 'open'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'logo_bytes'),), ()),), ())","('Call', 1, 0)","Image,io,logo_bytes",image = Image.open(io.BytesIO(logo_bytes))
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,159,image,"('Call', ('Attr', 'Image', 'open'), (('Name', 'uploaded_file'),), ())","('Call', 1, 0)","Image,uploaded_file",image = Image.open(uploaded_file)
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,121,image,"('Call', ('Attr', 'Image', 'open'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'logo_bytes'),), ()),), ())","('Call', 1, 0)","Image,io,logo_bytes",image = Image.open(io.BytesIO(logo_bytes))
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,200,image,"('Call', ('Attr', 'Image', 'open'), (('Name', 'uploaded_file'),), ())","('Call', 1, 0)","Image,uploaded_file",image = Image.open(uploaded_file)
.\admin_panel.py,2062,image_data,"('Call', ('Name', 'get_company_image_template_data'), (('Subscript', ('Name', 'template'), ('Const', ""'id'"")),), ())","('Call', 1, 0)","get_company_image_template_data,template",image_data = get_company_image_template_data(template['id'])
.\pdf_generator.py,2709,image_data,"('Call', ('Attr', 'base64', 'b64decode'), (('Subscript', ('Name', 'item'), ('Const', ""'content'"")),), ())","('Call', 1, 0)","base64,item",image_data = base64.b64decode(item['content'])
.\add_test_product_images.py,78,image_data,"('Call', ('Attr', 'product', 'get'), (('Const', ""'image_base64'""), ('Const', ""''"")), ())","('Call', 2, 0)",product,"image_data = product.get('image_base64', '')"
.\notwendig oder nicht\wichtig\portings\patches\add_test_product_images.py.insert.py,105,image_data,"('Call', ('Attr', 'product', 'get'), (('Const', ""'image_base64'""), ('Const', ""''"")), ())","('Call', 2, 0)",product,"image_data = product.get('image_base64', '')"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_upload.py.insert.py,39,image_data,"('Call', ('Attr', 'retrieved', 'get'), (('Const', ""'image_base64'""), ('Const', ""''"")), ())","('Call', 2, 0)",retrieved,"image_data = retrieved.get('image_base64', '')"
.\tests\test_admin_upload.py,39,image_data,"('Call', ('Attr', 'retrieved', 'get'), (('Const', ""'image_base64'""), ('Const', ""''"")), ())","('Call', 2, 0)",retrieved,"image_data = retrieved.get('image_base64', '')"
.\tools\portings\patches\add_test_product_images.py.insert.py,105,image_data,"('Call', ('Attr', 'product', 'get'), (('Const', ""'image_base64'""), ('Const', ""''"")), ())","('Call', 2, 0)",product,"image_data = product.get('image_base64', '')"
.\tools\portings\patches\test_admin_upload.py.insert.py,39,image_data,"('Call', ('Attr', 'retrieved', 'get'), (('Const', ""'image_base64'""), ('Const', ""''"")), ())","('Call', 2, 0)",retrieved,"image_data = retrieved.get('image_base64', '')"
.\pdf_generator.py,632,img,"('Call', ('Name', 'ImageReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'img_bytes'),), ()),), ())","('Call', 1, 0)","ImageReader,img_bytes,io",img = ImageReader(io.BytesIO(img_bytes))
.\pdf_preview.py,346,img,"('Call', ('Attr', 'Image', 'open'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'img_data'),), ()),), ())","('Call', 1, 0)","Image,img_data,io",img = Image.open(io.BytesIO(img_data))
.\pdf_preview.py,101,img,"('Call', ('Attr', 'Image', 'open'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'img_data'),), ()),), ())","('Call', 1, 0)","Image,img_data,io",img = Image.open(io.BytesIO(img_data))
.\pdf_template_engine\dynamic_overlay.py,195,img,"('Call', ('Name', 'ImageReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'img_bytes'),), ()),), ())","('Call', 1, 0)","ImageReader,img_bytes,io",img = ImageReader(io.BytesIO(img_bytes))
.\pdf_template_engine\dynamic_overlay.py,799,img,"('Call', ('Name', '_as_image_reader'), (('Name', 'img_b64'),), ())","('Call', 1, 0)","_as_image_reader,img_b64",img = _as_image_reader(img_b64)
.\pdf_template_engine\dynamic_overlay.py,418,img,"('Call', ('Name', '_as_image_reader'), (('Name', 'logo_b64'),), ())","('Call', 1, 0)","_as_image_reader,logo_b64",img = _as_image_reader(logo_b64)
.\create_png_test_images.py,19,img,"('Call', ('Attr', 'Image', 'new'), (('Const', ""'RGB'""), ('Tuple', (('Const', '200'), ('Const', '150')))), (('color', ('Const', ""'#E3F2FD'"")),))","('Call', 2, 1)",Image,"img = Image.new('RGB', (200, 150), color='#E3F2FD')"
.\notwendig oder nicht\wichtig\portings\patches\create_png_test_images.py.insert.py,19,img,"('Call', ('Attr', 'Image', 'new'), (('Const', ""'RGB'""), ('Tuple', (('Const', '200'), ('Const', '150')))), (('color', ('Const', ""'#E3F2FD'"")),))","('Call', 2, 1)",Image,"img = Image.new('RGB', (200, 150), color='#E3F2FD')"
.\notwendig oder nicht\wichtig\portings\patches\test_brand_logos.py.insert.py,17,img,"('Call', ('Attr', 'Image', 'new'), (('Const', ""'RGB'""), ('Tuple', (('Name', 'width'), ('Name', 'height')))), (('color', ('Const', ""'white'"")),))","('Call', 2, 1)","Image,height,width","img = Image.new('RGB', (width, height), color='white')"
.\tests\test_brand_logos.py,14,img,"('Call', ('Attr', 'Image', 'new'), (('Const', ""'RGB'""), ('Tuple', (('Name', 'width'), ('Name', 'height')))), (('color', ('Const', ""'white'"")),))","('Call', 2, 1)","Image,height,width","img = Image.new('RGB', (width, height), color='white')"
.\tools\portings\patches\create_png_test_images.py.insert.py,19,img,"('Call', ('Attr', 'Image', 'new'), (('Const', ""'RGB'""), ('Tuple', (('Const', '200'), ('Const', '150')))), (('color', ('Const', ""'#E3F2FD'"")),))","('Call', 2, 1)",Image,"img = Image.new('RGB', (200, 150), color='#E3F2FD')"
.\tools\portings\patches\test_brand_logos.py.insert.py,17,img,"('Call', ('Attr', 'Image', 'new'), (('Const', ""'RGB'""), ('Tuple', (('Name', 'width'), ('Name', 'height')))), (('color', ('Const', ""'white'"")),))","('Call', 2, 1)","Image,height,width","img = Image.new('RGB', (width, height), color='white')"
.\central_pdf_system.py,1719,img_b64,"('Call', ('Attr', 'base64.b64encode(img.read())', 'decode'), (), ())","('Call', 0, 0)","base64,img",img_b64 = base64.b64encode(img.read()).decode()
.\pdf_template_engine\placeholders.py,1530,img_b64,"('Call', ('Attr', ""as_str(module_details.get('image_base64') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,module_details","img_b64 = as_str(module_details.get(""image_base64"") or """").strip()"
.\pdf_template_engine\placeholders.py,1767,img_b64,"('Call', ('Attr', ""as_str(inverter_details.get('image_base64') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,inverter_details","img_b64 = as_str(inverter_details.get(""image_base64"") or """").strip()"
.\pdf_template_engine\placeholders.py,1890,img_b64,"('Call', ('Attr', ""as_str(storage_details.get('image_base64') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,storage_details","img_b64 = as_str(storage_details.get(""image_base64"") or """").strip()"
.\pdf_generator.py,631,img_bytes,"('Call', ('Attr', 'base64', 'b64decode'), (('Name', 'logo_b64'),), ())","('Call', 1, 0)","base64,logo_b64",img_bytes = base64.b64decode(logo_b64)
.\pdf_template_engine\dynamic_overlay.py,194,img_bytes,"('Call', ('Attr', 'base64', 'b64decode'), (('Name', 'b64'),), ())","('Call', 1, 0)","b64,base64",img_bytes = base64.b64decode(b64)
.\pdf_preview.py,250,img_resized,"('Call', ('Attr', 'img', 'resize'), (('Tuple', (('Name', 'width'), ('Name', 'height'))),), ())","('Call', 1, 0)","height,img,width","img_resized = img.resize((width, height))"
.\pdf_preview.py,306,img_resized,"('Call', ('Attr', 'current_img', 'resize'), (('Tuple', (('Name', 'width'), ('Name', 'height'))),), ())","('Call', 1, 0)","current_img,height,width","img_resized = current_img.resize((width, height))"
.\analysis.py,599,inc_pct,"('Call', ('Name', 'float'), (('Name', 'electricity_price_increase'),), ())","('Call', 1, 0)","electricity_price_increase,float",inc_pct = float(electricity_price_increase)
.\analysis.py,6964,inc_pct,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'current_results', 'get'), (('Const', ""'electricity_price_increase_rate_effective_percent'""), ('Name', 'current_price_increase_for_ui')), ()), ('Name', 'current_price_increase_for_ui'))),), ())","('Call', 1, 0)","current_price_increase_for_ui,current_results,float",inc_pct = float(
.\pdf_template_engine\placeholders.py,1715,inv_id,"('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_inverter_id'""),), ())","('Call', 1, 0)",project_details,"inv_id = project_details.get(""selected_inverter_id"")"
.\pdf_template_engine\placeholders.py,1718,inv_id,"('Call', ('Name', '_get_pid_inv'), (('Name', 'inverter_name'),), ())","('Call', 1, 0)","_get_pid_inv,inverter_name",inv_id = _get_pid_inv(inverter_name)
.\solar_calculator.py,175,inv_qty,"('Call', ('Name', 'max'), (('Const', '1'), ('Call', ('Name', 'int'), (('BoolOp', 'Or', (('Call', ('Attr', 'details', 'get'), (('Const', ""'selected_inverter_quantity'""), ('Const', '1')), ()), ('Const', '1'))),), ())), ())","('Call', 2, 0)","details,int,max","inv_qty = max(1, int(details.get('selected_inverter_quantity', 1) or 1))"
.\pdf_template_engine\placeholders.py,681,inv_qty,"('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_inverter_quantity'""), ('Const', '1')), ())","('Call', 2, 0)",project_details,"inv_qty = project_details.get(""selected_inverter_quantity"", 1)"
.\calculations.py,2902,inverter_details,"('Other', 'IfExp')","('Other', 'IfExp')","real_get_product_by_id,selected_inverter_id",inverter_details = (
.\pdf_template_engine\placeholders.py,1569,inverter_details,"('Other', 'IfExp')","('Other', 'IfExp')","fetch_details,inverter_name",inverter_details = fetch_details(inverter_name) if inverter_name else {}
.\analysis.py,4193,invest_opts,"('List', (('Name', 'curr_invest'), ('Mult', (('Const', '0.8'), ('Name', 'curr_invest'))), ('Mult', (('Const', '1.3'), ('Name', 'curr_invest')))))","('List', 3)",curr_invest,"invest_opts = [curr_invest, curr_invest * 0.8, curr_invest * 1.3]"
.\analysis.py,4274,invest_opts,"('List', (('Name', 'base_invest'), ('Mult', (('Const', '0.9'), ('Name', 'base_invest'))), ('Mult', (('Const', '1.1'), ('Name', 'base_invest')))))","('List', 3)",base_invest,"invest_opts = [base_invest, base_invest * 0.9, base_invest * 1.1]"
.\analysis.py,6515,investment,"('Call', ('Attr', 'rec', 'get'), (('Const', ""'investment'""), ('Const', '0')), ())","('Call', 2, 0)",rec,"investment = rec.get(""investment"", 0)"
.\calculations.py,1316,investment,"('Call', ('Attr', 'lcoe_params', 'get'), (('Const', ""'investment'""), ('Const', '20000')), ())","('Call', 2, 0)",lcoe_params,"investment = lcoe_params.get(""investment"", 20000)"
.\calculations.py,1373,investment,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'total_investment_netto'""), ('Const', '20000')), ())","('Call', 2, 0)",calc_results,"investment = calc_results.get(""total_investment_netto"", 20000)"
.\calculations.py,1387,investment,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'total_investment_netto'""), ('Const', '20000')), ())","('Call', 2, 0)",calc_results,"investment = calc_results.get(""total_investment_netto"", 20000)"
.\calculations.py,1767,investment,"('Call', ('Attr', 'np.random', 'normal'), (('Name', 'base_investment'), ('Mult', (('Const', '0.1'), ('Name', 'base_investment')))), ())","('Call', 2, 0)","base_investment,np","investment = np.random.normal(base_investment, base_investment * 0.1)"
.\calculations_extended.py,402,investment,"('Call', ('Attr', 'offer_data', 'get'), (('Const', ""'total_investment'""), ('Const', '0')), ())","('Call', 2, 0)",offer_data,"investment = offer_data.get(""total_investment"", 0)"
.\pdf_styles.py,445,investment,"('Call', ('Attr', 'data', 'get'), (('Const', ""'investment'""), ('Const', '0')), ())","('Call', 2, 0)",data,"investment = data.get('investment', 0)"
.\pdf_atomizer.py,354,key,"('Call', ('Name', '_norm_key'), (('Name', 'k'),), ())","('Call', 1, 0)","_norm_key,k",key = _norm_key(k)
.\dev_tools\kakerlake_ultra_cleaner.py,355,key,"('Call', ('Attr', 'call.args[0].value.value', 'strip'), (('Const', '\'\\\'""\''),), ())","('Call', 1, 0)",call,"key=call.args[0].value.value.strip('\'""')"
.\dev_tools\kakerlake_ultra_cleaner.py,366,key,"('Call', ('Attr', 'sub.slice.value.value', 'strip'), (('Const', '\'\\\'""\''),), ())","('Call', 1, 0)",sub,"key=sub.slice.value.value.strip('\'""')"
.\mnt\data\kakerlake_ultra_cleaner.py,355,key,"('Call', ('Attr', 'call.args[0].value.value', 'strip'), (('Const', '\'\\\'""\''),), ())","('Call', 1, 0)",call,"key=call.args[0].value.value.strip('\'""')"
.\mnt\data\kakerlake_ultra_cleaner.py,366,key,"('Call', ('Attr', 'sub.slice.value.value', 'strip'), (('Const', '\'\\\'""\''),), ())","('Call', 1, 0)",sub,"key=sub.slice.value.value.strip('\'""')"
.\pdf_template_engine\dynamic_overlay.py,410,key,"('Call', ('Attr', 'PLACEHOLDER_MAPPING', 'get'), (('Name', 'text'),), ())","('Call', 1, 0)","PLACEHOLDER_MAPPING,text",key = PLACEHOLDER_MAPPING.get(text)
.\tools\kakerlake_ultra_cleaner.py,356,key,"('Call', ('Attr', 'call.args[0].value.value', 'strip'), (('Const', '\'\\\'""\''),), ())","('Call', 1, 0)",call,"key=call.args[0].value.value.strip('\'""')"
.\tools\kakerlake_ultra_cleaner.py,367,key,"('Call', ('Attr', 'sub.slice.value.value', 'strip'), (('Const', '\'\\\'""\''),), ())","('Call', 1, 0)",sub,"key=sub.slice.value.value.strip('\'""')"
.\dev_tools\kakerlake_ultra_cleaner.py,374,l,"('Attr', 'orig.value', 'left')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\dev_tools\kakerlake_ultra_cleaner.py,392,l,"('Attr', 'orig.value', 'left')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\dev_tools\kakerlake_ultra_cleaner.py,408,l,"('Attr', 'node', 'left')","('Attr',)",node,l=node.left; r=node.right
.\dev_tools\kakerlake_ultra_cleaner.py,421,l,"('Attr', 'val', 'left')","('Attr',)",val,l=val.left; r=val.right
.\mnt\data\kakerlake_ultra_cleaner.py,374,l,"('Attr', 'orig.value', 'left')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\mnt\data\kakerlake_ultra_cleaner.py,392,l,"('Attr', 'orig.value', 'left')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\mnt\data\kakerlake_ultra_cleaner.py,408,l,"('Attr', 'node', 'left')","('Attr',)",node,l=node.left; r=node.right
.\mnt\data\kakerlake_ultra_cleaner.py,421,l,"('Attr', 'val', 'left')","('Attr',)",val,l=val.left; r=val.right
.\tools\kakerlake_ultra_cleaner.py,375,l,"('Attr', 'orig.value', 'left')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\tools\kakerlake_ultra_cleaner.py,393,l,"('Attr', 'orig.value', 'left')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\tools\kakerlake_ultra_cleaner.py,409,l,"('Attr', 'node', 'left')","('Attr',)",node,l=node.left; r=node.right
.\tools\kakerlake_ultra_cleaner.py,422,l,"('Attr', 'val', 'left')","('Attr',)",val,l=val.left; r=val.right
.\multi_offer_generator.py,271,label,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","cid,cinfo","label = f""{cinfo.get('name', f'Firma {cid}')}"""
.\multi_offer_generator.py,273,label,"('Other', 'JoinedStr')","('Other', 'JoinedStr')",cid,"label = f""Firma {cid}"""
.\pdf_widgets.py,133,label,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","section,section_key","label = f""{section.get('name', section_key)} [{section_key}]"""
.\analysis.py,4192,labels,"('List', (('Name', 'curr_proj_name'), ('Const', ""'Alternativ A (Günstiger)'""), ('Const', ""'Alternativ B (Premium)'"")))","('List', 3)",curr_proj_name,"labels = [curr_proj_name, ""Alternativ A (Günstiger)"", ""Alternativ B (Premium)""]"
.\analysis.py,4269,labels,"('List', (('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'scenario_base_switcher'""), ('Const', ""'Basis'"")), ()), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'scenario_optimistic_switcher'""), ('Const', ""'Optimistisch'"")), ()), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'scenario_pessimistic_switcher'""), ('Const', ""'Pessimistisch'"")), ())))","('List', 3)","get_text,texts",labels = [
.\analysis.py,5171,labels,"('List', (('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'direct_consumption_pie_label'""), ('Const', ""'Direktverbrauch'"")), ()), ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'storage_usage_pie_label'""), ('Const', ""'Speichernutzung'"")), ()), ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'feed_in_pie_label'""), ('Const', ""'Einspeisung'"")), ())))","('List', 3)","get_text,texts_local",labels = [
.\notwendig oder nicht\wichtig\repo_porter.py,312,last,"('Attr', 'cls', 'lineno')","('Attr',)",cls,last = cls.lineno
.\notwendig oder nicht\wichtig\repo_porter.py,304,last,"('Attr', 'di', 'end_lineno')","('Attr',)",di,last = di.end_lineno
.\notwendig oder nicht\wichtig\repo_porter.py,315,last,"('Attr', 'di', 'end_lineno')","('Attr',)",di,last = di.end_lineno
.\tools\repo_porter.py,312,last,"('Attr', 'cls', 'lineno')","('Attr',)",cls,last = cls.lineno
.\tools\repo_porter.py,304,last,"('Attr', 'di', 'end_lineno')","('Attr',)",di,last = di.end_lineno
.\tools\repo_porter.py,315,last,"('Attr', 'di', 'end_lineno')","('Attr',)",di,last = di.end_lineno
.\pdf_generator.py,689,last,"('Call', ('Attr', ""str(cust.get('last_name') or '')"", 'strip'), (), ())","('Call', 0, 0)","cust,str",last = str(cust.get('last_name') or '').strip()
.\pdf_template_engine\placeholders.py,440,last,"('Call', ('Attr', ""as_str(customer.get('last_name') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,customer","last = as_str(customer.get(""last_name"") or """").strip()"
.\pdf_template_engine\placeholders.py,475,last,"('Call', ('Attr', ""as_str(customer.get('last_name') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,customer","last = as_str(customer.get(""last_name"") or """").strip()"
.\multi_offer_generator.py,663,last_name,"('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'last_name'""), ('Const', ""''"")), ())","('Call', 2, 0)",customer_data,"last_name = customer_data.get('last_name', '')"
.\pdf_generator.py,1397,last_name,"('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'last_name'""), ('Const', ""''"")), ())","('Call', 2, 0)",customer_data,"last_name = customer_data.get(""last_name"", """")"
.\pdf_ui.py,1220,last_name,"('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'last_name'""), ('Const', ""''"")), ())","('Call', 2, 0)",project_data,"last_name = project_data.get('customer_data', {}).get('last_name', '')"
.\analysis.py,8079,leasing_result,"('Call', ('Name', 'calculate_leasing_costs'), (('Name', 'financing_amount'), ('Name', 'leasing_factor'), ('Name', 'leasing_term')), ())","('Call', 3, 0)","calculate_leasing_costs,financing_amount,leasing_factor,leasing_term",leasing_result = calculate_leasing_costs(
.\analysis.py,6709,leasing_result,"('Call', ('Name', 'calculate_leasing_costs'), (('Name', 'financing_amount'), ('Subscript', ('Name', 'financing_summary'), ('Const', ""'leasing_factor'"")), ('Subscript', ('Name', 'financing_summary'), ('Const', ""'leasing_term'""))), ())","('Call', 3, 0)","calculate_leasing_costs,financing_amount,financing_summary",leasing_result = calculate_leasing_costs(
.\financial_tools.py,160,leasing_result,"('Call', ('Name', 'calculate_leasing_costs'), (('Name', 'investment'), ('Name', 'leasing_factor'), ('Mult', (('Const', '12'), ('Name', 'duration_years')))), ())","('Call', 3, 0)","calculate_leasing_costs,duration_years,investment,leasing_factor","leasing_result = calculate_leasing_costs(investment, leasing_factor, duration_years * 12)"
.\dev_tools\kakerlake_ultra_cleaner.py,124,lines,"('Call', ('Attr', 'src', 'splitlines'), (), ())","('Call', 0, 0)",src,"src=read_text(p); tree=ast.parse(src, filename=p); lines=src.splitlines()"
.\mnt\data\kakerlake_ultra_cleaner.py,124,lines,"('Call', ('Attr', 'src', 'splitlines'), (), ())","('Call', 0, 0)",src,"src=read_text(p); tree=ast.parse(src, filename=p); lines=src.splitlines()"
.\notwendig oder nicht\wichtig\repo_porter_select.py,63,lines,"('Call', ('Attr', 'patch_text', 'splitlines'), (), ())","('Call', 0, 0)",patch_text,lines = patch_text.splitlines()
.\notwendig oder nicht\wichtig\repo_porter_select.py,96,lines,"('Call', ('Attr', 'patch_text', 'splitlines'), (), ())","('Call', 0, 0)",patch_text,lines = patch_text.splitlines()
.\tools\kakerlake_ultra_cleaner.py,125,lines,"('Call', ('Attr', 'src', 'splitlines'), (), ())","('Call', 0, 0)",src,"src=read_text(p); tree=ast.parse(src, filename=p); lines=src.splitlines()"
.\tools\repo_porter_select.py,63,lines,"('Call', ('Attr', 'patch_text', 'splitlines'), (), ())","('Call', 0, 0)",patch_text,lines = patch_text.splitlines()
.\tools\repo_porter_select.py,96,lines,"('Call', ('Attr', 'patch_text', 'splitlines'), (), ())","('Call', 0, 0)",patch_text,lines = patch_text.splitlines()
.\debug_logo_rendering.py,56,lines,"('Call', ('Attr', 'coords_content', 'split'), (('Const', ""'\\n'""),), ())","('Call', 1, 0)",coords_content,lines = coords_content.split('\n')
.\notwendig oder nicht\wichtig\repo_porter.py,158,lines,"('Call', ('Name', 'read_lines'), (('Name', 'f'),), ())","('Call', 1, 0)","f,read_lines",lines = read_lines(f)
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_rendering.py.insert.py,55,lines,"('Call', ('Attr', 'coords_content', 'split'), (('Const', ""'\\n'""),), ())","('Call', 1, 0)",coords_content,lines = coords_content.split('\n')
.\tools\repo_porter.py,158,lines,"('Call', ('Name', 'read_lines'), (('Name', 'f'),), ())","('Call', 1, 0)","f,read_lines",lines = read_lines(f)
.\tools\portings\patches\debug_logo_rendering.py.insert.py,55,lines,"('Call', ('Attr', 'coords_content', 'split'), (('Const', ""'\\n'""),), ())","('Call', 1, 0)",coords_content,lines = coords_content.split('\n')
.\data_input.py,43,list_products_safe,"('Name', 'Dummy_list_products_input')","('Name',)",Dummy_list_products_input,list_products_safe = Dummy_list_products_input
.\data_input.py,52,list_products_safe,"('Name', 'real_list_products')","('Name',)",real_list_products,list_products_safe = real_list_products
.\solar_calculator.py,24,list_products_safe,"('Name', '_dummy_list_products')","('Name',)",_dummy_list_products,list_products_safe = _dummy_list_products  # type: ignore
.\data_input.py,42,load_admin_setting_safe,"('Name', 'Dummy_load_admin_setting_input')","('Name',)",Dummy_load_admin_setting_input,load_admin_setting_safe = Dummy_load_admin_setting_input
.\data_input.py,51,load_admin_setting_safe,"('Name', 'real_load_admin_setting')","('Name',)",real_load_admin_setting,load_admin_setting_safe = real_load_admin_setting
.\analysis.py,7908,loan_result,"('Call', ('Name', 'calculate_annuity'), (('Name', 'financing_amount'), ('Name', 'interest_rate'), ('Name', 'loan_term')), ())","('Call', 3, 0)","calculate_annuity,financing_amount,interest_rate,loan_term","loan_result = calculate_annuity(financing_amount, interest_rate, loan_term)"
.\analysis.py,6689,loan_result,"('Call', ('Name', 'calculate_annuity'), (('Name', 'financing_amount'), ('Subscript', ('Name', 'financing_summary'), ('Const', ""'interest_rate'"")), ('Subscript', ('Name', 'financing_summary'), ('Const', ""'loan_term'""))), ())","('Call', 3, 0)","calculate_annuity,financing_amount,financing_summary",loan_result = calculate_annuity(
.\admin_logo_management_ui.py,250,logo_data,"('Call', ('Name', 'get_brand_logo'), (('Subscript', ('Name', 'selected_logo'), ('Const', ""'brand_name'"")),), ())","('Call', 1, 0)","get_brand_logo,selected_logo",logo_data = get_brand_logo(selected_logo['brand_name'])
.\database.py,431,logo_data,"('Call', ('Name', 'brand_db_get_logo'), (('Name', 'normalized_brand'),), ())","('Call', 1, 0)","brand_db_get_logo,normalized_brand",logo_data = brand_db_get_logo(normalized_brand)
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,243,logo_data,"('Call', ('Name', 'get_brand_logo'), (('Subscript', ('Name', 'selected_logo'), ('Const', ""'brand_name'"")),), ())","('Call', 1, 0)","get_brand_logo,selected_logo",logo_data = get_brand_logo(selected_logo['brand_name'])
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,294,logo_data,"('Call', ('Name', 'get_brand_logo'), (('Subscript', ('Name', 'selected_logo'), ('Const', ""'brand_name'"")),), ())","('Call', 1, 0)","get_brand_logo,selected_logo",logo_data = get_brand_logo(selected_logo['brand_name'])
.\notwendig oder nicht\wichtig\portings\patches\test_brand_logos.py.insert.py,99,logo_data,"('Call', ('Name', 'get_brand_logo'), (('Name', 'brand'),), ())","('Call', 1, 0)","brand,get_brand_logo",logo_data = get_brand_logo(brand)
.\tests\test_brand_logos.py,88,logo_data,"('Call', ('Name', 'get_brand_logo'), (('Name', 'brand'),), ())","('Call', 1, 0)","brand,get_brand_logo",logo_data = get_brand_logo(brand)
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,243,logo_data,"('Call', ('Name', 'get_brand_logo'), (('Subscript', ('Name', 'selected_logo'), ('Const', ""'brand_name'"")),), ())","('Call', 1, 0)","get_brand_logo,selected_logo",logo_data = get_brand_logo(selected_logo['brand_name'])
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,294,logo_data,"('Call', ('Name', 'get_brand_logo'), (('Subscript', ('Name', 'selected_logo'), ('Const', ""'brand_name'"")),), ())","('Call', 1, 0)","get_brand_logo,selected_logo",logo_data = get_brand_logo(selected_logo['brand_name'])
.\tools\portings\patches\test_brand_logos.py.insert.py,99,logo_data,"('Call', ('Name', 'get_brand_logo'), (('Name', 'brand'),), ())","('Call', 1, 0)","brand,get_brand_logo",logo_data = get_brand_logo(brand)
.\simple_logo_test.py,88,logo_data,"('Subscript', ('Name', 'logos'), ('Name', 'brand'))","('Subscript',)","brand,logos",logo_data = logos[brand]
.\notwendig oder nicht\wichtig\portings\patches\simple_logo_test.py.insert.py,97,logo_data,"('Subscript', ('Name', 'logos'), ('Name', 'brand'))","('Subscript',)","brand,logos",logo_data = logos[brand]
.\pdf_template_engine\placeholders.py,2464,logo_data,"('Subscript', ('Name', 'logos_data'), ('Name', 'brand_name'))","('Subscript',)","brand_name,logos_data",logo_data = logos_data[brand_name]
.\tools\portings\patches\simple_logo_test.py.insert.py,97,logo_data,"('Subscript', ('Name', 'logos'), ('Name', 'brand'))","('Subscript',)","brand,logos",logo_data = logos[brand]
.\debug_logo_rendering.py,98,logo_key,"('Call', ('Attr', 'logo_key_map', 'get'), (('Name', 'logo_name'),), ())","('Call', 1, 0)","logo_key_map,logo_name",logo_key = logo_key_map.get(logo_name)
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_rendering.py.insert.py,97,logo_key,"('Call', ('Attr', 'logo_key_map', 'get'), (('Name', 'logo_name'),), ())","('Call', 1, 0)","logo_key_map,logo_name",logo_key = logo_key_map.get(logo_name)
.\pdf_template_engine\placeholders.py,2465,logo_key,"('Call', ('Attr', 'logo_mapping', 'get'), (('Name', 'category'),), ())","('Call', 1, 0)","category,logo_mapping",logo_key = logo_mapping.get(category)
.\tools\portings\patches\debug_logo_rendering.py.insert.py,97,logo_key,"('Call', ('Attr', 'logo_key_map', 'get'), (('Name', 'logo_name'),), ())","('Call', 1, 0)","logo_key_map,logo_name",logo_key = logo_key_map.get(logo_name)
.\tools\import_module_attributes_generic.py,232,low,"('Call', ('Attr', 'str(k).strip()', 'lower'), (), ())","('Call', 0, 0)","k,str",low = str(k).strip().lower()
.\tools\import_module_attributes_generic.py,237,low,"('Call', ('Attr', ""_re.sub('[:：]+$', '', low)"", 'strip'), (), ())","('Call', 0, 0)","_re,low","low = _re.sub(r""[:：]+$"", """", low).strip()"
.\calculations.py,2980,matrix_column_used_for_price,"('Name', 'original_price_col_key_for_df_access')","('Name',)",original_price_col_key_for_df_access,matrix_column_used_for_price = original_price_col_key_for_df_access  # Speichere den verwendeten Spaltennamen
.\calculations.py,2997,matrix_column_used_for_price,"('Name', 'original_no_storage_column_name')","('Name',)",original_no_storage_column_name,"matrix_column_used_for_price = original_no_storage_column_name  # Speichere ""Ohne Speicher"" als verwendeten Spaltennamen"
.\solar_calculator.py,115,md,"('Call', ('Name', 'get_product_by_model_name_safe'), (('Subscript', ('Name', 'details'), ('Const', ""'selected_module_name'"")),), ())","('Call', 1, 0)","details,get_product_by_model_name_safe",md = get_product_by_model_name_safe(details['selected_module_name'])
.\pdf_template_engine\placeholders.py,1223,md,"('Call', ('Name', '_get_prod_by_id'), (('Call', ('Name', 'int'), (('Name', 'module_id'),), ()),), ())","('Call', 1, 0)","_get_prod_by_id,int,module_id",md = _get_prod_by_id(int(module_id))
.\pdf_atomizer.py,368,meta,"('BoolOp', 'Or', (('Call', ('Attr', 'self.atoms', 'get'), (('Const', ""'meta'""),), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",self,"meta = self.atoms.get(""meta"") or {}"
.\pdf_ui.py,1172,meta,"('BoolOp', 'Or', (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'generated_pdf_meta'""),), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",st,meta = st.session_state.get('generated_pdf_meta') or {}
.\notwendig oder nicht\wichtig\repo_porter.py,373,mi,"('Subscript', ('Name', 'idx_src'), ('Name', 'm'))","('Subscript',)","idx_src,m",mi = idx_src[m]
.\notwendig oder nicht\wichtig\repo_porter.py,385,mi,"('Subscript', ('Name', 'idx_dst'), ('Name', 'm'))","('Subscript',)","idx_dst,m",mi = idx_dst[m]
.\tools\repo_porter.py,373,mi,"('Subscript', ('Name', 'idx_src'), ('Name', 'm'))","('Subscript',)","idx_src,m",mi = idx_src[m]
.\tools\repo_porter.py,385,mi,"('Subscript', ('Name', 'idx_dst'), ('Name', 'm'))","('Subscript',)","idx_dst,m",mi = idx_dst[m]
.\pdf_generator.py,1827,mod_qty,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'pd', 'get'), (('Const', ""'module_quantity'""),), ()), ('Const', '0'))),), ())","('Call', 1, 0)","float,pd",mod_qty = float(pd.get('module_quantity') or 0)
.\pdf_template_engine\placeholders.py,1290,mod_qty,"('Call', ('Name', 'int'), (('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'module_quantity'""),), ()), ('Const', '0'))),), ()),), ())","('Call', 1, 0)","float,int,project_details","mod_qty = int(float(project_details.get(""module_quantity"") or 0))"
.\pdf_template_engine\placeholders.py,564,mod_qty,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'module_quantity'""),), ()), ('Const', '0'))),), ())","('Call', 1, 0)","float,project_details","mod_qty = float(project_details.get(""module_quantity"") or 0)"
.\pdf_generator.py,1828,mod_wp,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'pd', 'get'), (('Const', ""'selected_module_capacity_w'""),), ()), ('Const', '0'))),), ())","('Call', 1, 0)","float,pd",mod_wp = float(pd.get('selected_module_capacity_w') or 0)
.\pdf_template_engine\placeholders.py,565,mod_wp,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_module_capacity_w'""),), ()), ('Const', '0'))),), ())","('Call', 1, 0)","float,project_details","mod_wp = float(project_details.get(""selected_module_capacity_w"") or 0)"
.\analysis.py,384,mode,"('Call', ('Attr', 'cheat', 'get'), (('Const', ""'mode'""), ('Const', ""'fixed'"")), ())","('Call', 2, 0)",cheat,"mode = cheat.get(""mode"", ""fixed"")"
.\calculations.py,3313,mode,"('Call', ('Attr', 'cheat_settings', 'get'), (('Const', ""'mode'""), ('Const', ""'fixed'"")), ())","('Call', 2, 0)",cheat_settings,"mode = cheat_settings.get(""mode"", ""fixed"")"
.\pdf_generator.py,1590,model,"('Call', ('Attr', ""product_details.get('model_name', '')"", 'strip'), (), ())","('Call', 0, 0)",product_details,"model = product_details.get('model_name', '').strip()"
.\product_attributes.py,242,model,"('Call', ('Attr', ""row.get(model_col) or ''"", 'strip'), (), ())","('Call', 0, 0)","model_col,row",model = (row.get(model_col) or '').strip()
.\pdf_template_engine\placeholders.py,578,mods_qty,"('Call', ('Attr', 'project_details', 'get'), (('Const', ""'module_quantity'""),), ())","('Call', 1, 0)",project_details,"mods_qty = project_details.get(""module_quantity"")"
.\pdf_template_engine\placeholders.py,580,mods_qty,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'module_quantity'""),), ())","('Call', 1, 0)",analysis_results,"mods_qty = analysis_results.get(""module_quantity"")"
.\pdf_template_engine\placeholders.py,1230,module_details,"('BoolOp', 'Or', (('Call', ('Name', 'fetch_details'), (('Name', 'module_name'),), ()), ('Dict', ())))","('BoolOp', 'Or', 2)","fetch_details,module_name",module_details = fetch_details(module_name) or {}
.\pdf_template_engine\placeholders.py,1235,module_details,"('BoolOp', 'Or', (('Call', ('Name', 'fetch_details'), (('Name', 'alt_model'),), ()), ('Dict', ())))","('BoolOp', 'Or', 2)","alt_model,fetch_details",module_details = fetch_details(alt_model) or {}
.\analysis.py,2203,month_labels,"('Call', ('Attr', ""get_text(texts, 'month_names_short_list', 'Jan,Feb,Mrz,Apr,Mai,Jun,Jul,Aug,Sep,Okt,Nov,Dez')"", 'split'), (('Const', ""','""),), ())","('Call', 1, 0)","get_text,texts",month_labels = get_text(
.\analysis.py,2380,month_labels,"('Call', ('Attr', ""get_text(texts, 'month_names_short_list', 'Jan,Feb,Mrz,Apr,Mai,Jun,Jul,Aug,Sep,Okt,Nov,Dez')"", 'split'), (('Const', ""','""),), ())","('Call', 1, 0)","get_text,texts",month_labels = get_text(
.\analysis.py,2497,month_labels,"('Call', ('Attr', ""get_text(texts, 'month_names_short_list', 'Jan,Feb,Mrz,Apr,Mai,Jun,Jul,Aug,Sep,Okt,Nov,Dez')"", 'split'), (('Const', ""','""),), ())","('Call', 1, 0)","get_text,texts",month_labels = get_text(
.\analysis.py,4073,month_labels,"('Call', ('Attr', ""get_text(texts, 'month_names_short_list', 'Jan,Feb,Mrz,Apr,Mai,Jun,Jul,Aug,Sep,Okt,Nov,Dez')"", 'split'), (('Const', ""','""),), ())","('Call', 1, 0)","get_text,texts",month_labels = get_text(
.\analysis.py,4334,month_labels,"('Call', ('Attr', ""get_text(texts, 'month_names_short_list', 'Jan,Feb,Mrz,Apr,Mai,Jun,Jul,Aug,Sep,Okt,Nov,Dez')"", 'split'), (('Const', ""','""),), ())","('Call', 1, 0)","get_text,texts",month_labels = get_text(
.\pv_visuals.py,77,month_labels,"('Call', ('Attr', 'month_labels_str', 'split'), (('Const', ""','""),), ())","('Call', 1, 0)",month_labels_str,"month_labels = month_labels_str.split(',')"
.\analysis.py,2435,monthly_feed_in_kwh,"('Other', 'ListComp')","('Other', 'ListComp')","factor,monthly_factors,yearly_feed_in",monthly_feed_in_kwh = [yearly_feed_in * factor for factor in monthly_factors]
.\analysis.py,2437,monthly_feed_in_kwh,"('Other', 'ListComp')","('Other', 'ListComp')","float,int,isinstance,math,monthly_feed_in_kwh_raw,v",monthly_feed_in_kwh = [
.\analysis.py,5854,months,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '1'), ('Const', '13')), ()),), ())","('Call', 1, 0)","list,range","months = list(range(1, 13))"
.\analysis.py,8139,months,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '1'), ('Add', (('Const', '1'), ('Name', 'leasing_term')))), ()),), ())","('Call', 1, 0)","leasing_term,list,range","months = list(range(1, leasing_term + 1))"
.\pdf_template_engine\placeholders.py,1650,name_l,"('Call', ('Attr', 'inverter_name', 'lower'), (), ())","('Call', 0, 0)",inverter_name,name_l = inverter_name.lower()
.\pdf_template_engine\placeholders.py,1976,name_l,"('Call', ('Attr', ""storage_name or ''"", 'lower'), (), ())","('Call', 0, 0)",storage_name,"name_l = (storage_name or """").lower()"
.\pdf_generator.py,1399,name_parts,"('Other', 'ListComp')","('Other', 'ListComp')","first_name,last_name,p,str,title","name_parts = [p for p in [title, first_name, last_name] if p and str(p).strip()]"
.\pdf_generator.py,692,name_parts,"('Other', 'ListComp')","('Other', 'ListComp')","first,last,p,sal,title","name_parts = [p for p in [sal, title, first, last] if p]"
.\pdf_template_engine\placeholders.py,480,name_parts,"('Other', 'ListComp')","('Other', 'ListComp')","first,last,p,salutation,title","name_parts = [p for p in [salutation, title, first, last] if p]"
.\dev_tools\kakerlake_ultra_cleaner.py,329,new,"('Call', ('Name', 'insert_def_if_missing_calculations'), (('Name', 'code'), ('Const', ""'compute_annual_savings'""), ('Name', 'COMPUTE_DEF_CODE')), ())","('Call', 3, 0)","COMPUTE_DEF_CODE,code,insert_def_if_missing_calculations","new=insert_def_if_missing_calculations(code, ""compute_annual_savings"", COMPUTE_DEF_CODE)"
.\dev_tools\kakerlake_ultra_cleaner.py,455,new,"('Call', ('Name', 'insert_def_if_missing_calculations'), (('Name', 'code'), ('Const', ""'build_project_data'""), ('Name', 'BUILD_PD_DEF_CODE')), ())","('Call', 3, 0)","BUILD_PD_DEF_CODE,code,insert_def_if_missing_calculations","new=insert_def_if_missing_calculations(code, ""build_project_data"", BUILD_PD_DEF_CODE)"
.\mnt\data\kakerlake_ultra_cleaner.py,329,new,"('Call', ('Name', 'insert_def_if_missing_calculations'), (('Name', 'code'), ('Const', ""'compute_annual_savings'""), ('Name', 'COMPUTE_DEF_CODE')), ())","('Call', 3, 0)","COMPUTE_DEF_CODE,code,insert_def_if_missing_calculations","new=insert_def_if_missing_calculations(code, ""compute_annual_savings"", COMPUTE_DEF_CODE)"
.\mnt\data\kakerlake_ultra_cleaner.py,455,new,"('Call', ('Name', 'insert_def_if_missing_calculations'), (('Name', 'code'), ('Const', ""'build_project_data'""), ('Name', 'BUILD_PD_DEF_CODE')), ())","('Call', 3, 0)","BUILD_PD_DEF_CODE,code,insert_def_if_missing_calculations","new=insert_def_if_missing_calculations(code, ""build_project_data"", BUILD_PD_DEF_CODE)"
.\tools\kakerlake_ultra_cleaner.py,330,new,"('Call', ('Name', 'insert_def_if_missing_calculations'), (('Name', 'code'), ('Const', ""'compute_annual_savings'""), ('Name', 'COMPUTE_DEF_CODE')), ())","('Call', 3, 0)","COMPUTE_DEF_CODE,code,insert_def_if_missing_calculations","new=insert_def_if_missing_calculations(code, ""compute_annual_savings"", COMPUTE_DEF_CODE)"
.\tools\kakerlake_ultra_cleaner.py,456,new,"('Call', ('Name', 'insert_def_if_missing_calculations'), (('Name', 'code'), ('Const', ""'build_project_data'""), ('Name', 'BUILD_PD_DEF_CODE')), ())","('Call', 3, 0)","BUILD_PD_DEF_CODE,code,insert_def_if_missing_calculations","new=insert_def_if_missing_calculations(code, ""build_project_data"", BUILD_PD_DEF_CODE)"
.\dev_tools\kakerlake_ultra_cleaner.py,417,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,val","new_call=cst.parse_expression(f""compute_annual_savings(electricity_costs_without_pv={val.left.code}, electricity_costs_with_pv={val.right.code}, default=0.0)"")"
.\dev_tools\kakerlake_ultra_cleaner.py,387,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cons,cst,feed","new_call=cst.parse_expression(f""compute_annual_savings(annual_feedin_revenue={feed.code}, annual_electricity_savings={cons.code}, default=0.0)"")"
.\dev_tools\kakerlake_ultra_cleaner.py,401,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,l,r","new_call=cst.parse_expression(f""compute_annual_savings(annual_old_cost={l.code}, annual_hp_cost={r.code}, default=0.0)"")"
.\dev_tools\kakerlake_ultra_cleaner.py,358,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","call,cst,default_expr","new_call=cst.parse_expression(f""compute_annual_savings(results={call.func.value.code}, default={default_expr})"")"
.\dev_tools\kakerlake_ultra_cleaner.py,424,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,l,r","new_call=cst.parse_expression(f""compute_annual_savings(electricity_costs_without_pv={l.left.code}, electricity_costs_with_pv={l.right.code}, annual_feed_in_revenue={r.code}, default=0.0)"")"
.\dev_tools\kakerlake_ultra_cleaner.py,429,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,l,r","new_call=cst.parse_expression(f""compute_annual_savings(electricity_costs_without_pv={r.left.code}, electricity_costs_with_pv={r.right.code}, annual_feed_in_revenue={l.code}, default=0.0)"")"
.\dev_tools\kakerlake_ultra_cleaner.py,368,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,sub","new_call=cst.parse_expression(f""compute_annual_savings(results={sub.value.code}, default=0.0)"")"
.\mnt\data\kakerlake_ultra_cleaner.py,417,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,val","new_call=cst.parse_expression(f""compute_annual_savings(electricity_costs_without_pv={val.left.code}, electricity_costs_with_pv={val.right.code}, default=0.0)"")"
.\mnt\data\kakerlake_ultra_cleaner.py,387,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cons,cst,feed","new_call=cst.parse_expression(f""compute_annual_savings(annual_feedin_revenue={feed.code}, annual_electricity_savings={cons.code}, default=0.0)"")"
.\mnt\data\kakerlake_ultra_cleaner.py,401,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,l,r","new_call=cst.parse_expression(f""compute_annual_savings(annual_old_cost={l.code}, annual_hp_cost={r.code}, default=0.0)"")"
.\mnt\data\kakerlake_ultra_cleaner.py,358,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","call,cst,default_expr","new_call=cst.parse_expression(f""compute_annual_savings(results={call.func.value.code}, default={default_expr})"")"
.\mnt\data\kakerlake_ultra_cleaner.py,424,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,l,r","new_call=cst.parse_expression(f""compute_annual_savings(electricity_costs_without_pv={l.left.code}, electricity_costs_with_pv={l.right.code}, annual_feed_in_revenue={r.code}, default=0.0)"")"
.\mnt\data\kakerlake_ultra_cleaner.py,429,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,l,r","new_call=cst.parse_expression(f""compute_annual_savings(electricity_costs_without_pv={r.left.code}, electricity_costs_with_pv={r.right.code}, annual_feed_in_revenue={l.code}, default=0.0)"")"
.\mnt\data\kakerlake_ultra_cleaner.py,368,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,sub","new_call=cst.parse_expression(f""compute_annual_savings(results={sub.value.code}, default=0.0)"")"
.\tools\kakerlake_ultra_cleaner.py,418,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,val","new_call=cst.parse_expression(f""compute_annual_savings(electricity_costs_without_pv={val.left.code}, electricity_costs_with_pv={val.right.code}, default=0.0)"")"
.\tools\kakerlake_ultra_cleaner.py,388,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cons,cst,feed","new_call=cst.parse_expression(f""compute_annual_savings(annual_feedin_revenue={feed.code}, annual_electricity_savings={cons.code}, default=0.0)"")"
.\tools\kakerlake_ultra_cleaner.py,402,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,l,r","new_call=cst.parse_expression(f""compute_annual_savings(annual_old_cost={l.code}, annual_hp_cost={r.code}, default=0.0)"")"
.\tools\kakerlake_ultra_cleaner.py,359,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","call,cst,default_expr","new_call=cst.parse_expression(f""compute_annual_savings(results={call.func.value.code}, default={default_expr})"")"
.\tools\kakerlake_ultra_cleaner.py,425,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,l,r","new_call=cst.parse_expression(f""compute_annual_savings(electricity_costs_without_pv={l.left.code}, electricity_costs_with_pv={l.right.code}, annual_feed_in_revenue={r.code}, default=0.0)"")"
.\tools\kakerlake_ultra_cleaner.py,430,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,l,r","new_call=cst.parse_expression(f""compute_annual_savings(electricity_costs_without_pv={r.left.code}, electricity_costs_with_pv={r.right.code}, annual_feed_in_revenue={l.code}, default=0.0)"")"
.\tools\kakerlake_ultra_cleaner.py,369,new_call,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,sub","new_call=cst.parse_expression(f""compute_annual_savings(results={sub.value.code}, default=0.0)"")"
.\admin_panel.py,1944,new_content,"('Call', ('Attr', 'st', 'text_area'), (('Const', ""'Inhalt'""),), (('height', ('Const', '100')), ('key', ('Other', 'JoinedStr')), ('value', ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'template'), ('Const', ""'content'"")))))))","('Call', 1, 3)","st,template",new_content = st.text_area(
.\doc_output.py,687,new_content,"('Call', ('Attr', 'st', 'text_area'), (('Const', ""'Inhalt:'""),), (('height', ('Const', '100')), ('key', ('Other', 'JoinedStr')), ('value', ('Subscript', ('Name', 'item'), ('Const', ""'content'"")))))","('Call', 1, 3)","item,st",new_content = st.text_area(
.\notwendig oder nicht\wichtig\portings\patches\test_admin_upload.py.insert.py,32,new_id,"('Call', ('Name', 'add_product'), (('Name', 'test_product'),), ())","('Call', 1, 0)","add_product,test_product",new_id = add_product(test_product)
.\tests\test_admin_upload.py,32,new_id,"('Call', ('Name', 'add_product'), (('Name', 'test_product'),), ())","('Call', 1, 0)","add_product,test_product",new_id = add_product(test_product)
.\tools\import_module_attributes_generic.py,221,new_id,"('Call', ('Name', 'add_product'), (('Dict', (('KV', ('Const', ""'brand'""), ('BoolOp', 'Or', (('Const', ""''""), ('Name', 'brand')))), ('KV', ('Const', ""'category'""), ('Name', 'category')), ('KV', ('Const', ""'model_name'""), ('Name', 'model_name')))),), ())","('Call', 1, 0)","add_product,brand,category,model_name","new_id = add_product({""category"": category, ""model_name"": model_name, ""brand"": brand or """"})"
.\tools\portings\patches\test_admin_upload.py.insert.py,32,new_id,"('Call', ('Name', 'add_product'), (('Name', 'test_product'),), ())","('Call', 1, 0)","add_product,test_product",new_id = add_product(test_product)
.\admin_panel.py,998,new_image_b64,"('Call', ('Attr', 'base64.b64encode(uploaded_product_image_manual_file_form.getvalue())', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)","base64,uploaded_product_image_manual_file_form",new_image_b64 = base64.b64encode(uploaded_product_image_manual_file_form.getvalue()).decode('utf-8')
.\notwendig oder nicht\wichtig\portings\patches\test_admin_upload.py.insert.py,53,new_image_b64,"('Call', ('Attr', 'base64.b64encode(larger_png_data)', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)","base64,larger_png_data",new_image_b64 = base64.b64encode(larger_png_data).decode('utf-8')
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,116,new_image_b64,"('Call', ('Attr', 'base64.b64encode(png_data)', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)","base64,png_data",new_image_b64 = base64.b64encode(png_data).decode('utf-8')
.\tests\test_admin_upload.py,53,new_image_b64,"('Call', ('Attr', 'base64.b64encode(larger_png_data)', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)","base64,larger_png_data",new_image_b64 = base64.b64encode(larger_png_data).decode('utf-8')
.\tests\test_admin_workflow.py,107,new_image_b64,"('Call', ('Attr', 'base64.b64encode(png_data)', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)","base64,png_data",new_image_b64 = base64.b64encode(png_data).decode('utf-8')
.\tools\portings\patches\test_admin_upload.py.insert.py,53,new_image_b64,"('Call', ('Attr', 'base64.b64encode(larger_png_data)', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)","base64,larger_png_data",new_image_b64 = base64.b64encode(larger_png_data).decode('utf-8')
.\tools\portings\patches\test_admin_workflow.py.insert.py,116,new_image_b64,"('Call', ('Attr', 'base64.b64encode(png_data)', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)","base64,png_data",new_image_b64 = base64.b64encode(png_data).decode('utf-8')
.\admin_panel.py,1056,new_product_id,"('Call', ('Name', 'add_product_func'), (('Name', 'product_data_for_add'),), ())","('Call', 1, 0)","add_product_func,product_data_for_add",new_product_id = add_product_func(product_data_for_add)
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,61,new_product_id,"('Call', ('Name', 'add_product'), (('Name', 'product_data_to_save_db'),), ())","('Call', 1, 0)","add_product,product_data_to_save_db",new_product_id = add_product(product_data_to_save_db)
.\tests\test_admin_workflow.py,61,new_product_id,"('Call', ('Name', 'add_product'), (('Name', 'product_data_to_save_db'),), ())","('Call', 1, 0)","add_product,product_data_to_save_db",new_product_id = add_product(product_data_to_save_db)
.\tools\portings\patches\test_admin_workflow.py.insert.py,61,new_product_id,"('Call', ('Name', 'add_product'), (('Name', 'product_data_to_save_db'),), ())","('Call', 1, 0)","add_product,product_data_to_save_db",new_product_id = add_product(product_data_to_save_db)
.\tools\import_module_attributes_generic.py,537,non_pdfs,"('Other', 'ListComp')","('Other', 'ListComp')","f,files",non_pdfs = [f for f in files if not f.lower().endswith('.pdf')]
.\tools\import_module_attributes_generic.py,549,non_pdfs,"('Other', 'ListComp')","('Other', 'ListComp')","f,non_pdfs",non_pdfs = [f for f in non_pdfs if not f.lower().endswith('.pdf')]
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,75,norm,"('Call', ('Name', '_normalize_tariff_to_eur_per_kwh'), (('Name', 'ar_val'),), ())","('Call', 1, 0)","_normalize_tariff_to_eur_per_kwh,ar_val",norm = _normalize_tariff_to_eur_per_kwh(ar_val)
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,97,norm,"('Call', ('Name', '_normalize_tariff_to_eur_per_kwh'), (('Name', 'ar_val'),), ())","('Call', 1, 0)","_normalize_tariff_to_eur_per_kwh,ar_val",norm = _normalize_tariff_to_eur_per_kwh(ar_val)
.\pdf_template_engine\placeholders.py,114,norm,"('Call', ('Name', '_normalize_tariff_to_eur_per_kwh'), (('Name', 'ar_val'),), ())","('Call', 1, 0)","_normalize_tariff_to_eur_per_kwh,ar_val",norm = _normalize_tariff_to_eur_per_kwh(ar_val)
.\tools\import_module_attributes_generic.py,283,norm,"('Call', ('Name', '_normalize_record'), (('Name', 'row'),), ())","('Call', 1, 0)","_normalize_record,row",norm = _normalize_record(row)
.\tools\import_module_attributes_generic.py,414,norm,"('Call', ('Name', '_normalize_record'), (('Name', 'rec'),), ())","('Call', 1, 0)","_normalize_record,rec",norm = _normalize_record(rec)
.\tools\import_module_attributes_generic.py,375,norm,"('Call', ('Name', '_normalize_record'), (('Name', 'rec'),), ())","('Call', 1, 0)","_normalize_record,rec",norm = _normalize_record(rec)
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,75,norm,"('Call', ('Name', '_normalize_tariff_to_eur_per_kwh'), (('Name', 'ar_val'),), ())","('Call', 1, 0)","_normalize_tariff_to_eur_per_kwh,ar_val",norm = _normalize_tariff_to_eur_per_kwh(ar_val)
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,97,norm,"('Call', ('Name', '_normalize_tariff_to_eur_per_kwh'), (('Name', 'ar_val'),), ())","('Call', 1, 0)","_normalize_tariff_to_eur_per_kwh,ar_val",norm = _normalize_tariff_to_eur_per_kwh(ar_val)
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,109,num,"('Call', ('Name', 'float'), (('Name', 'clean_val'),), ())","('Call', 1, 0)","clean_val,float",num = float(clean_val)
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,145,num,"('Call', ('Name', 'float'), (('Name', 'clean_val'),), ())","('Call', 1, 0)","clean_val,float",num = float(clean_val)
.\pdf_template_engine\placeholders.py,396,num,"('Call', ('Name', 'float'), (('Name', 'clean_val'),), ())","('Call', 1, 0)","clean_val,float",num = float(clean_val)
.\tools\import_module_attributes_generic.py,263,num,"('Call', ('Name', '_to_number'), (('Subscript', ('Name', 'out'), ('Const', ""'capacity_w'"")),), ())","('Call', 1, 0)","_to_number,out","num = _to_number(out[""capacity_w""])"
.\tools\import_module_attributes_generic.py,267,num,"('Call', ('Name', '_to_number'), (('Subscript', ('Name', 'out'), ('Const', ""'product_warranty_years'"")),), ())","('Call', 1, 0)","_to_number,out","num = _to_number(out[""product_warranty_years""])"
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,109,num,"('Call', ('Name', 'float'), (('Name', 'clean_val'),), ())","('Call', 1, 0)","clean_val,float",num = float(clean_val)
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,145,num,"('Call', ('Name', 'float'), (('Name', 'clean_val'),), ())","('Call', 1, 0)","clean_val,float",num = float(clean_val)
.\pdf_template_engine\dynamic_overlay.py,154,nums,"('Call', ('Attr', 're', 'findall'), (('Const', ""'[-+]?[0-9]*[\\\\.,]?[0-9]+'""), ('Name', 'line')), ())","('Call', 2, 0)","line,re","nums = re.findall(r""[-+]?[0-9]*[\.,]?[0-9]+"", line)"
.\tools\import_module_attributes_generic.py,249,nums,"('Call', ('Attr', 're', 'findall'), (('Const', ""'\\\\d{1,3}'""), ('Name', 'v')), ())","('Call', 2, 0)","re,v","nums = re.findall(r""\d{1,3}"", v)"
.\admin_module_alias_mapping_ui.py,62,ok,"('Call', ('Attr', 'st', 'form_submit_button'), (('Const', ""'Speichern'""),), ())","('Call', 1, 0)",st,"ok = st.form_submit_button(""Speichern"")"
.\admin_product_attributes_ui.py,21,ok,"('Call', ('Name', 'export_attributes_to_csv'), (('Name', 'path'),), ())","('Call', 1, 0)","export_attributes_to_csv,path",ok = export_attributes_to_csv(path)
.\notwendig oder nicht\wichtig\repo_porter.py,134,out,"('Call', ('Name', 'set'), (), ())","('Call', 0, 0)",set,out: Set[str] = set()
.\notwendig oder nicht\wichtig\repo_to_json.py,260,out,"('Call', ('Attr', 'Path(args.out)', 'resolve'), (), ())","('Call', 0, 0)","Path,args",out = Path(args.out).resolve()
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\merger.py.insert.py,19,out,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,out = io.BytesIO(); writer.write(out)
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\merger.py.insert.py,20,out,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,out = io.BytesIO(); writer.write(out)
.\pdf_template_engine\dynamic_overlay.py,969,out,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,out = io.BytesIO()
.\pdf_template_engine\dynamic_overlay.py,985,out,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,out = io.BytesIO()
.\pdf_template_engine\merger.py,17,out,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,out = io.BytesIO(); writer.write(out)
.\tools\repo_porter.py,134,out,"('Call', ('Name', 'set'), (), ())","('Call', 0, 0)",set,out: Set[str] = set()
.\tools\repo_to_json.py,260,out,"('Call', ('Attr', 'Path(args.out)', 'resolve'), (), ())","('Call', 0, 0)","Path,args",out = Path(args.out).resolve()
.\tools\out_selected\patches\pdf_template_engine\merger.py.insert.py,19,out,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,out = io.BytesIO(); writer.write(out)
.\tools\portings\patches\pdf_template_engine\merger.py.insert.py,20,out,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,out = io.BytesIO(); writer.write(out)
.\excel_eval.py,399,out,"('Call', ('Name', 'export_formulas_to_csv'), (('Attr', 'args', 'infile'), ('Attr', 'args', 'outfile')), (('engine', ('Attr', 'args', 'engine')), ('limit', ('Attr', 'args', 'limit'))))","('Call', 2, 2)","args,export_formulas_to_csv","out = export_formulas_to_csv(args.infile, args.outfile, limit=args.limit, engine=args.engine)"
.\excel_eval.py,401,out,"('Call', ('Name', 'export_formulas_to_xlsx'), (('Attr', 'args', 'infile'), ('Attr', 'args', 'outfile')), (('engine', ('Attr', 'args', 'engine')), ('limit', ('Attr', 'args', 'limit'))))","('Call', 2, 2)","args,export_formulas_to_xlsx","out = export_formulas_to_xlsx(args.infile, args.outfile, limit=args.limit, engine=args.engine)"
.\pdf_erstellen_komplett.py,141,out_path,"('Call', ('Name', 'Path'), (('BoolOp', 'Or', (('Div', ('Name', 'base_dir'), ('Const', ""'recreated_full.pdf'"")), ('Name', 'output_pdf'))),), ())","('Call', 1, 0)","Path,base_dir,output_pdf","out_path = Path(output_pdf or (base_dir / ""recreated_full.pdf""))"
.\tests\test_main6_render.py,73,out_path,"('Call', ('Name', 'Path'), (('Const', ""'test_main6.pdf'""),), ())","('Call', 1, 0)",Path,out_path = Path('test_main6.pdf')
.\tools\test_main6_render.py,73,out_path,"('Call', ('Name', 'Path'), (('Const', ""'test_main6.pdf'""),), ())","('Call', 1, 0)",Path,out_path = Path('test_main6.pdf')
.\pdf_generator.py,657,ov_page,"('Subscript', ('Attr', 'ov_reader', 'pages'), ('Const', '0'))","('Subscript',)",ov_reader,ov_page = ov_reader.pages[0]
.\pdf_template_engine\dynamic_overlay.py,891,ov_page,"('Subscript', ('Attr', 'overlay_reader', 'pages'), ('Sub', ('Name', 'page_num'), ('Const', '1')))","('Subscript',)","overlay_reader,page_num",ov_page = overlay_reader.pages[page_num - 1]
.\excel_eval.py,371,p,"('Call', ('Attr', 'argparse', 'ArgumentParser'), (('Const', ""'excel_eval'""),), ())","('Call', 1, 0)",argparse,"p = argparse.ArgumentParser(""excel_eval"")"
.\pdf_atomizer.py,230,p,"('Call', ('Attr', 'doc', 'load_page'), (('Name', 'i'),), ())","('Call', 1, 0)","doc,i",p = doc.load_page(i)
.\pdf_erstellen_komplett.py,108,p,"('Call', ('Name', 'Path'), (('Name', 'path'),), ())","('Call', 1, 0)","Path,path",p = Path(path)
.\dev_tools\kakerlake_ultra_cleaner.py,604,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'scan'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""scan""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports"")"
.\dev_tools\kakerlake_ultra_cleaner.py,605,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'autopatch-annual-savings'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""autopatch-annual-savings""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--write"", action=""store_true""); p.add_argument(""--no-backup"", action=""store_true"")"
.\dev_tools\kakerlake_ultra_cleaner.py,606,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'autopatch-project-data'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""autopatch-project-data""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--write"", action=""store_true""); p.add_argument(""--no-backup"", action=""store_true"")"
.\dev_tools\kakerlake_ultra_cleaner.py,607,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'structure'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""structure""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports"")"
.\dev_tools\kakerlake_ultra_cleaner.py,608,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'yaml-check'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""yaml-check""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--tol-mm"", type=float, default=0.2)"
.\dev_tools\kakerlake_ultra_cleaner.py,609,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'all'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""all""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--no-backup"", action=""store_true"")"
.\mnt\data\kakerlake_ultra_cleaner.py,604,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'scan'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""scan""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports"")"
.\mnt\data\kakerlake_ultra_cleaner.py,605,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'autopatch-annual-savings'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""autopatch-annual-savings""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--write"", action=""store_true""); p.add_argument(""--no-backup"", action=""store_true"")"
.\mnt\data\kakerlake_ultra_cleaner.py,606,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'autopatch-project-data'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""autopatch-project-data""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--write"", action=""store_true""); p.add_argument(""--no-backup"", action=""store_true"")"
.\mnt\data\kakerlake_ultra_cleaner.py,607,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'structure'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""structure""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports"")"
.\mnt\data\kakerlake_ultra_cleaner.py,608,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'yaml-check'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""yaml-check""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--tol-mm"", type=float, default=0.2)"
.\mnt\data\kakerlake_ultra_cleaner.py,609,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'all'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""all""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--no-backup"", action=""store_true"")"
.\notwendig oder nicht\wichtig\repo_porter_select.py,41,p,"('Call', ('Name', 'Path'), (('Attr', 'args', 'include_file'),), ())","('Call', 1, 0)","Path,args",p = Path(args.include_file)
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,46,p,"('Call', ('Name', 'Path'), (('Name', 's'),), ())","('Call', 1, 0)","Path,s",p = Path(s)
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,48,p,"('Call', ('Name', 'Path'), (('Name', 's'),), ())","('Call', 1, 0)","Path,s",p = Path(s)
.\pdf_template_engine\dynamic_overlay.py,78,p,"('Call', ('Name', 'Path'), (('Name', 's'),), ())","('Call', 1, 0)","Path,s",p = Path(s)
.\tools\count_pages.py,4,p,"('Call', ('Name', 'Path'), (('Const', ""'c:/123456/corba/out_main_full_test.pdf'""),), ())","('Call', 1, 0)",Path,p = Path('c:/123456/corba/out_main_full_test.pdf')
.\tools\import_module_attributes_generic.py,526,p,"('Call', ('Name', 'Path'), (('Name', 'path'),), ())","('Call', 1, 0)","Path,path",p = Path(path)
.\tools\kakerlake_ultra_cleaner.py,605,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'scan'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""scan""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports"")"
.\tools\kakerlake_ultra_cleaner.py,606,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'autopatch-annual-savings'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""autopatch-annual-savings""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--write"", action=""store_true""); p.add_argument(""--no-backup"", action=""store_true"")"
.\tools\kakerlake_ultra_cleaner.py,607,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'autopatch-project-data'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""autopatch-project-data""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--write"", action=""store_true""); p.add_argument(""--no-backup"", action=""store_true"")"
.\tools\kakerlake_ultra_cleaner.py,608,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'structure'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""structure""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports"")"
.\tools\kakerlake_ultra_cleaner.py,609,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'yaml-check'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""yaml-check""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--tol-mm"", type=float, default=0.2)"
.\tools\kakerlake_ultra_cleaner.py,610,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'all'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""all""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--no-backup"", action=""store_true"")"
.\tools\repo_porter_select.py,41,p,"('Call', ('Name', 'Path'), (('Attr', 'args', 'include_file'),), ())","('Call', 1, 0)","Path,args",p = Path(args.include_file)
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,46,p,"('Call', ('Name', 'Path'), (('Name', 's'),), ())","('Call', 1, 0)","Path,s",p = Path(s)
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,48,p,"('Call', ('Name', 'Path'), (('Name', 's'),), ())","('Call', 1, 0)","Path,s",p = Path(s)
.\pdf_preview.py,341,page,"('Subscript', ('Name', 'pdf_document'), ('Name', 'page_num'))","('Subscript',)","page_num,pdf_document",page = pdf_document[page_num]
.\pdf_preview.py,98,page,"('Subscript', ('Name', 'pdf_document'), ('Name', 'page_num'))","('Subscript',)","page_num,pdf_document",page = pdf_document[page_num]
.\utils\export_coords.py,15,page,"('Subscript', ('Attr', 'doc', 'pages'), ('Const', '0'))","('Subscript',)",doc,page = doc.pages[0]                   # jede deiner Vorlagen hat 1 Seite
.\pdf_generator.py,1343,page_num,"('Call', ('Attr', 'canvas_obj', 'getPageNumber'), (), ())","('Call', 0, 0)",canvas_obj,page_num = canvas_obj.getPageNumber()
.\pdf_generator.py,107,page_num,"('Call', ('Attr', 'canvas', 'getPageNumber'), (), ())","('Call', 0, 0)",canvas,page_num = canvas.getPageNumber()
.\analysis.py,243,parts,"('Call', ('Attr', 'formatted_num_str', 'split'), (('Const', ""'.'""),), ())","('Call', 1, 0)",formatted_num_str,"parts = formatted_num_str.split(""."")"
.\data_input.py,74,parts,"('Call', ('Attr', 'full_address', 'split'), (('Const', ""','""),), ())","('Call', 1, 0)",full_address,"parts = full_address.split(',')"
.\crm.py,498,path,"('Call', ('Name', '_get_customer_document_file_path'), (('Call', ('Attr', 'd', 'get'), (('Const', ""'id'""),), ()),), ())","('Call', 1, 0)","_get_customer_document_file_path,d","path = _get_customer_document_file_path(d.get(""id""))"
.\excel_eval.py,72,path,"('Call', ('Name', 'str'), (('Name', 'path'),), ())","('Call', 1, 0)","path,str",path = str(path)
.\excel_eval.py,141,path,"('Call', ('Name', 'Path'), (('Name', 'path'),), ())","('Call', 1, 0)","Path,path",path = Path(path)
.\notwendig oder nicht\wichtig\repo_porter_select.py,39,pats,"('Call', ('Name', 'list'), (('BoolOp', 'Or', (('Attr', 'args', 'include'), ('List', ()))),), ())","('Call', 1, 0)","args,list",pats = list(args.include or [])
.\notwendig oder nicht\wichtig\repo_porter_select.py,123,pats,"('Call', ('Name', 'load_patterns'), (('Name', 'args'),), ())","('Call', 1, 0)","args,load_patterns",pats = load_patterns(args)
.\tools\repo_porter_select.py,39,pats,"('Call', ('Name', 'list'), (('BoolOp', 'Or', (('Attr', 'args', 'include'), ('List', ()))),), ())","('Call', 1, 0)","args,list",pats = list(args.include or [])
.\tools\repo_porter_select.py,123,pats,"('Call', ('Name', 'load_patterns'), (('Name', 'args'),), ())","('Call', 1, 0)","args,load_patterns",pats = load_patterns(args)
.\analysis.py,402,pct,"('Call', ('Name', 'float'), (('Call', ('Attr', 'cheat', 'get'), (('Const', ""'percent'""),), ()),), ())","('Call', 1, 0)","cheat,float","pct = float(cheat.get(""percent""))"
.\calculations.py,3334,pct,"('Call', ('Name', 'float'), (('Name', 'cheated_percent'),), ())","('Call', 1, 0)","cheated_percent,float",pct = float(cheated_percent)
.\doc_output.py,2337,pdf_bytes,"('Call', ('Name', '_generate_offer_pdf_safe'), (), (('active_company_id', ('Name', 'active_company_id_for_docs')), ('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info_for_pdf')), ('company_logo_base64', ('Name', 'company_logo_b64_for_pdf')), ('db_list_company_documents_func', ('Name', 'db_list_company_documents_func')), ('get_product_by_id_func', ('Name', 'get_product_by_id_func')), ('inclusion_options', ('Name', 'final_inclusion_options_to_pass')), ('list_products_func', ('Name', 'list_products_func')), ('load_admin_setting_func', ('Name', 'load_admin_setting_func')), ('project_data', ('Name', 'enhanced_project_data')), ('save_admin_setting_func', ('Name', 'save_admin_setting_func')), ('sections_to_include', ('Name', 'final_sections_to_include_to_pass')), ('selected_cover_letter_text', ('Attr', 'st.session_state', 'selected_cover_letter_text_content_doc_output')), ('selected_offer_title_text', ('Attr', 'st.session_state', 'selected_offer_title_text_content_doc_output')), ('selected_title_image_b64', ('Attr', 'st.session_state', 'selected_title_image_b64_data_doc_output')), ('texts', ('Name', 'texts'))))","('Call', 0, 16)","_generate_offer_pdf_safe,active_company_id_for_docs,analysis_results,company_info_for_pdf,company_logo_b64_for_pdf,db_list_company_documents_func,enhanced_project_data,final_inclusion_options_to_pass,final_sections_to_include_to_pass,get_product_by_id_func,list_products_func,load_admin_setting_func,save_admin_setting_func,st,texts",pdf_bytes = _generate_offer_pdf_safe(
.\heatpump_ui.py,1060,pdf_bytes,"('Call', ('Name', 'generate_offer_pdf'), (), (('active_company_id', ('Const', 'None')), ('analysis_results', ('Name', 'analysis_results_hp')), ('company_info', ('Name', 'company_info')), ('company_logo_base64', ('Call', ('Attr', 'company_info', 'get'), (('Const', ""'logo_base64'""),), ())), ('db_list_company_documents_func', ('Other', 'Lambda')), ('get_product_by_id_func', ('Other', 'Lambda')), ('inclusion_options', ('Dict', (('KV', ('Const', ""'include_company_logo'""), ('Const', 'True')), ('KV', ('Const', ""'include_product_images'""), ('Const', 'False'))))), ('list_products_func', ('Other', 'Lambda')), ('load_admin_setting_func', ('Other', 'Lambda')), ('project_data', ('Name', 'project_data_hp')), ('save_admin_setting_func', ('Other', 'Lambda')), ('sections_to_include', ('Const', 'None')), ('selected_cover_letter_text', ('Const', ""'Sehr geehrte Damen und Herren,\\n\\nwir freuen uns, Ihnen unser Wärmepumpen-Angebot zu präsentieren.'"")), ('selected_offer_title_text', ('Const', ""'Angebot Wärmepumpe'"")), ('selected_title_image_b64', ('Const', 'None')), ('texts', ('Dict', ()))))","('Call', 0, 16)","analysis_results_hp,company_info,d,generate_offer_pdf,project_data_hp",pdf_bytes = generate_offer_pdf(
.\multi_offer_generator_old.py,283,pdf_bytes,"('Call', ('Name', 'generate_offer_pdf'), (), (('active_company_id', ('Name', 'company_id')), ('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_details')), ('company_logo_base64', ('Call', ('Attr', 'company_details', 'get'), (('Const', ""'logo_base64'""),), ())), ('db_list_company_documents_func', ('Other', 'IfExp')), ('get_product_by_id_func', ('Name', 'get_product_by_id')), ('inclusion_options', ('Dict', (('KV', ('Const', ""'include_company_logo'""), ('Const', 'True')), ('KV', ('Const', ""'include_product_images'""), ('Const', 'True'))))), ('list_products_func', ('Name', 'list_products')), ('load_admin_setting_func', ('Other', 'IfExp')), ('project_data', ('Name', 'project_data')), ('save_admin_setting_func', ('Other', 'IfExp')), ('sections_to_include', ('List', (('Const', ""'ProjectOverview'""), ('Const', ""'TechnicalComponents'""), ('Const', ""'CostDetails'""), ('Const', ""'Economics'"")))), ('selected_cover_letter_text', ('Const', ""'Sehr geehrte Damen und Herren,\\n\\nvielen Dank für Ihr Interesse.'"")), ('selected_offer_title_text', ('Other', 'JoinedStr')), ('selected_title_image_b64', ('Const', 'None')), ('texts', ('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'TEXTS'""), ('Dict', ())), ()))))","('Call', 0, 16)","analysis_results,callable,company_details,company_id,company_name,d,generate_offer_pdf,get_product_by_id,list_company_documents,list_products,load_admin_setting,project_data,save_admin_setting,st",pdf_bytes = generate_offer_pdf(
.\multi_offer_generator_old.py,745,pdf_bytes,"('Call', ('Name', 'generate_offer_pdf'), (), (('active_company_id', ('Name', 'company_id')), ('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_details')), ('company_logo_base64', ('Call', ('Attr', 'company_details', 'get'), (('Const', ""'logo_base64'""),), ())), ('db_list_company_documents_func', ('Other', 'IfExp')), ('get_product_by_id_func', ('Name', 'get_product_by_id')), ('inclusion_options', ('Dict', (('KV', ('Const', ""'include_company_logo'""), ('Const', 'True')), ('KV', ('Const', ""'include_product_images'""), ('Const', 'True'))))), ('list_products_func', ('Name', 'list_products')), ('load_admin_setting_func', ('Other', 'IfExp')), ('project_data', ('Name', 'project_data')), ('save_admin_setting_func', ('Other', 'IfExp')), ('sections_to_include', ('List', (('Const', ""'ProjectOverview'""), ('Const', ""'TechnicalComponents'""), ('Const', ""'CostDetails'""), ('Const', ""'Economics'"")))), ('selected_cover_letter_text', ('Const', ""'Sehr geehrte Damen und Herren,\\n\\nvielen Dank für Ihr Interesse.'"")), ('selected_offer_title_text', ('Other', 'JoinedStr')), ('selected_title_image_b64', ('Const', 'None')), ('texts', ('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'TEXTS'""), ('Dict', ())), ()))))","('Call', 0, 16)","analysis_results,callable,company_details,company_id,company_name,d,generate_offer_pdf,get_product_by_id,list_company_documents,list_products,load_admin_setting,project_data,save_admin_setting,st",pdf_bytes = generate_offer_pdf(
.\pdf_ui.py,1140,pdf_bytes,"('Call', ('Name', '_generate_offer_pdf_safe'), (), (('active_company_id', ('Name', 'active_company_id_for_docs')), ('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info_for_pdf')), ('company_logo_base64', ('Name', 'company_logo_b64_for_pdf')), ('db_list_company_documents_func', ('Name', 'db_list_company_documents_func')), ('get_product_by_id_func', ('Name', 'get_product_by_id_func')), ('inclusion_options', ('Name', 'final_inclusion_options_to_pass')), ('list_products_func', ('Name', 'list_products_func')), ('load_admin_setting_func', ('Name', 'load_admin_setting_func')), ('project_data', ('Name', 'project_data')), ('save_admin_setting_func', ('Name', 'save_admin_setting_func')), ('sections_to_include', ('Name', 'final_sections_to_include_to_pass')), ('selected_cover_letter_text', ('Attr', 'st.session_state', 'selected_cover_letter_text_content_doc_output')), ('selected_offer_title_text', ('Attr', 'st.session_state', 'selected_offer_title_text_content_doc_output')), ('selected_title_image_b64', ('Attr', 'st.session_state', 'selected_title_image_b64_data_doc_output')), ('texts', ('Name', 'texts'))))","('Call', 0, 16)","_generate_offer_pdf_safe,active_company_id_for_docs,analysis_results,company_info_for_pdf,company_logo_b64_for_pdf,db_list_company_documents_func,final_inclusion_options_to_pass,final_sections_to_include_to_pass,get_product_by_id_func,list_products_func,load_admin_setting_func,project_data,save_admin_setting_func,st,texts",pdf_bytes = _generate_offer_pdf_safe(
.\multi_offer_generator_old.py,1152,pdf_bytes,"('Call', ('Name', 'generate_offer_pdf'), (), (('active_company_id', ('Name', 'company_id')), ('analysis_results', ('Name', 'custom_analysis')), ('company_info', ('Name', 'company_info')), ('company_logo_base64', ('Call', ('Attr', 'company_info', 'get'), (('Const', ""'logo_base64'""),), ())), ('db_list_company_documents_func', ('Name', 'db_list_company_documents_func')), ('get_product_by_id_func', ('Name', 'get_product_by_id_func')), ('inclusion_options', ('Call', ('Attr', 'config', 'get'), (('Const', ""'inclusion_options'""), ('Dict', ())), ())), ('list_products_func', ('Name', 'list_products_func')), ('load_admin_setting_func', ('Name', 'load_admin_setting_func')), ('project_data', ('Name', 'custom_project_data')), ('save_admin_setting_func', ('Name', 'save_admin_setting_func')), ('sections_to_include', ('Call', ('Attr', 'config', 'get'), (('Const', ""'sections_to_include'""), ('List', ())), ())), ('selected_cover_letter_text', ('Call', ('Attr', ""config.get('custom_texts', {})"", 'get'), (('Const', ""'cover_letter'""), ('Const', ""''"")), ())), ('selected_offer_title_text', ('Call', ('Attr', ""config.get('custom_texts', {})"", 'get'), (('Const', ""'offer_title'""), ('Const', ""'Photovoltaik-Angebot'"")), ())), ('selected_title_image_b64', ('Const', 'None')), ('texts', ('Name', 'texts')), ('use_modern_design', ('Const', 'True'))))","('Call', 0, 17)","company_id,company_info,config,custom_analysis,custom_project_data,db_list_company_documents_func,generate_offer_pdf,get_product_by_id_func,list_products_func,load_admin_setting_func,save_admin_setting_func,texts",pdf_bytes = generate_offer_pdf(
.\pdf_preview.py,207,pdf_bytes,"('Call', ('Attr', 'engine', 'generate_preview_pdf'), (), (('active_company_id', ('Name', 'active_company_id')), ('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info')), ('company_logo_base64', ('Call', ('Attr', 'company_info', 'get'), (('Const', ""'logo_base64'""),), ())), ('db_list_company_documents_func', ('Name', 'db_list_company_documents_func')), ('force_refresh', ('Const', 'True')), ('get_product_by_id_func', ('Name', 'get_product_by_id_func')), ('inclusion_options', ('Name', 'inclusion_options')), ('list_products_func', ('Name', 'list_products_func')), ('load_admin_setting_func', ('Name', 'load_admin_setting_func')), ('project_data', ('Name', 'project_data')), ('save_admin_setting_func', ('Name', 'save_admin_setting_func')), ('sections_to_include', ('List', (('Const', ""'ProjectOverview'""), ('Const', ""'TechnicalComponents'""), ('Const', ""'CostDetails'"")))), ('selected_cover_letter_text', ('Const', ""''"")), ('selected_offer_title_text', ('Const', ""'Ihr Photovoltaik-Angebot'"")), ('selected_title_image_b64', ('Const', 'None')), ('texts', ('Name', 'texts'))))","('Call', 0, 17)","active_company_id,analysis_results,company_info,db_list_company_documents_func,engine,get_product_by_id_func,inclusion_options,list_products_func,load_admin_setting_func,project_data,save_admin_setting_func,texts",pdf_bytes = engine.generate_preview_pdf(
.\tests\test_main_pdf.py,89,pdf_bytes,"('Call', ('Name', 'generate_offer_pdf'), (), (('active_company_id', ('Other', 'IfExp')), ('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info')), ('company_logo_base64', ('Call', ('Attr', 'company_info', 'get'), (('Const', ""'logo_base64'""),), ())), ('db_list_company_documents_func', ('Name', 'db_list_company_documents_func')), ('get_product_by_id_func', ('Name', 'get_product_by_id_func')), ('inclusion_options', ('Name', 'inclusion_options')), ('list_products_func', ('Name', 'list_products_func')), ('load_admin_setting_func', ('Name', 'load_admin_setting_func')), ('project_data', ('Name', 'project_data')), ('save_admin_setting_func', ('Name', 'save_admin_setting_func')), ('sections_to_include', ('Const', 'None')), ('selected_cover_letter_text', ('Const', ""'Sehr geehrte Damen und Herren,\\n\\nHerzlichen Dank für Ihre Anfrage.'"")), ('selected_offer_title_text', ('Const', ""'Angebot für Ihre Photovoltaikanlage'"")), ('selected_title_image_b64', ('Const', 'None')), ('texts', ('Name', 'texts')), ('use_modern_design', ('Const', 'True'))))","('Call', 0, 17)","active_company,analysis_results,company_info,db_list_company_documents_func,generate_offer_pdf,get_product_by_id_func,inclusion_options,list_products_func,load_admin_setting_func,project_data,save_admin_setting_func,texts",pdf_bytes = generate_offer_pdf(
.\tools\test_main_pdf.py,89,pdf_bytes,"('Call', ('Name', 'generate_offer_pdf'), (), (('active_company_id', ('Other', 'IfExp')), ('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info')), ('company_logo_base64', ('Call', ('Attr', 'company_info', 'get'), (('Const', ""'logo_base64'""),), ())), ('db_list_company_documents_func', ('Name', 'db_list_company_documents_func')), ('get_product_by_id_func', ('Name', 'get_product_by_id_func')), ('inclusion_options', ('Name', 'inclusion_options')), ('list_products_func', ('Name', 'list_products_func')), ('load_admin_setting_func', ('Name', 'load_admin_setting_func')), ('project_data', ('Name', 'project_data')), ('save_admin_setting_func', ('Name', 'save_admin_setting_func')), ('sections_to_include', ('Const', 'None')), ('selected_cover_letter_text', ('Const', ""'Sehr geehrte Damen und Herren,\\n\\nHerzlichen Dank für Ihre Anfrage.'"")), ('selected_offer_title_text', ('Const', ""'Angebot für Ihre Photovoltaikanlage'"")), ('selected_title_image_b64', ('Const', 'None')), ('texts', ('Name', 'texts')), ('use_modern_design', ('Const', 'True'))))","('Call', 0, 17)","active_company,analysis_results,company_info,db_list_company_documents_func,generate_offer_pdf,get_product_by_id_func,inclusion_options,list_products_func,load_admin_setting_func,project_data,save_admin_setting_func,texts",pdf_bytes = generate_offer_pdf(
.\pdf_erstellen_komplett.py,139,pdf_bytes,"('Call', ('Name', 'generate_custom_offer_pdf'), (('Name', 'coords_dir'), ('Name', 'bg_dir'), ('Name', 'dynamic_data'), ('Name', 'additional_pdf_bytes')), ())","('Call', 4, 0)","additional_pdf_bytes,bg_dir,coords_dir,dynamic_data,generate_custom_offer_pdf","pdf_bytes = generate_custom_offer_pdf(coords_dir, bg_dir, dynamic_data, additional_pdf_bytes)"
.\pdf_erstellen_komplett.py,230,pdf_bytes,"('Call', ('Name', 'generate_custom_offer_pdf'), (('Name', 'coords_dir'), ('Name', 'bg_dir'), ('Name', 'dyn'), ('Name', 'additional_pdf_bytes')), ())","('Call', 4, 0)","additional_pdf_bytes,bg_dir,coords_dir,dyn,generate_custom_offer_pdf","pdf_bytes = generate_custom_offer_pdf(coords_dir, bg_dir, dyn, additional_pdf_bytes)"
.\pdf_generator.py,1880,pdf_design_config,"('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'pdf_design_config'""), ('Dict', ())), ())","('Call', 2, 0)",inclusion_options,"pdf_design_config = inclusion_options.get(""pdf_design_config"", {})"
.\pdf_ui.py,905,pdf_design_config,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pdf_design_config'""), ('Dict', ())), ())","('Call', 2, 0)",st,"pdf_design_config = st.session_state.get('pdf_design_config', {})"
.\debug_logo_pdf.py,108,pdf_path,"('Call', ('Name', 'test_logo_rendering_debug'), (), ())","('Call', 0, 0)",test_logo_rendering_debug,pdf_path = test_logo_rendering_debug()
.\tests\test_final_pdf_logos.py,105,pdf_path,"('Call', ('Name', 'create_test_pdf_with_logos'), (), ())","('Call', 0, 0)",create_test_pdf_with_logos,pdf_path = create_test_pdf_with_logos()
.\tests\test_pdf_logos.py,109,pdf_path,"('Call', ('Name', 'test_pdf_with_logos'), (), ())","('Call', 0, 0)",test_pdf_with_logos,pdf_path = test_pdf_with_logos()
.\pdf_template_engine\placeholders.py,1547,pf,"('Call', ('Name', 'parse_float'), (('Name', 'cap_w'),), ())","('Call', 1, 0)","cap_w,parse_float",pf = parse_float(cap_w)
.\pdf_template_engine\placeholders.py,1929,pf,"('Call', ('Name', 'parse_float'), (('Name', 'aval'),), ())","('Call', 1, 0)","aval,parse_float",pf = parse_float(aval)
.\pdf_template_engine\placeholders.py,1936,pf,"('Call', ('Name', 'parse_float'), (('Name', 'aval'),), ())","('Call', 1, 0)","aval,parse_float",pf = parse_float(aval)
.\pdf_template_engine\placeholders.py,1611,pf,"('Call', ('Name', 'parse_float'), (('Name', 'v'),), ())","('Call', 1, 0)","parse_float,v",pf = parse_float(v)
.\pdf_template_engine\placeholders.py,1626,pf,"('Call', ('Name', 'parse_float'), (('Name', 'v'),), ())","('Call', 1, 0)","parse_float,v",pf = parse_float(v)
.\pdf_template_engine\placeholders.py,1954,pf,"('Call', ('Name', 'parse_float'), (('Name', 'aval'),), ())","('Call', 1, 0)","aval,parse_float",pf = parse_float(aval)
.\admin_panel.py,772,pid,"('Call', ('Attr', 'p', 'get'), (('Const', ""'id'""),), ())","('Call', 1, 0)",p,pid = p.get('id')
.\product_attributes.py,201,pid,"('Call', ('Name', 'int'), (('Subscript', ('Name', 'p'), ('Const', ""'id'"")),), ())","('Call', 1, 0)","int,p",pid = int(p['id'])
.\product_attributes.py,249,pid,"('Call', ('Name', '_add_prod'), (('Dict', (('KV', ('Const', ""'brand'""), ('Name', 'brand')), ('KV', ('Const', ""'category'""), ('Name', 'category')), ('KV', ('Const', ""'model_name'""), ('Name', 'model')))),), ())","('Call', 1, 0)","_add_prod,brand,category,model","pid = _add_prod({'category': category, 'model_name': model, 'brand': brand})"
.\pdf_template_engine\placeholders.py,1401,pid,"('Call', ('Name', 'int'), (('Name', 'module_id'),), ())","('Call', 1, 0)","int,module_id",pid = int(module_id)
.\pdf_template_engine\placeholders.py,1407,pid,"('Call', ('Name', '_get_pid'), (('Name', 'mod_model'),), ())","('Call', 1, 0)","_get_pid,mod_model",pid = _get_pid(mod_model)
.\pdf_template_engine\placeholders.py,1409,pid,"('Call', ('Name', '_get_pid'), (('Name', 'module_name'),), ())","('Call', 1, 0)","_get_pid,module_name",pid = _get_pid(module_name)
.\pdf_template_engine\placeholders.py,1418,pid,"('Call', ('Name', 'int'), (('Call', ('Attr', 'module_details', 'get'), (('Const', ""'id'""),), ()),), ())","('Call', 1, 0)","int,module_details","pid = int(module_details.get(""id""))"
.\pdf_template_engine\placeholders.py,1414,pid,"('Call', ('Name', '_get_pid'), (('Name', 'mm_pd'),), ())","('Call', 1, 0)","_get_pid,mm_pd",pid = _get_pid(mm_pd)
.\tools\import_module_attributes_generic.py,155,pid,"('Call', ('Name', 'int'), (('Call', ('Attr', 'rec', 'get'), (('Const', ""'id'""),), ()),), ())","('Call', 1, 0)","int,rec","pid = int(rec.get(""id""))"
.\tools\import_module_attributes_generic.py,202,pid,"('Call', ('Name', 'int'), (('Call', ('Attr', 'p', 'get'), (('Const', ""'id'""),), ()),), ())","('Call', 1, 0)","int,p","pid = int(p.get(""id""))"
.\tools\import_module_attributes_generic.py,213,pid,"('Call', ('Name', 'int'), (('Call', ('Attr', 'p', 'get'), (('Const', ""'id'""),), ()),), ())","('Call', 1, 0)","int,p","pid = int(p.get(""id""))"
.\pdf_preview.py,342,pix,"('Call', ('Attr', 'page', 'get_pixmap'), (), (('dpi', ('Const', '100')),))","('Call', 0, 1)",page,pix = page.get_pixmap(dpi=100)
.\pdf_preview.py,99,pix,"('Call', ('Attr', 'page', 'get_pixmap'), (), (('dpi', ('Attr', 'self', 'preview_dpi')),))","('Call', 0, 1)","page,self",pix = page.get_pixmap(dpi=self.preview_dpi)
.\pdf_template_engine\placeholders.py,1666,pkw,"('Call', ('Name', 'float'), (('Call', ('Attr', 'inverter_details', 'get'), (('Const', ""'power_kw'""),), ()),), ())","('Call', 1, 0)","float,inverter_details","pkw = float(inverter_details.get(""power_kw""))"
.\pdf_template_engine\placeholders.py,1668,pkw,"('Call', ('Name', 'float'), (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_inverter_power_kw'""),), ()),), ())","('Call', 1, 0)","float,project_details","pkw = float(project_details.get(""selected_inverter_power_kw""))"
.\brand_logo_db.py,304,placeholders,"('Call', ('Attr', ""','"", 'join'), (('Mult', (('Call', ('Name', 'len'), (('Name', 'brand_names'),), ()), ('Const', ""'?'""))),), ())","('Call', 1, 0)","brand_names,len","placeholders = ','.join('?' * len(brand_names))"
.\crm.py,181,placeholders,"('Call', ('Attr', ""', '"", 'join'), (('Mult', (('Call', ('Name', 'len'), (('Name', 'data_to_save'),), ()), ('List', (('Const', ""'?'""),)))),), ())","('Call', 1, 0)","data_to_save,len","placeholders = ', '.join(['?'] * len(data_to_save))"
.\crm.py,226,placeholders,"('Call', ('Attr', ""', '"", 'join'), (('Mult', (('Call', ('Name', 'len'), (('Name', 'insert_data'),), ()), ('List', (('Const', ""'?'""),)))),), ())","('Call', 1, 0)","insert_data,len","placeholders = ', '.join(['?'] * len(insert_data))"
.\database.py,1287,placeholders,"('Call', ('Attr', ""','"", 'join'), (('Mult', (('Call', ('Name', 'len'), (('Name', 'fields'),), ()), ('List', (('Const', ""'?'""),)))),), ())","('Call', 1, 0)","fields,len","placeholders = "","".join([""?""]*len(fields))"
.\product_db.py,170,placeholders,"('Call', ('Attr', ""', '"", 'join'), (('Mult', (('Call', ('Name', 'len'), (('Name', 'insert_data'),), ()), ('List', (('Const', ""'?'""),)))),), ())","('Call', 1, 0)","insert_data,len","fields = ', '.join(insert_data.keys()); placeholders = ', '.join(['?'] * len(insert_data))"
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,317,placeholders,"('Call', ('Attr', ""','"", 'join'), (('Mult', (('Call', ('Name', 'len'), (('Name', 'brand_names'),), ()), ('Const', ""'?'""))),), ())","('Call', 1, 0)","brand_names,len","placeholders = ','.join('?' * len(brand_names))"
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,367,placeholders,"('Call', ('Attr', ""','"", 'join'), (('Mult', (('Call', ('Name', 'len'), (('Name', 'brand_names'),), ()), ('Const', ""'?'""))),), ())","('Call', 1, 0)","brand_names,len","placeholders = ','.join('?' * len(brand_names))"
.\tools\out_selected\patches\brand_logo_db.py.insert.py,317,placeholders,"('Call', ('Attr', ""','"", 'join'), (('Mult', (('Call', ('Name', 'len'), (('Name', 'brand_names'),), ()), ('Const', ""'?'""))),), ())","('Call', 1, 0)","brand_names,len","placeholders = ','.join('?' * len(brand_names))"
.\tools\portings\patches\brand_logo_db.py.insert.py,367,placeholders,"('Call', ('Attr', ""','"", 'join'), (('Mult', (('Call', ('Name', 'len'), (('Name', 'brand_names'),), ()), ('Const', ""'?'""))),), ())","('Call', 1, 0)","brand_names,len","placeholders = ','.join('?' * len(brand_names))"
.\data_input.py,163,please_select_text,"('Call', ('Name', 'get_text_di'), (('Name', 'texts'), ('Const', ""'please_select_option'""), ('Const', ""'--- Bitte wählen ---'"")), ())","('Call', 3, 0)","get_text_di,texts","please_select_text = get_text_di(texts, ""please_select_option"", ""--- Bitte wählen ---"")"
.\solar_calculator.py,82,please_select_text,"('Call', ('Name', '_get_text'), (('Name', 'texts'), ('Const', ""'please_select_option'""), ('Const', ""'--- Bitte wählen ---'"")), ())","('Call', 3, 0)","_get_text,texts","please_select_text = _get_text(texts, 'please_select_option', '--- Bitte wählen ---')"
.\pdf_styles.py,620,points,"('Other', 'ListComp')","('Other', 'ListComp')","a,angles,np,size,x,y","points = [(x + size * np.cos(a), y + size * np.sin(a)) for a in angles]"
.\pdf_styles.py,682,points,"('Other', 'ListComp')","('Other', 'ListComp')","a,angles,hex_size,np,x,y","points = [(x + hex_size * np.cos(a),"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,228,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,87,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,246,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,105,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\pdf_template_engine\dynamic_overlay.py,741,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\pdf_template_engine\dynamic_overlay.py,549,pos,"('Call', ('Attr', 'meta', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",meta,"pos = meta.get(""position"")"
.\pdf_template_engine\dynamic_overlay.py,600,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,228,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,87,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,246,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,105,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\notwendig oder nicht\python_function_recipes.py,66,pos,"('Sub', ('Call', ('Attr', 'lv', 'searchsorted'), (('Name', 'lookup_value'),), (('side', ('Const', ""'right'"")),)), ('Const', '1'))","('Sub', ('Call', 1, 1), ('Const',))","lookup_value,lv","pos = lv.searchsorted(lookup_value, side='right') - 1"
.\notwendig oder nicht\python_function_recipes.py,33,pos,"('Sub', ('Call', ('Attr', ""key_row.sort_values(kind='mergesort')"", 'searchsorted'), (('Name', 'lookup_value'),), (('side', ('Const', ""'right'"")),)), ('Const', '1'))","('Sub', ('Call', 1, 1), ('Const',))","key_row,lookup_value","pos = key_row.sort_values(kind='mergesort').searchsorted(lookup_value, side='right') - 1"
.\notwendig oder nicht\python_function_recipes.py,239,pos,"('Sub', ('Call', ('Attr', 'key_col', 'searchsorted'), (('Name', 'lookup_value'),), (('side', ('Const', ""'right'"")),)), ('Const', '1'))","('Sub', ('Call', 1, 1), ('Const',))","key_col,lookup_value","pos = key_col.searchsorted(lookup_value, side='right') - 1"
.\doc_output.py,351,preview_cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'min'), (('Call', ('Name', 'len'), (('Name', 'chart_types'),), ()), ('Const', '4')), ()),), ())","('Call', 1, 0)","chart_types,len,min,st","preview_cols = st.columns(min(len(chart_types), 4))"
.\doc_output.py,1962,preview_cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '3'),), ())","('Call', 1, 0)",st,preview_cols = st.columns(3)
.\multi_offer_generator.py,375,preview_cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'min'), (('Const', '4'), ('Name', 'num_companies')), ()),), ())","('Call', 1, 0)","min,num_companies,st","preview_cols = st.columns(min(4, num_companies))"
.\multi_offer_generator.py,236,preview_cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'min'), (('Const', '4'), ('Name', 'num_companies')), ()),), ())","('Call', 1, 0)","min,num_companies,st","preview_cols = st.columns(min(4, num_companies))"
.\multi_offer_generator.py,835,price_factor,"('Other', 'IfExp')","('Other', 'IfExp')","company_index,custom_factors,len",price_factor = custom_factors[company_index] if company_index < len(custom_factors) else custom_factors[-1]
.\multi_offer_generator.py,392,price_factor,"('Other', 'IfExp')","('Other', 'IfExp')","factors,i,len",price_factor = factors[i] if i < len(factors) else factors[-1]
.\calculations.py,2977,price_value_from_matrix,"('Subscript', ('Name', 'selected_row_from_matrix'), ('Name', 'original_price_col_key_for_df_access'))","('Subscript',)","original_price_col_key_for_df_access,selected_row_from_matrix",price_value_from_matrix = selected_row_from_matrix[
.\calculations.py,2994,price_value_from_matrix,"('Subscript', ('Name', 'selected_row_from_matrix'), ('Name', 'original_no_storage_column_name'))","('Subscript',)","original_no_storage_column_name,selected_row_from_matrix",price_value_from_matrix = selected_row_from_matrix[
.\admin_panel.py,1476,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Call', ('Name', 'get_text_local'), (('Const', ""'admin_viz_primary_color_label'""), ('Const', ""'Primäre Diagrammfarbe'"")), ()),), (('key', ('Other', 'JoinedStr')), ('value', ('Call', ('Attr', 'viz_settings', 'get'), (('Const', ""'primary_chart_color'""), ('Call', ('Attr', 'default_viz_settings_fallback', 'get'), (('Const', ""'primary_chart_color'""),), ())), ()))))","('Call', 1, 2)","WIDGET_KEY_SUFFIX,default_viz_settings_fallback,get_text_local,st,viz_settings","primary_color = st.color_picker(get_text_local(""admin_viz_primary_color_label"", ""Primäre Diagrammfarbe""), value=viz_settings.get(""primary_chart_color"", default_viz_settings_fallback.get(""primary_chart_color"")), key=f""viz_primary_color_picker{WIDGET_KEY_SUFFIX}"")"
.\admin_panel.py,1569,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Call', ('Name', 'get_text_local'), (('Const', ""'admin_pdf_primary_color_label'""), ('Const', ""'PDF Haupt-/Akzentfarbe'"")), ()),), (('key', ('Other', 'JoinedStr')), ('value', ('Call', ('Attr', 'current_design_settings', 'get'), (('Const', ""'primary_color'""), ('Subscript', ('Name', 'PDF_DESIGN_SETTINGS_DEFAULT'), ('Const', ""'primary_color'""))), ()))))","('Call', 1, 2)","PDF_DESIGN_SETTINGS_DEFAULT,WIDGET_KEY_SUFFIX,current_design_settings,get_text_local,st","primary_color = st.color_picker(get_text_local(""admin_pdf_primary_color_label"", ""PDF Haupt-/Akzentfarbe""), value=current_design_settings.get('primary_color', PDF_DESIGN_SETTINGS_DEFAULT['primary_color']), key=f""pdf_primary_color{WIDGET_KEY_SUFFIX}"")"
.\central_pdf_system.py,1553,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Primärfarbe'""),), (('help', ('Const', ""'Hauptfarbe für Überschriften und Akzente'"")), ('value', ('Const', ""'#0d3780'""))))","('Call', 1, 2)",st,"primary_color = st.color_picker(""Primärfarbe"", value=""#0d3780"", help=""Hauptfarbe für Überschriften und Akzente"")"
.\components\progress_settings.py,50,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Primärfarbe'""),), (('help', ('Const', ""'Hauptfarbe für den Ladebalken'"")), ('value', ('Attr', 'current_config', 'color_primary'))))","('Call', 1, 2)","current_config,st",primary_color = st.color_picker(
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_settings.py.insert.py,52,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Primärfarbe'""),), (('help', ('Const', ""'Hauptfarbe für den Ladebalken'"")), ('value', ('Attr', 'current_config', 'color_primary'))))","('Call', 1, 2)","current_config,st",primary_color = st.color_picker(
.\notwendig oder nicht\wichtig\portings\patches\components\progress_settings.py.insert.py,53,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Primärfarbe'""),), (('help', ('Const', ""'Hauptfarbe für den Ladebalken'"")), ('value', ('Attr', 'current_config', 'color_primary'))))","('Call', 1, 2)","current_config,st",primary_color = st.color_picker(
.\tools\out_selected\patches\components\progress_settings.py.insert.py,52,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Primärfarbe'""),), (('help', ('Const', ""'Hauptfarbe für den Ladebalken'"")), ('value', ('Attr', 'current_config', 'color_primary'))))","('Call', 1, 2)","current_config,st",primary_color = st.color_picker(
.\tools\portings\patches\components\progress_settings.py.insert.py,53,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Primärfarbe'""),), (('help', ('Const', ""'Hauptfarbe für den Ladebalken'"")), ('value', ('Attr', 'current_config', 'color_primary'))))","('Call', 1, 2)","current_config,st",primary_color = st.color_picker(
.\analysis.py,1670,primary_color,"('Call', ('Attr', 'specific_settings', 'get'), (('Const', ""'primary_chart_color'""), ('Call', ('Name', '_safe_viz_get'), (('Name', 'viz_settings'), ('Const', ""'primary_chart_color'"")), ())), ())","('Call', 2, 0)","_safe_viz_get,specific_settings,viz_settings",primary_color = specific_settings.get(
.\components\progress_demo.py,130,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Primärfarbe'""), ('Const', ""'#3b82f6'"")), ())","('Call', 2, 0)",st,"primary_color = st.color_picker(""Primärfarbe"", ""#3b82f6"")"
.\admin_product_attributes_ui.py,41,prod,"('Call', ('Name', 'get_product_by_model_name'), (('Name', 'selected_model'),), ())","('Call', 1, 0)","get_product_by_model_name,selected_model",prod = get_product_by_model_name(selected_model)
.\product_attributes.py,246,prod,"('Call', ('Name', '_get_prod'), (('Name', 'model'),), ())","('Call', 1, 0)","_get_prod,model",prod = _get_prod(model)
.\pdf_template_engine\placeholders.py,857,prod,"('Call', ('Name', 'float'), (('Name', 'annual_prod'),), ())","('Call', 1, 0)","annual_prod,float",prod = float(annual_prod)
.\tools\import_module_attributes_generic.py,132,prod,"('Call', ('Attr', 'row', 'get'), (('Const', ""'product_warranty_years'""),), ())","('Call', 1, 0)",row,"prod = row.get(""product_warranty_years"")"
.\admin_panel.py,1028,prod_specific_dir,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'PRODUCT_DATASHEETS_BASE_DIR_ADMIN'), ('Call', ('Name', 'str'), (('Name', 'product_id_for_files'),), ())), ())","('Call', 2, 0)","PRODUCT_DATASHEETS_BASE_DIR_ADMIN,os,product_id_for_files,str","prod_specific_dir = os.path.join(PRODUCT_DATASHEETS_BASE_DIR_ADMIN, str(product_id_for_files))"
.\admin_panel.py,1065,prod_specific_dir,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'PRODUCT_DATASHEETS_BASE_DIR_ADMIN'), ('Call', ('Name', 'str'), (('Name', 'new_product_id'),), ())), ())","('Call', 2, 0)","PRODUCT_DATASHEETS_BASE_DIR_ADMIN,new_product_id,os,str","prod_specific_dir = os.path.join(PRODUCT_DATASHEETS_BASE_DIR_ADMIN, str(new_product_id))"
.\pdf_template_engine\placeholders.py,1351,prod_txt,"('Other', 'IfExp')","('Other', 'IfExp')","float,fmt_number,prod_warranty_years","prod_txt = fmt_number(float(prod_warranty_years), 0, ""Jahre Produktgarantie"") if prod_warranty_years is not None else """""
.\pdf_template_engine\placeholders.py,1353,prod_txt,"('Other', 'IfExp')","('Other', 'IfExp')","as_str,prod_warranty_years","prod_txt = f""{as_str(prod_warranty_years)} Jahre Produktgarantie"" if prod_warranty_years is not None else """""
.\admin_panel.py,981,product_data_to_save_db,"('Dict', (('KV', ('Const', ""'additional_cost_netto'""), ('Name', 'p_add_cost_form')), ('KV', ('Const', ""'brand'""), ('Call', ('Attr', ""p_brand_form or ''"", 'strip'), (), ())), ('KV', ('Const', ""'category'""), ('Name', 'p_category_form')), ('KV', ('Const', ""'datasheet_link_db_path'""), ('Name', 'current_datasheet_link')), ('KV', ('Const', ""'description'""), ('Call', ('Attr', ""p_description_form_val or ''"", 'strip'), (), ())), ('KV', ('Const', ""'image_base64'""), ('BoolOp', 'Or', (('Const', ""''""), ('Name', 'current_product_image_b64_form')))), ('KV', ('Const', ""'model_name'""), ('Call', ('Attr', ""p_model_name_form or ''"", 'strip'), (), ())), ('KV', ('Const', ""'price_euro'""), ('Name', 'p_price_form')), ('KV', ('Const', ""'warranty_years'""), ('Name', 'p_warranty_form'))))","('Dict', 9)","current_datasheet_link,current_product_image_b64_form,p_add_cost_form,p_brand_form,p_category_form,p_description_form_val,p_model_name_form,p_price_form,p_warranty_form",product_data_to_save_db = {
.\notwendig oder nicht\wichtig\portings\patches\test_admin_fix.py.insert.py,70,product_data_to_save_db,"('Dict', (('KV', ('Const', ""'additional_cost_netto'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_add_cost_form'""))), ('KV', ('Const', ""'brand'""), ('Call', ('Attr', ""test_form_values['p_brand_form'] or ''"", 'strip'), (), ())), ('KV', ('Const', ""'category'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_category_form'""))), ('KV', ('Const', ""'datasheet_link_db_path'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'current_datasheet_link'""))), ('KV', ('Const', ""'description'""), ('Call', ('Attr', ""test_form_values['p_description_form_val'] or ''"", 'strip'), (), ())), ('KV', ('Const', ""'image_base64'""), ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'current_product_image_b64_form'""))))), ('KV', ('Const', ""'model_name'""), ('Call', ('Attr', ""test_form_values['p_model_name_form'] or ''"", 'strip'), (), ())), ('KV', ('Const', ""'price_euro'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_price_form'""))), ('KV', ('Const', ""'warranty_years'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_warranty_form'"")))))","('Dict', 9)",test_form_values,product_data_to_save_db = {
.\tests\test_admin_fix.py,59,product_data_to_save_db,"('Dict', (('KV', ('Const', ""'additional_cost_netto'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_add_cost_form'""))), ('KV', ('Const', ""'brand'""), ('Call', ('Attr', ""test_form_values['p_brand_form'] or ''"", 'strip'), (), ())), ('KV', ('Const', ""'category'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_category_form'""))), ('KV', ('Const', ""'datasheet_link_db_path'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'current_datasheet_link'""))), ('KV', ('Const', ""'description'""), ('Call', ('Attr', ""test_form_values['p_description_form_val'] or ''"", 'strip'), (), ())), ('KV', ('Const', ""'image_base64'""), ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'current_product_image_b64_form'""))))), ('KV', ('Const', ""'model_name'""), ('Call', ('Attr', ""test_form_values['p_model_name_form'] or ''"", 'strip'), (), ())), ('KV', ('Const', ""'price_euro'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_price_form'""))), ('KV', ('Const', ""'warranty_years'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_warranty_form'"")))))","('Dict', 9)",test_form_values,product_data_to_save_db = {
.\tools\portings\patches\test_admin_fix.py.insert.py,70,product_data_to_save_db,"('Dict', (('KV', ('Const', ""'additional_cost_netto'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_add_cost_form'""))), ('KV', ('Const', ""'brand'""), ('Call', ('Attr', ""test_form_values['p_brand_form'] or ''"", 'strip'), (), ())), ('KV', ('Const', ""'category'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_category_form'""))), ('KV', ('Const', ""'datasheet_link_db_path'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'current_datasheet_link'""))), ('KV', ('Const', ""'description'""), ('Call', ('Attr', ""test_form_values['p_description_form_val'] or ''"", 'strip'), (), ())), ('KV', ('Const', ""'image_base64'""), ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'current_product_image_b64_form'""))))), ('KV', ('Const', ""'model_name'""), ('Call', ('Attr', ""test_form_values['p_model_name_form'] or ''"", 'strip'), (), ())), ('KV', ('Const', ""'price_euro'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_price_form'""))), ('KV', ('Const', ""'warranty_years'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_warranty_form'"")))))","('Dict', 9)",test_form_values,product_data_to_save_db = {
.\add_test_product_images.py,43,product_id,"('Call', ('Attr', 'product', 'get'), (('Const', ""'id'""),), ())","('Call', 1, 0)",product,product_id = product.get('id')
.\create_png_test_images.py,63,product_id,"('Call', ('Attr', 'product', 'get'), (('Const', ""'id'""),), ())","('Call', 1, 0)",product,product_id = product.get('id')
.\notwendig oder nicht\wichtig\portings\patches\add_test_product_images.py.insert.py,61,product_id,"('Call', ('Attr', 'product', 'get'), (('Const', ""'id'""),), ())","('Call', 1, 0)",product,product_id = product.get('id')
.\notwendig oder nicht\wichtig\portings\patches\create_png_test_images.py.insert.py,73,product_id,"('Call', ('Attr', 'product', 'get'), (('Const', ""'id'""),), ())","('Call', 1, 0)",product,product_id = product.get('id')
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,101,product_id,"('Call', ('Name', 'add_product'), (('Name', 'initial_product'),), ())","('Call', 1, 0)","add_product,initial_product",product_id = add_product(initial_product)
.\tests\test_admin_workflow.py,92,product_id,"('Call', ('Name', 'add_product'), (('Name', 'initial_product'),), ())","('Call', 1, 0)","add_product,initial_product",product_id = add_product(initial_product)
.\tools\portings\patches\add_test_product_images.py.insert.py,61,product_id,"('Call', ('Attr', 'product', 'get'), (('Const', ""'id'""),), ())","('Call', 1, 0)",product,product_id = product.get('id')
.\tools\portings\patches\create_png_test_images.py.insert.py,73,product_id,"('Call', ('Attr', 'product', 'get'), (('Const', ""'id'""),), ())","('Call', 1, 0)",product,product_id = product.get('id')
.\tools\portings\patches\test_admin_workflow.py.insert.py,101,product_id,"('Call', ('Name', 'add_product'), (('Name', 'initial_product'),), ())","('Call', 1, 0)","add_product,initial_product",product_id = add_product(initial_product)
.\pdf_generator.py,2818,product_ids_for_datasheets,"('Call', ('Name', 'list'), (('Call', ('Name', 'filter'), (('Const', 'None'), ('List', (('Call', ('Attr', 'pv_details_pdf', 'get'), (('Const', ""'selected_module_id'""),), ()), ('Call', ('Attr', 'pv_details_pdf', 'get'), (('Const', ""'selected_inverter_id'""),), ()), ('Other', 'IfExp')))), ()),), ())","('Call', 1, 0)","filter,list,pv_details_pdf","product_ids_for_datasheets = list(filter(None, ["
.\pdf_generator.py,2829,product_ids_for_datasheets,"('Call', ('Name', 'list'), (('Call', ('Name', 'set'), (('Name', 'product_ids_for_datasheets'),), ()),), ())","('Call', 1, 0)","list,product_ids_for_datasheets,set",product_ids_for_datasheets = list(set(product_ids_for_datasheets))
.\analysis.py,2254,production_data,"('Other', 'ListComp')","('Other', 'ListComp')","factor,monthly_factors,yearly_total",production_data = [yearly_total * factor for factor in monthly_factors]
.\analysis.py,2256,production_data,"('Other', 'ListComp')","('Other', 'ListComp')","float,int,isinstance,math,production_data_raw,v",production_data = [
.\admin_product_attributes_ui.py,36,products,"('Call', ('Name', 'list_products'), (), (('category', ('BoolOp', 'Or', (('Const', 'None'), ('Name', 'category')))),))","('Call', 0, 1)","category,list_products",products = list_products(category=category or None)
.\solar_calculator.py,52,products,"('Call', ('Name', 'list_products_safe'), (), (('category', ('Name', 'category')),))","('Call', 0, 1)","category,list_products_safe",products = list_products_safe(category=category)
.\analysis.py,2570,produktion,"('Other', 'ListComp')","('Other', 'ListComp')","factor,monthly_prod_factors,yearly_production",produktion = [yearly_production * factor for factor in monthly_prod_factors]
.\analysis.py,2583,produktion,"('Other', 'ListComp')","('Other', 'ListComp')","float,int,isinstance,math,p,produktion_raw",produktion = [
.\pdf_generator.py,141,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Const', ""'PDF wird erstellt...'""), ('Const', 'None')), ())","('Call', 2, 0)",create_progress_bar,"progress_bar = create_progress_bar(""PDF wird erstellt..."", None)"
.\components\progress_demo.py,23,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Const', ""'Lade Daten...'""), ('Call', ('Attr', 'st', 'container'), (), ())), ())","('Call', 2, 0)","create_progress_bar,st","progress_bar = create_progress_bar(""Lade Daten..."", st.container())"
.\components\progress_demo.py,89,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Const', ""'Verarbeite Daten...'""), ('Call', ('Attr', 'st', 'container'), (), ())), ())","('Call', 2, 0)","create_progress_bar,st","progress_bar = create_progress_bar(""Verarbeite Daten..."", st.container())"
.\components\progress_demo.py,143,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Const', ""'Teste eigene Farben...'""), ('Call', ('Attr', 'st', 'container'), (), ())), ())","('Call', 2, 0)","create_progress_bar,st","progress_bar = create_progress_bar(""Teste eigene Farben..."", st.container())"
.\components\progress_demo.py,74,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Other', 'JoinedStr'), ('Call', ('Attr', 'st', 'container'), (), ())), ())","('Call', 2, 0)","create_progress_bar,st,style_name","progress_bar = create_progress_bar(f""Teste {style_name} Style..."", st.container())"
.\components\progress_settings.py,141,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Const', ""'Demo wird ausgeführt...'""), ('Name', 'demo_container')), ())","('Call', 2, 0)","create_progress_bar,demo_container","progress_bar = create_progress_bar(""Demo wird ausgeführt..."", demo_container)"
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_settings.py.insert.py,146,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Const', ""'Demo wird ausgeführt...'""), ('Name', 'demo_container')), ())","('Call', 2, 0)","create_progress_bar,demo_container","progress_bar = create_progress_bar(""Demo wird ausgeführt..."", demo_container)"
.\notwendig oder nicht\wichtig\portings\patches\components\progress_settings.py.insert.py,151,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Const', ""'Demo wird ausgeführt...'""), ('Name', 'demo_container')), ())","('Call', 2, 0)","create_progress_bar,demo_container","progress_bar = create_progress_bar(""Demo wird ausgeführt..."", demo_container)"
.\tools\out_selected\patches\components\progress_settings.py.insert.py,146,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Const', ""'Demo wird ausgeführt...'""), ('Name', 'demo_container')), ())","('Call', 2, 0)","create_progress_bar,demo_container","progress_bar = create_progress_bar(""Demo wird ausgeführt..."", demo_container)"
.\tools\portings\patches\components\progress_settings.py.insert.py,151,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Const', ""'Demo wird ausgeführt...'""), ('Name', 'demo_container')), ())","('Call', 2, 0)","create_progress_bar,demo_container","progress_bar = create_progress_bar(""Demo wird ausgeführt..."", demo_container)"
.\components\progress_demo.py,72,progress_manager.config.style,"('Name', 'style')","('Name',)",style,progress_manager.config.style = style
.\components\progress_demo.py,83,progress_manager.config.style,"('Name', 'original_style')","('Name',)",original_style,progress_manager.config.style = original_style
.\pdf_generator.py,496,proj_company_info,"('Call', ('Attr', 'safe_project_data', 'get'), (('Const', ""'company_information'""),), ())","('Call', 1, 0)",safe_project_data,proj_company_info = safe_project_data.get('company_information')
.\pdf_generator.py,1771,proj_company_info,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'company_information'""),), ())","('Call', 1, 0)",project_data,proj_company_info = project_data.get('company_information')
.\multi_offer_generator_old.py,737,project_data,"('Call', ('Attr', 'self', '_prepare_project_data_for_pdf'), (('Name', 'company_id'),), ())","('Call', 1, 0)","company_id,self",project_data = self._prepare_project_data_for_pdf(company_id)
.\multi_offer_generator_old.py,272,project_data,"('Call', ('Attr', 'self', '_prepare_project_data_for_pdf'), (('Name', 'company_id'),), ())","('Call', 1, 0)","company_id,self",project_data = self._prepare_project_data_for_pdf(company_id)
.\pdf_erstellen_komplett.py,126,project_data,"('Call', ('Name', '_read_json'), (('Name', 'project_json'),), ())","('Call', 1, 0)","_read_json,project_json",project_data = _read_json(project_json)
.\pdf_erstellen_komplett.py,197,project_data,"('Call', ('Attr', 'json', 'loads'), (('Call', ('Attr', 'pj.read()', 'decode'), (('Const', ""'utf-8'""),), ()),), ())","('Call', 1, 0)","json,pj","project_data = json.loads(pj.read().decode(""utf-8""))"
.\pdf_generator.py,1766,project_data,"('Call', ('Name', 'dict'), (('BoolOp', 'Or', (('Dict', ()), ('Name', 'project_data'))),), ())","('Call', 1, 0)","dict,project_data",project_data = dict(project_data or {})
.\analysis.py,505,project_data,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"project_data = st.session_state.get('project_data', {})"
.\analysis.py,5291,project_data,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"project_data = st.session_state.get(""project_data"", {})"
.\analysis.py,6666,project_data,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"project_data = st.session_state.get(""project_data"", {})"
.\analysis.py,7763,project_data,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"project_data = st.session_state.get(""project_data"", {})"
.\analysis.py,7830,project_data,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"project_data = st.session_state.get(""project_data"", {})"
.\central_pdf_system.py,460,project_data,"('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",kwargs,"project_data = kwargs.get('project_data', {})"
.\central_pdf_system.py,165,project_data,"('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",kwargs,"project_data = kwargs.get('project_data', {})"
.\central_pdf_system.py,406,project_data,"('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",kwargs,"project_data = kwargs.get('project_data', {})"
.\central_pdf_system.py,1984,project_data,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"project_data = st.session_state.get('project_data', {})"
.\live_preview_helpers.py,197,project_data,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"project_data = st.session_state.get('project_data', {})"
.\multi_offer_generator.py,109,project_data,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"project_data = st.session_state.get(""project_data"", {})"
.\multi_offer_generator.py,580,project_data,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'multi_offer_project_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"project_data = st.session_state.get(""multi_offer_project_data"", {})"
.\multi_offer_generator_new.py,104,project_data,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"project_data = st.session_state.get(""project_data"", {})"
.\multi_offer_generator_new.py,281,project_data,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'multi_offer_project_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"project_data = st.session_state.get(""multi_offer_project_data"", {})"
.\multi_offer_generator_old.py,377,project_data,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"project_data = st.session_state.get(""project_data"", {})"
.\pdf_erstellen_komplett.py,178,project_data,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"project_data = st.session_state.get(""project_data"", {})"
.\notwendig oder nicht\calculations_cli.py,45,project_data,"('Call', ('Attr', 'data', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",data,"project_data: Dict[str, Any] = data.get(""project_data"", {})"
.\notwendig oder nicht\keine ahnung\calculations_cli.py,45,project_data,"('Call', ('Attr', 'data', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",data,"project_data: Dict[str, Any] = data.get(""project_data"", {})"
.\notwendig oder nicht\need or not\calculations_cli.py,45,project_data,"('Call', ('Attr', 'data', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",data,"project_data: Dict[str, Any] = data.get(""project_data"", {})"
.\.tmp_placeholder_test.py,7,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'include_storage'""), ('Const', 'True')), ('KV', ('Const', ""'module_quantity'""), ('Const', '10')), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'PowerMax 5K'"")), ('KV', ('Const', ""'selected_module_capacity_w'""), ('Const', '400')), ('KV', ('Const', ""'selected_module_name'""), ('Const', ""'AlphaSolar 450W'"")), ('KV', ('Const', ""'selected_storage_name'""), ('Const', ""'EnergyCell 10kWh'"")), ('KV', ('Const', ""'selected_storage_storage_power_kw'""), ('Const', '10.0')))))))","('Dict', 2)",,project_data = {
.\debug_logo_rendering.py,20,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_name'""), ('Const', ""'Test Inverter'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_name'""), ('Const', ""'Test Module'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_name'""), ('Const', ""'Test Storage'""))))))))))","('Dict', 2)",,project_data = {
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_rendering.py.insert.py,19,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_name'""), ('Const', ""'Test Inverter'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_name'""), ('Const', ""'Test Module'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_name'""), ('Const', ""'Test Storage'""))))))))))","('Dict', 2)",,project_data = {
.\tests\test_build_dynamic_data.py,3,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'A'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'B'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'include_storage'""), ('Const', 'True')), ('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'Sun2000 10KTL-M1 10 kW Wechselrichter'"")), ('KV', ('Const', ""'selected_module_name'""), ('Const', ""'Neostar 2S+ 455W'"")), ('KV', ('Const', ""'selected_storage_name'""), ('Const', ""'ECS4100 -H3 12,09 kWh Stromspeicher'"")))))))","('Dict', 2)",,project_data = {
.\tests\test_main6_render.py,13,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterweg'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@example.com'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'house_number'""), ('Const', ""'12'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'phone_mobile'""), ('Const', ""'+491234567'"")), ('KV', ('Const', ""'salutation'""), ('Const', ""'Herr'"")), ('KV', ('Const', ""'title'""), ('Const', ""''"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'electricity_price_increase_annual_percent'""), ('Const', '5')), ('KV', ('Const', ""'include_storage'""), ('Const', 'True')), ('KV', ('Const', ""'module_cell_technology'""), ('Const', ""'Monokristallin N-Type'"")), ('KV', ('Const', ""'module_cell_type'""), ('Const', ""'108 Halbzellen'"")), ('KV', ('Const', ""'module_guarantee_combined'""), ('Const', ""'25 Jahre Produktgarantie | 30 Jahre Leistungsgarantie'"")), ('KV', ('Const', ""'module_manufacturer'""), ('Const', ""'JA Solar'"")), ('KV', ('Const', ""'module_model'""), ('Const', ""'JAM54S31-420/MR'"")), ('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'module_structure'""), ('Const', ""'Glas-Folie'"")), ('KV', ('Const', ""'module_version'""), ('Const', ""'Black Frame'"")), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'Huawei SUN2000-8KTL-M1'"")), ('KV', ('Const', ""'selected_inverter_power_kw'""), ('Const', '8')), ('KV', ('Const', ""'selected_inverter_quantity'""), ('Const', '1')), ('KV', ('Const', ""'selected_module_capacity_w'""), ('Const', '420')), ('KV', ('Const', ""'selected_storage_name'""), ('Const', ""'Huawei LUNA2000-7-S1-7kWh Stromspeicher'"")), ('KV', ('Const', ""'stromkosten_haushalt_euro_monat'""), ('Const', '150')), ('KV', ('Const', ""'stromkosten_heizung_euro_monat'""), ('Const', '50')))))))","('Dict', 2)",,project_data = {
.\tests\test_main_pdf.py,42,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterstraße'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@example.com'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'house_number'""), ('Const', ""'1'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'phone_mobile'""), ('Const', ""'0151 2345678'"")), ('KV', ('Const', ""'salutation'""), ('Const', ""'Herr'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'WR 5kW'"")), ('KV', ('Const', ""'selected_module_capacity_w'""), ('Const', '420')), ('KV', ('Const', ""'selected_module_name'""), ('Const', ""'PV-Modul 420W'"")), ('KV', ('Const', ""'selected_storage_capacity_kwh'""), ('Const', '5.1')))))))","('Dict', 2)",,project_data = {
.\tests\test_page4_images.py,7,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Test'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Kunde'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'inverter_image_b64'""), ('Name', 'png_b64')), ('KV', ('Const', ""'module_cell_technology'""), ('Const', ""'N-Type TOPCon Halfcut Bifazial'"")), ('KV', ('Const', ""'module_cell_type'""), ('Const', ""'Monokristalline'"")), ('KV', ('Const', ""'module_guarantee_combined'""), ('Const', ""'30 Jahre Produktgarantie'"")), ('KV', ('Const', ""'module_image_b64'""), ('Name', 'png_b64')), ('KV', ('Const', ""'module_quantity'""), ('Const', '12')), ('KV', ('Const', ""'module_structure'""), ('Const', ""'Glas-Glas Module'"")), ('KV', ('Const', ""'module_version'""), ('Const', ""'All-Black'"")), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'Sun2000 10KTL-M1 10 kW'"")), ('KV', ('Const', ""'selected_inverter_power_kw'""), ('Const', '10')), ('KV', ('Const', ""'selected_inverter_quantity'""), ('Const', '1')), ('KV', ('Const', ""'selected_module_capacity_w'""), ('Const', '460')), ('KV', ('Const', ""'selected_storage_name'""), ('Const', ""'LUNA2000-7-S1-7kWh Stromspeicher'"")), ('KV', ('Const', ""'selected_storage_power_kw'""), ('Const', '7.0')), ('KV', ('Const', ""'selected_storage_storage_power_kw'""), ('Const', '7.0')), ('KV', ('Const', ""'storage_image_b64'""), ('Name', 'png_b64')))))))","('Dict', 2)",png_b64,project_data={
.\tools\debug_dynamic_page3.py,3,project_data,"('Dict', (('KV', ('Const', ""'annual_consumption_kwh'""), ('Const', '6000')), ('KV', ('Const', ""'einspeise_art'""), ('Const', ""'parts'""))))","('Dict', 2)",,project_data = {
.\tools\test_build_dynamic_data.py,3,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'A'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'B'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'include_storage'""), ('Const', 'True')), ('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'Sun2000 10KTL-M1 10 kW Wechselrichter'"")), ('KV', ('Const', ""'selected_module_name'""), ('Const', ""'Neostar 2S+ 455W'"")), ('KV', ('Const', ""'selected_storage_name'""), ('Const', ""'ECS4100 -H3 12,09 kWh Stromspeicher'"")))))))","('Dict', 2)",,project_data = {
.\tools\test_main6_render.py,13,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterweg'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@example.com'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'house_number'""), ('Const', ""'12'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'phone_mobile'""), ('Const', ""'+491234567'"")), ('KV', ('Const', ""'salutation'""), ('Const', ""'Herr'"")), ('KV', ('Const', ""'title'""), ('Const', ""''"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'electricity_price_increase_annual_percent'""), ('Const', '5')), ('KV', ('Const', ""'include_storage'""), ('Const', 'True')), ('KV', ('Const', ""'module_cell_technology'""), ('Const', ""'Monokristallin N-Type'"")), ('KV', ('Const', ""'module_cell_type'""), ('Const', ""'108 Halbzellen'"")), ('KV', ('Const', ""'module_guarantee_combined'""), ('Const', ""'25 Jahre Produktgarantie | 30 Jahre Leistungsgarantie'"")), ('KV', ('Const', ""'module_manufacturer'""), ('Const', ""'JA Solar'"")), ('KV', ('Const', ""'module_model'""), ('Const', ""'JAM54S31-420/MR'"")), ('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'module_structure'""), ('Const', ""'Glas-Folie'"")), ('KV', ('Const', ""'module_version'""), ('Const', ""'Black Frame'"")), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'Huawei SUN2000-8KTL-M1'"")), ('KV', ('Const', ""'selected_inverter_power_kw'""), ('Const', '8')), ('KV', ('Const', ""'selected_inverter_quantity'""), ('Const', '1')), ('KV', ('Const', ""'selected_module_capacity_w'""), ('Const', '420')), ('KV', ('Const', ""'selected_storage_name'""), ('Const', ""'Huawei LUNA2000-7-S1-7kWh Stromspeicher'"")), ('KV', ('Const', ""'stromkosten_haushalt_euro_monat'""), ('Const', '150')), ('KV', ('Const', ""'stromkosten_heizung_euro_monat'""), ('Const', '50')))))))","('Dict', 2)",,project_data = {
.\tools\test_main_pdf.py,42,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterstraße'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@example.com'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'house_number'""), ('Const', ""'1'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'phone_mobile'""), ('Const', ""'0151 2345678'"")), ('KV', ('Const', ""'salutation'""), ('Const', ""'Herr'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'WR 5kW'"")), ('KV', ('Const', ""'selected_module_capacity_w'""), ('Const', '420')), ('KV', ('Const', ""'selected_module_name'""), ('Const', ""'PV-Modul 420W'"")), ('KV', ('Const', ""'selected_storage_capacity_kwh'""), ('Const', '5.1')))))))","('Dict', 2)",,project_data = {
.\tools\test_page4_images.py,7,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Test'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Kunde'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'inverter_image_b64'""), ('Name', 'png_b64')), ('KV', ('Const', ""'module_cell_technology'""), ('Const', ""'N-Type TOPCon Halfcut Bifazial'"")), ('KV', ('Const', ""'module_cell_type'""), ('Const', ""'Monokristalline'"")), ('KV', ('Const', ""'module_guarantee_combined'""), ('Const', ""'30 Jahre Produktgarantie'"")), ('KV', ('Const', ""'module_image_b64'""), ('Name', 'png_b64')), ('KV', ('Const', ""'module_quantity'""), ('Const', '12')), ('KV', ('Const', ""'module_structure'""), ('Const', ""'Glas-Glas Module'"")), ('KV', ('Const', ""'module_version'""), ('Const', ""'All-Black'"")), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'Sun2000 10KTL-M1 10 kW'"")), ('KV', ('Const', ""'selected_inverter_power_kw'""), ('Const', '10')), ('KV', ('Const', ""'selected_inverter_quantity'""), ('Const', '1')), ('KV', ('Const', ""'selected_module_capacity_w'""), ('Const', '460')), ('KV', ('Const', ""'selected_storage_name'""), ('Const', ""'LUNA2000-7-S1-7kWh Stromspeicher'"")), ('KV', ('Const', ""'selected_storage_power_kw'""), ('Const', '7.0')), ('KV', ('Const', ""'selected_storage_storage_power_kw'""), ('Const', '7.0')), ('KV', ('Const', ""'storage_image_b64'""), ('Name', 'png_b64')))))))","('Dict', 2)",png_b64,project_data={
.\tools\portings\patches\debug_logo_rendering.py.insert.py,19,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_name'""), ('Const', ""'Test Inverter'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_name'""), ('Const', ""'Test Module'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_name'""), ('Const', ""'Test Storage'""))))))))))","('Dict', 2)",,project_data = {
.\debug_brand_extraction.py,13,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', ())), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\debug_logo_pdf.py,20,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', ())), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\pdf_ui.py,223,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Name', 'customer_data_pdf')), ('KV', ('Const', ""'heatpump_offer'""), ('Name', 'hp_offer')), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '0.1')), ('KV', ('Const', ""'module_quantity'""), ('Const', '1')), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'Placeholder WR'"")), ('KV', ('Const', ""'selected_module_name'""), ('Const', ""'Placeholder Modul'"")))))))","('Dict', 3)","customer_data_pdf,hp_offer",project_data = {
.\simple_logo_test.py,20,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', ())), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_pdf.py.insert.py,19,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', ())), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\notwendig oder nicht\wichtig\portings\patches\simple_logo_test.py.insert.py,19,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', ())), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\notwendig oder nicht\wichtig\portings\patches\test_final_pdf_logos.py.insert.py,18,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterstraße 1'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@beispiel.de'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'roof_area'""), ('Const', '50')), ('KV', ('Const', ""'roof_orientation'""), ('Const', ""'Süd'""))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\notwendig oder nicht\wichtig\portings\patches\test_pdf_logos.py.insert.py,18,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterstraße 1'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@beispiel.de'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'roof_area'""), ('Const', '50')), ('KV', ('Const', ""'roof_orientation'""), ('Const', ""'Süd'""))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\notwendig oder nicht\wichtig\portings\patches\test_section_titles_logos.py.insert.py,17,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'selected_inverter_power_kw'""), ('Const', '10.5')), ('KV', ('Const', ""'selected_storage_capacity_kwh'""), ('Const', '15.6'))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\tests\test_final_pdf_logos.py,19,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterstraße 1'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@beispiel.de'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'roof_area'""), ('Const', '50')), ('KV', ('Const', ""'roof_orientation'""), ('Const', ""'Süd'""))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\tests\test_pdf_logos.py,19,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterstraße 1'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@beispiel.de'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'roof_area'""), ('Const', '50')), ('KV', ('Const', ""'roof_orientation'""), ('Const', ""'Süd'""))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\tests\test_section_titles_logos.py,18,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'selected_inverter_power_kw'""), ('Const', '10.5')), ('KV', ('Const', ""'selected_storage_capacity_kwh'""), ('Const', '15.6'))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\tools\portings\patches\debug_logo_pdf.py.insert.py,19,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', ())), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\tools\portings\patches\simple_logo_test.py.insert.py,19,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', ())), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\tools\portings\patches\test_final_pdf_logos.py.insert.py,18,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterstraße 1'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@beispiel.de'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'roof_area'""), ('Const', '50')), ('KV', ('Const', ""'roof_orientation'""), ('Const', ""'Süd'""))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\tools\portings\patches\test_pdf_logos.py.insert.py,18,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterstraße 1'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@beispiel.de'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'roof_area'""), ('Const', '50')), ('KV', ('Const', ""'roof_orientation'""), ('Const', ""'Süd'""))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\tools\portings\patches\test_section_titles_logos.py.insert.py,17,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'selected_inverter_power_kw'""), ('Const', '10.5')), ('KV', ('Const', ""'selected_storage_capacity_kwh'""), ('Const', '15.6'))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\calculations.py,2350,project_details,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'project_details'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"project_details = project_data.get(""project_details"", {})"
.\crm.py,688,project_details,"('Call', ('Name', 'load_project'), (('Name', 'conn'), ('Name', 'selected_project_id')), ())","('Call', 2, 0)","conn,load_project,selected_project_id","project_details = load_project(conn, selected_project_id)"
.\doc_output.py,124,project_details,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'project_details'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"project_details = project_data.get('project_details', {})"
.\doc_output.py,131,project_details,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'project_details'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"project_details = project_data.get('project_details', {})"
.\live_preview_helpers.py,198,project_details,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'project_details'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"project_details = project_data.get('project_details', {})"
.\pdf_generator.py,2992,project_details,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'project_details'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"project_details = project_data.get('project_details', {})"
.\pdf_ui.py,1438,project_details,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'project_details'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"project_details = project_data.get('project_details', {})"
.\calculations.py,2503,pvgis_enabled,"('Call', ('Name', 'bool'), (('Name', 'pvgis_setting_raw'),), ())","('Call', 1, 0)","bool,pvgis_setting_raw",pvgis_enabled = bool(pvgis_setting_raw)
.\calculations.py,2514,pvgis_enabled,"('Call', ('Name', 'bool'), (('Call', ('Attr', 'global_constants', 'get'), (('Const', ""'pvgis_enabled'""), ('Const', 'False')), ()),), ())","('Call', 1, 0)","bool,global_constants","pvgis_enabled = bool(global_constants.get(""pvgis_enabled"", False))  # Default auf false"
.\dev_tools\kakerlake_ultra_cleaner.py,374,r,"('Attr', 'orig.value', 'right')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\dev_tools\kakerlake_ultra_cleaner.py,392,r,"('Attr', 'orig.value', 'right')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\dev_tools\kakerlake_ultra_cleaner.py,408,r,"('Attr', 'node', 'right')","('Attr',)",node,l=node.left; r=node.right
.\dev_tools\kakerlake_ultra_cleaner.py,421,r,"('Attr', 'val', 'right')","('Attr',)",val,l=val.left; r=val.right
.\mnt\data\kakerlake_ultra_cleaner.py,374,r,"('Attr', 'orig.value', 'right')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\mnt\data\kakerlake_ultra_cleaner.py,392,r,"('Attr', 'orig.value', 'right')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\mnt\data\kakerlake_ultra_cleaner.py,408,r,"('Attr', 'node', 'right')","('Attr',)",node,l=node.left; r=node.right
.\mnt\data\kakerlake_ultra_cleaner.py,421,r,"('Attr', 'val', 'right')","('Attr',)",val,l=val.left; r=val.right
.\tools\kakerlake_ultra_cleaner.py,375,r,"('Attr', 'orig.value', 'right')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\tools\kakerlake_ultra_cleaner.py,393,r,"('Attr', 'orig.value', 'right')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\tools\kakerlake_ultra_cleaner.py,409,r,"('Attr', 'node', 'right')","('Attr',)",node,l=node.left; r=node.right
.\tools\kakerlake_ultra_cleaner.py,422,r,"('Attr', 'val', 'right')","('Attr',)",val,l=val.left; r=val.right
.\pdf_erstellen_komplett.py,145,r,"('Call', ('Name', 'PdfReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'pdf_bytes'),), ()),), ())","('Call', 1, 0)","PdfReader,io,pdf_bytes",r = PdfReader(io.BytesIO(pdf_bytes))
.\pdf_erstellen_komplett.py,237,r,"('Call', ('Name', 'PdfReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'pdf_bytes'),), ()),), ())","('Call', 1, 0)","PdfReader,io,pdf_bytes",r = PdfReader(io.BytesIO(pdf_bytes))
.\pdf_generator.py,426,r,"('Call', ('Name', 'PdfReader'), (('Call', ('Attr', '_io', 'BytesIO'), (('Name', 'part'),), ()),), ())","('Call', 1, 0)","PdfReader,_io,part",r = PdfReader(_io.BytesIO(part))
.\pdf_styles.py,652,r,"('Call', ('Name', 'int'), (('Mult', (('Const', '255'), ('Sub', ('Const', '1'), ('Mult', (('Div', ('Name', 'y'), ('Name', 'height')), ('Name', 'opacity')))))),), ())","('Call', 1, 0)","height,int,opacity,y",r = int(255 * (1 - y / height * opacity))
.\notwendig oder nicht\wichtig\repo_porter.py,490,r,"('Call', ('Attr', 'csv', 'DictReader'), (('Name', 'f'),), ())","('Call', 1, 0)","csv,f",r = csv.DictReader(f)
.\notwendig oder nicht\wichtig\repo_porter_select.py,132,r,"('Call', ('Attr', 'csv', 'DictReader'), (('Name', 'f'),), ())","('Call', 1, 0)","csv,f",r = csv.DictReader(f)
.\tools\count_pages.py,9,r,"('Call', ('Name', 'PdfReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'data'),), ()),), ())","('Call', 1, 0)","PdfReader,data,io",r = PdfReader(io.BytesIO(data))
.\tools\repo_porter.py,490,r,"('Call', ('Attr', 'csv', 'DictReader'), (('Name', 'f'),), ())","('Call', 1, 0)","csv,f",r = csv.DictReader(f)
.\tools\repo_porter_select.py,132,r,"('Call', ('Attr', 'csv', 'DictReader'), (('Name', 'f'),), ())","('Call', 1, 0)","csv,f",r = csv.DictReader(f)
.\utils\remove_text.py,20,r,"('Call', ('Attr', 'fitz', 'Rect'), (('Subscript', ('Name', 'block'), ('Const', ""'bbox'"")),), ())","('Call', 1, 0)","block,fitz","r = fitz.Rect(block[""bbox""])"
.\pdf_atomizer.py,237,raw,"('Call', ('Attr', 'doc', 'extract_image'), (('Name', 'xref'),), ())","('Call', 1, 0)","doc,xref",raw = doc.extract_image(xref)
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,34,raw,"('Call', ('Attr', 'base64', 'b64decode'), (('Name', 's'),), ())","('Call', 1, 0)","base64,s",raw = base64.b64decode(s)
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,36,raw,"('Call', ('Attr', 'base64', 'b64decode'), (('Name', 's'),), ())","('Call', 1, 0)","base64,s",raw = base64.b64decode(s)
.\pdf_template_engine\dynamic_overlay.py,66,raw,"('Call', ('Attr', 'base64', 'b64decode'), (('Name', 's'),), ())","('Call', 1, 0)","base64,s",raw = base64.b64decode(s)
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,34,raw,"('Call', ('Attr', 'base64', 'b64decode'), (('Name', 's'),), ())","('Call', 1, 0)","base64,s",raw = base64.b64decode(s)
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,36,raw,"('Call', ('Attr', 'base64', 'b64decode'), (('Name', 's'),), ())","('Call', 1, 0)","base64,s",raw = base64.b64decode(s)
.\pdf_generator.py,568,reader,"('Call', ('Name', 'PdfReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'pdf_bytes'),), ()),), ())","('Call', 1, 0)","PdfReader,io,pdf_bytes",reader = PdfReader(io.BytesIO(pdf_bytes))
.\pdf_generator.py,2933,reader,"('Call', ('Name', 'PdfReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'pdf_file'),), ()),), ())","('Call', 1, 0)","PdfReader,io,pdf_file",reader = PdfReader(io.BytesIO(pdf_file))
.\pdf_generator.py,309,reader,"('Call', ('Name', 'PdfReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'pdf_file'),), ()),), ())","('Call', 1, 0)","PdfReader,io,pdf_file",reader = PdfReader(io.BytesIO(pdf_file))
.\pdf_generator.py,2928,reader,"('Call', ('Name', 'PdfReader'), (('Name', 'f'),), ())","('Call', 1, 0)","PdfReader,f",reader = PdfReader(f)
.\pdf_generator.py,2939,reader,"('Call', ('Name', 'PdfReader'), (('Name', 'pdf_file'),), ())","('Call', 1, 0)","PdfReader,pdf_file",reader = PdfReader(pdf_file)
.\pdf_generator.py,304,reader,"('Call', ('Name', 'PdfReader'), (('Name', 'f'),), ())","('Call', 1, 0)","PdfReader,f",reader = PdfReader(f)
.\pdf_generator.py,315,reader,"('Call', ('Name', 'PdfReader'), (('Name', 'pdf_file'),), ())","('Call', 1, 0)","PdfReader,pdf_file",reader = PdfReader(pdf_file)
.\product_attributes.py,239,reader,"('Call', ('Attr', 'csv', 'DictReader'), (('Name', 'f'),), ())","('Call', 1, 0)","csv,f",reader = csv.DictReader(f)
.\tools\import_module_attributes_generic.py,153,rec,"('Call', ('Name', 'get_product_by_model_name'), (('Name', 'model_name'),), ())","('Call', 1, 0)","get_product_by_model_name,model_name",rec = get_product_by_model_name(model_name)
.\tools\import_module_attributes_generic.py,498,rec,"('Call', ('Name', '_parse_kv_lines'), (('Name', 'text'),), ())","('Call', 1, 0)","_parse_kv_lines,text",rec = _parse_kv_lines(text)
.\tools\import_module_attributes_generic.py,510,rec,"('Call', ('Name', 'get_product_by_model_name'), (('Name', 'stem'),), ())","('Call', 1, 0)","get_product_by_model_name,stem",rec = get_product_by_model_name(stem)
.\heatpump_ui.py,403,recommended_list,"('Name', 'suitable')","('Name',)",suitable,recommended_list = suitable
.\heatpump_ui.py,407,recommended_list,"('Name', 'candidates')","('Name',)",candidates,recommended_list = candidates
.\analysis.py,395,red,"('Call', ('Name', 'float'), (('Call', ('Attr', 'cheat', 'get'), (('Const', ""'value_years'""),), ()),), ())","('Call', 1, 0)","cheat,float","red = float(cheat.get(""value_years""))"
.\calculations.py,3327,red,"('Call', ('Name', 'float'), (('Name', 'cheated_value_years'),), ())","('Call', 1, 0)","cheated_value_years,float",red = float(cheated_value_years)
.\excel_eval.py,207,refs,"('Call', ('Name', 'scan_formulas_openpyxl'), (('Name', 'path'),), (('limit', ('Name', 'limit')),))","('Call', 1, 1)","limit,path,scan_formulas_openpyxl","refs = scan_formulas_openpyxl(path, limit=limit)"
.\excel_eval.py,224,refs,"('Call', ('Name', 'scan_formulas_openpyxl'), (('Name', 'path'),), (('limit', ('Name', 'limit')),))","('Call', 1, 1)","limit,path,scan_formulas_openpyxl","refs = scan_formulas_openpyxl(path, limit=limit)"
.\excel_eval.py,297,refs,"('Call', ('Name', 'scan_formulas_openpyxl'), (('Name', 'path'),), (('limit', ('Name', 'sample_limit')),))","('Call', 1, 1)","path,sample_limit,scan_formulas_openpyxl","refs = scan_formulas_openpyxl(path, limit=sample_limit)"
.\excel_eval.py,262,rel,"('Call', ('Attr', 'p', 'relative_to'), (('Name', 'base'),), ())","('Call', 1, 0)","base,p",rel = p.relative_to(base)
.\dev_tools\kakerlake_ultra_cleaner.py,537,rel,"('Call', ('Attr', 'p', 'relative_to'), (('Call', ('Name', 'Path'), (('Name', 'root'),), ()),), ())","('Call', 1, 0)","Path,p,root",rel=p.relative_to(Path(root));
.\dev_tools\kakerlake_ultra_cleaner.py,528,rel,"('Call', ('Attr', 'path', 'relative_to'), (('Name', 'root_path'),), ())","('Call', 1, 0)","path,root_path",rel=path.relative_to(root_path);
.\mnt\data\kakerlake_ultra_cleaner.py,537,rel,"('Call', ('Attr', 'p', 'relative_to'), (('Call', ('Name', 'Path'), (('Name', 'root'),), ()),), ())","('Call', 1, 0)","Path,p,root",rel=p.relative_to(Path(root));
.\mnt\data\kakerlake_ultra_cleaner.py,528,rel,"('Call', ('Attr', 'path', 'relative_to'), (('Name', 'root_path'),), ())","('Call', 1, 0)","path,root_path",rel=path.relative_to(root_path);
.\tools\kakerlake_ultra_cleaner.py,538,rel,"('Call', ('Attr', 'p', 'relative_to'), (('Call', ('Name', 'Path'), (('Name', 'root'),), ()),), ())","('Call', 1, 0)","Path,p,root",rel=p.relative_to(Path(root));
.\tools\kakerlake_ultra_cleaner.py,529,rel,"('Call', ('Attr', 'path', 'relative_to'), (('Name', 'root_path'),), ())","('Call', 1, 0)","path,root_path",rel=path.relative_to(root_path);
.\dev_tools\kakerlake_ultra_cleaner.py,516,rel,"('Call', ('Attr', 'os.path', 'relpath'), (('Name', 'p'), ('Name', 'root')), ())","('Call', 2, 0)","os,p,root","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\mnt\data\kakerlake_ultra_cleaner.py,516,rel,"('Call', ('Attr', 'os.path', 'relpath'), (('Name', 'p'), ('Name', 'root')), ())","('Call', 2, 0)","os,p,root","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\notwendig oder nicht\wichtig\repo_to_json.py,158,rel,"('Call', ('Attr', 'str(path.relative_to(root))', 'replace'), (('Const', ""'\\\\'""), ('Const', ""'/'"")), ())","('Call', 2, 0)","path,root,str","rel = str(path.relative_to(root)).replace(""\\"", ""/"")"
.\tools\kakerlake_ultra_cleaner.py,517,rel,"('Call', ('Attr', 'os.path', 'relpath'), (('Name', 'p'), ('Name', 'root')), ())","('Call', 2, 0)","os,p,root","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\tools\repo_to_json.py,158,rel,"('Call', ('Attr', 'str(path.relative_to(root))', 'replace'), (('Const', ""'\\\\'""), ('Const', ""'/'"")), ())","('Call', 2, 0)","path,root,str","rel = str(path.relative_to(root)).replace(""\\"", ""/"")"
.\.tmp_placeholder_test.py,33,res,"('Call', ('Attr', 'placeholders', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,company_info,placeholders,project_data","res = placeholders.build_dynamic_data(project_data, analysis_results, company_info)"
.\debug_page3_check.py,55,res,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","res = build_dynamic_data(project_data, analysis_results, company_info)"
.\notwendig oder nicht\wichtig\portings\patches\debug_page3_check.py.insert.py,33,res,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","res = build_dynamic_data(project_data, analysis_results, company_info)"
.\notwendig oder nicht\wichtig\portings\patches\tools\test_page3_values.py.insert.py,20,res,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","res = build_dynamic_data(project_data, analysis_results, {})"
.\tests\test_page3_values.py,25,res,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","res = build_dynamic_data(project_data, analysis_results, {})"
.\tools\debug_dynamic_page3.py,18,res,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","res = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\test_page3_values.py,25,res,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","res = build_dynamic_data(project_data, analysis_results, {})"
.\tools\portings\patches\debug_page3_check.py.insert.py,33,res,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","res = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\portings\patches\tools\test_page3_values.py.insert.py,20,res,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","res = build_dynamic_data(project_data, analysis_results, {})"
.\ai_companion.py,105,result,"('Call', ('Attr', 'response', 'json'), (), ())","('Call', 0, 0)",response,result = response.json()
.\brand_logo_db.py,117,result,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,result = cursor.fetchone()
.\check_companies.py,83,result,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,result = cursor.fetchone()
.\check_product_image_details.py,12,result,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,result = cursor.fetchone()
.\multi_offer_generator_old.py,1215,result,"('Call', ('Attr', 'future', 'result'), (), ())","('Call', 0, 0)",future,result = future.result()
.\components\progress_demo.py,51,result,"('Call', ('Name', 'complex_calculation'), (), ())","('Call', 0, 0)",complex_calculation,result = complex_calculation()
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,115,result,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,result = cursor.fetchone()
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,130,result,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,result = cursor.fetchone()
.\notwendig oder nicht\wichtig\portings\patches\check_product_image_details.py.insert.py,17,result,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,result = cursor.fetchone()
.\notwendig oder nicht\wichtig\portings\patches\test_admin_fix.py.insert.py,40,result,"('Call', ('Attr', ""input_val or ''"", 'strip'), (), ())","('Call', 0, 0)",input_val,"result = (input_val or """").strip()"
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,198,result,"('Call', ('Name', 'test_func'), (), ())","('Call', 0, 0)",test_func,result = test_func()
.\tests\test_admin_fix.py,36,result,"('Call', ('Attr', ""input_val or ''"", 'strip'), (), ())","('Call', 0, 0)",input_val,"result = (input_val or """").strip()"
.\tests\test_logo_integration.py,171,result,"('Call', ('Name', 'test_func'), (), ())","('Call', 0, 0)",test_func,result = test_func()
.\tools\out_selected\patches\brand_logo_db.py.insert.py,115,result,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,result = cursor.fetchone()
.\tools\portings\patches\brand_logo_db.py.insert.py,130,result,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,result = cursor.fetchone()
.\tools\portings\patches\check_product_image_details.py.insert.py,17,result,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,result = cursor.fetchone()
.\tools\portings\patches\test_admin_fix.py.insert.py,40,result,"('Call', ('Attr', ""input_val or ''"", 'strip'), (), ())","('Call', 0, 0)",input_val,"result = (input_val or """").strip()"
.\tools\portings\patches\test_logo_integration.py.insert.py,198,result,"('Call', ('Name', 'test_func'), (), ())","('Call', 0, 0)",test_func,result = test_func()
.\debug_brand_extraction.py,46,result,"('Call', ('Name', 'extract_brands_from_project_data'), (('Name', 'project_data'),), ())","('Call', 1, 0)","extract_brands_from_project_data,project_data",result = extract_brands_from_project_data(project_data)
.\german_formatting.py,69,result,"('Call', ('Name', 'format_german_number'), (('Name', 'value'),), ())","('Call', 1, 0)","format_german_number,value",result = format_german_number(value)
.\central_pdf_system.py,212,result,"('Call', ('Name', 'generate_mega_hybrid_pdf'), (('Other', 'Starred'),), (('**', ('Name', 'debug_kwargs')),))","('Call', 1, 1)","args,debug_kwargs,generate_mega_hybrid_pdf","result = generate_mega_hybrid_pdf(*args, **debug_kwargs)"
.\central_pdf_system.py,236,result,"('Call', ('Name', 'system_func'), (('Other', 'Starred'),), (('**', ('Name', 'kwargs')),))","('Call', 1, 1)","args,kwargs,system_func","result = system_func(*args, **kwargs)"
.\central_pdf_system.py,261,result,"('Call', ('Name', 'system_func'), (('Other', 'Starred'),), (('**', ('Name', 'kwargs')),))","('Call', 1, 1)","args,kwargs,system_func","result = system_func(*args, **kwargs)"
.\central_pdf_system.py,571,result,"('Call', ('Name', 'system_func'), (('Other', 'Starred'),), (('**', ('Name', 'kwargs')),))","('Call', 1, 1)","args,kwargs,system_func","result = system_func(*args, **kwargs)"
.\central_pdf_system.py,585,result,"('Call', ('Name', 'system_func'), (('Other', 'Starred'),), (('**', ('Name', 'kwargs')),))","('Call', 1, 1)","args,kwargs,system_func","result = system_func(*args, **kwargs)"
.\central_pdf_system.py,597,result,"('Call', ('Name', 'system_func'), (('Other', 'Starred'),), (('**', ('Name', 'kwargs')),))","('Call', 1, 1)","args,kwargs,system_func","result = system_func(*args, **kwargs)"
.\components\progress_manager.py,412,result,"('Call', ('Name', 'func'), (('Other', 'Starred'),), (('**', ('Name', 'kwargs')),))","('Call', 1, 1)","args,func,kwargs","result = func(*args, **kwargs)"
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,53,result,"('Call', ('Name', 'func'), (('Other', 'Starred'),), (('**', ('Name', 'kwargs')),))","('Call', 1, 1)","args,func,kwargs","result = func(*args, **kwargs)"
.\tools\out_selected\patches\components\progress_manager.py.insert.py,53,result,"('Call', ('Name', 'func'), (('Other', 'Starred'),), (('**', ('Name', 'kwargs')),))","('Call', 1, 1)","args,func,kwargs","result = func(*args, **kwargs)"
.\notwendig oder nicht\wichtig\portings\patches\test_page1_alignment.py.insert.py,21,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","result = build_dynamic_data(project_data, analysis_results, {})"
.\notwendig oder nicht\wichtig\portings\patches\test_right_alignment.py.insert.py,24,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","result = build_dynamic_data(project_data, analysis_results, {})"
.\notwendig oder nicht\wichtig\portings\patches\test_roof_data.py.insert.py,24,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","result = build_dynamic_data(project_data, analysis_results, company_info)"
.\notwendig oder nicht\wichtig\portings\patches\test_roof_data.py.insert.py,37,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","result = build_dynamic_data(project_data, analysis_results, company_info)"
.\notwendig oder nicht\wichtig\portings\patches\test_roof_data.py.insert.py,45,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","result = build_dynamic_data(project_data, analysis_results, company_info)"
.\tests\test_page1_alignment.py,22,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","result = build_dynamic_data(project_data, analysis_results, {})"
.\tests\test_right_alignment.py,25,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","result = build_dynamic_data(project_data, analysis_results, {})"
.\tests\test_roof_data.py,25,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","result = build_dynamic_data(project_data, analysis_results, company_info)"
.\tests\test_roof_data.py,38,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","result = build_dynamic_data(project_data, analysis_results, company_info)"
.\tests\test_roof_data.py,46,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","result = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\portings\patches\test_page1_alignment.py.insert.py,21,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","result = build_dynamic_data(project_data, analysis_results, {})"
.\tools\portings\patches\test_right_alignment.py.insert.py,24,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","result = build_dynamic_data(project_data, analysis_results, {})"
.\tools\portings\patches\test_roof_data.py.insert.py,24,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","result = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\portings\patches\test_roof_data.py.insert.py,37,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","result = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\portings\patches\test_roof_data.py.insert.py,45,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","result = build_dynamic_data(project_data, analysis_results, company_info)"
.\calculations.py,4298,results,"('Call', ('Name', 'perform_calculations'), (('Name', 'project_data'), ('Dict', ()), ('Name', 'calculation_errors')), ())","('Call', 3, 0)","calculation_errors,perform_calculations,project_data","results = perform_calculations(project_data, {}, calculation_errors)  # texts"
.\multi_offer_generator_old.py,856,results,"('Call', ('Name', 'perform_calculations'), (('Name', 'customer_project_data'), ('Name', 'texts'), ('Name', 'errors_list')), ())","('Call', 3, 0)","customer_project_data,errors_list,perform_calculations,texts","results = perform_calculations(customer_project_data, texts, errors_list)"
.\multi_offer_generator_old.py,1405,results,"('Call', ('Attr', 'generator', 'generate_all_pdfs_parallel'), (('Name', 'selected_companies'), ('Attr', 'st.session_state', 'multi_offer_project_data'), ('Name', 'analysis_results'), ('Name', 'texts'), ('Other', 'Lambda')), ())","('Call', 5, 0)","analysis_results,generator,p,progress_bar,selected_companies,st,texts",results = generator.generate_all_pdfs_parallel(
.\notwendig oder nicht\calculations_cli.py,53,results,"('Call', ('Name', 'perform_calculations'), (('Name', 'project_data'), ('Name', 'texts'), ('Name', 'errors_list'), ('Name', 'simulation_duration_user'), ('Name', 'electricity_price_increase_user')), ())","('Call', 5, 0)","electricity_price_increase_user,errors_list,perform_calculations,project_data,simulation_duration_user,texts","results: Dict[str, Any] = perform_calculations("
.\notwendig oder nicht\keine ahnung\calculations_cli.py,53,results,"('Call', ('Name', 'perform_calculations'), (('Name', 'project_data'), ('Name', 'texts'), ('Name', 'errors_list'), ('Name', 'simulation_duration_user'), ('Name', 'electricity_price_increase_user')), ())","('Call', 5, 0)","electricity_price_increase_user,errors_list,perform_calculations,project_data,simulation_duration_user,texts","results: Dict[str, Any] = perform_calculations("
.\notwendig oder nicht\need or not\calculations_cli.py,53,results,"('Call', ('Name', 'perform_calculations'), (('Name', 'project_data'), ('Name', 'texts'), ('Name', 'errors_list'), ('Name', 'simulation_duration_user'), ('Name', 'electricity_price_increase_user')), ())","('Call', 5, 0)","electricity_price_increase_user,errors_list,perform_calculations,project_data,simulation_duration_user,texts","results: Dict[str, Any] = perform_calculations("
.\notwendig oder nicht\wichtig\repo_porter.py,154,root,"('Call', ('Attr', 'root', 'resolve'), (), ())","('Call', 0, 0)",root,root = root.resolve()
.\notwendig oder nicht\wichtig\repo_to_json.py,259,root,"('Call', ('Attr', 'Path(args.root)', 'resolve'), (), ())","('Call', 0, 0)","Path,args",root = Path(args.root).resolve()
.\tools\repo_porter.py,154,root,"('Call', ('Attr', 'root', 'resolve'), (), ())","('Call', 0, 0)",root,root = root.resolve()
.\tools\repo_to_json.py,259,root,"('Call', ('Attr', 'Path(args.root)', 'resolve'), (), ())","('Call', 0, 0)","Path,args",root = Path(args.root).resolve()
.\multi_offer_generator.py,788,rotation_step,"('Call', ('Attr', 'base_settings', 'get'), (('Other', 'JoinedStr'), ('Const', '1')), ())","('Call', 2, 0)","base_settings,category","rotation_step = base_settings.get(f""{category}_rotation_step"", 1)"
.\multi_offer_generator.py,791,rotation_step,"('Call', ('Attr', 'random', 'randint'), (('Const', '1'), ('Sub', ('Call', ('Name', 'len'), (('Name', 'available_products'),), ()), ('Const', '1'))), ())","('Call', 2, 0)","available_products,len,random","rotation_step = random.randint(1, len(available_products) - 1)"
.\multi_offer_generator.py,793,rotation_step,"('Call', ('Attr', 'base_settings', 'get'), (('Const', ""'product_rotation_step'""), ('Const', '1')), ())","('Call', 2, 0)",base_settings,"rotation_step = base_settings.get(""product_rotation_step"", 1)"
.\check_db.py,20,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\crm.py,189,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\crm.py,234,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\database.py,1741,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\database.py,140,row,"('Call', ('Attr', 'cur', 'fetchone'), (), ())","('Call', 0, 0)",cur,row = cur.fetchone()
.\database.py,159,row,"('Call', ('Attr', 'cur', 'fetchone'), (), ())","('Call', 0, 0)",cur,row = cur.fetchone()
.\database.py,283,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\database.py,386,row,"('Call', ('Attr', 'cur', 'fetchone'), (), ())","('Call', 0, 0)",cur,row = cur.fetchone()
.\database.py,1101,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\database.py,1190,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone(); return dict(row) if row else None
.\database.py,1334,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone(); return dict(row) if row else None
.\database.py,1431,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\database.py,1616,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\database.py,1657,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\database.py,1988,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\multi_offer_generator.py,667,row,"('Call', ('Attr', 'cur', 'fetchone'), (), ())","('Call', 0, 0)",cur,row = cur.fetchone()
.\pdf_ui.py,1223,row,"('Call', ('Attr', 'cur', 'fetchone'), (), ())","('Call', 0, 0)",cur,row = cur.fetchone()
.\product_attributes.py,54,row,"('Call', ('Attr', 'cur', 'fetchone'), (), ())","('Call', 0, 0)",cur,row = cur.fetchone()
.\product_attributes.py,95,row,"('Call', ('Attr', 'cur', 'fetchone'), (), ())","('Call', 0, 0)",cur,row = cur.fetchone()
.\product_db.py,242,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,"cursor.execute(""SELECT * FROM products WHERE id=?"", (int(product_id),)); row = cursor.fetchone()"
.\product_db.py,253,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,"cursor.execute(""SELECT * FROM products WHERE model_name=? COLLATE NOCASE"", (model_name.strip(),)); row = cursor.fetchone()"
.\product_db.py,266,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,"cursor.execute(""SELECT id FROM products WHERE model_name=? COLLATE NOCASE"", (model_name.strip(),)); row = cursor.fetchone()"
.\crm.py,202,rows,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,rows = cursor.fetchall()
.\crm.py,246,rows,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,rows = cursor.fetchall()
.\database.py,116,rows,"('Call', ('Attr', 'cur', 'fetchall'), (), ())","('Call', 0, 0)",cur,rows = cur.fetchall()
.\database.py,1730,rows,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,rows = cursor.fetchall()
.\database.py,1836,rows,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,rows = cursor.fetchall()
.\product_attributes.py,127,rows,"('Call', ('Attr', 'cur', 'fetchall'), (), ())","('Call', 0, 0)",cur,rows = cur.fetchall()
.\product_db.py,232,rows,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,"cursor.execute(query, params); rows = cursor.fetchall()"
.\product_db.py,283,rows,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,"cursor.execute(""SELECT DISTINCT category FROM products WHERE category IS NOT NULL AND category != '' ORDER BY category COLLATE NOCASE""); rows = cursor.fetchall()"
.\notwendig oder nicht\python_function_recipes.py,72,rv,"('Call', ('Attr', 'pd', 'Series'), (('Call', ('Name', 'list'), (('Name', 'result_vector'),), ()),), ())","('Call', 1, 0)","list,pd,result_vector",rv = pd.Series(list(result_vector))
.\notwendig oder nicht\python_function_recipes.py,158,rv,"('Call', ('Attr', 'pd', 'Series'), (('Call', ('Name', 'list'), (('Name', 'range_vals'),), ()),), ())","('Call', 1, 0)","list,pd,range_vals",rv = pd.Series(list(range_vals))
.\analysis.py,1857,s,"('Call', ('Attr', 'str(val)', 'strip'), (), ())","('Call', 0, 0)","str,val",s = str(val).strip()
.\notwendig oder nicht\wichtig\repo_porter.py,583,s,"('Call', ('Attr', 'ln', 'lstrip'), (), ())","('Call', 0, 0)",ln,s = ln.lstrip()
.\notwendig oder nicht\wichtig\repo_porter_select.py,43,s,"('Call', ('Attr', 'line', 'strip'), (), ())","('Call', 0, 0)",line,s = line.strip()
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,26,s,"('Call', ('Attr', 'str(val)', 'strip'), (), ())","('Call', 0, 0)","str,val",s = str(val).strip()
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,28,s,"('Call', ('Attr', 'str(val)', 'strip'), (), ())","('Call', 0, 0)","str,val",s = str(val).strip()
.\pdf_template_engine\dynamic_overlay.py,58,s,"('Call', ('Attr', 'str(val)', 'strip'), (), ())","('Call', 0, 0)","str,val",s = str(val).strip()
.\pdf_template_engine\placeholders.py,434,s,"('Call', ('Attr', 'str(val)', 'strip'), (), ())","('Call', 0, 0)","str,val",s = str(val).strip()
.\pdf_template_engine\placeholders.py,464,s,"('Call', ('Attr', 'str(val)', 'strip'), (), ())","('Call', 0, 0)","str,val",s = str(val).strip()
.\pdf_template_engine\placeholders.py,1695,s,"('Call', ('Attr', 'str(val)', 'strip'), (), ())","('Call', 0, 0)","str,val",s = str(val).strip()
.\tools\import_module_attributes_generic.py,119,s,"('Call', ('Attr', 's', 'strip'), (), ())","('Call', 0, 0)",s,s = s.strip()
.\tools\repo_porter.py,583,s,"('Call', ('Attr', 'ln', 'lstrip'), (), ())","('Call', 0, 0)",ln,s = ln.lstrip()
.\tools\repo_porter_select.py,43,s,"('Call', ('Attr', 'line', 'strip'), (), ())","('Call', 0, 0)",line,s = line.strip()
.\tools\schema_extractor.py,58,s,"('Call', ('Attr', 'defn', 'upper'), (), ())","('Call', 0, 0)",defn,s = defn.upper()
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,26,s,"('Call', ('Attr', 'str(val)', 'strip'), (), ())","('Call', 0, 0)","str,val",s = str(val).strip()
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,28,s,"('Call', ('Attr', 'str(val)', 'strip'), (), ())","('Call', 0, 0)","str,val",s = str(val).strip()
.\pdf_atomizer.py,346,s,"('Call', ('Name', 'str'), (('Name', 'k'),), ())","('Call', 1, 0)","k,str",s = str(k)
.\dev_tools\kakerlake_ultra_cleaner.py,75,s,"('Call', ('Name', 'node_signature'), (('Attr', 'node', 'slice'),), ())","('Call', 1, 0)","node,node_signature",try: s=node_signature(node.slice)
.\mnt\data\kakerlake_ultra_cleaner.py,75,s,"('Call', ('Name', 'node_signature'), (('Attr', 'node', 'slice'),), ())","('Call', 1, 0)","node,node_signature",try: s=node_signature(node.slice)
.\notwendig oder nicht\python_function_recipes.py,77,s,"('Call', ('Attr', 'pd', 'Series'), (('Call', ('Name', 'list'), (('Name', 'lookup_array'),), ()),), ())","('Call', 1, 0)","list,lookup_array,pd",s = pd.Series(list(lookup_array))
.\tools\import_module_attributes_generic.py,116,s,"('Call', ('Name', 'str'), (('Name', 'val'),), ())","('Call', 1, 0)","str,val",s = str(val)
.\tools\kakerlake_ultra_cleaner.py,76,s,"('Call', ('Name', 'node_signature'), (('Attr', 'node', 'slice'),), ())","('Call', 1, 0)","node,node_signature",try: s=node_signature(node.slice)
.\notwendig oder nicht\python_function_recipes.py,14,s,"('Call', ('Attr', 'pd', 'Series'), (('Name', 'vals'),), (('dtype', ('Const', ""'float64'"")),))","('Call', 1, 1)","pd,vals","s = pd.Series(vals, dtype='float64')"
.\notwendig oder nicht\python_function_recipes.py,153,s,"('Call', ('Attr', 'pd', 'Series'), (('Name', 'vals'),), (('dtype', ('Const', ""'float64'"")),))","('Call', 1, 1)","pd,vals","s = pd.Series(vals, dtype='float64')"
.\tools\import_module_attributes_generic.py,501,s,"('Call', ('Name', '_process_record'), (('Name', 'rec'),), (('default_category', ('BoolOp', 'Or', (('Const', ""'Modul'""), ('Name', 'default_category')))),))","('Call', 1, 1)","_process_record,default_category,rec","s = _process_record(rec, default_category=(default_category or ""Modul""))"
.\tools\import_module_attributes_generic.py,475,s,"('Call', ('Name', '_process_record'), (('Name', 'flat'),), (('default_category', ('BoolOp', 'Or', (('Const', ""'Modul'""), ('Name', 'default_category')))),))","('Call', 1, 1)","_process_record,default_category,flat","s = _process_record(flat, default_category=(default_category or ""Modul""))"
.\tools\import_module_attributes_generic.py,416,s,"('Call', ('Name', '_process_record'), (('Name', 'rec'),), (('default_category', ('BoolOp', 'Or', (('Const', ""'Modul'""), ('Name', 'default_category')))),))","('Call', 1, 1)","_process_record,default_category,rec","s = _process_record(rec, default_category=(default_category or ""Modul""))"
.\tools\import_module_attributes_generic.py,377,s,"('Call', ('Name', '_process_record'), (('Name', 'rec'),), (('default_category', ('BoolOp', 'Or', (('Const', ""'Modul'""), ('Name', 'default_category')))),))","('Call', 1, 1)","_process_record,default_category,rec","s = _process_record(rec, default_category=(default_category or ""Modul""))"
.\analysis.py,1858,s,"('Call', ('Attr', ""re.sub('[^0-9,\\\\.\\\\-]', '', s)"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)","re,s","s = re.sub(r""[^0-9,\.\-]"", """", s).replace("","", ""."")"
.\pdf_template_engine\dynamic_overlay.py,215,s,"('Call', ('Attr', ""str(value).strip().replace('%', '').replace(',', '.')"", 'replace'), (('Const', ""' '""), ('Const', ""''"")), ())","('Call', 2, 0)","str,value","s = str(value).strip().replace('%', '').replace(',', '.').replace(' ', '')"
.\pdf_template_engine\placeholders.py,435,s,"('Call', ('Attr', ""re.sub('[^0-9,\\\\.\\\\-]', '', s)"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)","re,s","s = re.sub(r""[^0-9,\.\-]"", """", s).replace("","", ""."")"
.\pdf_template_engine\placeholders.py,468,s,"('Call', ('Attr', 's', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",s,"s = s.replace("","", ""."")"
.\pdf_template_engine\placeholders.py,921,s,"('Call', ('Attr', ""str(val).strip().replace('%', '').replace(',', '.')"", 'replace'), (('Const', ""' '""), ('Const', ""''"")), ())","('Call', 2, 0)","str,val","s = str(val).strip().replace('%', '').replace(',', '.').replace(' ', '')"
.\tools\import_module_attributes_generic.py,124,s,"('Call', ('Attr', 's', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",s,"s = s.replace("","", ""."")"
.\central_pdf_system.py,286,safe_inclusion_options,"('Call', ('Attr', ""safe_kwargs.get('inclusion_options', {})"", 'copy'), (), ())","('Call', 0, 0)",safe_kwargs,"safe_inclusion_options = safe_kwargs.get('inclusion_options', {}).copy()"
.\central_pdf_system.py,425,safe_inclusion_options,"('Call', ('Attr', ""kwargs.get('inclusion_options', {})"", 'copy'), (), ())","('Call', 0, 0)",kwargs,"safe_inclusion_options = kwargs.get('inclusion_options', {}).copy()"
.\analysis.py,3341,scenarios_df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Dict', (('KV', ('Const', ""'Amortisation (Jahre)'""), ('List', (('Subscript', ('Subscript', ('Name', 'fin_results'), ('Const', ""'pessimistic_scenario'"")), ('Const', ""'payback_years'"")), ('Subscript', ('Subscript', ('Name', 'fin_results'), ('Const', ""'realistic_scenario'"")), ('Const', ""'payback_years'"")), ('Subscript', ('Subscript', ('Name', 'fin_results'), ('Const', ""'optimistic_scenario'"")), ('Const', ""'payback_years'""))))), ('KV', ('Const', ""'NPV'""), ('List', (('Subscript', ('Subscript', ('Name', 'fin_results'), ('Const', ""'pessimistic_scenario'"")), ('Const', ""'npv'"")), ('Subscript', ('Subscript', ('Name', 'fin_results'), ('Const', ""'realistic_scenario'"")), ('Const', ""'npv'"")), ('Subscript', ('Subscript', ('Name', 'fin_results'), ('Const', ""'optimistic_scenario'"")), ('Const', ""'npv'""))))), ('KV', ('Const', ""'ROI (%)'""), ('List', (('Subscript', ('Subscript', ('Name', 'fin_results'), ('Const', ""'pessimistic_scenario'"")), ('Const', ""'roi_percent'"")), ('Subscript', ('Subscript', ('Name', 'fin_results'), ('Const', ""'realistic_scenario'"")), ('Const', ""'roi_percent'"")), ('Subscript', ('Subscript', ('Name', 'fin_results'), ('Const', ""'optimistic_scenario'"")), ('Const', ""'roi_percent'""))))), ('KV', ('Const', ""'Szenario'""), ('List', (('Const', ""'Pessimistisch'""), ('Const', ""'Realistisch'""), ('Const', ""'Optimistisch'"")))))),), ())","('Call', 1, 0)","fin_results,pd",scenarios_df = pd.DataFrame(
.\analysis.py,6167,scenarios_df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Subscript', ('Name', 'subsidy_scenarios'), ('Const', ""'scenarios'"")),), ())","('Call', 1, 0)","pd,subsidy_scenarios","scenarios_df = pd.DataFrame(subsidy_scenarios[""scenarios""])"
.\admin_panel.py,1477,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Call', ('Name', 'get_text_local'), (('Const', ""'admin_viz_secondary_color_label'""), ('Const', ""'Sekundäre Diagrammfarbe'"")), ()),), (('key', ('Other', 'JoinedStr')), ('value', ('Call', ('Attr', 'viz_settings', 'get'), (('Const', ""'secondary_chart_color'""), ('Call', ('Attr', 'default_viz_settings_fallback', 'get'), (('Const', ""'secondary_chart_color'""),), ())), ()))))","('Call', 1, 2)","WIDGET_KEY_SUFFIX,default_viz_settings_fallback,get_text_local,st,viz_settings","secondary_color = st.color_picker(get_text_local(""admin_viz_secondary_color_label"", ""Sekundäre Diagrammfarbe""), value=viz_settings.get(""secondary_chart_color"", default_viz_settings_fallback.get(""secondary_chart_color"")), key=f""viz_secondary_color_picker{WIDGET_KEY_SUFFIX}"")"
.\admin_panel.py,1570,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Call', ('Name', 'get_text_local'), (('Const', ""'admin_pdf_secondary_color_label'""), ('Const', ""'PDF Sekundärfarbe'"")), ()),), (('key', ('Other', 'JoinedStr')), ('value', ('Call', ('Attr', 'current_design_settings', 'get'), (('Const', ""'secondary_color'""), ('Subscript', ('Name', 'PDF_DESIGN_SETTINGS_DEFAULT'), ('Const', ""'secondary_color'""))), ()))))","('Call', 1, 2)","PDF_DESIGN_SETTINGS_DEFAULT,WIDGET_KEY_SUFFIX,current_design_settings,get_text_local,st","secondary_color = st.color_picker(get_text_local(""admin_pdf_secondary_color_label"", ""PDF Sekundärfarbe""), value=current_design_settings.get('secondary_color', PDF_DESIGN_SETTINGS_DEFAULT['secondary_color']), key=f""pdf_secondary_color{WIDGET_KEY_SUFFIX}"")"
.\central_pdf_system.py,1557,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Sekundärfarbe'""),), (('help', ('Const', ""'Hintergrundfarbe für Boxen und Tabellen'"")), ('value', ('Const', ""'#f6f6f6'""))))","('Call', 1, 2)",st,"secondary_color = st.color_picker(""Sekundärfarbe"", value=""#f6f6f6"", help=""Hintergrundfarbe für Boxen und Tabellen"")"
.\components\progress_settings.py,56,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Sekundärfarbe'""),), (('help', ('Const', ""'Akzentfarbe für Farbverläufe'"")), ('value', ('Attr', 'current_config', 'color_secondary'))))","('Call', 1, 2)","current_config,st",secondary_color = st.color_picker(
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_settings.py.insert.py,58,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Sekundärfarbe'""),), (('help', ('Const', ""'Akzentfarbe für Farbverläufe'"")), ('value', ('Attr', 'current_config', 'color_secondary'))))","('Call', 1, 2)","current_config,st",secondary_color = st.color_picker(
.\notwendig oder nicht\wichtig\portings\patches\components\progress_settings.py.insert.py,59,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Sekundärfarbe'""),), (('help', ('Const', ""'Akzentfarbe für Farbverläufe'"")), ('value', ('Attr', 'current_config', 'color_secondary'))))","('Call', 1, 2)","current_config,st",secondary_color = st.color_picker(
.\tools\out_selected\patches\components\progress_settings.py.insert.py,58,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Sekundärfarbe'""),), (('help', ('Const', ""'Akzentfarbe für Farbverläufe'"")), ('value', ('Attr', 'current_config', 'color_secondary'))))","('Call', 1, 2)","current_config,st",secondary_color = st.color_picker(
.\tools\portings\patches\components\progress_settings.py.insert.py,59,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Sekundärfarbe'""),), (('help', ('Const', ""'Akzentfarbe für Farbverläufe'"")), ('value', ('Attr', 'current_config', 'color_secondary'))))","('Call', 1, 2)","current_config,st",secondary_color = st.color_picker(
.\analysis.py,1673,secondary_color,"('Call', ('Attr', 'specific_settings', 'get'), (('Const', ""'secondary_chart_color'""), ('Call', ('Name', '_safe_viz_get'), (('Name', 'viz_settings'), ('Const', ""'secondary_chart_color'"")), ())), ())","('Call', 2, 0)","_safe_viz_get,specific_settings,viz_settings",secondary_color = specific_settings.get(
.\components\progress_demo.py,132,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Sekundärfarbe'""), ('Const', ""'#10b981'"")), ())","('Call', 2, 0)",st,"secondary_color = st.color_picker(""Sekundärfarbe"", ""#10b981"")"
.\pdf_widgets.py,150,section,"('Call', ('Attr', 'self.available_sections', 'get'), (('Name', 'section_key'), ('Dict', ())), ())","('Call', 2, 0)","section_key,self","section = self.available_sections.get(section_key, {})"
.\pdf_widgets.py,132,section,"('Call', ('Attr', 'self.available_sections', 'get'), (('Name', 'section_key'), ('Dict', ())), ())","('Call', 2, 0)","section_key,self","section = self.available_sections.get(section_key, {})"
.\pdf_widgets.py,411,section,"('Call', ('Attr', 'manager.available_sections', 'get'), (('Name', 'section_key'), ('Dict', ())), ())","('Call', 2, 0)","manager,section_key","section = manager.available_sections.get(section_key, {})"
.\pdf_generator.py,2058,section_map,"('Other', 'DictComp')","('Other', 'DictComp')","key,ordered_section_definitions_pdf,rest,tpl","section_map = {key: tpl for key, *rest in [(tpl[0], *tpl[1:]) for tpl in ordered_section_definitions_pdf] for tpl in [ (key, rest[0], rest[1]) ]}"
.\pdf_generator.py,2060,section_map,"('Other', 'DictComp')","('Other', 'DictComp')","ordered_section_definitions_pdf,tpl",section_map = {tpl[0]: tpl for tpl in ordered_section_definitions_pdf}
.\pdf_generator.py,371,segment_order,"('Other', 'IfExp')","('Other', 'IfExp')","dict,isinstance,project_data","segment_order = (project_data.get('pdf_segment_order') or []) if isinstance(project_data, dict) else []"
.\pdf_ui.py,305,segment_order,"('Other', 'IfExp')","('Other', 'IfExp')","hp_ts,pv_ts","segment_order = ['Photovoltaik','Wärmepumpe'] if pv_ts <= hp_ts else ['Wärmepumpe','Photovoltaik']"
.\crm.py,576,selected_inverter_name,"('Call', ('Attr', 'st', 'selectbox'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'inverter_model_label'""), ('Const', ""'Wechselrichter Modell'"")), ()),), (('index', ('Call', ('Attr', 'inverter_options', 'index'), (('Call', ('Attr', 'project_data_form', 'get'), (('Const', ""'selected_inverter_name'""), ('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'please_select_option'""), ('Const', ""'--- Bitte wählen ---'"")), ())), ()),), ())), ('options', ('Name', 'inverter_options'))))","('Call', 1, 2)","get_text_crm,inverter_options,project_data_form,st,texts","selected_inverter_name = st.selectbox(get_text_crm(texts, ""inverter_model_label"", ""Wechselrichter Modell""), options=inverter_options, index=inverter_options.index(project_data_form.get('selected_inverter_name', get_text_crm(texts, ""please_select_option"", ""--- Bitte wählen ---""))))"
.\multi_offer_generator_new.py,244,selected_inverter_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Wechselrichter auswählen'""),), (('index', ('Name', 'default_inverter_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'inverter_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","default_inverter_index,inverter_options,list,st",selected_inverter_name = st.selectbox(
.\multi_offer_generator_old.py,184,selected_inverter_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Wechselrichter auswählen'""),), (('index', ('Name', 'default_inverter_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'inverter_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","default_inverter_index,inverter_options,list,st",selected_inverter_name = st.selectbox(
.\multi_offer_generator_old.py,537,selected_inverter_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Wechselrichter auswählen'""),), (('index', ('Name', 'default_inverter_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'inverter_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","default_inverter_index,inverter_options,list,st",selected_inverter_name = st.selectbox(
.\crm.py,568,selected_module_name,"('Call', ('Attr', 'col_inverter', 'selectbox'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'module_model_label'""), ('Const', ""'PV Modul Modell'"")), ()),), (('index', ('Call', ('Attr', 'module_options', 'index'), (('Call', ('Attr', 'project_data_form', 'get'), (('Const', ""'selected_module_name'""), ('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'please_select_option'""), ('Const', ""'--- Bitte wählen ---'"")), ())), ()),), ())), ('options', ('Name', 'module_options'))))","('Call', 1, 2)","col_inverter,get_text_crm,module_options,project_data_form,texts","selected_module_name = col_inverter.selectbox(get_text_crm(texts, ""module_model_label"", ""PV Modul Modell""), options=module_options, index=module_options.index(project_data_form.get('selected_module_name', get_text_crm(texts, ""please_select_option"", ""--- Bitte wählen ---""))))"
.\multi_offer_generator_new.py,225,selected_module_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Photovoltaik-Modul auswählen'""),), (('index', ('Name', 'default_module_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'module_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","default_module_index,list,module_options,st",selected_module_name = st.selectbox(
.\multi_offer_generator_old.py,167,selected_module_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Photovoltaik-Modul auswählen'""),), (('index', ('Name', 'default_module_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'module_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","default_module_index,list,module_options,st",selected_module_name = st.selectbox(
.\multi_offer_generator_old.py,520,selected_module_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Photovoltaik-Modul auswählen'""),), (('index', ('Name', 'default_module_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'module_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","default_module_index,list,module_options,st",selected_module_name = st.selectbox(
.\crm.py,589,selected_storage_name,"('Call', ('Attr', 'st', 'selectbox'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'storage_model_label'""), ('Const', ""'Speicher Modell'"")), ()),), (('index', ('Call', ('Attr', 'storage_options', 'index'), (('Call', ('Attr', 'project_data_form', 'get'), (('Const', ""'selected_storage_name'""), ('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'please_select_option'""), ('Const', ""'--- Bitte wählen ---'"")), ())), ()),), ())), ('options', ('Name', 'storage_options'))))","('Call', 1, 2)","get_text_crm,project_data_form,st,storage_options,texts","selected_storage_name = st.selectbox(get_text_crm(texts, ""storage_model_label"", ""Speicher Modell""), options=storage_options, index=storage_options.index(project_data_form.get('selected_storage_name', get_text_crm(texts, ""please_select_option"", ""--- Bitte wählen ---""))))"
.\multi_offer_generator_new.py,263,selected_storage_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Batteriespeicher auswählen'""),), (('index', ('Name', 'default_storage_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'storage_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","default_storage_index,list,st,storage_options",selected_storage_name = st.selectbox(
.\multi_offer_generator_old.py,203,selected_storage_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Speicher auswählen'""),), (('index', ('Name', 'default_storage_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'storage_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","default_storage_index,list,st,storage_options",selected_storage_name = st.selectbox(
.\multi_offer_generator_old.py,556,selected_storage_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Speicher auswählen'""),), (('index', ('Name', 'default_storage_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'storage_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","default_storage_index,list,st,storage_options",selected_storage_name = st.selectbox(
.\central_pdf_system.py,1538,selected_theme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Design-Vorlage:'""),), (('help', ('Const', ""'Wählen Sie das Farbschema für die PDF'"")), ('index', ('Other', 'IfExp')), ('options', ('Name', 'theme_options'))))","('Call', 1, 3)","current_theme,st,theme_options",selected_theme = st.selectbox(
.\options.py,43,selected_theme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Wählen Sie ein Design-Theme für Ihre PDF-Angebote:'""),), (('index', ('Name', 'current_index')), ('key', ('Const', ""'pdf_theme_selector'"")), ('options', ('Name', 'theme_names'))))","('Call', 1, 3)","current_index,st,theme_names",selected_theme = st.selectbox(
.\options.py,219,selected_theme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Wählen Sie eine Design Vorlage für Ihre PDF-Angebote:'""),), (('index', ('Name', 'current_index')), ('key', ('Const', ""'pdf_theme_selector'"")), ('options', ('Name', 'theme_names'))))","('Call', 1, 3)","current_index,st,theme_names",selected_theme = st.selectbox(
.\pdf_styles.py,875,selected_theme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Theme auswählen'""),), (('format_func', ('Other', 'Lambda')), ('index', ('Other', 'IfExp')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'all_themes', 'keys'), (), ()),), ()))))","('Call', 1, 3)","all_themes,list,st,x",selected_theme = st.selectbox(
.\pdf_generator.py,1009,self.title,"('Name', 'title')","('Name',)",title,"def __init__(self, title): Flowable.__init__(self); self.title = title"
.\pdf_generator.py,1055,self.title,"('Name', 'title')","('Name',)",title,"def __init__(self, title): Flowable.__init__(self); self.title = title"
.\pdf_helpers.py,19,self.title,"('Name', 'title')","('Name',)",title,self.title = title
.\components\progress_manager.py,315,self.title,"('Name', 'title')","('Name',)",title,self.title = title
.\components\progress_manager.py,333,self.title,"('Name', 'text')","('Name',)",text,self.title = text
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,375,self.title,"('Name', 'title')","('Name',)",title,self.title = title
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,393,self.title,"('Name', 'text')","('Name',)",text,self.title = text
.\tools\out_selected\patches\components\progress_manager.py.insert.py,375,self.title,"('Name', 'title')","('Name',)",title,self.title = title
.\tools\out_selected\patches\components\progress_manager.py.insert.py,393,self.title,"('Name', 'text')","('Name',)",text,self.title = text
.\analysis.py,501,simulation_years,"('Call', ('Attr', 'results', 'get'), (('Const', ""'simulation_period_years_effective'""), ('Const', '20')), ())","('Call', 2, 0)",results,"simulation_years = results.get('simulation_period_years_effective', 20)"
.\live_calculation_engine.py,22,simulation_years,"('Call', ('Attr', 'results', 'get'), (('Const', ""'simulation_period_years_effective'""), ('Const', '20')), ())","('Call', 2, 0)",results,"simulation_years = results.get('simulation_period_years_effective', 20)"
.\pv_visuals.py,134,simulation_years,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'simulation_period_years_effective'""), ('Const', '0')), ())","('Call', 2, 0)",analysis_results,"simulation_years = analysis_results.get('simulation_period_years_effective', 0)"
.\pv_visuals.py,186,simulation_years,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'simulation_period_years_effective'""), ('Const', '0')), ())","('Call', 2, 0)",analysis_results,"simulation_years = analysis_results.get('simulation_period_years_effective', 0)"
.\pdf_atomizer.py,126,slug,"('Subscript', ('Call', ('Attr', ""re.sub('[^a-z0-9]+', '_', item['text'].lower())"", 'strip'), (('Const', ""'_'""),), ()), ('Other', 'Slice'))","('Subscript',)","item,re","slug = re.sub(r""[^a-z0-9]+"", ""_"", item[""text""].lower()).strip(""_"")[:60]"
.\utils\export_coords.py,27,slug,"('Subscript', ('Call', ('Attr', ""re.sub('[^a-z0-9]+', '_', text.lower())"", 'strip'), (('Const', ""'_'""),), ()), ('Other', 'Slice'))","('Subscript',)","re,text","slug = re.sub(r""[^a-z0-9]+"", ""_"", text.lower()).strip(""_"")[:60]"
.\analysis.py,9196,specific_yield,"('Other', 'IfExp')","('Other', 'IfExp')","anlage_kwp,results","specific_yield = results.get('annual_pv_production_kwh', 0.0) / anlage_kwp if anlage_kwp > 0 else 0"
.\analysis.py,8916,specific_yield,"('Other', 'IfExp')","('Other', 'IfExp')","anlage_kwp,annual_production",specific_yield = annual_production / anlage_kwp if anlage_kwp > 0 else 0
.\admin_module_alias_mapping_ui.py,59,src,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'PDF-Spaltenname (Variante)'""),), ())","('Call', 1, 0)",st,"src = st.text_input(""PDF-Spaltenname (Variante)"")"
.\dev_tools\kakerlake_ultra_cleaner.py,124,src,"('Call', ('Name', 'read_text'), (('Name', 'p'),), ())","('Call', 1, 0)","p,read_text","src=read_text(p); tree=ast.parse(src, filename=p); lines=src.splitlines()"
.\mnt\data\kakerlake_ultra_cleaner.py,124,src,"('Call', ('Name', 'read_text'), (('Name', 'p'),), ())","('Call', 1, 0)","p,read_text","src=read_text(p); tree=ast.parse(src, filename=p); lines=src.splitlines()"
.\tools\kakerlake_ultra_cleaner.py,125,src,"('Call', ('Name', 'read_text'), (('Name', 'p'),), ())","('Call', 1, 0)","p,read_text","src=read_text(p); tree=ast.parse(src, filename=p); lines=src.splitlines()"
.\calculations.py,110,st,"('Call', ('Name', 'DummySt'), (), ())","('Call', 0, 0)",DummySt,st = DummySt()
.\pdf_template_engine\placeholders.py,1189,st,"('Call', ('Attr', 'str(s).strip()', 'lower'), (), ())","('Call', 0, 0)","s,str",st = str(s).strip().lower()
.\pdf_template_engine\placeholders.py,1198,st,"('Call', ('Attr', 'str(s).strip()', 'lower'), (), ())","('Call', 0, 0)","s,str",st = str(s).strip().lower()
.\analysis.py,138,st.plotly_chart,"('Name', '_plotly_chart_collapsible')","('Name',)",_plotly_chart_collapsible,st.plotly_chart = _plotly_chart_collapsible  # type: ignore[assignment]
.\analysis.py,155,st.plotly_chart,"('Name', 'orig')","('Name',)",orig,st.plotly_chart = orig  # type: ignore[assignment]
.\analysis.py,7023,st.session_state.calculation_results,"('Call', ('Attr', 'results_for_display', 'copy'), (), ())","('Call', 0, 0)",results_for_display,st.session_state.calculation_results = results_for_display.copy()
.\calculations.py,3957,st.session_state.calculation_results,"('Call', ('Attr', 'results', 'copy'), (), ())","('Call', 0, 0)",results,st.session_state.calculation_results = results.copy()
.\crm_calendar_ui.py,103,st.session_state.calendar_date,"('Call', ('Attr', 'datetime.now()', 'replace'), (), (('day', ('Const', '1')),))","('Call', 0, 1)",datetime,st.session_state.calendar_date = datetime.now().replace(day=1)
.\crm_calendar_ui.py,77,st.session_state.calendar_date,"('Call', ('Attr', 'datetime.now()', 'replace'), (), (('day', ('Const', '1')),))","('Call', 0, 1)",datetime,st.session_state.calendar_date = datetime.now().replace(day=1)
.\crm_calendar_ui.py,62,st.session_state.calendar_date,"('Call', ('Attr', 'datetime.now()', 'replace'), (), (('day', ('Const', '1')),))","('Call', 0, 1)",datetime,st.session_state.calendar_date = datetime.now().replace(day=1)
.\crm_calendar_ui.py,70,st.session_state.calendar_date,"('Call', ('Attr', 'st.session_state.calendar_date', 'replace'), (), (('month', ('Sub', ('Attr', 'st.session_state.calendar_date', 'month'), ('Const', '1'))),))","('Call', 0, 1)",st,st.session_state.calendar_date = st.session_state.calendar_date.replace(
.\crm_calendar_ui.py,85,st.session_state.calendar_date,"('Call', ('Attr', 'datetime.now()', 'replace'), (), (('day', ('Const', '1')),))","('Call', 0, 1)",datetime,st.session_state.calendar_date = datetime.now().replace(day=1)
.\crm_calendar_ui.py,93,st.session_state.calendar_date,"('Call', ('Attr', 'st.session_state.calendar_date', 'replace'), (), (('month', ('Add', (('Attr', 'st.session_state.calendar_date', 'month'), ('Const', '1')))),))","('Call', 0, 1)",st,st.session_state.calendar_date = st.session_state.calendar_date.replace(
.\pdf_widgets.py,83,st.session_state.pdf_section_order,"('Other', 'ListComp')","('Other', 'ListComp')","key,section,self,sorted,x",st.session_state.pdf_section_order = [
.\pdf_widgets.py,138,st.session_state.pdf_section_order,"('Other', 'ListComp')","('Other', 'ListComp')","label_to_key,lbl,sorted_labels","st.session_state.pdf_section_order = [label_to_key.get(lbl, lbl) for lbl in sorted_labels]"
.\pdf_ui.py,412,st.session_state.pdf_selected_main_sections,"('Call', ('Attr', 'selections', 'get'), (('Const', ""'pdf_selected_main_sections'""), ('Subscript', ('Name', 'all_main_section_keys'), ('Other', 'Slice'))), ())","('Call', 2, 0)","all_main_section_keys,selections","st.session_state.pdf_selected_main_sections = selections.get(""pdf_selected_main_sections"", all_main_section_keys[:])"
.\pdf_ui.py,1067,st.session_state.pdf_selected_main_sections,"('Call', ('Attr', 'st.session_state', 'pop'), (('Const', ""'_temp_pdf_selected_main_sections'""), ('List', ())), ())","('Call', 2, 0)",st,"st.session_state.pdf_selected_main_sections = st.session_state.pop(""_temp_pdf_selected_main_sections"", [])"
.\admin_panel.py,1228,st.session_state.product_to_edit_id_manual,"('Name', 'prod_id_in_list')","('Name',)",prod_id_in_list,st.session_state.product_to_edit_id_manual = prod_id_in_list
.\admin_panel.py,1078,st.session_state.product_to_edit_id_manual,"('Name', 'new_product_id')","('Name',)",new_product_id,st.session_state.product_to_edit_id_manual = new_product_id
.\crm_pipeline_ui.py,332,stage_info,"('Subscript', ('Attr', 'self', 'pipeline_stages'), ('Subscript', ('Name', 'lead'), ('Const', ""'stage'"")))","('Subscript',)","lead,self",stage_info = self.pipeline_stages[lead['stage']]
.\crm_pipeline_ui.py,471,stage_info,"('Subscript', ('Attr', 'self', 'pipeline_stages'), ('Name', 'stage'))","('Subscript',)","self,stage",stage_info = self.pipeline_stages[stage]
.\central_pdf_system.py,2161,status,"('Call', ('Name', 'get_central_pdf_status'), (), ())","('Call', 0, 0)",get_central_pdf_status,status = get_central_pdf_status()
.\central_pdf_system.py,541,status,"('Call', ('Attr', 'self', 'get_system_status'), (), ())","('Call', 0, 0)",self,status = self.get_system_status()
.\central_pdf_system.py,783,status,"('Call', ('Attr', 'PDF_MANAGER', 'get_system_status'), (), ())","('Call', 0, 0)",PDF_MANAGER,status = PDF_MANAGER.get_system_status()
.\check_product_images.py,20,status,"('Other', 'IfExp')","('Other', 'IfExp')",r,"status = ""Ja"" if r[2] else ""Nein"""
.\pdf_ui.py,1432,status,"('Other', 'IfExp')","('Other', 'IfExp')","doc_path,os","status = """" if os.path.exists(doc_path) else """""
.\pdf_ui.py,1455,status,"('Other', 'IfExp')","('Other', 'IfExp')","full_path,os","status = """" if os.path.exists(full_path) else """""
.\notwendig oder nicht\wichtig\portings\patches\check_product_images.py.insert.py,25,status,"('Other', 'IfExp')","('Other', 'IfExp')",r,"status = ""Ja"" if r[2] else ""Nein"""
.\notwendig oder nicht\wichtig\portings\patches\test_admin_fix.py.insert.py,41,status,"('Other', 'IfExp')","('Other', 'IfExp')","expected,result","status = ""✅"" if result == expected else ""❌"""
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,212,status,"('Other', 'IfExp')","('Other', 'IfExp')",result,"status = ""✅ BESTANDEN"" if result else ""❌ FEHLGESCHLAGEN"""
.\tests\test_admin_fix.py,37,status,"('Other', 'IfExp')","('Other', 'IfExp')","expected,result","status = ""✅"" if result == expected else ""❌"""
.\tests\test_logo_integration.py,185,status,"('Other', 'IfExp')","('Other', 'IfExp')",result,"status = ""✅ BESTANDEN"" if result else ""❌ FEHLGESCHLAGEN"""
.\tools\portings\patches\check_product_images.py.insert.py,25,status,"('Other', 'IfExp')","('Other', 'IfExp')",r,"status = ""Ja"" if r[2] else ""Nein"""
.\tools\portings\patches\test_admin_fix.py.insert.py,41,status,"('Other', 'IfExp')","('Other', 'IfExp')","expected,result","status = ""✅"" if result == expected else ""❌"""
.\tools\portings\patches\test_logo_integration.py.insert.py,212,status,"('Other', 'IfExp')","('Other', 'IfExp')",result,"status = ""✅ BESTANDEN"" if result else ""❌ FEHLGESCHLAGEN"""
.\excel_eval.py,263,stem,"('Attr', 'p', 'stem')","('Attr',)",p,stem = p.stem
.\tools\import_module_attributes_generic.py,507,stem,"('Attr', 'Path(path)', 'stem')","('Attr',)","Path,path",stem = Path(path).stem
.\pdf_template_engine\placeholders.py,1917,sto_id,"('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_storage_id'""),), ())","('Call', 1, 0)",project_details,"sto_id = project_details.get(""selected_storage_id"")"
.\pdf_template_engine\placeholders.py,1920,sto_id,"('Call', ('Name', '_get_pid_sto'), (('Name', 'storage_name'),), ())","('Call', 1, 0)","_get_pid_sto,storage_name",sto_id = _get_pid_sto(storage_name)
.\excel_eval.py,372,sub,"('Call', ('Attr', 'p', 'add_subparsers'), (), (('dest', ('Const', ""'cmd'"")), ('required', ('Const', 'True'))))","('Call', 0, 2)",p,"sub = p.add_subparsers(dest=""cmd"", required=True)"
.\dev_tools\kakerlake_ultra_cleaner.py,603,sub,"('Call', ('Attr', 'ap', 'add_subparsers'), (), (('dest', ('Const', ""'cmd'"")), ('required', ('Const', 'True'))))","('Call', 0, 2)",ap,"sub=ap.add_subparsers(dest=""cmd"", required=True)"
.\mnt\data\kakerlake_ultra_cleaner.py,603,sub,"('Call', ('Attr', 'ap', 'add_subparsers'), (), (('dest', ('Const', ""'cmd'"")), ('required', ('Const', 'True'))))","('Call', 0, 2)",ap,"sub=ap.add_subparsers(dest=""cmd"", required=True)"
.\notwendig oder nicht\wichtig\repo_porter.py,603,sub,"('Call', ('Attr', 'ap', 'add_subparsers'), (), (('dest', ('Const', ""'cmd'"")), ('required', ('Const', 'True'))))","('Call', 0, 2)",ap,"sub = ap.add_subparsers(dest=""cmd"", required=True)"
.\tools\kakerlake_ultra_cleaner.py,604,sub,"('Call', ('Attr', 'ap', 'add_subparsers'), (), (('dest', ('Const', ""'cmd'"")), ('required', ('Const', 'True'))))","('Call', 0, 2)",ap,"sub=ap.add_subparsers(dest=""cmd"", required=True)"
.\tools\repo_porter.py,603,sub,"('Call', ('Attr', 'ap', 'add_subparsers'), (), (('dest', ('Const', ""'cmd'"")), ('required', ('Const', 'True'))))","('Call', 0, 2)",ap,"sub = ap.add_subparsers(dest=""cmd"", required=True)"
.\admin_panel.py,1627,submitted,"('Call', ('Attr', 'st', 'form_submit_button'), (('Name', 'submit_button_text'),), ())","('Call', 1, 0)","st,submit_button_text",submitted = st.form_submit_button(submit_button_text)
.\admin_product_attributes_ui.py,66,submitted,"('Call', ('Attr', 'st', 'form_submit_button'), (('Const', ""'Speichern'""),), ())","('Call', 1, 0)",st,"submitted = st.form_submit_button(""Speichern"")"
.\crm.py,345,submitted,"('Call', ('Attr', 'st', 'form_submit_button'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'crm_save_customer_button'""), ('Const', ""'Kunden speichern'"")), ()),), ())","('Call', 1, 0)","get_text_crm,st,texts","submitted = st.form_submit_button(get_text_crm(texts, ""crm_save_customer_button"", ""Kunden speichern""))"
.\migrate_logo_database.py,69,success,"('Call', ('Name', 'migrate_logo_database'), (), ())","('Call', 0, 0)",migrate_logo_database,success = migrate_logo_database()
.\tests\test_hp_functions.py,213,success,"('Call', ('Name', 'run_all_tests'), (), ())","('Call', 0, 0)",run_all_tests,success = run_all_tests()
.\tests\test_logo_integration.py,200,success,"('Call', ('Name', 'run_all_tests'), (), ())","('Call', 0, 0)",run_all_tests,success = run_all_tests()
.\tests\test_section_titles_logos.py,119,success,"('Call', ('Name', 'test_section_titles_and_logos'), (), ())","('Call', 0, 0)",test_section_titles_and_logos,success = test_section_titles_and_logos()
.\add_test_product_images.py,50,success,"('Call', ('Name', 'update_product_image'), (('Name', 'product_id'), ('Name', 'test_image_b64')), ())","('Call', 2, 0)","product_id,test_image_b64,update_product_image","success = update_product_image(product_id, test_image_b64)"
.\admin_logo_positions_ui.py,139,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Name', 'edited_positions')), ())","('Call', 2, 0)","edited_positions,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", edited_positions)"
.\admin_logo_positions_ui.py,151,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())), ())","('Call', 2, 0)","DEFAULT_POSITIONS,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", DEFAULT_POSITIONS.copy())"
.\create_png_test_images.py,67,success,"('Call', ('Name', 'update_product_image'), (('Name', 'product_id'), ('Name', 'png_b64')), ())","('Call', 2, 0)","png_b64,product_id,update_product_image","success = update_product_image(product_id, png_b64)"
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_positions_ui.py.insert.py,114,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Name', 'edited_positions')), ())","('Call', 2, 0)","edited_positions,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", edited_positions)"
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_positions_ui.py.insert.py,126,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())), ())","('Call', 2, 0)","DEFAULT_POSITIONS,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", DEFAULT_POSITIONS.copy())"
.\notwendig oder nicht\wichtig\portings\patches\add_test_product_images.py.insert.py,68,success,"('Call', ('Name', 'update_product_image'), (('Name', 'product_id'), ('Name', 'test_image_b64')), ())","('Call', 2, 0)","product_id,test_image_b64,update_product_image","success = update_product_image(product_id, test_image_b64)"
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_positions_ui.py.insert.py,115,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Name', 'edited_positions')), ())","('Call', 2, 0)","edited_positions,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", edited_positions)"
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_positions_ui.py.insert.py,127,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())), ())","('Call', 2, 0)","DEFAULT_POSITIONS,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", DEFAULT_POSITIONS.copy())"
.\notwendig oder nicht\wichtig\portings\patches\create_png_test_images.py.insert.py,77,success,"('Call', ('Name', 'update_product_image'), (('Name', 'product_id'), ('Name', 'png_b64')), ())","('Call', 2, 0)","png_b64,product_id,update_product_image","success = update_product_image(product_id, png_b64)"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_upload.py.insert.py,61,success,"('Call', ('Name', 'update_product'), (('Name', 'new_id'), ('Name', 'update_data')), ())","('Call', 2, 0)","new_id,update_data,update_product","success = update_product(new_id, update_data)"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,133,success,"('Call', ('Name', 'update_product'), (('Name', 'product_id'), ('Name', 'product_data_to_save_db')), ())","('Call', 2, 0)","product_data_to_save_db,product_id,update_product","success = update_product(product_id, product_data_to_save_db)"
.\tests\test_admin_upload.py,61,success,"('Call', ('Name', 'update_product'), (('Name', 'new_id'), ('Name', 'update_data')), ())","('Call', 2, 0)","new_id,update_data,update_product","success = update_product(new_id, update_data)"
.\tests\test_admin_workflow.py,124,success,"('Call', ('Name', 'update_product'), (('Name', 'product_id'), ('Name', 'product_data_to_save_db')), ())","('Call', 2, 0)","product_data_to_save_db,product_id,update_product","success = update_product(product_id, product_data_to_save_db)"
.\tools\out_selected\patches\admin_logo_positions_ui.py.insert.py,114,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Name', 'edited_positions')), ())","('Call', 2, 0)","edited_positions,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", edited_positions)"
.\tools\out_selected\patches\admin_logo_positions_ui.py.insert.py,126,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())), ())","('Call', 2, 0)","DEFAULT_POSITIONS,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", DEFAULT_POSITIONS.copy())"
.\tools\portings\patches\add_test_product_images.py.insert.py,68,success,"('Call', ('Name', 'update_product_image'), (('Name', 'product_id'), ('Name', 'test_image_b64')), ())","('Call', 2, 0)","product_id,test_image_b64,update_product_image","success = update_product_image(product_id, test_image_b64)"
.\tools\portings\patches\admin_logo_positions_ui.py.insert.py,115,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Name', 'edited_positions')), ())","('Call', 2, 0)","edited_positions,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", edited_positions)"
.\tools\portings\patches\admin_logo_positions_ui.py.insert.py,127,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())), ())","('Call', 2, 0)","DEFAULT_POSITIONS,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", DEFAULT_POSITIONS.copy())"
.\tools\portings\patches\create_png_test_images.py.insert.py,77,success,"('Call', ('Name', 'update_product_image'), (('Name', 'product_id'), ('Name', 'png_b64')), ())","('Call', 2, 0)","png_b64,product_id,update_product_image","success = update_product_image(product_id, png_b64)"
.\tools\portings\patches\test_admin_upload.py.insert.py,61,success,"('Call', ('Name', 'update_product'), (('Name', 'new_id'), ('Name', 'update_data')), ())","('Call', 2, 0)","new_id,update_data,update_product","success = update_product(new_id, update_data)"
.\tools\portings\patches\test_admin_workflow.py.insert.py,133,success,"('Call', ('Name', 'update_product'), (('Name', 'product_id'), ('Name', 'product_data_to_save_db')), ())","('Call', 2, 0)","product_data_to_save_db,product_id,update_product","success = update_product(product_id, product_data_to_save_db)"
.\admin_logo_management_ui.py,198,success,"('Call', ('Name', 'add_brand_logo'), (('Name', 'brand_name'), ('Name', 'logo_base64'), ('Name', 'logo_format')), ())","('Call', 3, 0)","add_brand_logo,brand_name,logo_base64,logo_format","success = add_brand_logo(brand_name, logo_base64, logo_format)"
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,188,success,"('Call', ('Name', 'add_brand_logo'), (('Name', 'brand_name'), ('Name', 'logo_base64'), ('Name', 'logo_format')), ())","('Call', 3, 0)","add_brand_logo,brand_name,logo_base64,logo_format","success = add_brand_logo(brand_name, logo_base64, logo_format)"
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,229,success,"('Call', ('Name', 'add_brand_logo'), (('Name', 'brand_name'), ('Name', 'logo_base64'), ('Name', 'logo_format')), ())","('Call', 3, 0)","add_brand_logo,brand_name,logo_base64,logo_format","success = add_brand_logo(brand_name, logo_base64, logo_format)"
.\notwendig oder nicht\wichtig\portings\patches\test_brand_logos.py.insert.py,83,success,"('Call', ('Name', 'add_brand_logo'), (('Name', 'brand'), ('Name', 'logo_b64'), ('Const', ""'PNG'"")), ())","('Call', 3, 0)","add_brand_logo,brand,logo_b64","success = add_brand_logo(brand, logo_b64, ""PNG"")"
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,41,success,"('Call', ('Name', 'add_brand_logo'), (('Const', ""'TestHersteller'""), ('Name', 'test_logo_b64'), ('Const', ""'PNG'"")), ())","('Call', 3, 0)","add_brand_logo,test_logo_b64","success = add_brand_logo(""TestHersteller"", test_logo_b64, ""PNG"")"
.\tests\test_brand_logos.py,72,success,"('Call', ('Name', 'add_brand_logo'), (('Name', 'brand'), ('Name', 'logo_b64'), ('Const', ""'PNG'"")), ())","('Call', 3, 0)","add_brand_logo,brand,logo_b64","success = add_brand_logo(brand, logo_b64, ""PNG"")"
.\tests\test_logo_integration.py,42,success,"('Call', ('Name', 'add_brand_logo'), (('Const', ""'TestHersteller'""), ('Name', 'test_logo_b64'), ('Const', ""'PNG'"")), ())","('Call', 3, 0)","add_brand_logo,test_logo_b64","success = add_brand_logo(""TestHersteller"", test_logo_b64, ""PNG"")"
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,188,success,"('Call', ('Name', 'add_brand_logo'), (('Name', 'brand_name'), ('Name', 'logo_base64'), ('Name', 'logo_format')), ())","('Call', 3, 0)","add_brand_logo,brand_name,logo_base64,logo_format","success = add_brand_logo(brand_name, logo_base64, logo_format)"
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,229,success,"('Call', ('Name', 'add_brand_logo'), (('Name', 'brand_name'), ('Name', 'logo_base64'), ('Name', 'logo_format')), ())","('Call', 3, 0)","add_brand_logo,brand_name,logo_base64,logo_format","success = add_brand_logo(brand_name, logo_base64, logo_format)"
.\tools\portings\patches\test_brand_logos.py.insert.py,83,success,"('Call', ('Name', 'add_brand_logo'), (('Name', 'brand'), ('Name', 'logo_b64'), ('Const', ""'PNG'"")), ())","('Call', 3, 0)","add_brand_logo,brand,logo_b64","success = add_brand_logo(brand, logo_b64, ""PNG"")"
.\tools\portings\patches\test_logo_integration.py.insert.py,41,success,"('Call', ('Name', 'add_brand_logo'), (('Const', ""'TestHersteller'""), ('Name', 'test_logo_b64'), ('Const', ""'PNG'"")), ())","('Call', 3, 0)","add_brand_logo,test_logo_b64","success = add_brand_logo(""TestHersteller"", test_logo_b64, ""PNG"")"
.\database.py,172,success,"('Compare', ('Attr', 'cur', 'rowcount'), ('Gt',), (('Const', '0'),))","('Compare', ('Gt',), 1)",cur,success = cur.rowcount > 0
.\database.py,1950,success,"('Compare', ('Attr', 'cursor', 'rowcount'), ('Gt',), (('Const', '0'),))","('Compare', ('Gt',), 1)",cursor,success = cursor.rowcount > 0
.\heatpump_ui.py,402,suitable,"('Call', ('Name', 'sorted'), (('Name', 'suitable'),), (('key', ('Other', 'Lambda')),))","('Call', 1, 1)","hp,sorted,suitable","suitable = sorted(suitable, key=lambda hp: hp.get('heating_power', 0))"
.\heatpump_ui.py,865,suitable,"('Call', ('Name', 'sorted'), (('Name', 'suitable'),), (('key', ('Other', 'Lambda')),))","('Call', 1, 1)","float,hp,sorted,suitable","suitable = sorted(suitable, key=lambda hp: float(hp.get('heating_power', 0) or 0))"
.\heatpump_ui.py,400,suitable,"('Other', 'ListComp')","('Other', 'ListComp')","candidates,hp,required_kw","suitable = [hp for hp in candidates if hp.get('heating_power', 0) >= required_kw]"
.\heatpump_ui.py,863,suitable,"('Other', 'ListComp')","('Other', 'ListComp')","candidates,float,hp,required_kw","suitable = [hp for hp in candidates if float(hp.get('heating_power', 0) or 0) >= required_kw]"
.\analysis.py,6743,summary,"('Dict', (('KV', ('Const', ""'financing_amount'""), ('Const', '0')), ('KV', ('Const', ""'financing_type'""), ('Const', ""'Nicht verfügbar'"")), ('KV', ('Const', ""'has_data'""), ('Call', ('Name', 'bool'), (('Name', 'financing_data'),), ())), ('KV', ('Const', ""'sections'""), ('Call', ('Name', 'list'), (('Call', ('Attr', 'financing_data', 'keys'), (), ()),), ())), ('KV', ('Const', ""'total_charts'""), ('Const', '0'))))","('Dict', 5)","bool,financing_data,list",summary = {
.\excel_eval.py,338,summary,"('Dict', (('KV', ('Const', ""'abs_tol'""), ('Name', 'abs_tol')), ('KV', ('Const', ""'checked_cells'""), ('Call', ('Name', 'len'), (('Name', 'refs'),), ())), ('KV', ('Const', ""'file'""), ('Call', ('Name', 'str'), (('Name', 'path'),), ())), ('KV', ('Const', ""'mismatches'""), ('Call', ('Name', 'len'), (('Name', 'mismatches'),), ())), ('KV', ('Const', ""'rel_tol'""), ('Name', 'rel_tol'))))","('Dict', 5)","abs_tol,len,mismatches,path,refs,rel_tol,str",summary = {
.\multi_offer_generator_old.py,1064,surcharge,"('Div', ('Mult', (('Name', 'base'), ('Subscript', ('Subscript', ('Name', 'config'), ('Const', ""'custom_pricing'"")), ('Const', ""'surcharge_percent'"")))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Subscript',))), ('Const',))","base,config",surcharge = base * config['custom_pricing']['surcharge_percent'] / 100
.\multi_offer_generator_old.py,1143,surcharge,"('Div', ('Mult', (('Name', 'base_price'), ('Subscript', ('Subscript', ('Name', 'config'), ('Const', ""'custom_pricing'"")), ('Const', ""'surcharge_percent'"")))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Subscript',))), ('Const',))","base_price,config",surcharge = base_price * config['custom_pricing']['surcharge_percent'] / 100
.\analysis.py,5228,surcharge_percent,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_surcharge_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,surcharge_percent = st.session_state.get(
.\gui.py,154,surcharge_percent,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_surcharge_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,"surcharge_percent = st.session_state.get(""pricing_modifications_surcharge_slider"", 0.0)"
.\live_preview_helpers.py,28,surcharge_percent,"('Call', ('Attr', 'modifications', 'get'), (('Const', ""'surcharge_percent'""), ('Const', '0.0')), ())","('Call', 2, 0)",modifications,"surcharge_percent = modifications.get('surcharge_percent', 0.0)"
.\pdf_ui.py,101,surcharge_percent,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_surcharge_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,"surcharge_percent = st.session_state.get(""pricing_modifications_surcharge_slider"", 0.0)"
.\analysis.py,3014,system_kwp,"('Call', ('Attr', 'system_data', 'get'), (('Const', ""'system_kwp'""), ('Const', '10')), ())","('Call', 2, 0)",system_data,"system_kwp = system_data.get(""system_kwp"", 10)"
.\calculations.py,1269,system_kwp,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '10.0')), ())","('Call', 2, 0)",calc_results,"system_kwp = calc_results.get(""anlage_kwp"", 10.0)"
.\calculations.py,1921,system_kwp,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '10')), ())","('Call', 2, 0)",calc_results,"system_kwp = calc_results.get(""anlage_kwp"", 10)"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,85,t,"('Call', ('Attr', ""(el.get('text') or '').strip().replace('.', '')"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",el,"t = (el.get(""text"") or """").strip().replace(""."", """").replace("","", ""."")"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,103,t,"('Call', ('Attr', ""(el.get('text') or '').strip().replace('.', '')"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",el,"t = (el.get(""text"") or """").strip().replace(""."", """").replace("","", ""."")"
.\pdf_template_engine\dynamic_overlay.py,598,t,"('Call', ('Attr', ""(el.get('text') or '').strip().replace('.', '')"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",el,"t = (el.get(""text"") or """").strip().replace(""."", """").replace("","", ""."")"
.\pdf_template_engine\dynamic_overlay.py,933,t,"('Call', ('Attr', 'Transformation().scale(scale, scale)', 'translate'), (('Name', 'tx'), ('Name', 'ty')), ())","('Call', 2, 0)","Transformation,scale,tx,ty","t = Transformation().scale(scale, scale).translate(tx, ty)"
.\pdf_template_engine\dynamic_overlay.py,960,t,"('Call', ('Attr', 'Transformation().scale(scale, scale)', 'translate'), (('Name', 'tx'), ('Name', 'ty')), ())","('Call', 2, 0)","Transformation,scale,tx,ty","t = Transformation().scale(scale, scale).translate(tx, ty)"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,85,t,"('Call', ('Attr', ""(el.get('text') or '').strip().replace('.', '')"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",el,"t = (el.get(""text"") or """").strip().replace(""."", """").replace("","", ""."")"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,103,t,"('Call', ('Attr', ""(el.get('text') or '').strip().replace('.', '')"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",el,"t = (el.get(""text"") or """").strip().replace(""."", """").replace("","", ""."")"
.\notwendig oder nicht\python_function_recipes.py,30,table,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'table'),), ())","('Call', 1, 0)","pd,table",table = pd.DataFrame(table)
.\notwendig oder nicht\python_function_recipes.py,236,table,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'table'),), ())","('Call', 1, 0)","pd,table",table = pd.DataFrame(table)
.\tools\schema_extractor.py,92,table,"('Call', ('Name', 'parse_table'), (('Name', 'c'),), ())","('Call', 1, 0)","c,parse_table",table = parse_table(c)
.\analysis.py,3100,tabs,"('Call', ('Attr', 'st', 'tabs'), (('List', (('Const', ""'Energieoptimierung'""), ('Const', ""' Netzanalyse'""), ('Const', ""'Wettereinfluss'""), ('Const', ""'Degradation'""), ('Const', ""'Finanzszenarien'""), ('Const', ""'Umwelt'""), ('Const', ""'Batterie'""))),), ())","('Call', 1, 0)",st,tabs = st.tabs(
.\analysis.py,5303,tabs,"('Call', ('Attr', 'st', 'tabs'), (('List', (('Const', ""'Erweiterte Wirtschaftlichkeit'""), ('Const', ""'Detaillierte Energieanalyse'""), ('Const', ""'Technische Berechnungen'""), ('Const', ""'Finanzielle Szenarien'""), ('Const', ""'Umwelt & Nachhaltigkeit'""), ('Const', ""'Optimierungsvorschläge'""))),), ())","('Call', 1, 0)",st,tabs = st.tabs(
.\analysis.py,8752,tabs,"('Call', ('Attr', 'st', 'tabs'), (('List', (('Const', ""' Finanzanalyse'""), ('Const', ""' Energieoptimierung'""), ('Const', ""' Umwelt-Impact'""), ('Const', ""' Technische Details'""), ('Const', ""' Vergleichsanalysen'""))),), ())","('Call', 1, 0)",st,tabs = st.tabs([
.\crm_dashboard_ui.py,46,tabs,"('Call', ('Attr', 'st', 'tabs'), (('List', (('Const', ""' Übersicht'""), ('Const', ""' Kunden'""), ('Const', ""' Projekte'""), ('Const', ""' Umsatz'""), ('Const', ""' Statistiken'""))),), ())","('Call', 1, 0)",st,tabs = st.tabs([
.\heatpump_ui.py,48,tabs,"('Call', ('Attr', 'st', 'tabs'), (('List', (('Const', ""' Gebäudeanalyse'""), ('Const', ""' Wärmepumpen-Auswahl'""), ('Const', ""' Wirtschaftlichkeit'""), ('Const', ""' PV-Integration'""), ('Const', ""' Komponenten & Angebot'""), ('Const', ""' Ergebnisse'""))),), ())","('Call', 1, 0)",st,tabs = st.tabs([
.\multi_offer_generator_old.py,1003,tabs,"('Call', ('Attr', 'st', 'tabs'), (('List', (('Const', ""' Inhalte'""), ('Const', ""' Preise'""), ('Const', ""' Texte'""), ('Const', ""' Visualisierungen'""))),), ())","('Call', 1, 0)",st,"tabs = st.tabs(["" Inhalte"", "" Preise"", "" Texte"", "" Visualisierungen""])"
.\multi_offer_generator_old.py,1348,tabs,"('Call', ('Attr', 'st', 'tabs'), (('Other', 'ListComp'),), ())","('Call', 1, 0)","i,len,range,selected_companies,st","tabs = st.tabs([f""Firma {i+1}"" for i in range(len(selected_companies))])"
.\pdf_styles.py,923,tabs,"('Call', ('Attr', 'st', 'tabs'), (('List', (('Const', ""' Diagramme'""), ('Const', ""' Layout'""), ('Const', ""' Farben'""), ('Const', ""' Effekte'""))),), ())","('Call', 1, 0)",st,"tabs = st.tabs(["" Diagramme"", "" Layout"", "" Farben"", "" Effekte""])"
.\central_pdf_system.py,1759,template_config,"('Dict', (('KV', ('Const', ""'created'""), ('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())), ('KV', ('Const', ""'inclusion_options'""), ('Name', 'current_options')), ('KV', ('Const', ""'name'""), ('Name', 'template_name')), ('KV', ('Const', ""'selected_sections'""), ('Name', 'updated_sections')), ('KV', ('Const', ""'theme_name'""), ('Name', 'selected_theme'))))","('Dict', 5)","current_options,datetime,selected_theme,template_name,updated_sections",template_config = {
.\central_pdf_system.py,917,template_config,"('Dict', (('KV', ('Const', ""'created'""), ('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())), ('KV', ('Const', ""'inclusion_options'""), ('Call', ('Attr', 'current_options', 'copy'), (), ())), ('KV', ('Const', ""'name'""), ('Name', 'template_name')), ('KV', ('Const', ""'selected_sections'""), ('Call', ('Attr', 'st.session_state', 'get'), (('Other', 'JoinedStr'), ('List', ())), ())), ('KV', ('Const', ""'theme_name'""), ('Call', ('Attr', 'st.session_state', 'get'), (('Other', 'JoinedStr'), ('Const', ""'Blau Elegant'"")), ()))))","('Dict', 5)","current_options,datetime,self,st,template_name",template_config = {
.\central_pdf_system.py,938,template_name,"('Call', ('Attr', 'template', 'get'), (('Const', ""'name'""), ('Other', 'JoinedStr')), ())","('Call', 2, 0)","i,template","template_name = template.get('name', f'Vorlage {i+1}')"
.\central_pdf_system.py,1092,template_name,"('Call', ('Attr', 'template', 'get'), (('Const', ""'name'""), ('Other', 'JoinedStr')), ())","('Call', 2, 0)",template,"template_name = template.get('name', f""Textvorlage {template.get('id')}"")"
.\central_pdf_system.py,1129,template_name,"('Call', ('Attr', 'template', 'get'), (('Const', ""'name'""), ('Other', 'JoinedStr')), ())","('Call', 2, 0)",template,"template_name = template.get('name', f""Bildvorlage {template.get('id')}"")"
.\dev_tools\kakerlake_ultra_cleaner.py,549,text,"('Call', ('Name', 'read_text'), (('Name', 'path'),), ())","('Call', 1, 0)","path,read_text",try: text=read_text(path)
.\mnt\data\kakerlake_ultra_cleaner.py,549,text,"('Call', ('Name', 'read_text'), (('Name', 'path'),), ())","('Call', 1, 0)","path,read_text",try: text=read_text(path)
.\tools\kakerlake_ultra_cleaner.py,550,text,"('Call', ('Name', 'read_text'), (('Name', 'path'),), ())","('Call', 1, 0)","path,read_text",try: text=read_text(path)
.\utils\export_coords.py,26,text,"('Call', ('Attr', ""' '"", 'join'), (('Other', 'GeneratorExp'),), ())","('Call', 1, 0)","w,wlist","text = "" "".join(w[""text""] for w in wlist)"
.\analysis_utils.py,322,text,"('Call', ('Attr', ""text.replace('.', '')"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",text,"text = text.replace('.', '').replace(',', '.')"
.\central_pdf_system.py,42,text,"('Call', ('Attr', ""text.replace('ä', 'ä').replace('ö', 'ö')"", 'replace'), (('Const', ""'ü'""), ('Const', ""'ü'"")), ())","('Call', 2, 0)",text,"text = text.replace('\xe4', 'ä').replace('\xf6', 'ö').replace('\xfc', 'ü')"
.\central_pdf_system.py,43,text,"('Call', ('Attr', ""text.replace('Ä', 'Ä').replace('Ö', 'Ö')"", 'replace'), (('Const', ""'Ü'""), ('Const', ""'Ü'"")), ())","('Call', 2, 0)",text,"text = text.replace('\xc4', 'Ä').replace('\xd6', 'Ö').replace('\xdc', 'Ü')"
.\central_pdf_system.py,44,text,"('Call', ('Attr', 'text', 'replace'), (('Const', ""'ß'""), ('Const', ""'ß'"")), ())","('Call', 2, 0)",text,"text = text.replace('\xdf', 'ß')"
.\central_pdf_system.py,54,text,"('Call', ('Attr', 'text', 'replace'), (('Name', 'emoji'), ('Const', ""'•'"")), ())","('Call', 2, 0)","emoji,text","text = text.replace(emoji, '•')"
.\locales.py,81,text,"('Call', ('Attr', 'translations', 'get'), (('Name', 'key'), ('BoolOp', 'Or', (('Name', 'fallback'), ('Name', 'key')))), ())","('Call', 2, 0)","fallback,key,translations","text = translations.get(key, fallback or key)"
.\pdf_generator.py,193,text,"('Call', ('Attr', ""get_cover_letter_template(customer_name=self.offer_data.get('customer', {}).get('name', 'N/A'), offer_id=self.offer_data.get('offer_id', 'N/A'))"", 'replace'), (('Const', ""'\\n'""), ('Const', ""'<br/>'"")), ())","('Call', 2, 0)","get_cover_letter_template,self",text = get_cover_letter_template(
.\pdf_template_engine\dynamic_overlay.py,409,text,"('Call', ('Attr', 'elem', 'get'), (('Const', ""'text'""), ('Const', ""''"")), ())","('Call', 2, 0)",elem,"text = elem.get(""text"", """")"
.\pdf_generator.py,1381,text_width,"('Call', ('Attr', 'canvas_obj', 'stringWidth'), (('Name', 'footer_text'), ('Const', ""'Helvetica'""), ('Const', '10')), ())","('Call', 3, 0)","canvas_obj,footer_text","text_width = canvas_obj.stringWidth(footer_text, ""Helvetica"", 10)"
.\pdf_generator.py,131,text_width,"('Call', ('Attr', 'canvas', 'stringWidth'), (('Name', 'footer_text'), ('Const', ""'Helvetica'""), ('Const', '8')), ())","('Call', 3, 0)","canvas,footer_text","text_width = canvas.stringWidth(footer_text, ""Helvetica"", 8)"
.\locales.py,40,texts,"('Call', ('Attr', 'json', 'load'), (('Name', 'f'),), ())","('Call', 1, 0)","f,json",texts = json.load(f)
.\tests\test_main_pdf.py,37,texts,"('Call', ('Attr', 'json', 'loads'), (('Call', ('Attr', 'de_path', 'read_text'), (), (('encoding', ('Const', ""'utf-8'"")),)),), ())","('Call', 1, 0)","de_path,json",texts = json.loads(de_path.read_text(encoding='utf-8'))
.\tools\test_main_pdf.py,37,texts,"('Call', ('Attr', 'json', 'loads'), (('Call', ('Attr', 'de_path', 'read_text'), (), (('encoding', ('Const', ""'utf-8'"")),)),), ())","('Call', 1, 0)","de_path,json",texts = json.loads(de_path.read_text(encoding='utf-8'))
.\pdf_generator.py,691,title,"('Call', ('Attr', ""str(cust.get('title') or '')"", 'strip'), (), ())","('Call', 0, 0)","cust,str",title = str(cust.get('title') or '').strip()
.\pdf_template_engine\placeholders.py,477,title,"('Call', ('Attr', ""as_str(customer.get('title') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,customer","title = as_str(customer.get(""title"") or """").strip()"
.\crm.py,327,title,"('Call', ('Attr', 'st', 'text_input'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'title_label'""), ('Const', ""'Titel'"")), ()),), (('value', ('Call', ('Attr', 'customer_to_edit', 'get'), (('Const', ""'title'""), ('Const', ""''"")), ())),))","('Call', 1, 1)","customer_to_edit,get_text_crm,st,texts","title = st.text_input(get_text_crm(texts, ""title_label"", ""Titel""), value=customer_to_edit.get('title', ''))"
.\crm_calendar_ui.py,166,title,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Titel *'""),), (('placeholder', ('Const', ""'z.B. Beratungstermin Herr Müller'"")),))","('Call', 1, 1)",st,"title = st.text_input(""Titel *"", placeholder=""z.B. Beratungstermin Herr Müller"")"
.\doc_output.py,1764,title,"('Call', ('Attr', 'st', 'text_input'), (('Other', 'JoinedStr'),), (('key', ('Other', 'JoinedStr')),))","('Call', 1, 1)","i,st","title = st.text_input(f""Titel {i+1}"", key=f""custom_text_title_{i}"")"
.\analysis.py,6498,title,"('Call', ('Attr', 'rec', 'get'), (('Const', ""'title'""), ('Other', 'JoinedStr')), ())","('Call', 2, 0)","i,rec","title = rec.get(""title"", f""Empfehlung {i}"")"
.\pdf_generator.py,1395,title,"('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'title'""), ('Const', ""''"")), ())","('Call', 2, 0)",customer_data,"title = customer_data.get(""title"", """")"
.\analysis.py,2055,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_daily_production_title_switcher'""), ('Const', ""'Tagesproduktion (simuliert)'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,2726,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_tariff_cube_switcher'""), ('Const', ""'Tarifvergleich - Anbieter (2D Diagramm)'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,2792,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_tariff_cube_title_switcher'""), ('Other', 'JoinedStr')), ())","('Call', 3, 0)","get_text,jahresverbrauch,texts",title = get_text(
.\analysis.py,2902,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_co2_savings_value_title_switcher'""), ('Const', ""'CO₂-Einsparnis und simulierter monetärer Wert über Zeit'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,3614,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_co2_savings_value_title_switcher'""), ('Const', ""'CO₂-Einsparung und monetärer Wert über Zeit'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,3757,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_investment_value_title_switcher'""), ('Const', ""'Illustrativer Investitionsnutzwert'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,3861,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_storage_effect_title_switcher'""), ('Const', ""'Illustrative Speicherwirkung'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,3963,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_selfuse_stack_title_switcher'""), ('Const', ""'Jährlicher Eigenverbrauch vs. Einspeisung (Simuliert)'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,4037,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_cost_growth_title_switcher'""), ('Const', ""'Entwicklung Strompreis pro kWh (Szenarien)'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,4142,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_selfuse_ratio_title_switcher'""), ('Const', ""'Monatlicher Eigenversorgungsgrad (Autarkiegrad des Monats) - Jahr 1'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,4216,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_roi_comparison_title_switcher'""), ('Const', ""'ROI-Vergleich – Investitionen (Illustrativ)'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,4300,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_scenario_comp_title_switcher'""), ('Const', ""'Illustrativer Szenarienvergleich'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,4408,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_tariff_comp_title_switcher'""), ('Const', ""'Monatliche Stromkosten: Vorher vs. Nachher (Jahr 1)'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,4479,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_income_proj_title_switcher'""), ('Const', ""'Prognose: Kumulierte Einnahmen & Ersparnisse'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,5038,title,"('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'pie_chart_consumption_coverage_title'""), ('Const', ""'Deckung Gesamtverbrauch'"")), ())","('Call', 3, 0)","get_text,texts_local",title = get_text(
.\analysis.py,5190,title,"('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'pie_chart_pv_usage_title'""), ('Const', ""'Aufteilung Photovoltaik-Produktion'"")), ())","('Call', 3, 0)","get_text,texts_local",title = get_text(
.\pdf_generator.py,3069,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'pdf_no_data_title'""), ('Const', ""'Photovoltaik-Angebot - Datensammlung erforderlich'"")), ())","('Call', 3, 0)","get_text,texts","title = get_text(texts, 'pdf_no_data_title', 'Photovoltaik-Angebot - Datensammlung erforderlich')"
.\tools\schema_extractor.py,29,tname,"('Call', ('Attr', 'm', 'group'), (('Const', '1'),), ())","('Call', 1, 0)",m,tname = m.group(1)
.\tools\schema_extractor.py,87,tname,"('Call', ('Attr', 'im', 'group'), (('Const', '1'),), ())","('Call', 1, 0)",im,"tname = im.group(1); cols = [c.strip() for c in im.group(2).split(',')]"
.\add_test_product_images.py,89,total,"('Call', ('Name', 'len'), (('Name', 'products'),), ())","('Call', 1, 0)","len,products",total = len(products)
.\multi_offer_generator_old.py,1190,total,"('Call', ('Name', 'len'), (('Name', 'company_ids'),), ())","('Call', 1, 0)","company_ids,len",total = len(company_ids)
.\notwendig oder nicht\wichtig\portings\patches\add_test_product_images.py.insert.py,116,total,"('Call', ('Name', 'len'), (('Name', 'products'),), ())","('Call', 1, 0)","len,products",total = len(products)
.\notwendig oder nicht\wichtig\portings\patches\test_hp_functions.py.insert.py,228,total,"('Call', ('Name', 'len'), (('Name', 'tests'),), ())","('Call', 1, 0)","len,tests",total = len(tests)
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,209,total,"('Call', ('Name', 'len'), (('Name', 'results'),), ())","('Call', 1, 0)","len,results",total = len(results)
.\pdf_template_engine\placeholders.py,2224,total,"('Call', ('Name', 'sum'), (('Other', 'GeneratorExp'),), ())","('Call', 1, 0)","_to_float,k,keys_sum,result,sum",total = sum(
.\tests\test_hp_functions.py,191,total,"('Call', ('Name', 'len'), (('Name', 'tests'),), ())","('Call', 1, 0)","len,tests",total = len(tests)
.\tests\test_logo_integration.py,182,total,"('Call', ('Name', 'len'), (('Name', 'results'),), ())","('Call', 1, 0)","len,results",total = len(results)
.\tools\portings\patches\add_test_product_images.py.insert.py,116,total,"('Call', ('Name', 'len'), (('Name', 'products'),), ())","('Call', 1, 0)","len,products",total = len(products)
.\tools\portings\patches\test_hp_functions.py.insert.py,228,total,"('Call', ('Name', 'len'), (('Name', 'tests'),), ())","('Call', 1, 0)","len,tests",total = len(tests)
.\tools\portings\patches\test_logo_integration.py.insert.py,209,total,"('Call', ('Name', 'len'), (('Name', 'results'),), ())","('Call', 1, 0)","len,results",total = len(results)
.\analysis.py,1875,total_a2,"('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'stromkosten_gesamt_euro_jahr'""),), ()),), ())","('Call', 1, 0)","_parse_float,project_data","total_a2 = _parse_float(project_data.get(""stromkosten_gesamt_euro_jahr""))"
.\analysis.py,1891,total_a2,"('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'stromkosten_gesamt_euro_jahr'""),), ()),), ())","('Call', 1, 0)","_parse_float,project_details","total_a2 = _parse_float(project_details.get(""stromkosten_gesamt_euro_jahr""))"
.\analysis.py,1877,total_a2,"('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'stromkosten_gesamt_jahr_eur'""),), ()),), ())","('Call', 1, 0)","_parse_float,project_data","total_a2 = _parse_float(project_data.get(""stromkosten_gesamt_jahr_eur""))"
.\analysis.py,1893,total_a2,"('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'stromkosten_gesamt_jahr_eur'""),), ()),), ())","('Call', 1, 0)","_parse_float,project_details","total_a2 = _parse_float(project_details.get(""stromkosten_gesamt_jahr_eur""))"
.\database.py,449,total_count,"('Call', ('Name', 'len'), (('Name', 'settings'),), ())","('Call', 1, 0)","len,settings",total_count = len(settings)
.\multi_offer_generator_old.py,1440,total_count,"('Call', ('Name', 'len'), (('Name', 'results'),), ())","('Call', 1, 0)","len,results",total_count = len(results)
.\analysis.py,7841,total_investment,"('Call', ('Attr', 'results', 'get'), (('Const', ""'total_investment_netto'""), ('Const', '25000.0')), ())","('Call', 2, 0)",results,"total_investment = results.get(""total_investment_netto"", 25000.0)"
.\analysis.py,8341,total_investment,"('Call', ('Attr', 'results', 'get'), (('Const', ""'total_investment_netto'""), ('Name', 'financing_amount')), ())","('Call', 2, 0)","financing_amount,results","total_investment = results.get(""total_investment_netto"", financing_amount)"
.\analysis.py,6681,total_investment,"('Call', ('Attr', 'results', 'get'), (('Const', ""'total_investment_netto'""), ('Const', '0')), ())","('Call', 2, 0)",results,"total_investment = results.get(""total_investment_netto"", 0)"
.\central_pdf_system.py,504,total_investment,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'total_investment'""), ('Const', ""'N/A'"")), ())","('Call', 2, 0)",analysis_results,"total_investment = analysis_results.get('total_investment', 'N/A')"
.\pdf_generator.py,678,total_pages,"('Add', (('Call', ('Name', 'len'), (('Attr', 'tmp_reader', 'pages'),), ()), ('Const', '7')))","('Add', (('Call', 1, 0), ('Const',)))","len,tmp_reader",total_pages = 7 + len(tmp_reader.pages)
.\pdf_generator.py,396,total_pages,"('Add', (('Call', ('Name', 'len'), (('Attr', 'PdfReader(_io.BytesIO(additional_pdf))', 'pages'),), ()), ('Const', '7')))","('Add', (('Call', 1, 0), ('Const',)))","PdfReader,_io,additional_pdf,len",total_pages = 7 + len(PdfReader(_io.BytesIO(additional_pdf)).pages)
.\pdf_template_engine\dynamic_overlay.py,1002,total_pages,"('Add', (('Call', ('Name', 'len'), (('Attr', 'add_reader', 'pages'),), ()), ('Const', '7')))","('Add', (('Call', 1, 0), ('Const',)))","add_reader,len",total_pages = 7 + len(add_reader.pages)
.\pdf_erstellen_komplett.py,238,total_pages,"('Call', ('Name', 'len'), (('Attr', 'r', 'pages'),), ())","('Call', 1, 0)","len,r",total_pages = len(r.pages)
.\pdf_preview.py,272,total_pages,"('Call', ('Name', 'len'), (('Name', 'images'),), ())","('Call', 1, 0)","images,len",total_pages = len(images)
.\pdf_generator.py,2304,trees_equiv,"('Call', ('Attr', 'current_analysis_results_pdf', 'get'), (('Const', ""'co2_equivalent_trees_per_year'""), ('Const', '0.0')), ())","('Call', 2, 0)",current_analysis_results_pdf,"trees_equiv = current_analysis_results_pdf.get('co2_equivalent_trees_per_year', 0.0)"
.\pv_visuals.py,245,trees_equiv,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'co2_equivalent_trees_per_year'""), ('Const', '0.0')), ())","('Call', 2, 0)",analysis_results,"trees_equiv = analysis_results.get('co2_equivalent_trees_per_year', 0.0)"
.\pdf_generator.py,640,tw,"('Call', ('Attr', 'canv', 'stringWidth'), (('Name', 'date_text'), ('Name', 'font_name'), ('Name', 'font_size')), ())","('Call', 3, 0)","canv,date_text,font_name,font_size","tw = canv.stringWidth(date_text, font_name, font_size)"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,171,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6.0')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6.0)"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,173,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6)"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,189,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6.0')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6.0)"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,191,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6)"
.\pdf_template_engine\dynamic_overlay.py,284,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'txt'), ('Const', ""'Helvetica-Bold'""), ('Const', '12')), ())","('Call', 3, 0)","c,txt","tw = c.stringWidth(txt, ""Helvetica-Bold"", 12)"
.\pdf_template_engine\dynamic_overlay.py,291,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'txt'), ('Const', ""'Helvetica-Bold'""), ('Const', '12')), ())","('Call', 3, 0)","c,txt","tw = c.stringWidth(txt, ""Helvetica-Bold"", 12)"
.\pdf_template_engine\dynamic_overlay.py,684,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6.0')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6.0)"
.\pdf_template_engine\dynamic_overlay.py,686,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6)"
.\pdf_template_engine\dynamic_overlay.py,522,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Call', ('Name', 'str'), (('Name', 'draw_text'),), ()), ('Name', 'font_name'), ('Name', 'font_size')), ())","('Call', 3, 0)","c,draw_text,font_name,font_size,str","tw = c.stringWidth(str(draw_text), font_name, font_size)"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,171,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6.0')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6.0)"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,173,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6)"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,189,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6.0')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6.0)"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,191,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6)"
.\pdf_template_engine\dynamic_overlay.py,281,txt,"('Call', ('Attr', 'dynamic_data', 'get'), (('Const', ""'self_supply_rate_percent'""), ('Other', 'JoinedStr')), ())","('Call', 2, 0)","dynamic_data,int,pct_autark,round","txt = dynamic_data.get(""self_supply_rate_percent"", f""{int(round(pct_autark))}%"")"
.\pdf_template_engine\dynamic_overlay.py,288,txt,"('Call', ('Attr', 'dynamic_data', 'get'), (('Const', ""'self_consumption_percent'""), ('Other', 'JoinedStr')), ())","('Call', 2, 0)","dynamic_data,int,pct_ev,round","txt = dynamic_data.get(""self_consumption_percent"", f""{int(round(pct_ev))}%"")"
.\product_db.py,362,update_data,"('Dict', (('KV', ('Const', ""'brand'""), ('Const', ""'AlphaSolar Inc.'"")), ('KV', ('Const', ""'price_euro'""), ('Const', '182.5'))))","('Dict', 2)",,"update_data = {""price_euro"": 182.50, ""brand"": ""AlphaSolar Inc.""}"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_upload.py.insert.py,56,update_data,"('Dict', (('KV', ('Const', ""'description'""), ('Const', ""'Test Produkt für Upload-Test - AKTUALISIERT'"")), ('KV', ('Const', ""'image_base64'""), ('Name', 'new_image_b64'))))","('Dict', 2)",new_image_b64,update_data = {
.\tests\test_admin_upload.py,56,update_data,"('Dict', (('KV', ('Const', ""'description'""), ('Const', ""'Test Produkt für Upload-Test - AKTUALISIERT'"")), ('KV', ('Const', ""'image_base64'""), ('Name', 'new_image_b64'))))","('Dict', 2)",new_image_b64,update_data = {
.\tools\portings\patches\test_admin_upload.py.insert.py,56,update_data,"('Dict', (('KV', ('Const', ""'description'""), ('Const', ""'Test Produkt für Upload-Test - AKTUALISIERT'"")), ('KV', ('Const', ""'image_base64'""), ('Name', 'new_image_b64'))))","('Dict', 2)",new_image_b64,update_data = {
.\admin_logo_management_ui.py,147,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Logo-Datei auswählen:'""),), (('key', ('Const', ""'logo_file_upload'"")), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""), ('Const', ""'svg'""), ('Const', ""'gif'""), ('Const', ""'webp'""))))))","('Call', 1, 2)",st,uploaded_file = st.file_uploader(
.\doc_output.py,1780,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Other', 'JoinedStr'),), (('key', ('Other', 'JoinedStr')), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""))))))","('Call', 1, 2)","i,st","uploaded_file = st.file_uploader(f""Bild {i+1}"", type=['png', 'jpg', 'jpeg'], key=f""custom_image_{i}"")"
.\doc_output.py,723,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Bild hochladen:'""),), (('key', ('Other', 'JoinedStr')), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""), ('Const', ""'gif'""), ('Const', ""'bmp'""))))))","('Call', 1, 2)","item,st",uploaded_file = st.file_uploader(
.\pdf_widgets.py,368,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Konfigurationsdatei hochladen'""),), (('help', ('Const', ""'Laden Sie eine zuvor exportierte PDF-Konfiguration'"")), ('type', ('List', (('Const', ""'json'""),)))))","('Call', 1, 2)",st,uploaded_file = st.file_uploader(
.\pdf_widgets.py,225,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Bild hochladen'""),), (('key', ('Other', 'JoinedStr')), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""), ('Const', ""'gif'""))))))","('Call', 1, 2)","content_idx,section_key,st",uploaded_file = st.file_uploader(
.\pdf_widgets.py,235,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'PDF hochladen'""),), (('key', ('Other', 'JoinedStr')), ('type', ('List', (('Const', ""'pdf'""),)))))","('Call', 1, 2)","content_idx,section_key,st","uploaded_file = st.file_uploader(""PDF hochladen"", type=[""pdf""], key=f""pdf_{section_key}_{content_idx}"")"
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,137,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Logo-Datei auswählen:'""),), (('key', ('Const', ""'logo_file_upload'"")), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""), ('Const', ""'svg'""), ('Const', ""'gif'""), ('Const', ""'webp'""))))))","('Call', 1, 2)",st,uploaded_file = st.file_uploader(
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,178,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Logo-Datei auswählen:'""),), (('key', ('Const', ""'logo_file_upload'"")), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""), ('Const', ""'svg'""), ('Const', ""'gif'""), ('Const', ""'webp'""))))))","('Call', 1, 2)",st,uploaded_file = st.file_uploader(
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,137,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Logo-Datei auswählen:'""),), (('key', ('Const', ""'logo_file_upload'"")), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""), ('Const', ""'svg'""), ('Const', ""'gif'""), ('Const', ""'webp'""))))))","('Call', 1, 2)",st,uploaded_file = st.file_uploader(
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,178,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Logo-Datei auswählen:'""),), (('key', ('Const', ""'logo_file_upload'"")), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""), ('Const', ""'svg'""), ('Const', ""'gif'""), ('Const', ""'webp'""))))))","('Call', 1, 2)",st,uploaded_file = st.file_uploader(
.\database.py,418,v,"('Call', ('Attr', 'logos', 'get'), (('Name', 'normalized_brand'),), ())","('Call', 1, 0)","logos,normalized_brand",v = logos.get(normalized_brand)
.\excel_eval.py,184,v,"('Call', ('Attr', 'eng', 'evaluate'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","address,eng,sheet","v = eng.evaluate(f""{sheet}!{address}"")"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,35,v,"('Call', ('Name', '_fit_to_float'), (('Name', 'val'),), ())","('Call', 1, 0)","_fit_to_float,val",v = _fit_to_float(val)
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,50,v,"('Call', ('Name', '_fit_to_float'), (('Name', 'val'),), ())","('Call', 1, 0)","_fit_to_float,val",v = _fit_to_float(val)
.\pdf_template_engine\dynamic_overlay.py,223,v,"('Call', ('Name', '_parse_percent'), (('Call', ('Attr', 'dynamic_data', 'get'), (('Name', 'k'),), ()),), ())","('Call', 1, 0)","_parse_percent,dynamic_data,k",v = _parse_percent(dynamic_data.get(k))
.\pdf_template_engine\placeholders.py,77,v,"('Call', ('Name', '_fit_to_float'), (('Name', 'val'),), ())","('Call', 1, 0)","_fit_to_float,val",v = _fit_to_float(val)
.\pdf_template_engine\placeholders.py,1139,v,"('Call', ('Name', 'parse_float'), (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'annual_storage_charge_kwh'""),), ()),), ())","('Call', 1, 0)","analysis_results,parse_float","v = parse_float(analysis_results.get(""annual_storage_charge_kwh""))"
.\pdf_template_engine\placeholders.py,1142,v,"('Call', ('Name', 'parse_float'), (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'annual_storage_discharge_kwh'""),), ()),), ())","('Call', 1, 0)","analysis_results,parse_float","v = parse_float(analysis_results.get(""annual_storage_discharge_kwh""))"
.\pdf_template_engine\placeholders.py,1553,v,"('Call', ('Attr', 'project_details', 'get'), (('Name', 'k'),), ())","('Call', 1, 0)","k,project_details",v = project_details.get(k)
.\pdf_template_engine\placeholders.py,1995,v,"('Call', ('Attr', 'project_details', 'get'), (('Name', 'k'),), ())","('Call', 1, 0)","k,project_details",v = project_details.get(k)
.\pdf_template_engine\placeholders.py,1805,v,"('Call', ('Name', 'parse_float'), (('Name', 'c'),), ())","('Call', 1, 0)","c,parse_float",v = parse_float(c)
.\pdf_template_engine\placeholders.py,1386,v,"('Call', ('Attr', 'module_details', 'get'), (('Name', 'ak'),), ())","('Call', 1, 0)","ak,module_details",v = module_details.get(ak)
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,35,v,"('Call', ('Name', '_fit_to_float'), (('Name', 'val'),), ())","('Call', 1, 0)","_fit_to_float,val",v = _fit_to_float(val)
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,50,v,"('Call', ('Name', '_fit_to_float'), (('Name', 'val'),), ())","('Call', 1, 0)","_fit_to_float,val",v = _fit_to_float(val)
.\excel_eval.py,182,v,"('Call', ('Attr', 'eng', 'value'), (('Name', 'sheet'), ('Name', 'address')), ())","('Call', 2, 0)","address,eng,sheet","v = eng.value(sheet, address)"
.\pdf_template_engine\placeholders.py,1708,v,"('Call', ('Name', '_get_attr'), (('Call', ('Name', 'int'), (('Name', 'pid'),), ()), ('Name', 'k')), ())","('Call', 2, 0)","_get_attr,int,k,pid","v = _get_attr(int(pid), k)"
.\pdf_template_engine\placeholders.py,1910,v,"('Call', ('Name', '_get_attr'), (('Call', ('Name', 'int'), (('Name', 'pid'),), ()), ('Name', 'k')), ())","('Call', 2, 0)","_get_attr,int,k,pid","v = _get_attr(int(pid), k)"
.\analysis.py,388,val,"('Call', ('Name', 'float'), (('Call', ('Attr', 'cheat', 'get'), (('Const', ""'value_years'""),), ()),), ())","('Call', 1, 0)","cheat,float","val = float(cheat.get(""value_years""))"
.\calculations.py,3320,val,"('Call', ('Name', 'float'), (('Name', 'cheated_value_years'),), ())","('Call', 1, 0)","cheated_value_years,float",val = float(cheated_value_years)
.\database.py,1281,val,"('Call', ('Attr', 'company_data', 'get'), (('Name', 'field_name'),), ())","('Call', 1, 0)","company_data,field_name",val = company_data.get(field_name)
.\pdf_template_engine\placeholders.py,638,val,"('Call', ('Name', 'parse_float'), (('Name', 'f'),), ())","('Call', 1, 0)","f,parse_float",val = parse_float(f)
.\pdf_template_engine\placeholders.py,1009,val,"('Call', ('Name', 'parse_float'), (('Name', 'v'),), ())","('Call', 1, 0)","parse_float,v",val = parse_float(v)
.\pdf_template_engine\placeholders.py,1364,val,"('Call', ('Attr', 'module_details', 'get'), (('Name', 'src_key'),), ())","('Call', 1, 0)","module_details,src_key",val = module_details.get(src_key)
.\pdf_template_engine\placeholders.py,1811,val,"('Call', ('Name', 'float'), (('Name', 'sto_kwh'),), ())","('Call', 1, 0)","float,sto_kwh",val = float(sto_kwh)
.\pdf_template_engine\placeholders.py,1871,val,"('Call', ('Attr', 'storage_details', 'get'), (('Name', 'k'),), ())","('Call', 1, 0)","k,storage_details",val = storage_details.get(k)
.\pdf_template_engine\placeholders.py,616,val,"('Call', ('Name', 'parse_float'), (('Name', 'cand'),), ())","('Call', 1, 0)","cand,parse_float",val = parse_float(cand)
.\calculations.py,64,val,"('Call', ('Attr', 'results', 'get'), (('Name', 'key'), ('Const', 'None')), ())","('Call', 2, 0)","key,results","val = results.get(key, None)"
.\database.py,410,val,"('Call', ('Name', 'load_admin_setting'), (('Name', 'key'), ('Const', 'None')), ())","('Call', 2, 0)","key,load_admin_setting","val = load_admin_setting(key, None)"
.\pdf_template_engine\dynamic_overlay.py,162,val,"('Call', ('Attr', ""line.split(':', 1)[1].strip()"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",line,"val = line.split("":"", 1)[1].strip().replace("","", ""."")"
.\pdf_template_engine\placeholders.py,1015,val,"('Call', ('Name', '_load'), (('Const', ""'electricity_price_increase_annual_percent'""), ('Const', '5.0')), ())","('Call', 2, 0)",_load,"val = _load(""electricity_price_increase_annual_percent"", 5.0)"
.\pdf_template_engine\placeholders.py,851,val,"('Call', ('Name', 'max'), (('Const', '0.0'), ('Call', ('Name', 'min'), (('Const', '100.0'), ('Add', (('Call', ('Name', 'float'), (('Name', '_batt_q'),), ()), ('Call', ('Name', 'float'), (('Name', '_direct_q'),), ())))), ())), ())","('Call', 2, 0)","_batt_q,_direct_q,float,max,min","val = max(0.0, min(100.0, float(_direct_q) + float(_batt_q)))"
.\pdf_template_engine\placeholders.py,859,val,"('Call', ('Name', 'max'), (('Const', '0.0'), ('Call', ('Name', 'min'), (('Const', '100.0'), ('Div', ('Mult', (('Add', (('Call', ('Name', 'float'), (('Name', 'direct_sc_sum'),), ()), ('Call', ('Name', 'float'), (('Name', 'discharge_sc_sum'),), ()))), ('Const', '100.0'))), ('Name', 'prod'))), ())), ())","('Call', 2, 0)","direct_sc_sum,discharge_sc_sum,float,max,min,prod","val = max(0.0, min(100.0, 100.0 * (float(direct_sc_sum) + float(discharge_sc_sum)) / prod))"
.\pdf_template_engine\placeholders.py,1449,val,"('Call', ('Name', '_get_attr'), (('Call', ('Name', 'int'), (('Name', 'pid'),), ()), ('Name', 'canonical')), ())","('Call', 2, 0)","_get_attr,canonical,int,pid","val = _get_attr(int(pid), canonical)"
.\pdf_template_engine\placeholders.py,1491,val,"('Call', ('Name', '_resolve_attr'), (('Name', 'can_k'), ('Call', ('Attr', 'synonyms_map_attr', 'get'), (('Name', 'out_k'), ('List', ())), ())), ())","('Call', 2, 0)","_resolve_attr,can_k,out_k,synonyms_map_attr","val = _resolve_attr(can_k, synonyms_map_attr.get(out_k, []))"
.\tools\kakerlake_ultra_cleaner.py,212,val,"('Call', ('Attr', 'results', 'get'), (('Name', 'key'), ('Const', 'None')), ())","('Call', 2, 0)","key,results","val = results.get(key, None)"
.\doc_output.py,2209,validation_result,"('Call', ('Name', 'validate_pdf_data'), (), (('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info_for_pdf')), ('project_data', ('Name', 'project_data'))))","('Call', 0, 3)","analysis_results,company_info_for_pdf,project_data,validate_pdf_data",validation_result = validate_pdf_data(
.\pdf_ui.py,1085,validation_result,"('Call', ('Name', '_validate_pdf_data_availability'), (), (('analysis_results', ('Name', 'analysis_results')), ('project_data', ('Name', 'project_data')), ('texts', ('Name', 'texts'))))","('Call', 0, 3)","_validate_pdf_data_availability,analysis_results,project_data,texts",validation_result = _validate_pdf_data_availability(
.\analysis.py,231,value,"('Call', ('Name', 'float'), (('Call', ('Attr', 'value', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ()),), ())","('Call', 1, 0)","float,value","value = float(value.replace("","", "".""))"
.\live_preview_helpers.py,101,value,"('Call', ('Name', 'float'), (('Call', ('Attr', 'value', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ()),), ())","('Call', 1, 0)","float,value","value = float(value.replace("","", "".""))"
.\pdf_generator.py,753,value,"('Call', ('Name', 'float'), (('Name', 'cleaned_value_str'),), ())","('Call', 1, 0)","cleaned_value_str,float",value = float(cleaned_value_str)
.\database.py,330,value,"('Subscript', ('Name', 'row'), ('Const', ""'value'""))","('Subscript',)",row,value = row['value']
.\simple_logo_test.py,62,value,"('Subscript', ('Name', 'dynamic_data'), ('Name', 'key'))","('Subscript',)","dynamic_data,key",value = dynamic_data[key]
.\notwendig oder nicht\wichtig\portings\patches\simple_logo_test.py.insert.py,61,value,"('Subscript', ('Name', 'dynamic_data'), ('Name', 'key'))","('Subscript',)","dynamic_data,key",value = dynamic_data[key]
.\notwendig oder nicht\wichtig\portings\patches\test_section_titles_logos.py.insert.py,68,value,"('Subscript', ('Name', 'dynamic_data'), ('Name', 'key'))","('Subscript',)","dynamic_data,key",value = dynamic_data[key]
.\tests\test_section_titles_logos.py,69,value,"('Subscript', ('Name', 'dynamic_data'), ('Name', 'key'))","('Subscript',)","dynamic_data,key",value = dynamic_data[key]
.\tools\portings\patches\simple_logo_test.py.insert.py,61,value,"('Subscript', ('Name', 'dynamic_data'), ('Name', 'key'))","('Subscript',)","dynamic_data,key",value = dynamic_data[key]
.\tools\portings\patches\test_section_titles_logos.py.insert.py,68,value,"('Subscript', ('Name', 'dynamic_data'), ('Name', 'key'))","('Subscript',)","dynamic_data,key",value = dynamic_data[key]
.\database.py,1127,value_to_save,"('Other', 'IfExp')","('Other', 'IfExp')","dict,isinstance,json,list,value","value_to_save = json.dumps(value) if isinstance(value, (dict, list)) else value"
.\database.py,1129,value_to_save,"('Other', 'IfExp')","('Other', 'IfExp')",value,value_to_save = 1 if value else 0
.\crm.py,174,values,"('Other', 'ListComp')","('Other', 'ListComp')","data_to_save,k",values = [data_to_save[k] for k in data_to_save if k != 'id']
.\crm.py,219,values,"('Other', 'ListComp')","('Other', 'ListComp')","insert_data,k",values = [insert_data[k] for k in insert_data if k != 'id']
.\analysis.py,2571,verbrauch,"('Other', 'ListComp')","('Other', 'ListComp')","factor,monthly_cons_factors,yearly_consumption",verbrauch = [yearly_consumption * factor for factor in monthly_cons_factors]
.\analysis.py,2573,verbrauch,"('Other', 'ListComp')","('Other', 'ListComp')","float,int,isinstance,math,v,verbrauch_raw",verbrauch = [
.\dev_tools\kakerlake_ultra_cleaner.py,445,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('List', (('Const', ""'file'""), ('Const', ""'lineno'""), ('Const', ""'before'""), ('Const', ""'after'""), ('Const', ""'reason'"")))),))","('Call', 1, 1)","csv,f","w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""]); w.writeheader(); [w.writerow(r) for r in report]"
.\dev_tools\kakerlake_ultra_cleaner.py,507,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('List', (('Const', ""'file'""), ('Const', ""'lineno'""), ('Const', ""'before'""), ('Const', ""'after'""), ('Const', ""'reason'"")))),))","('Call', 1, 1)","csv,f","w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""]); w.writeheader(); [w.writerow(r) for r in report]"
.\mnt\data\kakerlake_ultra_cleaner.py,445,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('List', (('Const', ""'file'""), ('Const', ""'lineno'""), ('Const', ""'before'""), ('Const', ""'after'""), ('Const', ""'reason'"")))),))","('Call', 1, 1)","csv,f","w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""]); w.writeheader(); [w.writerow(r) for r in report]"
.\mnt\data\kakerlake_ultra_cleaner.py,507,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('List', (('Const', ""'file'""), ('Const', ""'lineno'""), ('Const', ""'before'""), ('Const', ""'after'""), ('Const', ""'reason'"")))),))","('Call', 1, 1)","csv,f","w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""]); w.writeheader(); [w.writerow(r) for r in report]"
.\notwendig oder nicht\wichtig\repo_porter_select.py,143,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('Name', 'HDR')),))","('Call', 1, 1)","HDR,csv,f","w = csv.DictWriter(f, fieldnames=HDR)"
.\tools\kakerlake_ultra_cleaner.py,446,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('List', (('Const', ""'file'""), ('Const', ""'lineno'""), ('Const', ""'before'""), ('Const', ""'after'""), ('Const', ""'reason'"")))),))","('Call', 1, 1)","csv,f","w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""]); w.writeheader(); [w.writerow(r) for r in report]"
.\tools\kakerlake_ultra_cleaner.py,508,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('List', (('Const', ""'file'""), ('Const', ""'lineno'""), ('Const', ""'before'""), ('Const', ""'after'""), ('Const', ""'reason'"")))),))","('Call', 1, 1)","csv,f","w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""]); w.writeheader(); [w.writerow(r) for r in report]"
.\tools\repo_porter_select.py,143,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('Name', 'HDR')),))","('Call', 1, 1)","HDR,csv,f","w = csv.DictWriter(f, fieldnames=HDR)"
.\pdf_template_engine\placeholders.py,1641,watt_val,"('Mult', (('Const', '1000.0'), ('Name', 'total_pf')))","('Mult', (('Const',), ('Name',)))",total_pf,watt_val = total_pf * 1000.0
.\pdf_template_engine\placeholders.py,1619,watt_val,"('Mult', (('Const', '1000.0'), ('Name', 'pf')))","('Mult', (('Const',), ('Name',)))",pf,watt_val = pf * 1000.0  # kW zu Watt konvertieren
.\pdf_preview.py,248,width,"('Call', ('Name', 'int'), (('Div', ('Mult', (('Attr', 'img', 'width'), ('Name', 'preview_zoom'))), ('Const', '100')),), ())","('Call', 1, 0)","img,int,preview_zoom",width = int(img.width * preview_zoom / 100)
.\pdf_preview.py,304,width,"('Call', ('Name', 'int'), (('Div', ('Mult', (('Attr', 'current_img', 'width'), ('Name', 'preview_zoom'))), ('Const', '100')),), ())","('Call', 1, 0)","current_img,int,preview_zoom",width = int(current_img.width * preview_zoom / 100)
.\pdf_styles.py,386,x,"('Call', ('Attr', 'np', 'arange'), (('Call', ('Name', 'len'), (('Name', 'months'),), ()),), ())","('Call', 1, 0)","len,months,np",x = np.arange(len(months))
.\pdf_template_engine\dynamic_overlay.py,804,x,"('Call', ('Name', 'float'), (('Call', ('Attr', 'pos', 'get'), (('Const', ""'x'""), ('Const', '50.0')), ()),), ())","('Call', 1, 0)","float,pos","x = float(pos.get(""x"", 50.0))"
.\utils\export_coords.py,28,x,"('Call', ('Name', 'min'), (('Other', 'GeneratorExp'),), ())","('Call', 1, 0)","min,w,wlist","x = min(w[""x0""] for w in wlist)"
.\live_calculation_engine.py,38,yearly_cost,"('Mult', (('Name', 'base_yearly_cost'), ('Pow', ('Add', (('Const', '1'), ('Div', ('Name', 'price_increase_percent'), ('Const', '100')))), ('Sub', ('Name', 'year'), ('Const', '1')))))","('Mult', (('Name',), ('Pow', ('Add', (('Const',), ('Div', ('Name',), ('Const',)))), ('Sub', ('Name',), ('Const',)))))","base_yearly_cost,price_increase_percent,year",yearly_cost = base_yearly_cost * ((1 + price_increase_percent/100) ** (year - 1))
.\live_calculation_engine.py,63,yearly_cost,"('Mult', (('Name', 'yearly_cost_with_pv_base'), ('Pow', ('Add', (('Const', '1'), ('Div', ('Name', 'price_increase_percent'), ('Const', '100')))), ('Sub', ('Name', 'year'), ('Const', '1')))))","('Mult', (('Name',), ('Pow', ('Add', (('Const',), ('Div', ('Name',), ('Const',)))), ('Sub', ('Name',), ('Const',)))))","price_increase_percent,year,yearly_cost_with_pv_base",yearly_cost = yearly_cost_with_pv_base * ((1 + price_increase_percent/100) ** (year - 1))
.\analysis.py,1913,years,"('Call', ('Name', 'int'), (('Call', ('Name', 'max'), (('Const', '1'), ('Name', 'years')), ()),), ())","('Call', 1, 0)","int,max,years","years = int(max(1, years))"
.\analysis.py,3420,years,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '26'),), ()),), ())","('Call', 1, 0)","list,range",years = list(range(26))
.\analysis.py,5465,years,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '1'), ('Const', '26')), ()),), ())","('Call', 1, 0)","list,range","years = list(range(1, 26))"
.\analysis.py,8835,years,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '21'),), ()),), ())","('Call', 1, 0)","list,range",years = list(range(21))
.\analysis.py,9019,years,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '21'),), ()),), ())","('Call', 1, 0)","list,range",years = list(range(21))
.\analysis.py,8416,years,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '1'), ('Const', '11')), ()),), ())","('Call', 1, 0)","list,range","years = list(range(1, 11))"
.\calculations.py,771,years,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Add', (('Call', ('Name', 'int'), (('Name', 'expected_lifetime_years'),), ()), ('Const', '1'))),), ()),), ())","('Call', 1, 0)","expected_lifetime_years,int,list,range",years = list(range(int(expected_lifetime_years) + 1))
.\calculations.py,1060,years,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '1'), ('Const', '26')), ()),), ())","('Call', 1, 0)","list,range","years = list(range(1, 26))  # 25 Jahre"
.\calculations.py,1242,years,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '1'), ('Const', '26')), ()),), ())","('Call', 1, 0)","list,range","years = list(range(1, 26))"
.\heatpump_ui.py,641,years,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '0'), ('Const', '21')), ()),), ())","('Call', 1, 0)","list,range","years = list(range(0, 21))"
