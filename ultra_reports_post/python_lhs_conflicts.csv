file,lineno,lhs,rhs_sig,rhs_shape,rhs_vars,line
.\utils\remove_text.py,9,BASE,"('Attr', 'Path(__file__).resolve().parent', 'parent')","('Attr',)","Path,__file__",BASE = Path(__file__).resolve().parent.parent        # Projekt-Root
.\notwendig oder nicht\excel_range_reader.py,6,BASE,"('Call', ('Name', 'Path'), (('Const', ""'/mnt/data'""),), ())","('Call', 1, 0)",Path,"BASE = Path(""/mnt/data"")"
.\dev_tools\kakerlake_ultra_cleaner.py,241,BUILD_PD_DEF_CODE,"('Call', ('Attr', '\'\\ndef build_project_data(*parts, drop_none=True, drop_empty_str=True, normalize=True, keymap=None):\\n    out = {}\\n    def _coerce(x):\\n        try:\\n            if x is None: return {}\\n            if isinstance(x, dict): return x\\n            if hasattr(x, \\\'items\\\'): return dict(x.items())\\n            return dict(x)\\n        except Exception:\\n            return {}\\n    for part in parts:\\n        d = _coerce(part)\\n        for k, v in d.items():\\n            if drop_none and v is None: continue\\n            if drop_empty_str and isinstance(v, str) and v.strip()== """": continue\\n            kk = k\\n            try:\\n                if isinstance(kk, str):\\n                    kk = kk.strip().replace(""\\\\\\\\u200b"","""").replace(""\\\\\\\\n"","" "").strip()\\n                if keymap and kk in keymap: kk = keymap[kk]\\n            except Exception: pass\\n            out[kk] = v\\n    return out\\n\'', 'strip'), (('Const', ""'\\n'""),), ())","('Call', 1, 0)",,"BUILD_PD_DEF_CODE = r"""""""
.\dev_tools\kakerlake_ultra_cleaner_v2.py,140,BUILD_PD_DEF_CODE,"('Call', ('Attr', '\'\\ndef build_project_data(*parts, drop_none=True, drop_empty_str=True, normalize=True, keymap=None):\\n    out = {}\\n    def _coerce(x):\\n        try:\\n            if x is None: return {}\\n            if isinstance(x, dict): return x\\n            if hasattr(x, \\\'items\\\'): return dict(x.items())\\n            return dict(x)\\n        except Exception:\\n            return {}\\n    for part in parts:\\n        d = _coerce(part)\\n        for k, v in d.items():\\n            if drop_none and v is None: continue\\n            if drop_empty_str and isinstance(v, str) and v.strip()== """": continue\\n            kk = k\\n            try:\\n                if isinstance(kk, str):\\n                    kk = kk.strip().replace(""\\\\\\\\u200b"","""").replace(""\\\\\\\\n"","" "").strip()\\n                if keymap and kk in keymap: kk = keymap[kk]\\n            except Exception: pass\\n            out[kk] = v\\n    return out\\n\'', 'strip'), (('Const', ""'\\n'""),), ())","('Call', 1, 0)",,"BUILD_PD_DEF_CODE = r"""""""
.\dev_tools\kakerlake_ultra_cleaner_v3.py,153,BUILD_PD_DEF_CODE,"('Call', ('Attr', '\'\\ndef build_project_data(*parts, drop_none=True, drop_empty_str=True, normalize=True, keymap=None):\\n    out = {}\\n    def _coerce(x):\\n        try:\\n            if x is None: return {}\\n            if isinstance(x, dict): return x\\n            if hasattr(x, \\\'items\\\'): return dict(x.items())\\n            return dict(x)\\n        except Exception:\\n            return {}\\n    for part in parts:\\n        d = _coerce(part)\\n        for k, v in d.items():\\n            if drop_none and v is None: continue\\n            if drop_empty_str and isinstance(v, str) and v.strip()== """": continue\\n            kk = k\\n            try:\\n                if isinstance(kk, str):\\n                    kk = kk.strip().replace(""\\\\\\\\u200b"","""").replace(""\\\\\\\\n"","" "").strip()\\n                if keymap and kk in keymap: kk = keymap[kk]\\n            except Exception: pass\\n            out[kk] = v\\n    return out\\n\'', 'strip'), (('Const', ""'\\n'""),), ())","('Call', 1, 0)",,"BUILD_PD_DEF_CODE = r"""""""
.\mnt\data\kakerlake_ultra_cleaner.py,241,BUILD_PD_DEF_CODE,"('Call', ('Attr', '\'\\ndef build_project_data(*parts, drop_none=True, drop_empty_str=True, normalize=True, keymap=None):\\n    out = {}\\n    def _coerce(x):\\n        try:\\n            if x is None: return {}\\n            if isinstance(x, dict): return x\\n            if hasattr(x, \\\'items\\\'): return dict(x.items())\\n            return dict(x)\\n        except Exception:\\n            return {}\\n    for part in parts:\\n        d = _coerce(part)\\n        for k, v in d.items():\\n            if drop_none and v is None: continue\\n            if drop_empty_str and isinstance(v, str) and v.strip()== """": continue\\n            kk = k\\n            try:\\n                if isinstance(kk, str):\\n                    kk = kk.strip().replace(""\\\\\\\\u200b"","""").replace(""\\\\\\\\n"","" "").strip()\\n                if keymap and kk in keymap: kk = keymap[kk]\\n            except Exception: pass\\n            out[kk] = v\\n    return out\\n\'', 'strip'), (('Const', ""'\\n'""),), ())","('Call', 1, 0)",,"BUILD_PD_DEF_CODE = r"""""""
.\mnt\data\kakerlake_ultra_cleaner_v2.py,140,BUILD_PD_DEF_CODE,"('Call', ('Attr', '\'\\ndef build_project_data(*parts, drop_none=True, drop_empty_str=True, normalize=True, keymap=None):\\n    out = {}\\n    def _coerce(x):\\n        try:\\n            if x is None: return {}\\n            if isinstance(x, dict): return x\\n            if hasattr(x, \\\'items\\\'): return dict(x.items())\\n            return dict(x)\\n        except Exception:\\n            return {}\\n    for part in parts:\\n        d = _coerce(part)\\n        for k, v in d.items():\\n            if drop_none and v is None: continue\\n            if drop_empty_str and isinstance(v, str) and v.strip()== """": continue\\n            kk = k\\n            try:\\n                if isinstance(kk, str):\\n                    kk = kk.strip().replace(""\\\\\\\\u200b"","""").replace(""\\\\\\\\n"","" "").strip()\\n                if keymap and kk in keymap: kk = keymap[kk]\\n            except Exception: pass\\n            out[kk] = v\\n    return out\\n\'', 'strip'), (('Const', ""'\\n'""),), ())","('Call', 1, 0)",,"BUILD_PD_DEF_CODE = r"""""""
.\tools\kakerlake_ultra_cleaner.py,242,BUILD_PD_DEF_CODE,"('Name', 'r')","('Name',)",r,BUILD_PD_DEF_CODE = r
.\analysis.py,7211,CHART_MODERNIZER_AVAILABLE,"('Const', 'False')","('Const',)",,CHART_MODERNIZER_AVAILABLE = False
.\analysis.py,7208,CHART_MODERNIZER_AVAILABLE,"('Const', 'True')","('Const',)",,CHART_MODERNIZER_AVAILABLE = True
.\dev_tools\kakerlake_ultra_cleaner.py,186,COMPUTE_DEF_CODE,"('Call', ('Attr', '""\\ndef compute_annual_savings(\\n    *,\\n    results: Optional[Dict[str, Any]] = None,\\n    annual_feedin_revenue: Optional[float] = None,\\n    annual_electricity_savings: Optional[float] = None,\\n    annual_old_cost: Optional[float] = None,\\n    annual_hp_cost: Optional[float] = None,\\n    electricity_costs_without_pv: Optional[float] = None,\\n    electricity_costs_with_pv: Optional[float] = None,\\n    annual_feed_in_revenue: Optional[float] = None,\\n    default: float = 0.0,\\n) -> float:\\n    try:\\n        if results:\\n            for key in (\\n                \'annual_total_savings_euro\',\\n                \'annual_financial_benefit_year1\',\\n                \'annual_savings_consumption_eur\',\\n                \'jahresersparnis_gesamt\',\\n                \'total_annual_savings\',\\n                \'annual_savings\',\\n                \'annual_savings_total_euro\',\\n            ):\\n                if isinstance(results, dict) and key in results:\\n                    val = results.get(key, None)\\n                    try:\\n                        if val is not None and float(val) != 0.0:\\n                            return float(val)\\n                    except Exception:\\n                        pass\\n            try:\\n                feed_in_revenue = results.get(\'annual_revenue_feed_in_eur\', 0.0)\\n                consumption_savings = results.get(\'annual_savings_consumption_eur\', 0.0)\\n                if (float(feed_in_revenue) > 0.0) or (float(consumption_savings) > 0.0):\\n                    return float(feed_in_revenue) + float(consumption_savings)\\n            except Exception:\\n                pass\\n        if annual_feedin_revenue is not None and annual_electricity_savings is not None:\\n            return float(annual_feedin_revenue) + float(annual_electricity_savings)\\n        if annual_old_cost is not None and annual_hp_cost is not None:\\n            return float(annual_old_cost) - float(annual_hp_cost)\\n        if electricity_costs_without_pv is not None and electricity_costs_with_pv is not None:\\n            base = float(electricity_costs_without_pv) - float(electricity_costs_with_pv)\\n            if annual_feed_in_revenue is not None:\\n                base += float(annual_feed_in_revenue)\\n            return base\\n        return float(default)\\n    except Exception:\\n        try:\\n            return float(default)\\n        except Exception:\\n            return 0.0\\n""', 'strip'), (('Const', ""'\\n'""),), ())","('Call', 1, 0)",,"COMPUTE_DEF_CODE = r"""""""
.\dev_tools\kakerlake_ultra_cleaner_v2.py,85,COMPUTE_DEF_CODE,"('Call', ('Attr', '""\\ndef compute_annual_savings(\\n    *,\\n    results: Optional[Dict[str, Any]] = None,\\n    annual_feedin_revenue: Optional[float] = None,\\n    annual_electricity_savings: Optional[float] = None,\\n    annual_old_cost: Optional[float] = None,\\n    annual_hp_cost: Optional[float] = None,\\n    electricity_costs_without_pv: Optional[float] = None,\\n    electricity_costs_with_pv: Optional[float] = None,\\n    annual_feed_in_revenue: Optional[float] = None,\\n    default: float = 0.0,\\n) -> float:\\n    try:\\n        if results:\\n            for key in (\\n                \'annual_total_savings_euro\',\\n                \'annual_financial_benefit_year1\',\\n                \'annual_savings_consumption_eur\',\\n                \'jahresersparnis_gesamt\',\\n                \'total_annual_savings\',\\n                \'annual_savings\',\\n                \'annual_savings_total_euro\',\\n            ):\\n                if isinstance(results, dict) and key in results:\\n                    val = results.get(key, None)\\n                    try:\\n                        if val is not None and float(val) != 0.0:\\n                            return float(val)\\n                    except Exception:\\n                        pass\\n            try:\\n                feed_in_revenue = results.get(\'annual_revenue_feed_in_eur\', 0.0)\\n                consumption_savings = results.get(\'annual_savings_consumption_eur\', 0.0)\\n                if (float(feed_in_revenue) > 0.0) or (float(consumption_savings) > 0.0):\\n                    return float(feed_in_revenue) + float(consumption_savings)\\n            except Exception:\\n                pass\\n        if annual_feedin_revenue is not None and annual_electricity_savings is not None:\\n            return float(annual_feedin_revenue) + float(annual_electricity_savings)\\n        if annual_old_cost is not None and annual_hp_cost is not None:\\n            return float(annual_old_cost) - float(annual_hp_cost)\\n        if electricity_costs_without_pv is not None and electricity_costs_with_pv is not None:\\n            base = float(electricity_costs_without_pv) - float(electricity_costs_with_pv)\\n            if annual_feed_in_revenue is not None:\\n                base += float(annual_feed_in_revenue)\\n            return base\\n        return float(default)\\n    except Exception:\\n        try:\\n            return float(default)\\n        except Exception:\\n            return 0.0\\n""', 'strip'), (('Const', ""'\\n'""),), ())","('Call', 1, 0)",,"COMPUTE_DEF_CODE = r"""""""
.\dev_tools\kakerlake_ultra_cleaner_v3.py,98,COMPUTE_DEF_CODE,"('Call', ('Attr', '""\\ndef compute_annual_savings(\\n    *,\\n    results: Optional[Dict[str, Any]] = None,\\n    annual_feedin_revenue: Optional[float] = None,\\n    annual_electricity_savings: Optional[float] = None,\\n    annual_old_cost: Optional[float] = None,\\n    annual_hp_cost: Optional[float] = None,\\n    electricity_costs_without_pv: Optional[float] = None,\\n    electricity_costs_with_pv: Optional[float] = None,\\n    annual_feed_in_revenue: Optional[float] = None,\\n    default: float = 0.0,\\n) -> float:\\n    try:\\n        if results:\\n            for key in (\\n                \'annual_total_savings_euro\',\\n                \'annual_financial_benefit_year1\',\\n                \'annual_savings_consumption_eur\',\\n                \'jahresersparnis_gesamt\',\\n                \'total_annual_savings\',\\n                \'annual_savings\',\\n                \'annual_savings_total_euro\',\\n            ):\\n                if isinstance(results, dict) and key in results:\\n                    val = results.get(key, None)\\n                    try:\\n                        if val is not None and float(val) != 0.0:\\n                            return float(val)\\n                    except Exception:\\n                        pass\\n            try:\\n                feed_in_revenue = results.get(\'annual_revenue_feed_in_eur\', 0.0)\\n                consumption_savings = results.get(\'annual_savings_consumption_eur\', 0.0)\\n                if (float(feed_in_revenue) > 0.0) or (float(consumption_savings) > 0.0):\\n                    return float(feed_in_revenue) + float(consumption_savings)\\n            except Exception:\\n                pass\\n        if annual_feedin_revenue is not None and annual_electricity_savings is not None:\\n            return float(annual_feedin_revenue) + float(annual_electricity_savings)\\n        if annual_old_cost is not None and annual_hp_cost is not None:\\n            return float(annual_old_cost) - float(annual_hp_cost)\\n        if electricity_costs_without_pv is not None and electricity_costs_with_pv is not None:\\n            base = float(electricity_costs_without_pv) - float(electricity_costs_with_pv)\\n            if annual_feed_in_revenue is not None:\\n                base += float(annual_feed_in_revenue)\\n            return base\\n        return float(default)\\n    except Exception:\\n        try:\\n            return float(default)\\n        except Exception:\\n            return 0.0\\n""', 'strip'), (('Const', ""'\\n'""),), ())","('Call', 1, 0)",,"COMPUTE_DEF_CODE = r"""""""
.\mnt\data\kakerlake_ultra_cleaner.py,186,COMPUTE_DEF_CODE,"('Call', ('Attr', '""\\ndef compute_annual_savings(\\n    *,\\n    results: Optional[Dict[str, Any]] = None,\\n    annual_feedin_revenue: Optional[float] = None,\\n    annual_electricity_savings: Optional[float] = None,\\n    annual_old_cost: Optional[float] = None,\\n    annual_hp_cost: Optional[float] = None,\\n    electricity_costs_without_pv: Optional[float] = None,\\n    electricity_costs_with_pv: Optional[float] = None,\\n    annual_feed_in_revenue: Optional[float] = None,\\n    default: float = 0.0,\\n) -> float:\\n    try:\\n        if results:\\n            for key in (\\n                \'annual_total_savings_euro\',\\n                \'annual_financial_benefit_year1\',\\n                \'annual_savings_consumption_eur\',\\n                \'jahresersparnis_gesamt\',\\n                \'total_annual_savings\',\\n                \'annual_savings\',\\n                \'annual_savings_total_euro\',\\n            ):\\n                if isinstance(results, dict) and key in results:\\n                    val = results.get(key, None)\\n                    try:\\n                        if val is not None and float(val) != 0.0:\\n                            return float(val)\\n                    except Exception:\\n                        pass\\n            try:\\n                feed_in_revenue = results.get(\'annual_revenue_feed_in_eur\', 0.0)\\n                consumption_savings = results.get(\'annual_savings_consumption_eur\', 0.0)\\n                if (float(feed_in_revenue) > 0.0) or (float(consumption_savings) > 0.0):\\n                    return float(feed_in_revenue) + float(consumption_savings)\\n            except Exception:\\n                pass\\n        if annual_feedin_revenue is not None and annual_electricity_savings is not None:\\n            return float(annual_feedin_revenue) + float(annual_electricity_savings)\\n        if annual_old_cost is not None and annual_hp_cost is not None:\\n            return float(annual_old_cost) - float(annual_hp_cost)\\n        if electricity_costs_without_pv is not None and electricity_costs_with_pv is not None:\\n            base = float(electricity_costs_without_pv) - float(electricity_costs_with_pv)\\n            if annual_feed_in_revenue is not None:\\n                base += float(annual_feed_in_revenue)\\n            return base\\n        return float(default)\\n    except Exception:\\n        try:\\n            return float(default)\\n        except Exception:\\n            return 0.0\\n""', 'strip'), (('Const', ""'\\n'""),), ())","('Call', 1, 0)",,"COMPUTE_DEF_CODE = r"""""""
.\mnt\data\kakerlake_ultra_cleaner_v2.py,85,COMPUTE_DEF_CODE,"('Call', ('Attr', '""\\ndef compute_annual_savings(\\n    *,\\n    results: Optional[Dict[str, Any]] = None,\\n    annual_feedin_revenue: Optional[float] = None,\\n    annual_electricity_savings: Optional[float] = None,\\n    annual_old_cost: Optional[float] = None,\\n    annual_hp_cost: Optional[float] = None,\\n    electricity_costs_without_pv: Optional[float] = None,\\n    electricity_costs_with_pv: Optional[float] = None,\\n    annual_feed_in_revenue: Optional[float] = None,\\n    default: float = 0.0,\\n) -> float:\\n    try:\\n        if results:\\n            for key in (\\n                \'annual_total_savings_euro\',\\n                \'annual_financial_benefit_year1\',\\n                \'annual_savings_consumption_eur\',\\n                \'jahresersparnis_gesamt\',\\n                \'total_annual_savings\',\\n                \'annual_savings\',\\n                \'annual_savings_total_euro\',\\n            ):\\n                if isinstance(results, dict) and key in results:\\n                    val = results.get(key, None)\\n                    try:\\n                        if val is not None and float(val) != 0.0:\\n                            return float(val)\\n                    except Exception:\\n                        pass\\n            try:\\n                feed_in_revenue = results.get(\'annual_revenue_feed_in_eur\', 0.0)\\n                consumption_savings = results.get(\'annual_savings_consumption_eur\', 0.0)\\n                if (float(feed_in_revenue) > 0.0) or (float(consumption_savings) > 0.0):\\n                    return float(feed_in_revenue) + float(consumption_savings)\\n            except Exception:\\n                pass\\n        if annual_feedin_revenue is not None and annual_electricity_savings is not None:\\n            return float(annual_feedin_revenue) + float(annual_electricity_savings)\\n        if annual_old_cost is not None and annual_hp_cost is not None:\\n            return float(annual_old_cost) - float(annual_hp_cost)\\n        if electricity_costs_without_pv is not None and electricity_costs_with_pv is not None:\\n            base = float(electricity_costs_without_pv) - float(electricity_costs_with_pv)\\n            if annual_feed_in_revenue is not None:\\n                base += float(annual_feed_in_revenue)\\n            return base\\n        return float(default)\\n    except Exception:\\n        try:\\n            return float(default)\\n        except Exception:\\n            return 0.0\\n""', 'strip'), (('Const', ""'\\n'""),), ())","('Call', 1, 0)",,"COMPUTE_DEF_CODE = r"""""""
.\tools\kakerlake_ultra_cleaner.py,187,COMPUTE_DEF_CODE,"('Name', 'r')","('Name',)",r,COMPUTE_DEF_CODE = r
.\crm_calendar_ui.py,17,DATABASE_AVAILABLE,"('Const', 'False')","('Const',)",,DATABASE_AVAILABLE = False
.\crm_dashboard_ui.py,30,DATABASE_AVAILABLE,"('Const', 'False')","('Const',)",,DATABASE_AVAILABLE = False
.\crm_pipeline_ui.py,16,DATABASE_AVAILABLE,"('Const', 'False')","('Const',)",,DATABASE_AVAILABLE = False
.\crm_calendar_ui.py,15,DATABASE_AVAILABLE,"('Const', 'True')","('Const',)",,DATABASE_AVAILABLE = True
.\crm_dashboard_ui.py,27,DATABASE_AVAILABLE,"('Const', 'True')","('Const',)",,DATABASE_AVAILABLE = True
.\crm_pipeline_ui.py,14,DATABASE_AVAILABLE,"('Const', 'True')","('Const',)",,DATABASE_AVAILABLE = True
.\brand_logo_db.py,17,DB_AVAILABLE,"('Const', 'False')","('Const',)",,DB_AVAILABLE = False
.\product_db.py,14,DB_AVAILABLE,"('Const', 'False')","('Const',)",,DB_AVAILABLE = False
.\brand_logo_db.py,12,DB_AVAILABLE,"('Const', 'True')","('Const',)",,DB_AVAILABLE = True
.\product_db.py,22,DB_AVAILABLE,"('Const', 'True')","('Const',)",,DB_AVAILABLE = True
.\check_companies.py,6,DB_PATH,"('Call', ('Attr', 'os.path', 'join'), (('Call', ('Attr', 'os', 'getcwd'), (), ()), ('Const', ""'data'""), ('Const', ""'app_data.db'"")), ())","('Call', 3, 0)",os,"DB_PATH = os.path.join(os.getcwd(), 'data', 'app_data.db')"
.\check_db.py,8,DB_PATH,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'BASE_DIR'), ('Const', ""'data'""), ('Const', ""'app_data.db'"")), ())","('Call', 3, 0)","BASE_DIR,os","DB_PATH = os.path.join(BASE_DIR, 'data', 'app_data.db')"
.\update_tariffs.py,8,DB_PATH,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'BASE_DIR'), ('Const', ""'data'""), ('Const', ""'app_data.db'"")), ())","('Call', 3, 0)","BASE_DIR,os","DB_PATH = os.path.join(BASE_DIR, 'data', 'app_data.db')"
.\database.py,15,DB_PATH,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'DATA_DIR'), ('Const', ""'app_data.db'"")), ())","('Call', 2, 0)","DATA_DIR,os","DB_PATH = os.path.join(DATA_DIR, 'app_data.db')"
.\database.py,746,DB_PATH,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'DATA_DIR'), ('Const', ""'app_data.db'"")), ())","('Call', 2, 0)","DATA_DIR,os","DB_PATH = os.path.join(DATA_DIR, 'app_data.db')"
.\doc_output.py,67,DEBUG_WIDGET_AVAILABLE,"('Const', 'False')","('Const',)",,DEBUG_WIDGET_AVAILABLE = False
.\doc_output.py,65,DEBUG_WIDGET_AVAILABLE,"('Const', 'True')","('Const',)",,DEBUG_WIDGET_AVAILABLE = True
.\pdf_template_engine\prepare_backgrounds.py,6,DST,"('Div', ('Attr', 'Path(__file__)', 'parent'), ('Const', ""'bg'""))","('Div', ('Attr',), ('Const',))","Path,__file__",DST = Path(__file__).parent / 'bg'
.\utils\remove_text.py,11,DST,"('Div', ('Name', 'SRC'), ('Const', ""'notext'""))","('Div', ('Name',), ('Const',))",SRC,"DST  = SRC / ""notext""                                # Zielordner"
.\data_input.py,283,EFFECTIVE_GOOGLE_API_KEY,"('Const', 'None')","('Const',)",,EFFECTIVE_GOOGLE_API_KEY = None
.\data_input.py,285,EFFECTIVE_GOOGLE_API_KEY,"('Name', 'Maps_API_KEY_FROM_ENV')","('Name',)",Maps_API_KEY_FROM_ENV,EFFECTIVE_GOOGLE_API_KEY = Maps_API_KEY_FROM_ENV
.\data_input.py,289,EFFECTIVE_GOOGLE_API_KEY,"('Name', 'api_key_from_db')","('Name',)",api_key_from_db,EFFECTIVE_GOOGLE_API_KEY = api_key_from_db
.\heatpump_ui.py,36,HEATPUMP_MODULES_AVAILABLE,"('Const', 'False')","('Const',)",,HEATPUMP_MODULES_AVAILABLE = False
.\heatpump_ui.py,33,HEATPUMP_MODULES_AVAILABLE,"('Const', 'True')","('Const',)",,HEATPUMP_MODULES_AVAILABLE = True
.\database.py,179,INITIAL_ADMIN_SETTINGS,"('Dict', (('KV', ('Const', ""'active_company_id'""), ('Const', 'None')), ('KV', ('Const', ""'feed_in_tariffs'""), ('Dict', (('KV', ('Const', ""'full'""), ('List', (('Dict', (('KV', ('Const', ""'ct_per_kwh'""), ('Const', '12.9')), ('KV', ('Const', ""'kwp_max'""), ('Const', '10.0')), ('KV', ('Const', ""'kwp_min'""), ('Const', '0.0')))), ('Dict', (('KV', ('Const', ""'ct_per_kwh'""), ('Const', '10.8')), ('KV', ('Const', ""'kwp_max'""), ('Const', '100.0')), ('KV', ('Const', ""'kwp_min'""), ('Const', '10.01'))))))), ('KV', ('Const', ""'parts'""), ('List', (('Dict', (('KV', ('Const', ""'ct_per_kwh'""), ('Const', '8.1')), ('KV', ('Const', ""'kwp_max'""), ('Const', '10.0')), ('KV', ('Const', ""'kwp_min'""), ('Const', '0.0')))), ('Dict', (('KV', ('Const', ""'ct_per_kwh'""), ('Const', '7.0')), ('KV', ('Const', ""'kwp_max'""), ('Const', '40.0')), ('KV', ('Const', ""'kwp_min'""), ('Const', '10.01')))), ('Dict', (('KV', ('Const', ""'ct_per_kwh'""), ('Const', '5.7')), ('KV', ('Const', ""'kwp_max'""), ('Const', '1000.0')), ('KV', ('Const', ""'kwp_min'""), ('Const', '40.01')))))))))), ('KV', ('Const', ""'global_constants'""), ('Dict', (('KV', ('Const', ""'afa_period_years'""), ('Const', '20')), ('KV', ('Const', ""'alternative_investment_interest_rate_percent'""), ('Const', '5.0')), ('KV', ('Const', ""'annual_module_degradation_percent'""), ('Const', '0.5')), ('KV', ('Const', ""'app_debug_mode_enabled'""), ('Const', 'False')), ('KV', ('Const', ""'capital_gains_tax_kest_percent'""), ('Const', '26.375')), ('KV', ('Const', ""'co2_emission_factor_kg_per_kwh'""), ('Const', '0.474')), ('KV', ('Const', ""'default_specific_yield_kwh_kwp'""), ('Const', '950.0')), ('KV', ('Const', ""'direct_self_consumption_factor_of_production'""), ('Const', '0.25')), ('KV', ('Const', ""'eauto_annual_km'""), ('Const', '10000')), ('KV', ('Const', ""'eauto_consumption_kwh_per_100km'""), ('Const', '18.0')), ('KV', ('Const', ""'eauto_pv_share_percent'""), ('Const', '30.0')), ('KV', ('Const', ""'einspeiseverguetung_period_years'""), ('Const', '20')), ('KV', ('Const', ""'electricity_price_increase_annual_percent'""), ('Const', '3.0')), ('KV', ('Const', ""'global_yield_adjustment_percent'""), ('Const', '0.0')), ('KV', ('Const', ""'heatpump_cop_factor'""), ('Const', '3.5')), ('KV', ('Const', ""'heatpump_pv_share_percent'""), ('Const', '40.0')), ('KV', ('Const', ""'inflation_rate_percent'""), ('Const', '2.0')), ('KV', ('Const', ""'loan_interest_rate_percent'""), ('Const', '4.0')), ('KV', ('Const', ""'maintenance_costs_base_percent'""), ('Const', '1.5')), ('KV', ('Const', ""'maintenance_fixed_eur_pa'""), ('Const', '50.0')), ('KV', ('Const', ""'maintenance_increase_percent_pa'""), ('Const', '2.0')), ('KV', ('Const', ""'maintenance_variable_eur_per_kwp_pa'""), ('Const', '5.0')), ('KV', ('Const', ""'marktwert_strom_eur_per_kwh_after_eeg'""), ('Const', '0.03')), ('KV', ('Const', ""'monthly_consumption_distribution'""), ('List', (('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0837')))), ('KV', ('Const', ""'monthly_production_distribution'""), ('List', (('Const', '0.03'), ('Const', '0.05'), ('Const', '0.08'), ('Const', '0.11'), ('Const', '0.13'), ('Const', '0.14'), ('Const', '0.13'), ('Const', '0.12'), ('Const', '0.09'), ('Const', '0.06'), ('Const', '0.04'), ('Const', '0.02')))), ('KV', ('Const', ""'one_time_bonus_eur'""), ('Const', '0.0')), ('KV', ('Const', ""'pdf_design_settings'""), ('Dict', (('KV', ('Const', ""'primary_color'""), ('Const', ""'#003366'"")), ('KV', ('Const', ""'secondary_color'""), ('Const', ""'#808080'""))))), ('KV', ('Const', ""'pvgis_system_loss_default_percent'""), ('Const', '14.0')), ('KV', ('Const', ""'reference_specific_yield_pr'""), ('Const', '1100.0')), ('KV', ('Const', ""'salutation_options'""), ('List', (('Const', ""'Herr'""), ('Const', ""'Frau'""), ('Const', ""'Familie'""), ('Const', ""'Firma'""), ('Const', ""'Divers'"")))), ('KV', ('Const', ""'simulation_period_years'""), ('Const', '20')), ('KV', ('Const', ""'storage_cycles_per_year'""), ('Const', '250')), ('KV', ('Const', ""'storage_efficiency'""), ('Const', '0.9')), ('KV', ('Const', ""'vat_rate_percent'""), ('Const', '0.0')), ('KV', ('Const', ""'visualization_settings'""), ('Dict', (('KV', ('Const', ""'color_discrete_sequence'""), ('List', (('Const', ""'#0F172A'""), ('Const', ""'#2563EB'""), ('Const', ""'#22C55E'""), ('Const', ""'#F59E0B'""), ('Const', ""'#EF4444'""), ('Const', ""'#06B6D4'""), ('Const', ""'#8B5CF6'"")))), ('KV', ('Const', ""'consumption_coverage_chart'""), ('Dict', (('KV', ('Const', ""'chart_type'""), ('Const', ""'pie'"")), ('KV', ('Const', ""'color_palette'""), ('Const', ""'Pastel'"")), ('KV', ('Const', ""'show_labels'""), ('Const', 'True')), ('KV', ('Const', ""'show_percentage'""), ('Const', 'True'))))), ('KV', ('Const', ""'corporate_palettes'""), ('Dict', (('KV', ('Const', ""'accent'""), ('List', (('Const', ""'#2563EB'""), ('Const', ""'#22C55E'""), ('Const', ""'#F59E0B'"")))), ('KV', ('Const', ""'primary'""), ('List', (('Const', ""'#0F172A'""), ('Const', ""'#334155'""), ('Const', ""'#64748B'"")))), ('KV', ('Const', ""'status'""), ('Dict', (('KV', ('Const', ""'err'""), ('Const', ""'#EF4444'"")), ('KV', ('Const', ""'ok'""), ('Const', ""'#22C55E'"")), ('KV', ('Const', ""'warn'""), ('Const', ""'#F59E0B'"")))))))), ('KV', ('Const', ""'cost_overview_chart'""), ('Dict', (('KV', ('Const', ""'chart_type'""), ('Const', ""'bar'"")), ('KV', ('Const', ""'color_palette'""), ('Const', ""'Plotly Standard'"")), ('KV', ('Const', ""'primary_color_bar'""), ('Const', ""'#1f77b4'"")), ('KV', ('Const', ""'show_values_on_chart'""), ('Const', 'True'))))), ('KV', ('Const', ""'cumulative_cashflow_chart'""), ('Dict', (('KV', ('Const', ""'chart_type'""), ('Const', ""'line'"")), ('KV', ('Const', ""'line_color'""), ('Const', ""'#17becf'"")), ('KV', ('Const', ""'show_zero_line'""), ('Const', 'True'))))), ('KV', ('Const', ""'monthly_prod_cons_chart'""), ('Dict', (('KV', ('Const', ""'chart_type'""), ('Const', ""'line'"")), ('KV', ('Const', ""'line_color_consumption'""), ('Const', ""'#d62728'"")), ('KV', ('Const', ""'line_color_production'""), ('Const', ""'#2ca02c'"")), ('KV', ('Const', ""'show_markers'""), ('Const', 'True'))))), ('KV', ('Const', ""'pv_usage_chart'""), ('Dict', (('KV', ('Const', ""'chart_type'""), ('Const', ""'pie'"")), ('KV', ('Const', ""'color_palette'""), ('Const', ""'Grün-Variationen'"")), ('KV', ('Const', ""'show_percentage'""), ('Const', 'True'))))))))))), ('KV', ('Const', ""'pdf_design_settings'""), ('Dict', (('KV', ('Const', ""'primary_color'""), ('Const', ""'#003366'"")), ('KV', ('Const', ""'secondary_color'""), ('Const', ""'#808080'""))))), ('KV', ('Const', ""'price_matrix_csv_data'""), ('Const', 'None')), ('KV', ('Const', ""'salutation_options'""), ('List', (('Const', ""'Herr'""), ('Const', ""'Frau'""), ('Const', ""'Familie'""), ('Const', ""'Firma'""), ('Const', ""'Divers'"")))), ('KV', ('Const', ""'title_options'""), ('List', (('Const', ""'Dr.'""), ('Const', ""'Prof.'""), ('Const', ""'Mag.'""), ('Const', ""'Ing.'""), ('Const', ""''""))))))","('Dict', 7)",,"INITIAL_ADMIN_SETTINGS: Dict[str, Any] = {"
.\database.py,755,INITIAL_ADMIN_SETTINGS,"('Dict', (('KV', ('Const', ""'active_company_id'""), ('Const', 'None')), ('KV', ('Const', ""'feed_in_tariffs'""), ('Dict', (('KV', ('Const', ""'full'""), ('List', (('Dict', (('KV', ('Const', ""'ct_per_kwh'""), ('Const', '12.9')), ('KV', ('Const', ""'kwp_max'""), ('Const', '10.0')), ('KV', ('Const', ""'kwp_min'""), ('Const', '0.0')))), ('Dict', (('KV', ('Const', ""'ct_per_kwh'""), ('Const', '10.8')), ('KV', ('Const', ""'kwp_max'""), ('Const', '100.0')), ('KV', ('Const', ""'kwp_min'""), ('Const', '10.01'))))))), ('KV', ('Const', ""'parts'""), ('List', (('Dict', (('KV', ('Const', ""'ct_per_kwh'""), ('Const', '8.1')), ('KV', ('Const', ""'kwp_max'""), ('Const', '10.0')), ('KV', ('Const', ""'kwp_min'""), ('Const', '0.0')))), ('Dict', (('KV', ('Const', ""'ct_per_kwh'""), ('Const', '7.0')), ('KV', ('Const', ""'kwp_max'""), ('Const', '40.0')), ('KV', ('Const', ""'kwp_min'""), ('Const', '10.01')))), ('Dict', (('KV', ('Const', ""'ct_per_kwh'""), ('Const', '5.7')), ('KV', ('Const', ""'kwp_max'""), ('Const', '1000.0')), ('KV', ('Const', ""'kwp_min'""), ('Const', '40.01')))))))))), ('KV', ('Const', ""'global_constants'""), ('Dict', (('KV', ('Const', ""'afa_period_years'""), ('Const', '20')), ('KV', ('Const', ""'alternative_investment_interest_rate_percent'""), ('Const', '5.0')), ('KV', ('Const', ""'annual_module_degradation_percent'""), ('Const', '0.5')), ('KV', ('Const', ""'app_debug_mode_enabled'""), ('Const', 'False')), ('KV', ('Const', ""'capital_gains_tax_kest_percent'""), ('Const', '26.375')), ('KV', ('Const', ""'co2_emission_factor_kg_per_kwh'""), ('Const', '0.474')), ('KV', ('Const', ""'default_specific_yield_kwh_kwp'""), ('Const', '950.0')), ('KV', ('Const', ""'direct_self_consumption_factor_of_production'""), ('Const', '0.25')), ('KV', ('Const', ""'eauto_annual_km'""), ('Const', '10000')), ('KV', ('Const', ""'eauto_consumption_kwh_per_100km'""), ('Const', '18.0')), ('KV', ('Const', ""'eauto_pv_share_percent'""), ('Const', '30.0')), ('KV', ('Const', ""'einspeiseverguetung_period_years'""), ('Const', '20')), ('KV', ('Const', ""'electricity_price_increase_annual_percent'""), ('Const', '3.0')), ('KV', ('Const', ""'global_yield_adjustment_percent'""), ('Const', '0.0')), ('KV', ('Const', ""'heatpump_cop_factor'""), ('Const', '3.5')), ('KV', ('Const', ""'heatpump_pv_share_percent'""), ('Const', '40.0')), ('KV', ('Const', ""'inflation_rate_percent'""), ('Const', '2.0')), ('KV', ('Const', ""'loan_interest_rate_percent'""), ('Const', '4.0')), ('KV', ('Const', ""'maintenance_costs_base_percent'""), ('Const', '1.5')), ('KV', ('Const', ""'maintenance_fixed_eur_pa'""), ('Const', '50.0')), ('KV', ('Const', ""'maintenance_increase_percent_pa'""), ('Const', '2.0')), ('KV', ('Const', ""'maintenance_variable_eur_per_kwp_pa'""), ('Const', '5.0')), ('KV', ('Const', ""'marktwert_strom_eur_per_kwh_after_eeg'""), ('Const', '0.03')), ('KV', ('Const', ""'monthly_consumption_distribution'""), ('List', (('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0833'), ('Const', '0.0837')))), ('KV', ('Const', ""'monthly_production_distribution'""), ('List', (('Const', '0.03'), ('Const', '0.05'), ('Const', '0.08'), ('Const', '0.11'), ('Const', '0.13'), ('Const', '0.14'), ('Const', '0.13'), ('Const', '0.12'), ('Const', '0.09'), ('Const', '0.06'), ('Const', '0.04'), ('Const', '0.02')))), ('KV', ('Const', ""'one_time_bonus_eur'""), ('Const', '0.0')), ('KV', ('Const', ""'pdf_design_settings'""), ('Dict', (('KV', ('Const', ""'primary_color'""), ('Const', ""'#003366'"")), ('KV', ('Const', ""'secondary_color'""), ('Const', ""'#808080'""))))), ('KV', ('Const', ""'pvgis_system_loss_default_percent'""), ('Const', '14.0')), ('KV', ('Const', ""'reference_specific_yield_pr'""), ('Const', '1100.0')), ('KV', ('Const', ""'salutation_options'""), ('List', (('Const', ""'Herr'""), ('Const', ""'Frau'""), ('Const', ""'Familie'""), ('Const', ""'Firma'""), ('Const', ""'Divers'"")))), ('KV', ('Const', ""'simulation_period_years'""), ('Const', '20')), ('KV', ('Const', ""'storage_cycles_per_year'""), ('Const', '250')), ('KV', ('Const', ""'storage_efficiency'""), ('Const', '0.9')), ('KV', ('Const', ""'vat_rate_percent'""), ('Const', '0.0')), ('KV', ('Const', ""'visualization_settings'""), ('Dict', (('KV', ('Const', ""'consumption_coverage_chart'""), ('Dict', (('KV', ('Const', ""'chart_type'""), ('Const', ""'pie'"")), ('KV', ('Const', ""'color_palette'""), ('Const', ""'Pastel'"")), ('KV', ('Const', ""'show_labels'""), ('Const', 'True')), ('KV', ('Const', ""'show_percentage'""), ('Const', 'True'))))), ('KV', ('Const', ""'cost_overview_chart'""), ('Dict', (('KV', ('Const', ""'chart_type'""), ('Const', ""'bar'"")), ('KV', ('Const', ""'color_palette'""), ('Const', ""'Plotly Standard'"")), ('KV', ('Const', ""'primary_color_bar'""), ('Const', ""'#1f77b4'"")), ('KV', ('Const', ""'show_values_on_chart'""), ('Const', 'True'))))), ('KV', ('Const', ""'cumulative_cashflow_chart'""), ('Dict', (('KV', ('Const', ""'chart_type'""), ('Const', ""'line'"")), ('KV', ('Const', ""'line_color'""), ('Const', ""'#17becf'"")), ('KV', ('Const', ""'show_zero_line'""), ('Const', 'True'))))), ('KV', ('Const', ""'monthly_prod_cons_chart'""), ('Dict', (('KV', ('Const', ""'chart_type'""), ('Const', ""'line'"")), ('KV', ('Const', ""'line_color_consumption'""), ('Const', ""'#d62728'"")), ('KV', ('Const', ""'line_color_production'""), ('Const', ""'#2ca02c'"")), ('KV', ('Const', ""'show_markers'""), ('Const', 'True'))))), ('KV', ('Const', ""'pv_usage_chart'""), ('Dict', (('KV', ('Const', ""'chart_type'""), ('Const', ""'pie'"")), ('KV', ('Const', ""'color_palette'""), ('Const', ""'Grün-Variationen'"")), ('KV', ('Const', ""'show_percentage'""), ('Const', 'True'))))))))))), ('KV', ('Const', ""'pdf_design_settings'""), ('Dict', (('KV', ('Const', ""'primary_color'""), ('Const', ""'#003366'"")), ('KV', ('Const', ""'secondary_color'""), ('Const', ""'#808080'""))))), ('KV', ('Const', ""'price_matrix_csv_data'""), ('Const', 'None')), ('KV', ('Const', ""'salutation_options'""), ('List', (('Const', ""'Herr'""), ('Const', ""'Frau'""), ('Const', ""'Familie'""), ('Const', ""'Firma'""), ('Const', ""'Divers'"")))), ('KV', ('Const', ""'title_options'""), ('List', (('Const', ""'Dr.'""), ('Const', ""'Prof.'""), ('Const', ""'Mag.'""), ('Const', ""'Ing.'""), ('Const', ""''""))))))","('Dict', 7)",,"INITIAL_ADMIN_SETTINGS: Dict[str, Any] = {"
.\teilen.py,7,INPUT_PDF,"('Const', ""'pdf_templates_static/01.pdf'"")","('Const',)",,"INPUT_PDF = ""pdf_templates_static/01.pdf"""
.\pdf_zu_markdown.py,7,INPUT_PDF,"('Const', ""'pdf_templates_static/06.pdf'"")","('Const',)",,"INPUT_PDF = ""pdf_templates_static/06.pdf"""
.\analysis.py,6886,LIVE_PREVIEW_AVAILABLE,"('Const', 'False')","('Const',)",,LIVE_PREVIEW_AVAILABLE = False
.\analysis.py,6884,LIVE_PREVIEW_AVAILABLE,"('Const', 'True')","('Const',)",,LIVE_PREVIEW_AVAILABLE = True
.\admin_logo_management_ui.py,28,LOGO_DB_AVAILABLE,"('Const', 'False')","('Const',)",,LOGO_DB_AVAILABLE = False
.\admin_logo_management_ui.py,25,LOGO_DB_AVAILABLE,"('Const', 'True')","('Const',)",,LOGO_DB_AVAILABLE = True
.\analysis.py,7210,MODERN_CHARTS_AVAILABLE,"('Const', 'False')","('Const',)",,MODERN_CHARTS_AVAILABLE = False
.\analysis.py,7207,MODERN_CHARTS_AVAILABLE,"('Const', 'True')","('Const',)",,MODERN_CHARTS_AVAILABLE = True
.\pdf_generator.py,1168,MODULE_MAP,"('Dict', (('KV', ('Const', ""'angebotstabelle'""), ('Name', '_draw_offer_table')), ('KV', ('Const', ""'anschreiben'""), ('Name', '_draw_cover_letter')), ('KV', ('Const', ""'benutzerdefiniert'""), ('Name', '_draw_custom_content')), ('KV', ('Const', ""'deckblatt'""), ('Name', '_draw_cover_page'))))","('Dict', 4)","_draw_cover_letter,_draw_cover_page,_draw_custom_content,_draw_offer_table",MODULE_MAP = {
.\pdf_generator.py,1190,MODULE_MAP,"('Dict', (('KV', ('Const', ""'angebotstabelle'""), ('Name', '_draw_offer_table')), ('KV', ('Const', ""'anschreiben'""), ('Name', '_draw_cover_letter')), ('KV', ('Const', ""'benutzerdefiniert'""), ('Name', '_draw_custom_content')), ('KV', ('Const', ""'deckblatt'""), ('Name', '_draw_cover_page')), ('KV', ('Const', ""'wirtschaftlichkeitsanalyse'""), ('Name', '_draw_extended_analysis'))))","('Dict', 5)","_draw_cover_letter,_draw_cover_page,_draw_custom_content,_draw_extended_analysis,_draw_offer_table",MODULE_MAP = {
.\multi_offer_generator_old.py,921,PDF_GENERATOR_AVAILABLE,"('Const', 'False')","('Const',)",,PDF_GENERATOR_AVAILABLE = False
.\multi_offer_generator_old.py,919,PDF_GENERATOR_AVAILABLE,"('Const', 'True')","('Const',)",,PDF_GENERATOR_AVAILABLE = True
.\pdf_preview.py,24,PDF_PREVIEW_AVAILABLE,"('Const', 'False')","('Const',)",,PDF_PREVIEW_AVAILABLE = False
.\pdf_preview.py,22,PDF_PREVIEW_AVAILABLE,"('Const', 'True')","('Const',)",,PDF_PREVIEW_AVAILABLE = True
.\pdf_generator.py,1065,PRIMARY_COLOR_HEX,"('Call', ('Attr', 'design_settings', 'get'), (('Const', ""'primary_color'""), ('Const', ""'#0055A4'"")), ())","('Call', 2, 0)",design_settings,"PRIMARY_COLOR_HEX = design_settings.get('primary_color', ""#0055A4"")"
.\pdf_generator.py,859,PRIMARY_COLOR_HEX,"('Const', ""'#1B365D'"")","('Const',)",,"PRIMARY_COLOR_HEX = ""#1B365D""  # Dunkelblau - Professionell und vertrauensvoll"
.\admin_logo_management_ui.py,35,PRODUCT_DB_AVAILABLE,"('Const', 'False')","('Const',)",,PRODUCT_DB_AVAILABLE = False
.\admin_logo_management_ui.py,33,PRODUCT_DB_AVAILABLE,"('Const', 'True')","('Const',)",,PRODUCT_DB_AVAILABLE = True
.\components\__init__.py,23,PROGRESS_MANAGER_AVAILABLE,"('Const', 'False')","('Const',)",,PROGRESS_MANAGER_AVAILABLE = False
.\components\__init__.py,20,PROGRESS_MANAGER_AVAILABLE,"('Const', 'True')","('Const',)",,PROGRESS_MANAGER_AVAILABLE = True
.\components\__init__.py,74,PROGRESS_SETTINGS_AVAILABLE,"('Const', 'False')","('Const',)",,PROGRESS_SETTINGS_AVAILABLE = False
.\components\__init__.py,72,PROGRESS_SETTINGS_AVAILABLE,"('Const', 'True')","('Const',)",,PROGRESS_SETTINGS_AVAILABLE = True
.\pdf_generator.py,1068,SECONDARY_COLOR_HEX,"('Call', ('Attr', 'design_settings', 'get'), (('Const', ""'secondary_color'""), ('Const', ""'#F2F2F2'"")), ())","('Call', 2, 0)",design_settings,"SECONDARY_COLOR_HEX = design_settings.get('secondary_color', ""#F2F2F2"")"
.\pdf_generator.py,860,SECONDARY_COLOR_HEX,"('Const', ""'#2E8B57'"")","('Const',)",,"SECONDARY_COLOR_HEX = ""#2E8B57"" # Solargrün - Nachhaltigkeit und Energie"
.\pdf_generator.py,1069,SEPARATOR_LINE_COLOR_HEX,"('Call', ('Attr', 'design_settings', 'get'), (('Const', ""'separator_color'""), ('Const', ""'#CCCCCC'"")), ())","('Call', 2, 0)",design_settings,"SEPARATOR_LINE_COLOR_HEX = design_settings.get('separator_color', ""#CCCCCC"") # Eigene Farbe für Trennlinien"
.\pdf_generator.py,865,SEPARATOR_LINE_COLOR_HEX,"('Const', ""'#E9ECEF'"")","('Const',)",,"SEPARATOR_LINE_COLOR_HEX = ""#E9ECEF"" # Subtile, moderne Linienfarbe"
.\components\__init__.py,30,SHADCN_ANIMATED,"('Const', ""'animated'"")","('Const',)",,"SHADCN_ANIMATED = ""animated"""
.\components\progress_manager.py,18,SHADCN_ANIMATED,"('Const', ""'shadcn_animated'"")","('Const',)",,"SHADCN_ANIMATED = ""shadcn_animated"""
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,69,SHADCN_ANIMATED,"('Const', ""'shadcn_animated'"")","('Const',)",,"SHADCN_ANIMATED = ""shadcn_animated"""
.\tools\out_selected\patches\components\progress_manager.py.insert.py,69,SHADCN_ANIMATED,"('Const', ""'shadcn_animated'"")","('Const',)",,"SHADCN_ANIMATED = ""shadcn_animated"""
.\components\__init__.py,27,SHADCN_DEFAULT,"('Const', ""'default'"")","('Const',)",,"SHADCN_DEFAULT = ""default"""
.\components\progress_manager.py,15,SHADCN_DEFAULT,"('Const', ""'shadcn_default'"")","('Const',)",,"SHADCN_DEFAULT = ""shadcn_default"""
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,66,SHADCN_DEFAULT,"('Const', ""'shadcn_default'"")","('Const',)",,"SHADCN_DEFAULT = ""shadcn_default"""
.\tools\out_selected\patches\components\progress_manager.py.insert.py,66,SHADCN_DEFAULT,"('Const', ""'shadcn_default'"")","('Const',)",,"SHADCN_DEFAULT = ""shadcn_default"""
.\components\__init__.py,29,SHADCN_GRADIENT,"('Const', ""'gradient'"")","('Const',)",,"SHADCN_GRADIENT = ""gradient"""
.\components\progress_manager.py,17,SHADCN_GRADIENT,"('Const', ""'shadcn_gradient'"")","('Const',)",,"SHADCN_GRADIENT = ""shadcn_gradient"""
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,68,SHADCN_GRADIENT,"('Const', ""'shadcn_gradient'"")","('Const',)",,"SHADCN_GRADIENT = ""shadcn_gradient"""
.\tools\out_selected\patches\components\progress_manager.py.insert.py,68,SHADCN_GRADIENT,"('Const', ""'shadcn_gradient'"")","('Const',)",,"SHADCN_GRADIENT = ""shadcn_gradient"""
.\components\__init__.py,28,SHADCN_MINIMAL,"('Const', ""'minimal'"")","('Const',)",,"SHADCN_MINIMAL = ""minimal"""
.\components\progress_manager.py,16,SHADCN_MINIMAL,"('Const', ""'shadcn_minimal'"")","('Const',)",,"SHADCN_MINIMAL = ""shadcn_minimal"""
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,67,SHADCN_MINIMAL,"('Const', ""'shadcn_minimal'"")","('Const',)",,"SHADCN_MINIMAL = ""shadcn_minimal"""
.\tools\out_selected\patches\components\progress_manager.py.insert.py,67,SHADCN_MINIMAL,"('Const', ""'shadcn_minimal'"")","('Const',)",,"SHADCN_MINIMAL = ""shadcn_minimal"""
.\components\__init__.py,31,SHADCN_MODERN,"('Const', ""'modern'"")","('Const',)",,"SHADCN_MODERN = ""modern"""
.\components\progress_manager.py,19,SHADCN_MODERN,"('Const', ""'shadcn_modern'"")","('Const',)",,"SHADCN_MODERN = ""shadcn_modern"""
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,70,SHADCN_MODERN,"('Const', ""'shadcn_modern'"")","('Const',)",,"SHADCN_MODERN = ""shadcn_modern"""
.\tools\out_selected\patches\components\progress_manager.py.insert.py,70,SHADCN_MODERN,"('Const', ""'shadcn_modern'"")","('Const',)",,"SHADCN_MODERN = ""shadcn_modern"""
.\pdf_widgets.py,21,SORTABLES_AVAILABLE,"('Const', 'False')","('Const',)",,SORTABLES_AVAILABLE = False
.\pdf_widgets.py,19,SORTABLES_AVAILABLE,"('Const', 'True')","('Const',)",,SORTABLES_AVAILABLE = True
.\utils\export_coords.py,8,SRC,"('Call', ('Name', 'Path'), (('Const', ""'pdf_templates_static'""),), ())","('Call', 1, 0)",Path,"SRC = Path(""pdf_templates_static"")              # hier liegen 01.pdf … 06.pdf"
.\pdf_template_engine\prepare_backgrounds.py,5,SRC,"('Div', ('Attr', 'Path(__file__).parent', 'parent'), ('Const', ""'pdf_templates_static'""))","('Div', ('Attr',), ('Const',))","Path,__file__",SRC = Path(__file__).parent.parent / 'pdf_templates_static'
.\utils\remove_text.py,10,SRC,"('Div', ('Name', 'BASE'), ('Const', ""'pdf_templates_static'""))","('Div', ('Name',), ('Const',))",BASE,"SRC  = BASE / ""pdf_templates_static""                 # Ordner mit 01.pdf …"
.\calculations.py,99,STREAMLIT_AVAILABLE,"('Const', 'False')","('Const',)",,STREAMLIT_AVAILABLE = False
.\calculations.py,97,STREAMLIT_AVAILABLE,"('Const', 'True')","('Const',)",,STREAMLIT_AVAILABLE = True
.\pdf_generator.py,887,STYLES,"('Call', ('Name', 'getSampleStyleSheet'), (), ())","('Call', 0, 0)",getSampleStyleSheet,STYLES = getSampleStyleSheet()
.\pdf_generator.py,856,STYLES,"('Dict', ())","('Dict', 0)",,STYLES: Any = {}
.\data_input.py,20,SUI_AVAILABLE,"('Const', 'False')","('Const',)",,SUI_AVAILABLE = False
.\gui.py,39,SUI_AVAILABLE,"('Const', 'False')","('Const',)",,SUI_AVAILABLE = False
.\data_input.py,18,SUI_AVAILABLE,"('Const', 'True')","('Const',)",,SUI_AVAILABLE = True
.\gui.py,37,SUI_AVAILABLE,"('Const', 'True')","('Const',)",,SUI_AVAILABLE = True
.\gui.py,219,TEXTS,"('Call', ('Attr', '_texts_initial', 'copy'), (), ())","('Call', 0, 0)",_texts_initial,TEXTS = _texts_initial.copy()
.\gui.py,221,TEXTS,"('Dict', (('KV', ('Const', ""'app_title'""), ('Const', ""'Solar App (Kritischer Text-Fallback)'"")),))","('Dict', 1)",,"TEXTS = {""app_title"": ""Solar App (Kritischer Text-Fallback)""}"
.\gui.py,79,TEXTS,"('Dict', ())","('Dict', 0)",,"TEXTS: Dict[str, str] = {}"
.\gui.py,212,TEXTS,"('Name', 'loaded_translations')","('Name',)",loaded_translations,TEXTS = loaded_translations
.\pdf_generator.py,862,TEXT_COLOR_HEX,"('Const', ""'#2C3E50'"")","('Const',)",,"TEXT_COLOR_HEX = ""#2C3E50""         # Anthrazit - Optimale Lesbarkeit"
.\pdf_generator.py,864,TEXT_COLOR_HEX,"('Const', ""'#333333'"")","('Const',)",,"TEXT_COLOR_HEX = ""#333333"""
.\pdf_ui.py,1281,_,"('Call', ('Name', 'add_customer_document'), (('Name', 'created_customer_id'), ('Name', 'pdf_bytes_to_download')), (('display_name', ('Name', 'file_name')), ('doc_type', ('Const', ""'offer_pdf'"")), ('project_id', ('Name', 'created_project_id')), ('suggested_filename', ('Name', 'file_name'))))","('Call', 2, 4)","add_customer_document,created_customer_id,created_project_id,file_name,pdf_bytes_to_download",_ = add_customer_document(
.\pdf_ui.py,1296,_,"('Call', ('Name', 'add_customer_document'), (('Name', 'created_customer_id'), ('Name', 'snapshot')), (('display_name', ('Name', 'json_name')), ('doc_type', ('Const', ""'project_json'"")), ('project_id', ('Name', 'created_project_id')), ('suggested_filename', ('Name', 'json_name'))))","('Call', 2, 4)","add_customer_document,created_customer_id,created_project_id,json_name,snapshot",_ = add_customer_document(
.\analysis.py,44,_CALCULATIONS_PERFORM_CALCULATIONS_AVAILABLE,"('Const', 'False')","('Const',)",,_CALCULATIONS_PERFORM_CALCULATIONS_AVAILABLE = False
.\analysis.py,54,_CALCULATIONS_PERFORM_CALCULATIONS_AVAILABLE,"('Const', 'True')","('Const',)",,_CALCULATIONS_PERFORM_CALCULATIONS_AVAILABLE = True
.\analysis.py,45,_DATABASE_LOAD_ADMIN_SETTING_AVAILABLE,"('Const', 'False')","('Const',)",,_DATABASE_LOAD_ADMIN_SETTING_AVAILABLE = False
.\analysis.py,78,_DATABASE_LOAD_ADMIN_SETTING_AVAILABLE,"('Const', 'True')","('Const',)",,_DATABASE_LOAD_ADMIN_SETTING_AVAILABLE = True
.\pdf_ui.py,50,_PDF_PREVIEW_AVAILABLE,"('Const', 'False')","('Const',)",,_PDF_PREVIEW_AVAILABLE = False
.\pdf_ui.py,48,_PDF_PREVIEW_AVAILABLE,"('Const', 'True')","('Const',)",,_PDF_PREVIEW_AVAILABLE = True
.\heatpump_pricing.py,267,__all__,"('List', (('Const', ""'ComponentCost'""), ('Const', ""'load_heatpump_components'""), ('Const', ""'calculate_base_price'""), ('Const', ""'apply_discounts_and_surcharges'""), ('Const', ""'BegConfig'""), ('Const', ""'calculate_beg_subsidy'""), ('Const', ""'calculate_annuity_loan'""), ('Const', ""'build_full_heatpump_offer'""), ('Const', ""'extract_placeholders_from_offer'"")))","('List', 9)",,__all__ = [
.\components\__init__.py,87,__all__,"('List', (('Const', ""'ProgressStyle'""), ('Const', ""'ProgressManager'""), ('Const', ""'ProgressBar'""), ('Const', ""'ProgressContext'""), ('Const', ""'progress_manager'""), ('Const', ""'create_progress_bar'""), ('Const', ""'progress_decorator'""), ('Const', ""'set_progress_style'""), ('Const', ""'set_progress_colors'""), ('Const', ""'render_progress_settings'""), ('Const', ""'render_quick_themes'""), ('Const', ""'PROGRESS_MANAGER_AVAILABLE'""), ('Const', ""'PROGRESS_SETTINGS_AVAILABLE'"")))","('List', 13)",,__all__ = [
.\pdf_template_engine\__init__.py,20,__all__,"('List', (('Const', ""'build_dynamic_data'""), ('Const', ""'PLACEHOLDER_MAPPING'""), ('Const', ""'generate_overlay'""), ('Const', ""'merge_with_background'""), ('Const', ""'append_additional_pages'""), ('Const', ""'generate_custom_offer_pdf'"")))","('List', 6)",,__all__ = [
.\admin_panel.py,141,_add_company_document_safe,"('Name', '_dummy_add_company_document')","('Name',)",_dummy_add_company_document,_add_company_document_safe: Callable = _dummy_add_company_document
.\admin_panel.py,1758,_add_company_document_safe,"('Name', 'db_add_company_document_func')","('Name',)",db_add_company_document_func,_delete_company_safe = db_delete_company_func; _set_default_company_safe = db_set_default_company_func; _add_company_document_safe = db_add_company_document_func
.\admin_panel.py,136,_add_company_safe,"('Name', '_dummy_add_company')","('Name',)",_dummy_add_company,_add_company_safe: Callable = _dummy_add_company
.\admin_panel.py,1757,_add_company_safe,"('Name', 'db_add_company_func')","('Name',)",db_add_company_func,_list_companies_safe = db_list_companies_func; _add_company_safe = db_add_company_func; _get_company_by_id_safe = db_get_company_by_id_func; _update_company_safe = db_update_company_func
.\admin_panel.py,129,_add_product_safe,"('Name', '_dummy_add_product')","('Name',)",_dummy_add_product,_add_product_safe: Callable = _dummy_add_product
.\admin_panel.py,1755,_add_product_safe,"('Name', 'add_product_func')","('Name',)",add_product_func,_list_products_safe = list_products_func; _add_product_safe = add_product_func; _update_product_safe = update_product_func; _delete_product_safe = delete_product_func
.\admin_panel.py,143,_delete_company_document_safe,"('Name', '_dummy_delete_company_document')","('Name',)",_dummy_delete_company_document,_delete_company_document_safe: Callable = _dummy_delete_company_document
.\admin_panel.py,1759,_delete_company_document_safe,"('Name', 'db_delete_company_document_func')","('Name',)",db_delete_company_document_func,_list_company_documents_safe = db_list_company_documents_func; _delete_company_document_safe = db_delete_company_document_func
.\admin_panel.py,139,_delete_company_safe,"('Name', '_dummy_delete_company')","('Name',)",_dummy_delete_company,_delete_company_safe: Callable = _dummy_delete_company
.\admin_panel.py,1758,_delete_company_safe,"('Name', 'db_delete_company_func')","('Name',)",db_delete_company_func,_delete_company_safe = db_delete_company_func; _set_default_company_safe = db_set_default_company_func; _add_company_document_safe = db_add_company_document_func
.\admin_panel.py,131,_delete_product_safe,"('Name', '_dummy_delete_product')","('Name',)",_dummy_delete_product,_delete_product_safe: Callable = _dummy_delete_product
.\admin_panel.py,1755,_delete_product_safe,"('Name', 'delete_product_func')","('Name',)",delete_product_func,_list_products_safe = list_products_func; _add_product_safe = add_product_func; _update_product_safe = update_product_func; _delete_product_safe = delete_product_func
.\doc_output.py,69,_generate_offer_pdf_safe,"('Name', '_dummy_generate_offer_pdf')","('Name',)",_dummy_generate_offer_pdf,_generate_offer_pdf_safe = _dummy_generate_offer_pdf
.\pdf_ui.py,38,_generate_offer_pdf_safe,"('Name', '_dummy_generate_offer_pdf')","('Name',)",_dummy_generate_offer_pdf,_generate_offer_pdf_safe = _dummy_generate_offer_pdf
.\doc_output.py,72,_generate_offer_pdf_safe,"('Name', 'generate_offer_pdf')","('Name',)",generate_offer_pdf,_generate_offer_pdf_safe = generate_offer_pdf
.\pdf_ui.py,41,_generate_offer_pdf_safe,"('Name', 'generate_offer_pdf')","('Name',)",generate_offer_pdf,_generate_offer_pdf_safe = generate_offer_pdf
.\admin_panel.py,137,_get_company_by_id_safe,"('Name', '_dummy_get_company_by_id')","('Name',)",_dummy_get_company_by_id,_get_company_by_id_safe: Callable = _dummy_get_company_by_id
.\admin_panel.py,1757,_get_company_by_id_safe,"('Name', 'db_get_company_by_id_func')","('Name',)",db_get_company_by_id_func,_list_companies_safe = db_list_companies_func; _add_company_safe = db_add_company_func; _get_company_by_id_safe = db_get_company_by_id_func; _update_company_safe = db_update_company_func
.\admin_panel.py,132,_get_product_by_id_safe,"('Name', '_dummy_get_product_by_id')","('Name',)",_dummy_get_product_by_id,_get_product_by_id_safe: Callable = _dummy_get_product_by_id
.\admin_panel.py,1756,_get_product_by_id_safe,"('Name', 'get_product_by_id_func')","('Name',)",get_product_by_id_func,_get_product_by_id_safe = get_product_by_id_func; _get_product_by_model_name_safe = get_product_by_model_name_func; _list_product_categories_safe = list_product_categories_func
.\admin_panel.py,133,_get_product_by_model_name_safe,"('Name', '_dummy_get_product_by_model_name')","('Name',)",_dummy_get_product_by_model_name,_get_product_by_model_name_safe: Callable = _dummy_get_product_by_model_name
.\admin_panel.py,1756,_get_product_by_model_name_safe,"('Name', 'get_product_by_model_name_func')","('Name',)",get_product_by_model_name_func,_get_product_by_id_safe = get_product_by_id_func; _get_product_by_model_name_safe = get_product_by_model_name_func; _list_product_categories_safe = list_product_categories_func
.\pdf_erstellen_komplett.py,276,_is_st,"('Call', ('Name', 'bool'), (('Call', ('Name', 'probe'), (), ()),), ())","('Call', 1, 0)","bool,probe",_is_st = bool(probe())
.\pdf_erstellen_komplett.py,273,_is_st,"('Const', 'False')","('Const',)",,_is_st = False
.\pdf_erstellen_komplett.py,278,_is_st,"('Name', 'probe')","('Name',)",probe,_is_st = probe
.\admin_panel.py,135,_list_companies_safe,"('Name', '_dummy_list_companies')","('Name',)",_dummy_list_companies,_list_companies_safe: Callable = _dummy_list_companies
.\admin_panel.py,1757,_list_companies_safe,"('Name', 'db_list_companies_func')","('Name',)",db_list_companies_func,_list_companies_safe = db_list_companies_func; _add_company_safe = db_add_company_func; _get_company_by_id_safe = db_get_company_by_id_func; _update_company_safe = db_update_company_func
.\admin_panel.py,142,_list_company_documents_safe,"('Name', '_dummy_list_company_documents')","('Name',)",_dummy_list_company_documents,_list_company_documents_safe: Callable = _dummy_list_company_documents
.\admin_panel.py,1759,_list_company_documents_safe,"('Name', 'db_list_company_documents_func')","('Name',)",db_list_company_documents_func,_list_company_documents_safe = db_list_company_documents_func; _delete_company_document_safe = db_delete_company_document_func
.\admin_panel.py,134,_list_product_categories_safe,"('Name', '_dummy_list_product_categories')","('Name',)",_dummy_list_product_categories,_list_product_categories_safe: Callable = _dummy_list_product_categories
.\admin_panel.py,1756,_list_product_categories_safe,"('Name', 'list_product_categories_func')","('Name',)",list_product_categories_func,_get_product_by_id_safe = get_product_by_id_func; _get_product_by_model_name_safe = get_product_by_model_name_func; _list_product_categories_safe = list_product_categories_func
.\admin_panel.py,128,_list_products_safe,"('Name', '_dummy_list_products')","('Name',)",_dummy_list_products,_list_products_safe: Callable = _dummy_list_products
.\admin_panel.py,1755,_list_products_safe,"('Name', 'list_products_func')","('Name',)",list_products_func,_list_products_safe = list_products_func; _add_product_safe = add_product_func; _update_product_safe = update_product_func; _delete_product_safe = delete_product_func
.\admin_panel.py,124,_load_admin_setting_safe,"('Name', '_dummy_load_admin_setting')","('Name',)",_dummy_load_admin_setting,_load_admin_setting_safe: Callable = _dummy_load_admin_setting
.\admin_panel.py,1753,_load_admin_setting_safe,"('Name', 'load_admin_setting_func')","('Name',)",load_admin_setting_func,_load_admin_setting_safe = load_admin_setting_func; _save_admin_setting_safe = save_admin_setting_func
.\product_db.py,298,_original_db_path_pdb,"('Attr', 'database', 'DB_PATH')","('Attr',)",database,_original_db_path_pdb = database.DB_PATH
.\product_db.py,291,_original_db_path_pdb,"('Const', 'None')","('Const',)",,_original_db_path_pdb = None
.\gui.py,751,_parse_price_matrix_csv_from_calculations,"('Attr', 'calculations_module', 'parse_module_price_matrix_csv')","('Attr',)",calculations_module,_parse_price_matrix_csv_from_calculations = calculations_module.parse_module_price_matrix_csv
.\gui.py,103,_parse_price_matrix_csv_from_calculations,"('Const', 'None')","('Const',)",,"_parse_price_matrix_csv_from_calculations: Optional[Callable[[Union[str, io.StringIO], List[str]], Optional[pd.DataFrame]]] = None"
.\admin_panel.py,126,_parse_price_matrix_csv_safe,"('Name', '_dummy_parse_price_matrix_csv')","('Name',)",_dummy_parse_price_matrix_csv,_parse_price_matrix_csv_safe: Callable = _dummy_parse_price_matrix_csv
.\admin_panel.py,1754,_parse_price_matrix_csv_safe,"('Name', 'parse_price_matrix_csv_func')","('Name',)",parse_price_matrix_csv_func,_parse_price_matrix_csv_safe = parse_price_matrix_csv_func
.\gui.py,753,_parse_price_matrix_excel_from_calculations,"('Attr', 'calculations_module', 'parse_module_price_matrix_excel')","('Attr',)",calculations_module,_parse_price_matrix_excel_from_calculations = calculations_module.parse_module_price_matrix_excel
.\gui.py,104,_parse_price_matrix_excel_from_calculations,"('Const', 'None')","('Const',)",,"_parse_price_matrix_excel_from_calculations: Optional[Callable[[Optional[bytes], List[str]], Optional[pd.DataFrame]]] = None"
.\admin_panel.py,127,_parse_price_matrix_excel_func,"('Const', 'None')","('Const',)",,"_parse_price_matrix_excel_func: Optional[Callable[[Optional[bytes], List[str]], Optional[pd.DataFrame]]] = None"
.\admin_panel.py,1768,_parse_price_matrix_excel_func,"('Name', '_dummy_parse_excel_admin_final')","('Name',)",_dummy_parse_excel_admin_final,_parse_price_matrix_excel_func = _dummy_parse_excel_admin_final
.\admin_panel.py,1763,_parse_price_matrix_excel_func,"('Name', 'parse_module_price_matrix_excel')","('Name',)",parse_module_price_matrix_excel,elif callable(parse_module_price_matrix_excel): _parse_price_matrix_excel_func = parse_module_price_matrix_excel
.\admin_panel.py,1762,_parse_price_matrix_excel_func,"('Name', 'passed_excel_parser')","('Name',)",passed_excel_parser,if passed_excel_parser and callable(passed_excel_parser): _parse_price_matrix_excel_func = passed_excel_parser
.\admin_panel.py,125,_save_admin_setting_safe,"('Name', '_dummy_save_admin_setting')","('Name',)",_dummy_save_admin_setting,_save_admin_setting_safe: Callable = _dummy_save_admin_setting
.\admin_panel.py,1753,_save_admin_setting_safe,"('Name', 'save_admin_setting_func')","('Name',)",save_admin_setting_func,_load_admin_setting_safe = load_admin_setting_func; _save_admin_setting_safe = save_admin_setting_func
.\admin_panel.py,140,_set_default_company_safe,"('Name', '_dummy_set_default_company')","('Name',)",_dummy_set_default_company,_set_default_company_safe: Callable = _dummy_set_default_company
.\admin_panel.py,1758,_set_default_company_safe,"('Name', 'db_set_default_company_func')","('Name',)",db_set_default_company_func,_delete_company_safe = db_delete_company_func; _set_default_company_safe = db_set_default_company_func; _add_company_document_safe = db_add_company_document_func
.\gui.py,59,_texts_initial,"('Dict', (('KV', ('Const', ""'app_title'""), ('Const', ""'Omers Solar Kakerlake'"")), ('KV', ('Const', ""'db_init_error'""), ('Const', ""'DB Init Fehler:'"")), ('KV', ('Const', ""'gui_critical_error'""), ('Const', ""'Ein kritischer Fehler ist in der Anwendung aufgetreten!'"")), ('KV', ('Const', ""'gui_critical_error_no_db'""), ('Const', ""'Kritischer Fehler! Datenbankmodul nicht geladen.'"")), ('KV', ('Const', ""'import_errors_title'""), ('Const', ""' Ladefehler'"")), ('KV', ('Const', ""'menu_item_admin'""), ('Const', ""'Administration & Verwaltung'"")), ('KV', ('Const', ""'menu_item_analysis'""), ('Const', ""'Ergebnisse & Visualisierungen'"")), ('KV', ('Const', ""'menu_item_crm'""), ('Const', ""'Kundenmanagement CRM'"")), ('KV', ('Const', ""'menu_item_crm_calendar'""), ('Const', ""'Kalender'"")), ('KV', ('Const', ""'menu_item_crm_dashboard'""), ('Const', ""'Dashboard'"")), ('KV', ('Const', ""'menu_item_crm_pipeline'""), ('Const', ""'Pipeline Kunden'"")), ('KV', ('Const', ""'menu_item_doc_output'""), ('Const', ""'Dokumenterstellung & Output'"")), ('KV', ('Const', ""'menu_item_heatpump'""), ('Const', ""'Wärmepumpen Simulator'"")), ('KV', ('Const', ""'menu_item_info_platform'""), ('Const', ""'Kundenmanagement CRM'"")), ('KV', ('Const', ""'menu_item_input'""), ('Const', ""'Projekt- Bedarfsanalyse'"")), ('KV', ('Const', ""'menu_item_options'""), ('Const', ""'Administration & Verwaltung'"")), ('KV', ('Const', ""'menu_item_quick_calc'""), ('Const', ""'Schnellkalkulation'"")), ('KV', ('Const', ""'menu_item_solar_calculator'""), ('Const', ""'Solar Calculator'"")), ('KV', ('Const', ""'module_unavailable'""), ('Const', ""' Modul fehlt'"")), ('KV', ('Const', ""'module_unavailable_details'""), ('Const', ""'Funktion nicht da.'"")), ('KV', ('Const', ""'pdf_creation_no_data_info'""), ('Const', ""'PDF: Bitte zuerst Daten eingeben & berechnen.'"")), ('KV', ('Const', ""'sidebar_navigation_title'""), ('Const', ""'Angebotserstellung'"")), ('KV', ('Const', ""'sidebar_select_area'""), ('Const', ""'Bereich:'""))))","('Dict', 23)",,_texts_initial = {
.\gui.py,55,_texts_initial,"('Dict', (('KV', ('Const', ""'app_title'""), ('Const', ""'Omers Solar Kakerlake'"")),))","('Dict', 1)",,"_texts_initial = {""app_title"": ""Omers Solar Kakerlake""}"
.\gui.py,77,_texts_initial,"('Dict', (('KV', ('Const', ""'app_title'""), ('Const', ""'Omers Solar Kakerlake'"")),))","('Dict', 1)",,"_texts_initial = { ""app_title"": ""Omers Solar Kakerlake"" }"
.\gui.py,45,_texts_initial,"('Dict', ())","('Dict', 0)",,"_texts_initial: Dict[str, str] = {}"
.\gui.py,53,_texts_initial,"('Name', 'loaded_texts')","('Name',)",loaded_texts,_texts_initial = loaded_texts
.\admin_panel.py,138,_update_company_safe,"('Name', '_dummy_update_company')","('Name',)",_dummy_update_company,_update_company_safe: Callable = _dummy_update_company
.\admin_panel.py,1757,_update_company_safe,"('Name', 'db_update_company_func')","('Name',)",db_update_company_func,_list_companies_safe = db_list_companies_func; _add_company_safe = db_add_company_func; _get_company_by_id_safe = db_get_company_by_id_func; _update_company_safe = db_update_company_func
.\admin_panel.py,130,_update_product_safe,"('Name', '_dummy_update_product')","('Name',)",_dummy_update_product,_update_product_safe: Callable = _dummy_update_product
.\admin_panel.py,1755,_update_product_safe,"('Name', 'update_product_func')","('Name',)",update_product_func,_list_products_safe = list_products_func; _add_product_safe = add_product_func; _update_product_safe = update_product_func; _delete_product_safe = delete_product_func
.\notwendig oder nicht\wichtig\repo_porter.py,118,a,"('Attr', 'n', 'args')","('Attr',)",n,a = n.args
.\tools\repo_porter.py,118,a,"('Attr', 'n', 'args')","('Attr',)",n,a = n.args
.\notwendig oder nicht\python_function_recipes.py,60,a,"('Call', ('Attr', 'np', 'array'), (('Name', 'array'),), (('dtype', ('Name', 'object')),))","('Call', 1, 1)","array,np,object","a = np.array(array, dtype=object)"
.\excel_eval.py,328,abs_d,"('Call', ('Name', 'abs'), (('Sub', ('Name', 'evf'), ('Name', 'hvf')),), ())","('Call', 1, 0)","abs,evf,hvf",abs_d = abs(evf - hvf)
.\excel_eval.py,315,abs_d,"('Const', 'None')","('Const',)",,abs_d = None
.\database.py,164,abs_path,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'DATA_DIR'), ('Name', 'rel_path')), ())","('Call', 2, 0)","DATA_DIR,os,rel_path","abs_path = os.path.join(DATA_DIR, rel_path)"
.\database.py,79,abs_path,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'customer_dir'), ('Name', 'safe_name')), ())","('Call', 2, 0)","customer_dir,os,safe_name","abs_path = os.path.join(customer_dir, safe_name)"
.\database.py,1522,absolute_path_on_disk,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'company_images_dir'), ('Name', 'final_safe_filename')), ())","('Call', 2, 0)","company_images_dir,final_safe_filename,os","absolute_path_on_disk = os.path.join(company_images_dir, final_safe_filename)"
.\database.py,1456,absolute_path_on_disk,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'company_specific_docs_dir'), ('Name', 'final_safe_filename')), ())","('Call', 2, 0)","company_specific_docs_dir,final_safe_filename,os","absolute_path_on_disk = os.path.join(company_specific_docs_dir, final_safe_filename)"
.\pdf_erstellen_komplett.py,69,active_company,"('BoolOp', 'Or', (('Call', ('Name', 'db_get_active_company'), (), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",db_get_active_company,active_company = db_get_active_company() or {}
.\tests\test_main_pdf.py,72,active_company,"('BoolOp', 'Or', (('Call', ('Name', 'get_active_company'), (), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",get_active_company,active_company = get_active_company() or {}
.\tools\test_main_pdf.py,72,active_company,"('BoolOp', 'Or', (('Call', ('Name', 'get_active_company'), (), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",get_active_company,active_company = get_active_company() or {}
.\gui.py,587,active_company,"('Call', ('Attr', 'database_module', 'get_active_company'), (), ())","('Call', 0, 0)",database_module,active_company = database_module.get_active_company()
.\doc_output.py,1851,active_company,"('Call', ('Name', 'get_active_company_details_func'), (), ())","('Call', 0, 0)",get_active_company_details_func,active_company = get_active_company_details_func()
.\pdf_ui.py,265,active_company,"('Call', ('Name', 'get_active_company_details_func'), (), ())","('Call', 0, 0)",get_active_company_details_func,active_company = get_active_company_details_func()
.\pdf_ui.py,1424,active_company,"('Call', ('Name', 'get_active_company_details_func'), (), ())","('Call', 0, 0)",get_active_company_details_func,active_company = get_active_company_details_func()
.\gui.py,585,active_company,"('Const', 'None')","('Const',)",,active_company = None
.\gui.py,591,active_company,"('Dict', (('KV', ('Const', ""'id'""), ('Const', '1')), ('KV', ('Const', ""'name'""), ('Const', ""'Standard-Firma'""))))","('Dict', 2)",,"active_company = {""id"": 1, ""name"": ""Standard-Firma""}"
.\pdf_erstellen_komplett.py,70,active_company_id,"('Call', ('Attr', 'active_company', 'get'), (('Const', ""'id'""),), ())","('Call', 1, 0)",active_company,"active_company_id = active_company.get(""id"")"
.\central_pdf_system.py,1980,active_company_id,"('Call', ('Attr', 'company_info', 'get'), (('Const', ""'id'""),), ())","('Call', 1, 0)",company_info,active_company_id = company_info.get('id')
.\admin_panel.py,224,active_company_id,"('Call', ('Name', 'int'), (('Name', 'active_company_id_str'),), ())","('Call', 1, 0)","active_company_id_str,int",active_company_id = int(active_company_id_str)
.\admin_panel.py,1543,active_company_id,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'active_company_id'""), ('Const', 'None')), ())","('Call', 2, 0)",load_admin_setting_func,"active_company_id = load_admin_setting_func('active_company_id', None)"
.\admin_panel.py,221,active_company_id,"('Const', 'None')","('Const',)",,active_company_id = None
.\doc_output.py,1858,active_company_id_for_docs,"('Call', ('Attr', 'active_company', 'get'), (('Const', ""'id'""),), ())","('Call', 1, 0)",active_company,active_company_id_for_docs = active_company.get('id')
.\doc_output.py,1861,active_company_id_for_docs,"('Const', '0')","('Const',)",,"st.warning(""Keine aktive Firma ausgewählt. PDF verwendet Fallback-Daten für Firmeninformationen.""); company_info_for_pdf = {""name"": ""Ihre Firma (Fallback)""}; active_company_id_for_docs = 0"
.\doc_output.py,1854,active_company_id_for_docs,"('Const', 'None')","('Const',)",,active_company_id_for_docs = None
.\pdf_ui.py,268,active_company_id_for_docs,"('Other', 'IfExp')","('Other', 'IfExp')",active_company,active_company_id_for_docs = active_company.get('id') if active_company else None # Korrigiert: None statt 0 als Fallback
.\admin_panel.py,446,active_company_id_for_list_display_crud,"('Call', ('Name', 'int'), (('Name', 'active_company_id_for_list_display_str_crud'),), ())","('Call', 1, 0)","active_company_id_for_list_display_str_crud,int",active_company_id_for_list_display_crud = int(active_company_id_for_list_display_str_crud)
.\admin_panel.py,443,active_company_id_for_list_display_crud,"('Const', 'None')","('Const',)",,active_company_id_for_list_display_crud = None
.\admin_panel.py,448,active_company_id_for_list_display_crud,"('Const', 'None')","('Const',)",,active_company_id_for_list_display_crud = None
.\database.py,1392,active_id,"('Call', ('Name', 'int'), (('Name', 'active_id_str'),), ())","('Call', 1, 0)","active_id_str,int",try: active_id = int(active_id_str)
.\database.py,1420,active_id,"('Call', ('Name', 'int'), (('Name', 'active_id_str'),), ())","('Call', 1, 0)","active_id_str,int",try: active_id = int(active_id_str)
.\database.py,1390,active_id,"('Const', 'None')","('Const',)",,active_id = None
.\database.py,1418,active_id,"('Const', 'None')","('Const',)",,active_id = None
.\database.py,1421,active_id,"('Const', 'None')","('Const',)",,"except (ValueError, TypeError): print(f""DB Warnung: Ungültiger active_company_id Wert '{active_id_str}'.""); active_id = None"
.\calculations.py,2183,actual_error_msg,"('Add', (('BoolOp', 'Or', (('Call', ('Attr', 'texts', 'get'), (('Const', ""'pvgis_invalid_lat_lon'""), ('Const', ""'PVGIS: Ungültige Breiten- oder Längengrade.'"")), ()), ('Const', ""''""))), ('Other', 'JoinedStr')))","('Add', (('BoolOp', 'Or', 2), ('Other', 'JoinedStr')))","latitude,longitude,texts",actual_error_msg = (
.\calculations.py,2193,actual_error_msg,"('BoolOp', 'Or', (('Call', ('Attr', 'texts', 'get'), (('Const', ""'pvgis_invalid_peak_power'""), ('Const', ""'PVGIS: Installierte Leistung muss positiv sein.'"")), ()), ('Const', ""''"")))","('BoolOp', 'Or', 2)",texts,actual_error_msg = (
.\admin_panel.py,1705,actual_tariff_list_for_ui,"('List', (('Dict', (('KV', ('Const', ""'ct_per_kwh'""), ('Const', '0.0')), ('KV', ('Const', ""'kwp_max'""), ('Const', '10.0')), ('KV', ('Const', ""'kwp_min'""), ('Const', '0.0')))),))","('List', 1)",,"if not actual_tariff_list_for_ui : actual_tariff_list_for_ui = [{""kwp_min"": 0.0, ""kwp_max"": 10.0, ""ct_per_kwh"": 0.0}]"
.\admin_panel.py,1704,actual_tariff_list_for_ui,"('Subscript', ('Name', 'tariff_list_input'), ('Other', 'Slice'))","('Subscript',)",tariff_list_input,actual_tariff_list_for_ui = tariff_list_input[:]
.\admin_panel.py,1777,actual_texts_dict_for_session,"('Call', ('Name', 'dict'), (('Name', 'texts'),), ())","('Call', 1, 0)","dict,texts",actual_texts_dict_for_session = dict(texts)
.\admin_panel.py,1780,actual_texts_dict_for_session,"('Dict', ())","('Dict', 0)",,actual_texts_dict_for_session = {}
.\admin_panel.py,1783,actual_texts_dict_for_session,"('Dict', ())","('Dict', 0)",,actual_texts_dict_for_session = {}
.\admin_panel.py,1786,actual_texts_dict_for_session,"('Dict', ())","('Dict', 0)",,actual_texts_dict_for_session = {}
.\admin_panel.py,1772,actual_texts_dict_for_session,"('Name', 'texts')","('Name',)",texts,actual_texts_dict_for_session = texts
.\tests\test_numbering.py,33,additional_pdf,"('Call', ('Attr', 'buf', 'getvalue'), (), ())","('Call', 0, 0)",buf,additional_pdf = buf.getvalue()
.\tools\test_numbering.py,33,additional_pdf,"('Call', ('Attr', 'buf', 'getvalue'), (), ())","('Call', 0, 0)",buf,additional_pdf = buf.getvalue()
.\pdf_generator.py,697,additional_pdf,"('Call', ('Name', '_overlay_footer_page_numbers'), (('Name', 'additional_pdf'),), (('footer_left_text', ('Name', 'footer_left')), ('logo_b64', ('Name', 'logo_b64')), ('start_number', ('Const', '8')), ('total_pages', ('Name', 'total_pages'))))","('Call', 1, 4)","_overlay_footer_page_numbers,additional_pdf,footer_left,logo_b64,total_pages","additional_pdf = _overlay_footer_page_numbers(additional_pdf, start_number=8, total_pages=total_pages, logo_b64=logo_b64, footer_left_text=footer_left)"
.\pdf_generator.py,529,additional_pdf,"('Call', ('Name', 'generate_offer_pdf'), (('Name', 'safe_project_data'), ('Name', 'safe_analysis_results'), ('Name', 'company_info'), ('Name', 'company_logo_base64'), ('Name', 'selected_title_image_b64'), ('Name', 'selected_offer_title_text'), ('Name', 'selected_cover_letter_text'), ('Name', 'sections_to_include'), ('Name', 'inclusion_options_mod'), ('Name', 'load_admin_setting_func'), ('Name', 'save_admin_setting_func'), ('Name', 'list_products_func'), ('Name', 'get_product_by_id_func'), ('Name', 'db_list_company_documents_func'), ('Name', 'active_company_id'), ('Name', 'texts')), (('**', ('Other', 'DictComp')), ('disable_main_template_combiner', ('Const', 'True')), ('use_modern_design', ('Name', 'use_modern_design'))))","('Call', 16, 3)","active_company_id,company_info,company_logo_base64,db_list_company_documents_func,generate_offer_pdf,get_product_by_id_func,inclusion_options_mod,k,kwargs,list_products_func,load_admin_setting_func,safe_analysis_results,safe_project_data,save_admin_setting_func,sections_to_include,selected_cover_letter_text,selected_offer_title_text,selected_title_image_b64,texts,use_modern_design,v",additional_pdf = generate_offer_pdf(
.\pdf_generator.py,485,additional_pdf,"('Const', 'None')","('Const',)",,additional_pdf = None
.\pdf_erstellen_komplett.py,137,additional_pdf_bytes,"('Call', ('Attr', 'Path(additional_pdf_path)', 'read_bytes'), (), ())","('Call', 0, 0)","Path,additional_pdf_path",additional_pdf_bytes = Path(additional_pdf_path).read_bytes()
.\pdf_erstellen_komplett.py,229,additional_pdf_bytes,"('Call', ('Name', '_generate_legacy_pdf_optional'), (('Name', 'project_data'), ('BoolOp', 'Or', (('Dict', ()), ('Name', 'analysis_results'))), ('BoolOp', 'Or', (('Dict', ()), ('Name', 'company_info')))), ())","('Call', 3, 0)","_generate_legacy_pdf_optional,analysis_results,company_info,project_data","additional_pdf_bytes = _generate_legacy_pdf_optional(project_data, analysis_results or {}, company_info or {})"
.\pdf_erstellen_komplett.py,135,additional_pdf_bytes,"('Const', 'None')","('Const',)",,additional_pdf_bytes = None
.\pdf_erstellen_komplett.py,227,additional_pdf_bytes,"('Const', 'None')","('Const',)",,additional_pdf_bytes = None
.\crm_pipeline_ui.py,227,address,"('Call', ('Attr', 'st', 'text_area'), (('Const', ""'Adresse'""),), (('placeholder', ('Const', ""'Straße, PLZ Ort'"")),))","('Call', 1, 1)",st,"address = st.text_area(""Adresse"", placeholder=""Straße, PLZ Ort"")"
.\crm.py,332,address,"('Call', ('Attr', 'st', 'text_input'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'street_label'""), ('Const', ""'Straße'"")), ()),), (('value', ('Call', ('Attr', 'customer_to_edit', 'get'), (('Const', ""'address'""), ('Const', ""''"")), ())),))","('Call', 1, 1)","customer_to_edit,get_text_crm,st,texts","address = st.text_input(get_text_crm(texts, ""street_label"", ""Straße""), value=customer_to_edit.get('address', ''))"
.\data_input.py,81,address_part,"('Call', ('Attr', ""','.join(parts[:-1])"", 'strip'), (), ())","('Call', 0, 0)",parts,"address_part = "","".join(parts[:-1]).strip()"
.\data_input.py,84,address_part,"('Call', ('Attr', ""','.join(parts[:-1])"", 'strip'), (), ())","('Call', 0, 0)",parts,"address_part = "","".join(parts[:-1]).strip()"
.\data_input.py,72,address_part,"('Call', ('Attr', 'full_address[:zip_city_match.start()].strip()', 'rstrip'), (('Const', ""','""),), ())","('Call', 1, 0)","full_address,zip_city_match","address_part = full_address[:zip_city_match.start()].strip().rstrip(',')"
.\data_input.py,68,address_part,"('Name', 'full_address')","('Name',)",full_address,address_part = full_address
.\gui.py,734,admin_panel_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'admin_panel'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","admin_panel_module = import_module_with_fallback(""admin_panel"", import_errors)"
.\gui.py,88,admin_panel_module,"('Const', 'None')","('Const',)",,admin_panel_module: Optional[Any] = None
.\admin_panel.py,154,admin_texts_dict,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'_admin_panel_texts'""), ('Dict', ())), ())","('Call', 2, 0)",st,"admin_texts_dict = st.session_state.get('_admin_panel_texts', {})"
.\admin_panel.py,156,admin_texts_dict,"('Dict', ())","('Dict', 0)",,admin_texts_dict = {}
.\analysis.py,1465,agg_values,"('Dict', ())","('Dict', 0)",,agg_values = {}
.\analysis.py,1509,agg_values,"('Other', 'DictComp')","('Other', 'DictComp')","col,data",agg_values = {col: data[col].sum() for col in data.columns[1:]}
.\analysis.py,1871,ah,"('BoolOp', 'Or', (('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'stromkosten_haushalt_euro_jahr'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","_parse_float,project_data","ah = _parse_float(project_data.get(""stromkosten_haushalt_euro_jahr"")) or 0.0"
.\analysis.py,1888,ah,"('BoolOp', 'Or', (('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'stromkosten_haushalt_euro_jahr'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","_parse_float,project_details","ah = _parse_float(project_details.get(""stromkosten_haushalt_euro_jahr"")) or 0.0"
.\gui.py,740,ai_companion_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'ai_companion'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","ai_companion_module = import_module_with_fallback(""ai_companion"", import_errors)"
.\gui.py,94,ai_companion_module,"('Const', 'None')","('Const',)",,ai_companion_module: Optional[Any] = None
.\product_attributes.py,252,akey,"('Call', ('Attr', ""row.get('attribute_key') or ''"", 'strip'), (), ())","('Call', 0, 0)",row,akey = (row.get('attribute_key') or '').strip()
.\admin_product_attributes_ui.py,62,akey,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Key (z. B. cell_technology)'""),), ())","('Call', 1, 0)",st,"akey = st.text_input(""Key (z. B. cell_technology)"")"
.\pdf_template_engine\placeholders.py,1732,al,"('Call', ('Attr', 'aval', 'lower'), (), ())","('Call', 0, 0)",aval,al = aval.lower()
.\pdf_template_engine\placeholders.py,1744,al,"('Call', ('Attr', 'str(aval)', 'lower'), (), ())","('Call', 0, 0)","aval,str",al = str(aval).lower()
.\pdf_template_engine\placeholders.py,1425,alias_map,"('BoolOp', 'Or', (('Call', ('Name', '_load_admin_setting'), (('Const', ""'module_pdf_alias_map'""), ('Dict', ())), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",_load_admin_setting,"alias_map = _load_admin_setting(""module_pdf_alias_map"", {}) or {}"
.\pdf_template_engine\placeholders.py,1423,alias_map,"('Const', 'None')","('Const',)",,alias_map = None
.\pdf_template_engine\placeholders.py,1427,alias_map,"('Const', 'None')","('Const',)",,alias_map = None
.\multi_offer_generator.py,177,all_companies,"('Call', ('Attr', 'self', 'get_available_companies'), (), ())","('Call', 0, 0)",self,all_companies = self.get_available_companies()
.\multi_offer_generator_new.py,173,all_companies,"('Call', ('Attr', 'self', 'get_available_companies'), (), ())","('Call', 0, 0)",self,all_companies = self.get_available_companies()
.\multi_offer_generator_old.py,127,all_companies,"('Call', ('Attr', 'self', 'get_available_companies'), (), ())","('Call', 0, 0)",self,all_companies = self.get_available_companies()
.\multi_offer_generator_old.py,480,all_companies,"('Call', ('Attr', 'self', 'get_available_companies'), (), ())","('Call', 0, 0)",self,all_companies = self.get_available_companies()
.\multi_offer_generator_old.py,1311,all_companies,"('Call', ('Name', 'list_all_companies'), (), ())","('Call', 0, 0)",list_all_companies,all_companies = list_all_companies()
.\gui.py,390,all_critical_funcs_valid,"('Const', 'False')","('Const',)",,all_critical_funcs_valid = False
.\gui.py,384,all_critical_funcs_valid,"('Const', 'True')","('Const',)",,all_critical_funcs_valid = True
.\admin_panel.py,1718,all_entries_valid,"('Const', 'False')","('Const',)",,"cols_tariff_ui[1].error(""Max kWp muss größer Min kWp sein!""); all_entries_valid = False"
.\admin_panel.py,1703,all_entries_valid,"('Const', 'True')","('Const',)",,collected_tariffs_from_ui = []; all_entries_valid = True
.\notwendig oder nicht\wichtig\portings\patches\test_wirtschaftlichkeit.py.insert.py,71,all_keys_found,"('Const', 'False')","('Const',)",,all_keys_found = False
.\tests\test_wirtschaftlichkeit.py,70,all_keys_found,"('Const', 'False')","('Const',)",,all_keys_found = False
.\tools\portings\patches\test_wirtschaftlichkeit.py.insert.py,71,all_keys_found,"('Const', 'False')","('Const',)",,all_keys_found = False
.\notwendig oder nicht\wichtig\portings\patches\test_wirtschaftlichkeit.py.insert.py,65,all_keys_found,"('Const', 'True')","('Const',)",,all_keys_found = True
.\tests\test_wirtschaftlichkeit.py,64,all_keys_found,"('Const', 'True')","('Const',)",,all_keys_found = True
.\tools\portings\patches\test_wirtschaftlichkeit.py.insert.py,65,all_keys_found,"('Const', 'True')","('Const',)",,all_keys_found = True
.\multi_offer_generator_old.py,1009,all_sections,"('Dict', (('KV', ('Const', ""'CostDetails'""), ('Const', ""'Kostendetails'"")), ('KV', ('Const', ""'Economics'""), ('Const', ""'Wirtschaftlichkeit'"")), ('KV', ('Const', ""'Financing'""), ('Const', ""'Finanzierung'"")), ('KV', ('Const', ""'ProjectOverview'""), ('Const', ""'Projektübersicht'"")), ('KV', ('Const', ""'TechnicalComponents'""), ('Const', ""'Technische Komponenten'"")), ('KV', ('Const', ""'Timeline'""), ('Const', ""'Zeitplan'"")), ('KV', ('Const', ""'Warranties'""), ('Const', ""'Garantien'""))))","('Dict', 7)",,all_sections = {
.\central_pdf_system.py,1388,all_sections,"('List', ())","('List', 0)",,all_sections = []
.\central_pdf_system.py,1410,all_sections,"('List', ())","('List', 0)",,all_sections = []
.\pdf_styles.py,1228,all_themes,"('Dict', (('UNPACK', ('Attr', 'manager', 'predefined_themes')), ('UNPACK', ('Attr', 'st.session_state', 'custom_themes'))))","('Dict', 2)","manager,st","all_themes = {**manager.predefined_themes, **st.session_state.custom_themes}"
.\pdf_styles.py,874,all_themes,"('Dict', (('UNPACK', ('Attr', 'self', 'predefined_themes')), ('UNPACK', ('Attr', 'st.session_state', 'custom_themes'))))","('Dict', 2)","self,st","all_themes = {**self.predefined_themes, **st.session_state.custom_themes}"
.\analysis.py,381,amortisation_years,"('Call', ('Name', '_calculate_amortization_time'), (('Name', 'final_price'), ('Name', 'annual_savings')), ())","('Call', 2, 0)","_calculate_amortization_time,annual_savings,final_price","amortisation_years = _calculate_amortization_time(final_price, annual_savings)"
.\analysis.py,411,amortisation_years,"('Name', 'cheated')","('Name',)",cheated,amortisation_years = cheated
.\pdf_styles.py,456,amortization_year,"('Const', 'None')","('Const',)",,amortization_year = None
.\pdf_styles.py,459,amortization_year,"('Subscript', ('Name', 'years'), ('Name', 'i'))","('Subscript',)","i,years",amortization_year = years[i]
.\live_preview_helpers.py,160,amortization_years,"('Call', ('Name', '_calculate_amortization_time'), (('Name', 'final_price_preview'), ('Name', 'annual_savings')), ())","('Call', 2, 0)","_calculate_amortization_time,annual_savings,final_price_preview","amortization_years = _calculate_amortization_time(final_price_preview, annual_savings)"
.\live_calculation_engine.py,78,amortization_years,"('Other', 'IfExp')","('Other', 'IfExp')","annual_total_savings,investment_brutto",amortization_years = investment_brutto / annual_total_savings if annual_total_savings > 0 else 0
.\gui.py,732,analysis_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'analysis'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","analysis_module = import_module_with_fallback(""analysis"", import_errors)"
.\gui.py,86,analysis_module,"('Const', 'None')","('Const',)",,analysis_module: Optional[Any] = None
.\analysis.py,1851,analysis_results,"('BoolOp', 'Or', (('Dict', ()), ('Name', 'analysis_results')))","('BoolOp', 'Or', 2)",analysis_results,analysis_results = analysis_results or {}
.\pdf_template_engine\placeholders.py,421,analysis_results,"('BoolOp', 'Or', (('Dict', ()), ('Name', 'analysis_results')))","('BoolOp', 'Or', 2)",analysis_results,analysis_results = analysis_results or {}
.\pdf_ui.py,235,analysis_results,"('BoolOp', 'Or', (('Dict', ()), ('Name', 'analysis_results')))","('BoolOp', 'Or', 2)",analysis_results,analysis_results = analysis_results or {}
.\pdf_erstellen_komplett.py,205,analysis_results,"('Call', ('Attr', 'json', 'loads'), (('Call', ('Attr', 'aj.read()', 'decode'), (('Const', ""'utf-8'""),), ()),), ())","('Call', 1, 0)","aj,json","analysis_results = json.loads(aj.read().decode(""utf-8""))"
.\central_pdf_system.py,168,analysis_results,"('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'analysis_results'""), ('Dict', ())), ())","('Call', 2, 0)",kwargs,"analysis_results = kwargs.get('analysis_results', {})"
.\central_pdf_system.py,409,analysis_results,"('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'analysis_results'""), ('Dict', ())), ())","('Call', 2, 0)",kwargs,"analysis_results = kwargs.get('analysis_results', {})"
.\central_pdf_system.py,463,analysis_results,"('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'analysis_results'""), ('Dict', ())), ())","('Call', 2, 0)",kwargs,"analysis_results = kwargs.get('analysis_results', {})"
.\central_pdf_system.py,1987,analysis_results,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'calculation_results'""), ('Dict', ())), ())","('Call', 2, 0)",st,"analysis_results = st.session_state.get('calculation_results', {})"
.\pdf_erstellen_komplett.py,180,analysis_results,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'calculation_results'""), ('Dict', ())), ())","('Call', 2, 0)",st,"analysis_results = st.session_state.get(""calculation_results"", {})"
.\pdf_erstellen_komplett.py,128,analysis_results,"('Call', ('Name', '_read_json'), (('Name', 'analysis_json'),), ())","('Call', 1, 0)","_read_json,analysis_json",analysis_results = _read_json(analysis_json)
.\pdf_generator.py,1768,analysis_results,"('Call', ('Name', 'dict'), (('BoolOp', 'Or', (('Dict', ()), ('Name', 'analysis_results'))),), ())","('Call', 1, 0)","analysis_results,dict",analysis_results = dict(analysis_results or {})
.\multi_offer_generator_old.py,273,analysis_results,"('Dict', (('KV', ('Const', ""'amortization_time_years'""), ('Const', '10.2')), ('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.5')), ('KV', ('Const', ""'annual_financial_benefit_year1'""), ('Const', '850')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8500')), ('KV', ('Const', ""'self_supply_rate_percent'""), ('Const', '65.0')), ('KV', ('Const', ""'total_investment_brutto'""), ('Const', '17850')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '15000'))))","('Dict', 7)",,analysis_results = {
.\multi_offer_generator_old.py,738,analysis_results,"('Dict', (('KV', ('Const', ""'amortization_time_years'""), ('Const', '10.2')), ('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.5')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8500')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '15000'))))","('Dict', 4)",,analysis_results = {
.\notwendig oder nicht\wichtig\portings\patches\test_page1_alignment.py.insert.py,15,analysis_results,"('Dict', (('KV', ('Const', ""'amortization_time_years'""), ('Const', '12.5')), ('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.4')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8251.92'))))","('Dict', 3)",,analysis_results = {
.\tests\test_page1_alignment.py,17,analysis_results,"('Dict', (('KV', ('Const', ""'amortization_time_years'""), ('Const', '12.5')), ('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.4')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8251.92'))))","('Dict', 3)",,analysis_results = {
.\tools\portings\patches\test_page1_alignment.py.insert.py,15,analysis_results,"('Dict', (('KV', ('Const', ""'amortization_time_years'""), ('Const', '12.5')), ('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.4')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8251.92'))))","('Dict', 3)",,analysis_results = {
.\multi_offer_generator_old.py,1397,analysis_results,"('Dict', (('KV', ('Const', ""'amortization_years'""), ('Const', '12')), ('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.5')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8500')), ('KV', ('Const', ""'self_supply_rate_percent'""), ('Const', '75.2')), ('KV', ('Const', ""'total_investment_cost_netto'""), ('Const', '20000'))))","('Dict', 5)",,analysis_results = {
.\tests\test_main_pdf.py,64,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.4')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8252')), ('KV', ('Const', ""'self_consumption_percent'""), ('Const', '42')), ('KV', ('Const', ""'self_supply_rate_percent'""), ('Const', '54')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '14950.0'))))","('Dict', 5)",,analysis_results = {
.\tools\test_main_pdf.py,64,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.4')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8252')), ('KV', ('Const', ""'self_consumption_percent'""), ('Const', '42')), ('KV', ('Const', ""'self_supply_rate_percent'""), ('Const', '54')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '14950.0'))))","('Dict', 5)",,analysis_results = {
.\notwendig oder nicht\wichtig\portings\patches\test_final_pdf_logos.py.insert.py,50,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.5')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8500')), ('KV', ('Const', ""'final_price'""), ('Const', '15000')), ('KV', ('Const', ""'total_investment_brutto'""), ('Const', '17850')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '15000'))))","('Dict', 5)",,analysis_results = {
.\notwendig oder nicht\wichtig\portings\patches\test_pdf_logos.py.insert.py,50,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.5')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8500')), ('KV', ('Const', ""'final_price'""), ('Const', '15000')), ('KV', ('Const', ""'total_investment_brutto'""), ('Const', '17850')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '15000'))))","('Dict', 5)",,analysis_results = {
.\tests\test_final_pdf_logos.py,52,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.5')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8500')), ('KV', ('Const', ""'final_price'""), ('Const', '15000')), ('KV', ('Const', ""'total_investment_brutto'""), ('Const', '17850')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '15000'))))","('Dict', 5)",,analysis_results = {
.\tests\test_pdf_logos.py,52,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.5')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8500')), ('KV', ('Const', ""'final_price'""), ('Const', '15000')), ('KV', ('Const', ""'total_investment_brutto'""), ('Const', '17850')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '15000'))))","('Dict', 5)",,analysis_results = {
.\tools\portings\patches\test_final_pdf_logos.py.insert.py,50,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.5')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8500')), ('KV', ('Const', ""'final_price'""), ('Const', '15000')), ('KV', ('Const', ""'total_investment_brutto'""), ('Const', '17850')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '15000'))))","('Dict', 5)",,analysis_results = {
.\tools\portings\patches\test_pdf_logos.py.insert.py,50,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.5')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8500')), ('KV', ('Const', ""'final_price'""), ('Const', '15000')), ('KV', ('Const', ""'total_investment_brutto'""), ('Const', '17850')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '15000'))))","('Dict', 5)",,analysis_results = {
.\debug_logo_pdf.py,46,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.5')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8500')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '15000'))))","('Dict', 3)",,analysis_results = {
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_pdf.py.insert.py,44,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.5')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8500')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '15000'))))","('Dict', 3)",,analysis_results = {
.\tools\portings\patches\debug_logo_pdf.py.insert.py,44,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.5')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8500')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '15000'))))","('Dict', 3)",,analysis_results = {
.\notwendig oder nicht\wichtig\portings\patches\test_section_titles_logos.py.insert.py,46,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.5')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8500')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '25000'))))","('Dict', 3)",,analysis_results = {
.\tests\test_section_titles_logos.py,48,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.5')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8500')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '25000'))))","('Dict', 3)",,analysis_results = {
.\tools\portings\patches\test_section_titles_logos.py.insert.py,46,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.5')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8500')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '25000'))))","('Dict', 3)",,analysis_results = {
.\notwendig oder nicht\wichtig\portings\patches\simple_logo_test.py.insert.py,44,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.5')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '15000'))))","('Dict', 2)",,analysis_results = {
.\simple_logo_test.py,46,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.5')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '15000'))))","('Dict', 2)",,analysis_results = {
.\tools\portings\patches\simple_logo_test.py.insert.py,44,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.5')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '15000'))))","('Dict', 2)",,analysis_results = {
.\notwendig oder nicht\wichtig\portings\patches\test_product_images.py.insert.py,28,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.8')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8500')), ('KV', ('Const', ""'final_price'""), ('Const', '25000.0'))))","('Dict', 3)",,analysis_results = {
.\tests\test_product_images.py,29,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.8')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8500')), ('KV', ('Const', ""'final_price'""), ('Const', '25000.0'))))","('Dict', 3)",,analysis_results = {
.\tools\portings\patches\test_product_images.py.insert.py,28,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '8.8')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8500')), ('KV', ('Const', ""'final_price'""), ('Const', '25000.0'))))","('Dict', 3)",,analysis_results = {
.\tools\debug_dynamic_page3.py,8,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '9.5')), ('KV', ('Const', ""'annual_consumption_kwh'""), ('Const', '6000')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '6000')), ('KV', ('Const', ""'battery_charge_kwh'""), ('Const', '4920')), ('KV', ('Const', ""'battery_discharge_for_sc_kwh'""), ('Const', '1279')), ('KV', ('Const', ""'direct_self_consumption_kwh'""), ('Const', '2236')), ('KV', ('Const', ""'grid_feed_in_kwh'""), ('Const', '1836'))))","('Dict', 7)",,analysis_results = {
.\debug_page3_check.py,39,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '9.5')), ('KV', ('Const', ""'annual_storage_charge_kwh'""), ('Const', '1500')), ('KV', ('Const', ""'annual_storage_discharge_kwh'""), ('Const', '905')), ('KV', ('Const', ""'einspeiseverguetung_eur_per_kwh'""), ('Const', '0.0786')), ('KV', ('Const', ""'electricity_price_eur_per_kwh'""), ('Const', '0.2734')), ('KV', ('Const', ""'netzeinspeisung_kwh'""), ('Const', '4683'))))","('Dict', 6)",,analysis_results = {
.\notwendig oder nicht\wichtig\portings\patches\debug_page3_check.py.insert.py,16,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '9.5')), ('KV', ('Const', ""'annual_storage_charge_kwh'""), ('Const', '1500')), ('KV', ('Const', ""'annual_storage_discharge_kwh'""), ('Const', '905')), ('KV', ('Const', ""'einspeiseverguetung_eur_per_kwh'""), ('Const', '0.0786')), ('KV', ('Const', ""'electricity_price_eur_per_kwh'""), ('Const', '0.2734')), ('KV', ('Const', ""'netzeinspeisung_kwh'""), ('Const', '4683'))))","('Dict', 6)",,analysis_results = {
.\notwendig oder nicht\wichtig\portings\patches\test_right_alignment.py.insert.py,15,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '9.5')), ('KV', ('Const', ""'annual_storage_charge_kwh'""), ('Const', '1500')), ('KV', ('Const', ""'annual_storage_discharge_kwh'""), ('Const', '905')), ('KV', ('Const', ""'einspeiseverguetung_eur_per_kwh'""), ('Const', '0.0786')), ('KV', ('Const', ""'electricity_price_eur_per_kwh'""), ('Const', '0.2734')), ('KV', ('Const', ""'netzeinspeisung_kwh'""), ('Const', '4683'))))","('Dict', 6)",,analysis_results = {
.\notwendig oder nicht\wichtig\portings\patches\tools\test_page3_values.py.insert.py,12,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '9.5')), ('KV', ('Const', ""'annual_storage_charge_kwh'""), ('Const', '1500')), ('KV', ('Const', ""'annual_storage_discharge_kwh'""), ('Const', '905')), ('KV', ('Const', ""'einspeiseverguetung_eur_per_kwh'""), ('Const', '0.0786')), ('KV', ('Const', ""'electricity_price_eur_per_kwh'""), ('Const', '0.2734')), ('KV', ('Const', ""'netzeinspeisung_kwh'""), ('Const', '4683'))))","('Dict', 6)",,analysis_results = {
.\tests\test_page3_values.py,18,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '9.5')), ('KV', ('Const', ""'annual_storage_charge_kwh'""), ('Const', '1500')), ('KV', ('Const', ""'annual_storage_discharge_kwh'""), ('Const', '905')), ('KV', ('Const', ""'einspeiseverguetung_eur_per_kwh'""), ('Const', '0.0786')), ('KV', ('Const', ""'electricity_price_eur_per_kwh'""), ('Const', '0.2734')), ('KV', ('Const', ""'netzeinspeisung_kwh'""), ('Const', '4683'))))","('Dict', 6)",,analysis_results = {
.\tests\test_right_alignment.py,17,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '9.5')), ('KV', ('Const', ""'annual_storage_charge_kwh'""), ('Const', '1500')), ('KV', ('Const', ""'annual_storage_discharge_kwh'""), ('Const', '905')), ('KV', ('Const', ""'einspeiseverguetung_eur_per_kwh'""), ('Const', '0.0786')), ('KV', ('Const', ""'electricity_price_eur_per_kwh'""), ('Const', '0.2734')), ('KV', ('Const', ""'netzeinspeisung_kwh'""), ('Const', '4683'))))","('Dict', 6)",,analysis_results = {
.\tools\portings\patches\debug_page3_check.py.insert.py,16,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '9.5')), ('KV', ('Const', ""'annual_storage_charge_kwh'""), ('Const', '1500')), ('KV', ('Const', ""'annual_storage_discharge_kwh'""), ('Const', '905')), ('KV', ('Const', ""'einspeiseverguetung_eur_per_kwh'""), ('Const', '0.0786')), ('KV', ('Const', ""'electricity_price_eur_per_kwh'""), ('Const', '0.2734')), ('KV', ('Const', ""'netzeinspeisung_kwh'""), ('Const', '4683'))))","('Dict', 6)",,analysis_results = {
.\tools\portings\patches\test_right_alignment.py.insert.py,15,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '9.5')), ('KV', ('Const', ""'annual_storage_charge_kwh'""), ('Const', '1500')), ('KV', ('Const', ""'annual_storage_discharge_kwh'""), ('Const', '905')), ('KV', ('Const', ""'einspeiseverguetung_eur_per_kwh'""), ('Const', '0.0786')), ('KV', ('Const', ""'electricity_price_eur_per_kwh'""), ('Const', '0.2734')), ('KV', ('Const', ""'netzeinspeisung_kwh'""), ('Const', '4683'))))","('Dict', 6)",,analysis_results = {
.\tools\portings\patches\tools\test_page3_values.py.insert.py,12,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '9.5')), ('KV', ('Const', ""'annual_storage_charge_kwh'""), ('Const', '1500')), ('KV', ('Const', ""'annual_storage_discharge_kwh'""), ('Const', '905')), ('KV', ('Const', ""'einspeiseverguetung_eur_per_kwh'""), ('Const', '0.0786')), ('KV', ('Const', ""'electricity_price_eur_per_kwh'""), ('Const', '0.2734')), ('KV', ('Const', ""'netzeinspeisung_kwh'""), ('Const', '4683'))))","('Dict', 6)",,analysis_results = {
.\tools\test_page3_values.py,18,analysis_results,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '9.5')), ('KV', ('Const', ""'annual_storage_charge_kwh'""), ('Const', '1500')), ('KV', ('Const', ""'annual_storage_discharge_kwh'""), ('Const', '905')), ('KV', ('Const', ""'einspeiseverguetung_eur_per_kwh'""), ('Const', '0.0786')), ('KV', ('Const', ""'electricity_price_eur_per_kwh'""), ('Const', '0.2734')), ('KV', ('Const', ""'netzeinspeisung_kwh'""), ('Const', '4683'))))","('Dict', 6)",,analysis_results = {
.\tests\test_page4_images.py,31,analysis_results,"('Dict', (('KV', ('Const', ""'annual_consumption_kwh'""), ('Const', '4000')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '5000')), ('KV', ('Const', ""'storage_cycles'""), ('Const', '5000')), ('KV', ('Const', ""'storage_dod_percent'""), ('Const', '80')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '12345.67'))))","('Dict', 5)",,"analysis_results={'total_investment_netto':12345.67,'annual_pv_production_kwh':5000,'annual_consumption_kwh':4000,'storage_dod_percent':80,'storage_cycles':5000}"
.\tools\test_page4_images.py,31,analysis_results,"('Dict', (('KV', ('Const', ""'annual_consumption_kwh'""), ('Const', '4000')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '5000')), ('KV', ('Const', ""'storage_cycles'""), ('Const', '5000')), ('KV', ('Const', ""'storage_dod_percent'""), ('Const', '80')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '12345.67'))))","('Dict', 5)",,"analysis_results={'total_investment_netto':12345.67,'annual_pv_production_kwh':5000,'annual_consumption_kwh':4000,'storage_dod_percent':80,'storage_cycles':5000}"
.\.tmp_placeholder_test.py,20,analysis_results,"('Dict', (('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8250')), ('KV', ('Const', ""'irr_percent'""), ('Const', '12.7')), ('KV', ('Const', ""'lcoe_euro_per_kwh'""), ('Const', '0.089')), ('KV', ('Const', ""'savings_20y_with_battery_eur'""), ('Const', '36958')), ('KV', ('Const', ""'savings_20y_without_battery_eur'""), ('Const', '29150')), ('KV', ('Const', ""'self_consumption_percent'""), ('Const', '42')), ('KV', ('Const', ""'self_supply_rate_percent'""), ('Const', '54'))))","('Dict', 7)",,analysis_results = {
.\tests\test_main6_render.py,49,analysis_results,"('Dict', (('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8251.92')), ('KV', ('Const', ""'final_price'""), ('Const', '19999.99')), ('KV', ('Const', ""'self_consumption_percent'""), ('Const', '42')), ('KV', ('Const', ""'self_supply_rate_percent'""), ('Const', '54')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '19999.99'))))","('Dict', 5)",,analysis_results = {
.\tools\test_main6_render.py,49,analysis_results,"('Dict', (('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '8251.92')), ('KV', ('Const', ""'final_price'""), ('Const', '19999.99')), ('KV', ('Const', ""'self_consumption_percent'""), ('Const', '42')), ('KV', ('Const', ""'self_supply_rate_percent'""), ('Const', '54')), ('KV', ('Const', ""'total_investment_netto'""), ('Const', '19999.99'))))","('Dict', 5)",,analysis_results = {
.\debug_logo_rendering.py,33,analysis_results,"('Dict', (('KV', ('Const', ""'total_investment_netto'""), ('Const', '15000')),))","('Dict', 1)",,"analysis_results = {""total_investment_netto"": 15000}"
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_rendering.py.insert.py,31,analysis_results,"('Dict', (('KV', ('Const', ""'total_investment_netto'""), ('Const', '15000')),))","('Dict', 1)",,"analysis_results = {""total_investment_netto"": 15000}"
.\tools\portings\patches\debug_logo_rendering.py.insert.py,31,analysis_results,"('Dict', (('KV', ('Const', ""'total_investment_netto'""), ('Const', '15000')),))","('Dict', 1)",,"analysis_results = {""total_investment_netto"": 15000}"
.\doc_output.py,1848,analysis_results,"('Dict', ())","('Dict', 0)",,analysis_results = {}
.\notwendig oder nicht\wichtig\portings\patches\test_roof_data.py.insert.py,21,analysis_results,"('Dict', ())","('Dict', 0)",,analysis_results = {}
.\pdf_erstellen_komplett.py,173,analysis_results,"('Dict', ())","('Dict', 0)",,"analysis_results: Dict[str, Any] = {}"
.\pdf_ui.py,262,analysis_results,"('Dict', ())","('Dict', 0)",,analysis_results = {}
.\tests\test_numbering.py,16,analysis_results,"('Dict', ())","('Dict', 0)",,analysis_results = {}
.\tests\test_overlay_footer.py,15,analysis_results,"('Dict', ())","('Dict', 0)",,analysis_results = {}
.\tests\test_roof_data.py,23,analysis_results,"('Dict', ())","('Dict', 0)",,analysis_results = {}
.\tools\portings\patches\test_roof_data.py.insert.py,21,analysis_results,"('Dict', ())","('Dict', 0)",,analysis_results = {}
.\tools\test_numbering.py,16,analysis_results,"('Dict', ())","('Dict', 0)",,analysis_results = {}
.\tools\test_overlay_footer.py,15,analysis_results,"('Dict', ())","('Dict', 0)",,analysis_results = {}
.\doc_output.py,202,analysis_results,"('Name', 'source_data')","('Name',)",source_data,analysis_results = source_data
.\notwendig oder nicht\wichtig\repo_porter.py,291,anchor,"('Call', ('Name', '_anchor_after_class_body'), (('Name', 'dst_mod'), ('Name', 'cls')), ())","('Call', 2, 0)","_anchor_after_class_body,cls,dst_mod","anchor = _anchor_after_class_body(dst_mod, cls)"
.\tools\repo_porter.py,291,anchor,"('Call', ('Name', '_anchor_after_class_body'), (('Name', 'dst_mod'), ('Name', 'cls')), ())","('Call', 2, 0)","_anchor_after_class_body,cls,dst_mod","anchor = _anchor_after_class_body(dst_mod, cls)"
.\notwendig oder nicht\wichtig\repo_porter.py,271,anchor,"('Call', ('Name', '_anchor_after_last_toplevel'), (('Name', 'dst_mod'),), ())","('Call', 1, 0)","_anchor_after_last_toplevel,dst_mod",anchor = _anchor_after_last_toplevel(dst_mod)
.\notwendig oder nicht\wichtig\repo_porter.py,279,anchor,"('Call', ('Name', '_anchor_after_last_toplevel'), (('Name', 'dst_mod'),), ())","('Call', 1, 0)","_anchor_after_last_toplevel,dst_mod",anchor = _anchor_after_last_toplevel(dst_mod)
.\tools\repo_porter.py,271,anchor,"('Call', ('Name', '_anchor_after_last_toplevel'), (('Name', 'dst_mod'),), ())","('Call', 1, 0)","_anchor_after_last_toplevel,dst_mod",anchor = _anchor_after_last_toplevel(dst_mod)
.\tools\repo_porter.py,279,anchor,"('Call', ('Name', '_anchor_after_last_toplevel'), (('Name', 'dst_mod'),), ())","('Call', 1, 0)","_anchor_after_last_toplevel,dst_mod",anchor = _anchor_after_last_toplevel(dst_mod)
.\notwendig oder nicht\wichtig\repo_porter.py,547,anchor_line,"('Call', ('Name', 'int'), (('Subscript', ('Name', 'row'), ('Const', ""'dst_anchor_line'"")),), ())","('Call', 1, 0)","int,row","anchor_line = int(row[""dst_anchor_line""])"
.\tools\repo_porter.py,547,anchor_line,"('Call', ('Name', 'int'), (('Subscript', ('Name', 'row'), ('Const', ""'dst_anchor_line'"")),), ())","('Call', 1, 0)","int,row","anchor_line = int(row[""dst_anchor_line""])"
.\notwendig oder nicht\wichtig\repo_porter.py,252,anchor_line,"('Const', '0')","('Const',)",,anchor_line = 0
.\tools\repo_porter.py,252,anchor_line,"('Const', '0')","('Const',)",,anchor_line = 0
.\components\progress_settings.py,101,animation_speed,"('Call', ('Attr', 'st', 'slider'), (('Const', ""'Animationsgeschwindigkeit'""),), (('help', ('Const', ""'Geschwindigkeit der Animationen'"")), ('max_value', ('Const', '3.0')), ('min_value', ('Const', '0.5')), ('step', ('Const', '0.1')), ('value', ('Attr', 'current_config', 'animation_speed'))))","('Call', 1, 5)","current_config,st",animation_speed = st.slider(
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_settings.py.insert.py,103,animation_speed,"('Call', ('Attr', 'st', 'slider'), (('Const', ""'Animationsgeschwindigkeit'""),), (('help', ('Const', ""'Geschwindigkeit der Animationen'"")), ('max_value', ('Const', '3.0')), ('min_value', ('Const', '0.5')), ('step', ('Const', '0.1')), ('value', ('Attr', 'current_config', 'animation_speed'))))","('Call', 1, 5)","current_config,st",animation_speed = st.slider(
.\notwendig oder nicht\wichtig\portings\patches\components\progress_settings.py.insert.py,104,animation_speed,"('Call', ('Attr', 'st', 'slider'), (('Const', ""'Animationsgeschwindigkeit'""),), (('help', ('Const', ""'Geschwindigkeit der Animationen'"")), ('max_value', ('Const', '3.0')), ('min_value', ('Const', '0.5')), ('step', ('Const', '0.1')), ('value', ('Attr', 'current_config', 'animation_speed'))))","('Call', 1, 5)","current_config,st",animation_speed = st.slider(
.\tools\out_selected\patches\components\progress_settings.py.insert.py,103,animation_speed,"('Call', ('Attr', 'st', 'slider'), (('Const', ""'Animationsgeschwindigkeit'""),), (('help', ('Const', ""'Geschwindigkeit der Animationen'"")), ('max_value', ('Const', '3.0')), ('min_value', ('Const', '0.5')), ('step', ('Const', '0.1')), ('value', ('Attr', 'current_config', 'animation_speed'))))","('Call', 1, 5)","current_config,st",animation_speed = st.slider(
.\tools\portings\patches\components\progress_settings.py.insert.py,104,animation_speed,"('Call', ('Attr', 'st', 'slider'), (('Const', ""'Animationsgeschwindigkeit'""),), (('help', ('Const', ""'Geschwindigkeit der Animationen'"")), ('max_value', ('Const', '3.0')), ('min_value', ('Const', '0.5')), ('step', ('Const', '0.1')), ('value', ('Attr', 'current_config', 'animation_speed'))))","('Call', 1, 5)","current_config,st",animation_speed = st.slider(
.\components\progress_manager.py,30,animation_speed,"('Const', '1.0')","('Const',)",,animation_speed: float = 1.0
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,84,animation_speed,"('Const', '1.0')","('Const',)",,animation_speed: float = 1.0
.\tools\out_selected\patches\components\progress_manager.py.insert.py,84,animation_speed,"('Const', '1.0')","('Const',)",,animation_speed: float = 1.0
.\pdf_template_engine\placeholders.py,1102,anlage_kwp,"('BoolOp', 'Or', (('Call', ('Name', 'parse_float'), (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'anlage_kwp'""),), ()),), ()), ('Call', ('Name', 'parse_float'), (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'anlage_kwp'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 3)","analysis_results,parse_float,project_data","anlage_kwp = parse_float(analysis_results.get(""anlage_kwp"")) or parse_float(project_data.get(""anlage_kwp"")) or 0.0"
.\pdf_template_engine\placeholders.py,560,anlage_kwp,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'anlage_kwp'""),), ())","('Call', 1, 0)",analysis_results,"anlage_kwp = analysis_results.get(""anlage_kwp"")"
.\pdf_template_engine\placeholders.py,569,anlage_kwp,"('Call', ('Attr', 'project_details', 'get'), (('Const', ""'anlage_kwp'""),), ())","('Call', 1, 0)",project_details,"anlage_kwp = project_details.get(""anlage_kwp"")"
.\analysis.py,9090,anlage_kwp,"('Call', ('Attr', 'results', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '0.0')), ())","('Call', 2, 0)",results,"anlage_kwp = results.get('anlage_kwp', 0.0)"
.\analysis.py,9197,anlage_kwp,"('Call', ('Attr', 'results', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '0.0')), ())","('Call', 2, 0)",results,"anlage_kwp = results.get('anlage_kwp', 0.0)"
.\analysis.py,8917,anlage_kwp,"('Call', ('Attr', 'results', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '1.0')), ())","('Call', 2, 0)",results,"anlage_kwp = results.get('anlage_kwp', 1.0)"
.\live_preview_helpers.py,149,anlage_kwp,"('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '0.0')), ())","('Call', 2, 0)",results_for_display,"anlage_kwp = results_for_display.get('anlage_kwp', 0.0)"
.\solar_calculator.py,130,anlage_kwp,"('Div', ('Mult', (('BoolOp', 'Or', (('Call', ('Attr', 'details', 'get'), (('Const', ""'module_quantity'""), ('Const', '0')), ()), ('Const', '0'))), ('BoolOp', 'Or', (('Call', ('Attr', 'details', 'get'), (('Const', ""'selected_module_capacity_w'""), ('Const', '0.0')), ()), ('Const', '0.0'))))), ('Const', '1000.0'))","('Div', ('Mult', (('BoolOp', 'Or', 2), ('BoolOp', 'Or', 2))), ('Const',))",details,"anlage_kwp = ((details.get('module_quantity', 0) or 0) * (details.get('selected_module_capacity_w', 0.0) or 0.0)) / 1000.0"
.\live_preview_helpers.py,146,anlage_kwp,"('Div', ('Mult', (('Name', 'module_power_wp'), ('Name', 'module_quantity'))), ('Const', '1000.0'))","('Div', ('Mult', (('Name',), ('Name',))), ('Const',))","module_power_wp,module_quantity",anlage_kwp = (module_quantity * module_power_wp) / 1000.0  # Wp zu kWp
.\live_preview_helpers.py,151,anlage_kwp,"('Div', ('Name', 'annual_production_kwh'), ('Const', '1000.0'))","('Div', ('Name',), ('Const',))",annual_production_kwh,anlage_kwp = annual_production_kwh / 1000.0  # Grobe Schätzung: 1000 kWh/kWp
.\pdf_template_engine\placeholders.py,567,anlage_kwp,"('Name', 'anlage_kwp_calc')","('Name',)",anlage_kwp_calc,anlage_kwp = anlage_kwp_calc
.\calculations.py,2486,anlage_kwp,"('Subscript', ('Name', 'results'), ('Const', ""'anlage_kwp'""))","('Subscript',)",results,"anlage_kwp = results[""anlage_kwp""]"
.\pdf_template_engine\placeholders.py,2378,anlage_kwp_val,"('BoolOp', 'Or', (('Call', ('Name', 'parse_float'), (('BoolOp', 'Or', (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'anlage_kwp'""),), ()), ('Call', ('Attr', 'project_data', 'get'), (('Const', ""'anlage_kwp'""),), ()))),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","analysis_results,parse_float,project_data","anlage_kwp_val = parse_float(analysis_results.get(""anlage_kwp"") or project_data.get(""anlage_kwp"")) or 0.0"
.\analysis.py,2034,anlage_kwp_val,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '0.0')), ())","('Call', 2, 0)",analysis_results,"anlage_kwp_val = analysis_results.get(""anlage_kwp"", 0.0)"
.\analysis.py,2108,anlage_kwp_val,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '0.0')), ())","('Call', 2, 0)",analysis_results,"anlage_kwp_val = analysis_results.get(""anlage_kwp"", 0.0)"
.\analysis.py,2159,anlage_kwp_val,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '0.0')), ())","('Call', 2, 0)",analysis_results,"anlage_kwp_val = analysis_results.get(""anlage_kwp"", 0.0)"
.\analysis.py,2239,anlage_kwp_val,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '5.0')), ())","('Call', 2, 0)",analysis_results,"anlage_kwp_val = analysis_results.get(""anlage_kwp"", 5.0)"
.\analysis.py,2421,anlage_kwp_val,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '5.0')), ())","('Call', 2, 0)",analysis_results,"anlage_kwp_val = analysis_results.get(""anlage_kwp"", 5.0)"
.\analysis.py,2539,anlage_kwp_val,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '5.0')), ())","('Call', 2, 0)",analysis_results,"anlage_kwp_val = analysis_results.get(""anlage_kwp"", 5.0)"
.\pdf_generator.py,1445,anlage_kwp_val,"('Call', ('Attr', 'analysis_results_for_placeholder', 'get'), (('Const', ""'anlage_kwp'""),), ())","('Call', 1, 0)",analysis_results_for_placeholder,anlage_kwp_val = analysis_results_for_placeholder.get('anlage_kwp')
.\analysis.py,2036,anlage_kwp_val,"('Const', '5.0')","('Const',)",,anlage_kwp_val = 5.0
.\analysis.py,2110,anlage_kwp_val,"('Const', '5.0')","('Const',)",,anlage_kwp_val = 5.0
.\analysis.py,2161,anlage_kwp_val,"('Const', '5.0')","('Const',)",,anlage_kwp_val = 5.0
.\calculations.py,1375,annual_benefit,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'annual_financial_benefit_year1'""), ('Const', '1500')), ())","('Call', 2, 0)",calc_results,"annual_benefit = calc_results.get(""annual_financial_benefit_year1"", 1500)"
.\calculations.py,1389,annual_benefit,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'annual_financial_benefit_year1'""), ('Const', '1500')), ())","('Call', 2, 0)",calc_results,"annual_benefit = calc_results.get(""annual_financial_benefit_year1"", 1500)"
.\calculations.py,1823,annual_benefit,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'annual_financial_benefit_year1'""), ('Const', '1500')), ())","('Call', 2, 0)",calc_results,"annual_benefit = calc_results.get(""annual_financial_benefit_year1"", 1500)"
.\calculations.py,1769,annual_benefit,"('Call', ('Attr', 'np.random', 'normal'), (('Name', 'base_annual_benefit'), ('Mult', (('Const', '0.15'), ('Name', 'base_annual_benefit')))), ())","('Call', 2, 0)","base_annual_benefit,np",annual_benefit = np.random.normal(
.\analysis.py,6507,annual_benefit,"('Call', ('Attr', 'rec', 'get'), (('Const', ""'annual_benefit'""), ('Const', '0')), ())","('Call', 2, 0)",rec,"annual_benefit = rec.get(""annual_benefit"", 0)"
.\calculations_extended.py,375,annual_co2_savings_kg,"('Mult', (('Name', 'CO2_EMISSIONS_GRID_KWH'), ('Name', 'annual_production_kwh')))","('Mult', (('Name',), ('Name',)))","CO2_EMISSIONS_GRID_KWH,annual_production_kwh",annual_co2_savings_kg = annual_production_kwh * CO2_EMISSIONS_GRID_KWH
.\calculations.py,3614,annual_co2_savings_kg,"('Mult', (('Name', 'annual_pv_production_kwh'), ('Name', 'co2_emission_factor_kg_per_kwh')))","('Mult', (('Name',), ('Name',)))","annual_pv_production_kwh,co2_emission_factor_kg_per_kwh",annual_co2_savings_kg = (
.\pdf_template_engine\placeholders.py,735,annual_consumption,"('BoolOp', 'Or', (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'annual_consumption'""),), ()), ('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'annual_consumption_kwh'""),), ()), ('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'annual_consumption_kwh_yr'""),), ()), ('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'total_consumption_kwh_yr'""),), ()), ('Call', ('Attr', 'project_data', 'get'), (('Const', ""'annual_consumption'""),), ()), ('Call', ('Attr', 'project_data', 'get'), (('Const', ""'annual_consumption_kwh'""),), ()), ('Call', ('Attr', ""project_data.get('consumption_data', {}) or {}"", 'get'), (('Const', ""'annual_consumption'""),), ()), ('Call', ('Attr', 'project_details', 'get'), (('Const', ""'annual_consumption_kwh'""),), ()), ('Call', ('Attr', 'project_details', 'get'), (('Const', ""'annual_consumption_kwh_yr'""),), ())))","('BoolOp', 'Or', 9)","analysis_results,project_data,project_details",annual_consumption = (
.\analysis.py,8890,annual_consumption,"('BoolOp', 'Or', (('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_consumption_kwh'""), ('Const', '0.0')), ()), ('Call', ('Attr', 'results', 'get'), (('Const', ""'consumption_yearly_kwh'""), ('Const', '0.0')), ()), ('Call', ('Attr', 'results', 'get'), (('Const', ""'stromverbrauch_jahr_kwh'""), ('Const', '0.0')), ()), ('Mult', (('Const', '0.8'), ('Name', 'annual_production')))))","('BoolOp', 'Or', 4)","annual_production,results",annual_consumption = (
.\calculations.py,1088,annual_consumption,"('Call', ('Attr', 'base_data', 'get'), (('Const', ""'annual_consumption_kwh'""), ('Const', '5000')), ())","('Call', 2, 0)",base_data,"annual_consumption = base_data.get(""annual_consumption_kwh"", 5000)"
.\live_preview_helpers.py,49,annual_consumption,"('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_consumption_kwh'""), ('Const', '3000.0')), ())","('Call', 2, 0)",results,"annual_consumption = results.get('annual_consumption_kwh', 3000.0)"
.\pdf_template_engine\placeholders.py,755,annual_consumption,"('Other', 'IfExp')","('Other', 'IfExp')","annual_consumption,combo",annual_consumption = combo if combo > 0 else annual_consumption
.\crm.py,549,annual_consumption_kwh,"('Call', ('Attr', 'col_cons_hh', 'number_input'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'annual_consumption_kwh_label'""), ('Const', ""'Jahresverbrauch Haushalt (kWh)'"")), ()),), (('min_value', ('Const', '0.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'project_data_form', 'get'), (('Const', ""'annual_consumption_kwh_yr'""), ('Const', '0.0')), ()),), ()))))","('Call', 1, 2)","col_cons_hh,float,get_text_crm,project_data_form,texts","annual_consumption_kwh = col_cons_hh.number_input(get_text_crm(texts, ""annual_consumption_kwh_label"", ""Jahresverbrauch Haushalt (kWh)""), min_value=0.0, value=float(project_data_form.get('annual_consumption_kwh_yr', 0.0)))"
.\live_calculation_engine.py,16,annual_consumption_kwh,"('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_consumption_kwh'""), ('Const', '0')), ())","('Call', 2, 0)",results,"annual_consumption_kwh = results.get('annual_consumption_kwh', 0)"
.\analysis.py,8352,annual_cost,"('Const', '0')","('Const',)",,annual_cost = 0
.\pdf_template_engine\placeholders.py,1025,annual_cost,"('Mult', (('Const', '12.0'), ('Name', 'monthly_cost')))","('Mult', (('Const',), ('Name',)))",monthly_cost,annual_cost = monthly_cost * 12.0
.\analysis.py,8356,annual_cost,"('Other', 'IfExp')","('Other', 'IfExp')","loan_result,locals",annual_cost = (
.\analysis.py,8369,annual_cost,"('Other', 'IfExp')","('Other', 'IfExp')","leasing_result,locals",annual_cost = (
.\calculations.py,3212,annual_electricity_cost_savings_self_consumption_year1,"('Const', '0.0')","('Const',)",,annual_electricity_cost_savings_self_consumption_year1 = 0.0
.\calculations.py,3214,annual_electricity_cost_savings_self_consumption_year1,"('Mult', (('Name', 'eigenverbrauch_pro_jahr_kwh'), ('Name', 'electricity_price_kwh')))","('Mult', (('Name',), ('Name',)))","eigenverbrauch_pro_jahr_kwh,electricity_price_kwh",annual_electricity_cost_savings_self_consumption_year1 = (
.\live_preview_helpers.py,64,annual_feed_in_revenue,"('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_feedin_revenue_euro'""), ('Const', '0.0')), ())","('Call', 2, 0)",results,"annual_feed_in_revenue = results.get('annual_feedin_revenue_euro', 0.0)"
.\live_preview_helpers.py,140,annual_feed_in_revenue,"('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'annual_feed_in_revenue_euro'""), ('Const', '0.0')), ())","('Call', 2, 0)",results_for_display,"annual_feed_in_revenue = results_for_display.get('annual_feed_in_revenue_euro', 0.0)"
.\live_calculation_engine.py,54,annual_feed_in_revenue,"('Mult', (('Div', ('Name', 'feed_in_tariff_ct_kwh'), ('Const', '100')), ('Name', 'surplus_for_feed_in')))","('Mult', (('Div', ('Name',), ('Const',)), ('Name',)))","feed_in_tariff_ct_kwh,surplus_for_feed_in",annual_feed_in_revenue = surplus_for_feed_in * (feed_in_tariff_ct_kwh / 100)
.\pdf_template_engine\placeholders.py,2005,annual_feed_rev,"('BoolOp', 'Or', (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'annual_feed_in_revenue_year1'""),), ()), ('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'annual_feedin_revenue_euro'""),), ())))","('BoolOp', 'Or', 2)",analysis_results,annual_feed_rev = (
.\pdf_template_engine\placeholders.py,2040,annual_feed_rev,"('Name', 'calc_rev')","('Name',)",calc_rev,annual_feed_rev = calc_rev
.\analysis.py,2312,annual_financial_benefit_year1_val,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'annual_financial_benefit_year1'""), ('Const', '0.0')), ())","('Call', 2, 0)",analysis_results,annual_financial_benefit_year1_val = analysis_results.get(
.\analysis.py,2319,annual_financial_benefit_year1_val,"('Const', '700.0')","('Const',)",,annual_financial_benefit_year1_val = 700.0
.\calculations.py,1609,annual_loss,"('Call', ('Attr', 'np', 'mean'), (('Name', 'shading_matrix'),), ())","('Call', 1, 0)","np,shading_matrix",annual_loss = np.mean(shading_matrix)
.\analysis.py,5824,annual_loss,"('Call', ('Attr', 'shading_analysis', 'get'), (('Const', ""'annual_shading_loss'""), ('Const', '0.0')), ())","('Call', 2, 0)",shading_analysis,"annual_loss = shading_analysis.get(""annual_shading_loss"", 0.0)"
.\calculations.py,651,annual_loss,"('Mult', (('Const', '1700'), ('Sub', ('Name', 'initial_power'), ('Name', 'current_power'))))","('Mult', (('Const',), ('Sub', ('Name',), ('Name',))))","current_power,initial_power",annual_loss = (initial_power - current_power) * 1700  # kWh
.\calculations.py,3389,annual_maintenance_costs_eur_year1_calc,"('Add', (('Mult', (('Name', 'maintenance_variable_pa_kwp'), ('Subscript', ('Name', 'results'), ('Const', ""'anlage_kwp'"")))), ('Name', 'maintenance_fixed_pa')))","('Add', (('Mult', (('Name',), ('Subscript',))), ('Name',)))","maintenance_fixed_pa,maintenance_variable_pa_kwp,results",annual_maintenance_costs_eur_year1_calc = maintenance_fixed_pa + (
.\calculations.py,3385,annual_maintenance_costs_eur_year1_calc,"('Const', '0.0')","('Const',)",,annual_maintenance_costs_eur_year1_calc = 0.0
.\calculations.py,3393,annual_maintenance_costs_eur_year1_calc,"('Mult', (('Name', 'base_matrix_price_netto'), ('Name', 'maintenance_base_percent_of_invest')))","('Mult', (('Name',), ('Name',)))","base_matrix_price_netto,maintenance_base_percent_of_invest",annual_maintenance_costs_eur_year1_calc = (
.\heatpump_ui.py,561,annual_old_cost,"('Div', ('Mult', (('Name', 'electricity_price'), ('Name', 'heat_demand_kwh'))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Name',))), ('Const',))","electricity_price,heat_demand_kwh",annual_old_cost = heat_demand_kwh * electricity_price / 100
.\heatpump_ui.py,912,annual_old_cost,"('Div', ('Mult', (('Name', 'electricity_price'), ('Name', 'heat_demand_kwh'))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Name',))), ('Const',))","electricity_price,heat_demand_kwh",annual_old_cost = heat_demand_kwh * electricity_price / 100
.\heatpump_ui.py,557,annual_old_cost,"('Div', ('Mult', (('Name', 'gas_price'), ('Name', 'heat_demand_kwh'))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Name',))), ('Const',))","gas_price,heat_demand_kwh",annual_old_cost = heat_demand_kwh * gas_price / 100
.\heatpump_ui.py,908,annual_old_cost,"('Div', ('Mult', (('Name', 'gas_price'), ('Name', 'heat_demand_kwh'))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Name',))), ('Const',))","gas_price,heat_demand_kwh",annual_old_cost = heat_demand_kwh * gas_price / 100
.\heatpump_ui.py,559,annual_old_cost,"('Div', ('Mult', (('Name', 'heat_demand_kwh'), ('Name', 'oil_price'))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Name',))), ('Const',))","heat_demand_kwh,oil_price",annual_old_cost = heat_demand_kwh * oil_price / 100
.\heatpump_ui.py,910,annual_old_cost,"('Div', ('Mult', (('Name', 'heat_demand_kwh'), ('Name', 'oil_price'))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Name',))), ('Const',))","heat_demand_kwh,oil_price",annual_old_cost = heat_demand_kwh * oil_price / 100
.\pdf_template_engine\placeholders.py,660,annual_prod,"('BoolOp', 'Or', (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'annual_pv_production_kwh'""),), ()), ('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'annual_yield_kwh'""),), ()), ('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'sim_annual_yield_kwh'""),), ())))","('BoolOp', 'Or', 3)",analysis_results,annual_prod = (
.\analysis.py,3017,annual_prod,"('Call', ('Attr', 'system_data', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '10000')), ())","('Call', 2, 0)",system_data,"annual_prod = system_data.get(""annual_pv_production_kwh"", 10000)"
.\analysis.py,3049,annual_prod,"('Call', ('Attr', 'system_data', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '10000')), ())","('Call', 2, 0)",system_data,"annual_prod = system_data.get(""annual_pv_production_kwh"", 10000)"
.\pdf_template_engine\placeholders.py,762,annual_prod_float,"('Call', ('Name', 'float'), (('Name', 'annual_prod'),), ())","('Call', 1, 0)","annual_prod,float",annual_prod_float = float(annual_prod)
.\pdf_template_engine\placeholders.py,759,annual_prod_float,"('Const', 'None')","('Const',)",,annual_prod_float = None
.\pdf_template_engine\placeholders.py,764,annual_prod_float,"('Const', 'None')","('Const',)",,annual_prod_float = None
.\analysis.py,8883,annual_production,"('BoolOp', 'Or', (('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '0.0')), ()), ('Call', ('Attr', 'results', 'get'), (('Const', ""'jahresproduktion_kwh'""), ('Const', '0.0')), ()), ('Call', ('Attr', 'results', 'get'), (('Const', ""'pv_production_yearly_kwh'""), ('Const', '0.0')), ()), ('Const', '10000.0')))","('BoolOp', 'Or', 4)",results,annual_production = (
.\calculations.py,906,annual_production,"('Call', ('Attr', 'base_data', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '10000')), ())","('Call', 2, 0)",base_data,"annual_production = base_data.get(""annual_pv_production_kwh"", 10000)"
.\calculations.py,1733,annual_production,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '10000')), ())","('Call', 2, 0)",calc_results,"annual_production = calc_results.get(""annual_pv_production_kwh"", 10000)"
.\calculations.py,1921,annual_production,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '10000')), ())","('Call', 2, 0)",calc_results,"annual_production = calc_results.get(""annual_pv_production_kwh"", 10000)"
.\calculations.py,1242,annual_production,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '8000')), ())","('Call', 2, 0)",calc_results,"annual_production = calc_results.get(""annual_pv_production_kwh"", 8000)"
.\calculations.py,1318,annual_production,"('Call', ('Attr', 'lcoe_params', 'get'), (('Const', ""'annual_production'""), ('Const', '10000')), ())","('Call', 2, 0)",lcoe_params,"annual_production = lcoe_params.get(""annual_production"", 10000)"
.\calculations_extended.py,405,annual_production,"('Call', ('Attr', 'offer_data', 'get'), (('Const', ""'annual_production_kwh'""), ('Const', '0')), ())","('Call', 2, 0)",offer_data,"annual_production = offer_data.get(""annual_production_kwh"", 0)"
.\calculations.py,1121,annual_production,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'expected_annual_production'""), ('Const', '10000')), ())","('Call', 2, 0)",project_data,"annual_production = project_data.get(""expected_annual_production"", 10000)"
.\analysis.py,8986,annual_production,"('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '0.0')), ())","('Call', 2, 0)",results,"annual_production = results.get('annual_pv_production_kwh', 0.0)"
.\calculations.py,2246,annual_production_kwh,"('Call', ('Attr', ""data.get('outputs', {}).get('totals', {}).get('fixed', {})"", 'get'), (('Const', ""'E_y'""), ('Const', '0.0')), ())","('Call', 2, 0)",data,annual_production_kwh = (
.\live_calculation_engine.py,15,annual_production_kwh,"('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '0')), ())","('Call', 2, 0)",results,"annual_production_kwh = results.get('annual_pv_production_kwh', 0)"
.\live_preview_helpers.py,137,annual_production_kwh,"('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '0.0')), ())","('Call', 2, 0)",results_for_display,"annual_production_kwh = results_for_display.get('annual_pv_production_kwh', 0.0)"
.\calculations.py,2693,annual_pv_production_kwh_base,"('Const', '0.0')","('Const',)",,annual_pv_production_kwh_base = 0.0
.\calculations.py,2654,annual_pv_production_kwh_base,"('Mult', (('Name', 'specific_annual_yield_kwh_per_kwp_manual'), ('Subscript', ('Name', 'results'), ('Const', ""'anlage_kwp'""))))","('Mult', (('Name',), ('Subscript',)))","results,specific_annual_yield_kwh_per_kwp_manual",annual_pv_production_kwh_base = (
.\calculations.py,2607,annual_pv_production_kwh_base,"('Name', 'annual_prod_pvgis')","('Name',)",annual_prod_pvgis,annual_pv_production_kwh_base = annual_prod_pvgis
.\analysis.py,8792,annual_savings,"('BoolOp', 'Or', (('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_financial_benefit_year1'""), ('Const', '0.0')), ()), ('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_savings_consumption_eur'""), ('Const', '0.0')), ()), ('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_total_savings_euro'""), ('Const', '0.0')), ()), ('Call', ('Attr', 'results', 'get'), (('Const', ""'jahresersparnis_gesamt'""), ('Const', '0.0')), ()), ('Call', ('Attr', 'results', 'get'), (('Const', ""'total_annual_savings'""), ('Const', '0.0')), ()), ('Const', '0.0')))","('BoolOp', 'Or', 6)",results,annual_savings = (
.\analysis.py,376,annual_savings,"('Call', ('Name', 'compute_annual_savings'), (), (('annual_electricity_savings', ('Name', 'annual_electricity_savings')), ('annual_feedin_revenue', ('Name', 'annual_feedin_revenue')), ('default', ('Const', '0.0'))))","('Call', 0, 3)","annual_electricity_savings,annual_feedin_revenue,compute_annual_savings","annual_savings = compute_annual_savings(annual_feedin_revenue=annual_feedin_revenue, annual_electricity_savings=annual_electricity_savings, default=0.0)"
.\analysis.py,8806,annual_savings,"('Call', ('Name', 'compute_annual_savings'), (), (('annual_electricity_savings', ('Name', 'consumption_savings')), ('annual_feedin_revenue', ('Name', 'feed_in_revenue')), ('default', ('Const', '0.0'))))","('Call', 0, 3)","compute_annual_savings,consumption_savings,feed_in_revenue","annual_savings = compute_annual_savings(annual_feedin_revenue=feed_in_revenue, annual_electricity_savings=consumption_savings, default=0.0)"
.\live_preview_helpers.py,158,annual_savings,"('Call', ('Name', 'compute_annual_savings'), (), (('annual_feed_in_revenue', ('Name', 'annual_feed_in_revenue')), ('default', ('Const', '0.0')), ('electricity_costs_with_pv', ('Name', 'electricity_costs_with_pv')), ('electricity_costs_without_pv', ('Name', 'electricity_costs_without_pv'))))","('Call', 0, 4)","annual_feed_in_revenue,compute_annual_savings,electricity_costs_with_pv,electricity_costs_without_pv","annual_savings = compute_annual_savings(electricity_costs_without_pv=electricity_costs_without_pv, electricity_costs_with_pv=electricity_costs_with_pv, annual_feed_in_revenue=annual_feed_in_revenue, default=0.0)"
.\heatpump_ui.py,563,annual_savings,"('Call', ('Name', 'compute_annual_savings'), (), (('annual_hp_cost', ('Name', 'annual_hp_cost')), ('annual_old_cost', ('Name', 'annual_old_cost')), ('default', ('Const', '0.0'))))","('Call', 0, 3)","annual_hp_cost,annual_old_cost,compute_annual_savings","annual_savings = compute_annual_savings(annual_old_cost=annual_old_cost, annual_hp_cost=annual_hp_cost, default=0.0)"
.\heatpump_ui.py,914,annual_savings,"('Call', ('Name', 'compute_annual_savings'), (), (('annual_hp_cost', ('Name', 'annual_hp_cost')), ('annual_old_cost', ('Name', 'annual_old_cost')), ('default', ('Const', '0.0'))))","('Call', 0, 3)","annual_hp_cost,annual_old_cost,compute_annual_savings","annual_savings = compute_annual_savings(annual_old_cost=annual_old_cost, annual_hp_cost=annual_hp_cost, default=0.0)"
.\central_pdf_system.py,508,annual_savings,"('Call', ('Name', 'compute_annual_savings'), (), (('default', ('Const', ""'N/A'"")), ('results', ('Name', 'analysis_results'))))","('Call', 0, 2)","analysis_results,compute_annual_savings","annual_savings = compute_annual_savings(results=analysis_results, default='N/A')"
.\multi_offer_generator_old.py,860,annual_savings,"('Call', ('Name', 'compute_annual_savings'), (), (('default', ('Const', ""'N/A'"")), ('results', ('Name', 'results'))))","('Call', 0, 2)","compute_annual_savings,results","annual_savings = compute_annual_savings(results=results, default='N/A')"
.\calculations_extended.py,404,annual_savings,"('Call', ('Name', 'compute_annual_savings'), (), (('default', ('Const', '0')), ('results', ('Name', 'offer_data'))))","('Call', 0, 2)","compute_annual_savings,offer_data","annual_savings = compute_annual_savings(results=offer_data, default=0)"
.\analysis.py,370,annual_savings,"('Call', ('Name', 'compute_annual_savings'), (), (('default', ('Const', '0.0')), ('results', ('Name', 'results'))))","('Call', 0, 2)","compute_annual_savings,results","annual_savings = compute_annual_savings(results=results, default=0.0)"
.\live_preview_helpers.py,154,annual_savings,"('Call', ('Name', 'compute_annual_savings'), (), (('default', ('Const', '0.0')), ('results', ('Name', 'results_for_display'))))","('Call', 0, 2)","compute_annual_savings,results_for_display","annual_savings = compute_annual_savings(results=results_for_display, default=0.0)"
.\heatpump_ui.py,992,annual_savings,"('Call', ('Name', 'compute_annual_savings'), (), (('default', ('Name', 'annual_savings')), ('results', ('Name', 'integration_data'))))","('Call', 0, 2)","annual_savings,compute_annual_savings,integration_data","annual_savings = compute_annual_savings(results=integration_data, default=annual_savings)"
.\calculations.py,990,annual_savings,"('Mult', (('Name', 'peak_reduction_kw'), ('Name', 'power_price_per_kw')))","('Mult', (('Name',), ('Name',)))","peak_reduction_kw,power_price_per_kw",annual_savings = peak_reduction_kw * power_price_per_kw
.\calculations_heatpump.py,114,annual_savings,"('Sub', ('Name', 'annual_alternative_cost'), ('Name', 'annual_electricity_cost'))","('Sub', ('Name',), ('Name',))","annual_alternative_cost,annual_electricity_cost",annual_savings = annual_alternative_cost - annual_electricity_cost
.\heatpump_ui.py,990,annual_savings,"('Subscript', ('Name', 'economics_data'), ('Const', ""'annual_savings'""))","('Subscript',)",economics_data,annual_savings = economics_data['annual_savings']
.\calculations.py,4048,annual_savings_this_year,"('Mult', (('Attr', 'self', 'annual_savings'), ('Pow', ('Add', (('Attr', 'self', 'electricity_price_increase'), ('Const', '1'))), ('Sub', ('Name', 'year'), ('Const', '1')))))","('Mult', (('Attr',), ('Pow', ('Add', (('Attr',), ('Const',))), ('Sub', ('Name',), ('Const',)))))","self,year",annual_savings_this_year = self.annual_savings * ((1 + self.electricity_price_increase) ** (year - 1))
.\calculations.py,4089,annual_savings_this_year,"('Mult', (('Attr', 'self', 'annual_savings'), ('Pow', ('Add', (('Const', '1'), ('Name', 'optimistic_price_increase'))), ('Sub', ('Name', 'year'), ('Const', '1')))))","('Mult', (('Attr',), ('Pow', ('Add', (('Const',), ('Name',))), ('Sub', ('Name',), ('Const',)))))","optimistic_price_increase,self,year",annual_savings_this_year = self.annual_savings * ((1 + optimistic_price_increase) ** (year - 1))
.\analysis.py,6961,annual_total_costs_without_pv,"('Call', ('Name', '_get_baseline_annual_costs_without_pv'), (('Name', 'proj'), ('Call', ('Attr', 'proj', 'get'), (('Const', ""'project_details'""), ('Dict', ())), ()), ('Name', 'current_results')), ())","('Call', 3, 0)","_get_baseline_annual_costs_without_pv,current_results,proj",annual_total_costs_without_pv = _get_baseline_annual_costs_without_pv(
.\analysis.py,510,annual_total_costs_without_pv,"('Mult', (('Add', (('Name', 'heating_costs_monthly'), ('Name', 'household_costs_monthly'))), ('Const', '12')))","('Mult', (('Add', (('Name',), ('Name',))), ('Const',)))","heating_costs_monthly,household_costs_monthly",annual_total_costs_without_pv = (household_costs_monthly + heating_costs_monthly) * 12
.\analysis.py,1814,any_bar,"('Const', 'False')","('Const',)",,any_bar = False
.\analysis.py,1817,any_bar,"('Const', 'True')","('Const',)",,any_bar = True
.\pdf_generator.py,2152,any_optional_component_rendered,"('Const', 'False')","('Const',)",,any_optional_component_rendered = False
.\pdf_generator.py,2157,any_optional_component_rendered,"('Const', 'True')","('Const',)",,any_optional_component_rendered = True
.\notwendig oder nicht\wichtig\repo_porter_select.py,112,ap,"('Call', ('Attr', 'argparse', 'ArgumentParser'), (), (('description', ('Const', ""'Filtere out_porting auf ausgewählte DEF-Blöcke.'"")),))","('Call', 0, 1)",argparse,"ap = argparse.ArgumentParser(description=""Filtere out_porting auf ausgewählte DEF-Blöcke."")"
.\tools\repo_porter_select.py,112,ap,"('Call', ('Attr', 'argparse', 'ArgumentParser'), (), (('description', ('Const', ""'Filtere out_porting auf ausgewählte DEF-Blöcke.'"")),))","('Call', 0, 1)",argparse,"ap = argparse.ArgumentParser(description=""Filtere out_porting auf ausgewählte DEF-Blöcke."")"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,420,ap,"('Call', ('Attr', 'argparse', 'ArgumentParser'), (), (('description', ('Const', ""'Kakerlake Ultra Cleaner v2 (debuggable)'"")),))","('Call', 0, 1)",argparse,"ap=argparse.ArgumentParser(description=""Kakerlake Ultra Cleaner v2 (debuggable)"")"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,420,ap,"('Call', ('Attr', 'argparse', 'ArgumentParser'), (), (('description', ('Const', ""'Kakerlake Ultra Cleaner v2 (debuggable)'"")),))","('Call', 0, 1)",argparse,"ap=argparse.ArgumentParser(description=""Kakerlake Ultra Cleaner v2 (debuggable)"")"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,410,ap,"('Call', ('Attr', 'argparse', 'ArgumentParser'), (), (('description', ('Const', ""'Kakerlake Ultra Cleaner v3 (stabilisiert)'"")),))","('Call', 0, 1)",argparse,"ap=argparse.ArgumentParser(description=""Kakerlake Ultra Cleaner v3 (stabilisiert)"")"
.\dev_tools\kakerlake_ultra_cleaner.py,602,ap,"('Call', ('Attr', 'argparse', 'ArgumentParser'), (), (('description', ('Const', ""'Kakerlake Ultra Cleaner'"")),))","('Call', 0, 1)",argparse,"ap=argparse.ArgumentParser(description=""Kakerlake Ultra Cleaner"")"
.\mnt\data\kakerlake_ultra_cleaner.py,602,ap,"('Call', ('Attr', 'argparse', 'ArgumentParser'), (), (('description', ('Const', ""'Kakerlake Ultra Cleaner'"")),))","('Call', 0, 1)",argparse,"ap=argparse.ArgumentParser(description=""Kakerlake Ultra Cleaner"")"
.\tools\kakerlake_ultra_cleaner.py,603,ap,"('Call', ('Attr', 'argparse', 'ArgumentParser'), (), (('description', ('Const', ""'Kakerlake Ultra Cleaner'"")),))","('Call', 0, 1)",argparse,"ap=argparse.ArgumentParser(description=""Kakerlake Ultra Cleaner"")"
.\pdf_atomizer.py,390,ap,"('Call', ('Attr', 'argparse', 'ArgumentParser'), (), (('description', ('Const', ""'PDF Atomizer'"")),))","('Call', 0, 1)",argparse,"ap = argparse.ArgumentParser(description=""PDF Atomizer"")"
.\notwendig oder nicht\wichtig\repo_porter.py,602,ap,"('Call', ('Attr', 'argparse', 'ArgumentParser'), (), (('description', ('Const', ""'Port fehlende Funktionen/Klassen/Methoden von SRC → DST (formatgetreu).'"")),))","('Call', 0, 1)",argparse,"ap = argparse.ArgumentParser(description=""Port fehlende Funktionen/Klassen/Methoden von SRC → DST (formatgetreu)."")"
.\tools\repo_porter.py,602,ap,"('Call', ('Attr', 'argparse', 'ArgumentParser'), (), (('description', ('Const', ""'Port fehlende Funktionen/Klassen/Methoden von SRC → DST (formatgetreu).'"")),))","('Call', 0, 1)",argparse,"ap = argparse.ArgumentParser(description=""Port fehlende Funktionen/Klassen/Methoden von SRC → DST (formatgetreu)."")"
.\notwendig oder nicht\wichtig\repo_to_json.py,313,ap,"('Call', ('Attr', 'argparse', 'ArgumentParser'), (), (('description', ('Const', ""'Wandle einen Ordner in eine JSON/JSON.GZ mit Datei-Inhalten um.'"")),))","('Call', 0, 1)",argparse,"ap = argparse.ArgumentParser(description=""Wandle einen Ordner in eine JSON/JSON.GZ mit Datei-Inhalten um."")"
.\tools\repo_to_json.py,313,ap,"('Call', ('Attr', 'argparse', 'ArgumentParser'), (), (('description', ('Const', ""'Wandle einen Ordner in eine JSON/JSON.GZ mit Datei-Inhalten um.'"")),))","('Call', 0, 1)",argparse,"ap = argparse.ArgumentParser(description=""Wandle einen Ordner in eine JSON/JSON.GZ mit Datei-Inhalten um."")"
.\notwendig oder nicht\wichtig\repo_to_json.py,326,ap,"('Call', ('Name', 'build_parser'), (), ())","('Call', 0, 0)",build_parser,ap = build_parser()
.\tools\repo_to_json.py,326,ap,"('Call', ('Name', 'build_parser'), (), ())","('Call', 0, 0)",build_parser,ap = build_parser()
.\calculations.py,2369,app_debug_mode_is_enabled,"('Call', ('Attr', 'global_constants', 'get'), (('Const', ""'app_debug_mode_enabled'""), ('Const', 'False')), ())","('Call', 2, 0)",global_constants,"app_debug_mode_is_enabled = global_constants.get(""app_debug_mode_enabled"", False)"
.\calculations.py,2371,app_debug_mode_is_enabled,"('Const', 'False')","('Const',)",,app_debug_mode_is_enabled = False
.\pdf_generator.py,487,append_after_main7,"('Call', ('Name', 'bool'), (('Call', ('Attr', 'inclusion_options or {}', 'get'), (('Const', ""'append_additional_pages_after_main7'""), ('Const', 'False')), ()),), ())","('Call', 1, 0)","bool,inclusion_options","append_after_main7 = bool((inclusion_options or {}).get(""append_additional_pages_after_main7"", False))"
.\pdf_generator.py,489,append_after_main7,"('Const', 'False')","('Const',)",,append_after_main7 = False
.\crm_calendar_ui.py,109,appointments,"('Call', ('Attr', 'self', '_get_appointments_for_month'), (('Attr', 'current_date', 'year'), ('Attr', 'current_date', 'month')), ())","('Call', 2, 0)","current_date,self","appointments = self._get_appointments_for_month(current_date.year, current_date.month)"
.\crm_calendar_ui.py,300,appointments,"('Call', ('Attr', 'self', '_get_filtered_appointments'), (('Name', 'filter_type'), ('Name', 'filter_period'), ('Name', 'filter_status')), ())","('Call', 3, 0)","filter_period,filter_status,filter_type,self","appointments = self._get_filtered_appointments(filter_type, filter_period, filter_status)"
.\crm_calendar_ui.py,391,appointments,"('List', ())","('List', 0)",,appointments = []
.\crm_calendar_ui.py,471,appointments,"('List', ())","('List', 0)",,appointments = []
.\crm_calendar_ui.py,310,apt_type,"('Call', ('Attr', 'self.appointment_types', 'get'), (('Subscript', ('Name', 'appointment'), ('Const', ""'type'"")), ('Subscript', ('Attr', 'self', 'appointment_types'), ('Const', ""'consultation'""))), ())","('Call', 2, 0)","appointment,self","apt_type = self.appointment_types.get(appointment['type'], self.appointment_types['consultation'])"
.\crm_calendar_ui.py,146,apt_type,"('Call', ('Attr', 'self.appointment_types', 'get'), (('Subscript', ('Name', 'apt'), ('Const', ""'type'"")), ('Subscript', ('Attr', 'self', 'appointment_types'), ('Const', ""'consultation'""))), ())","('Call', 2, 0)","apt,self","apt_type = self.appointment_types.get(apt['type'], self.appointment_types['consultation'])"
.\dev_tools\kakerlake_ultra_cleaner.py,610,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args=ap.parse_args(); out=ensure_dir(args.out)
.\dev_tools\kakerlake_ultra_cleaner_v2.py,424,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args=ap.parse_args(); ensure_dir(args.out)
.\dev_tools\kakerlake_ultra_cleaner_v3.py,414,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args=ap.parse_args(); ensure_dir(args.out)
.\mnt\data\kakerlake_ultra_cleaner.py,610,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args=ap.parse_args(); out=ensure_dir(args.out)
.\mnt\data\kakerlake_ultra_cleaner_v2.py,424,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args=ap.parse_args(); ensure_dir(args.out)
.\notwendig oder nicht\wichtig\repo_porter.py,615,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args = ap.parse_args()
.\notwendig oder nicht\wichtig\repo_porter_select.py,117,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args = ap.parse_args()
.\notwendig oder nicht\wichtig\repo_to_json.py,327,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args = ap.parse_args()
.\pdf_atomizer.py,396,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args = ap.parse_args()
.\tools\kakerlake_ultra_cleaner.py,611,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args=ap.parse_args(); out=ensure_dir(args.out)
.\tools\repo_porter.py,615,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args = ap.parse_args()
.\tools\repo_porter_select.py,117,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args = ap.parse_args()
.\tools\repo_to_json.py,327,args,"('Call', ('Attr', 'ap', 'parse_args'), (), ())","('Call', 0, 0)",ap,args = ap.parse_args()
.\excel_eval.py,396,args,"('Call', ('Attr', 'p', 'parse_args'), (), ())","('Call', 0, 0)",p,args = p.parse_args()
.\pdf_erstellen_komplett.py,263,args,"('Subscript', ('Attr', 'sys', 'argv'), ('Other', 'Slice'))","('Subscript',)",sys,args = sys.argv[1:]
.\notwendig oder nicht\python_function_recipes.py,189,as_num,"('Call', ('Attr', 'pd', 'to_numeric'), (('Name', 'rng'),), (('errors', ('Const', ""'coerce'"")),))","('Call', 1, 1)","pd,rng","as_num = pd.to_numeric(rng, errors='coerce')"
.\notwendig oder nicht\python_function_recipes.py,164,as_num,"('Call', ('Attr', 'pd', 'to_numeric'), (('Name', 'rv'),), (('errors', ('Const', ""'coerce'"")),))","('Call', 1, 1)","pd,rv","as_num = pd.to_numeric(rv, errors='coerce')"
.\pdf_template_engine\placeholders.py,1438,attrs,"('BoolOp', 'Or', (('Call', ('Name', '_list_attrs'), (('Call', ('Name', 'int'), (('Name', 'pid'),), ()),), ()), ('List', ())))","('BoolOp', 'Or', 2)","_list_attrs,int,pid",attrs = _list_attrs(int(pid)) or []
.\admin_product_attributes_ui.py,48,attrs,"('Call', ('Name', 'list_attributes'), (('Call', ('Name', 'int'), (('Subscript', ('Name', 'prod'), ('Const', ""'id'"")),), ()),), ())","('Call', 1, 0)","int,list_attributes,prod",attrs = list_attributes(int(prod['id']))
.\product_attributes.py,202,attrs,"('Call', ('Name', 'list_attributes'), (('Name', 'pid'),), ())","('Call', 1, 0)","list_attributes,pid",attrs = list_attributes(pid)
.\pdf_template_engine\placeholders.py,1436,attrs,"('List', ())","('List', 0)",,attrs = []
.\pdf_template_engine\placeholders.py,1440,attrs,"('List', ())","('List', 0)",,attrs = []
.\admin_panel.py,831,attrs_list_q,"('BoolOp', 'Or', (('Call', ('Name', 'pa_list_attributes'), (('Name', 'selected_pid'),), ()), ('List', ())))","('BoolOp', 'Or', 2)","pa_list_attributes,selected_pid",attrs_list_q = pa_list_attributes(selected_pid) or []
.\admin_panel.py,833,attrs_list_q,"('List', ())","('List', 0)",,attrs_list_q = []
.\calculations.py,3273,autarkiegrad,"('Const', '0.0')","('Const',)",,autarkiegrad = 0.0
.\calculations.py,3271,autarkiegrad,"('Div', ('Name', 'eigenverbrauch_pro_jahr_kwh'), ('Add', (('Name', 'eigenverbrauch_pro_jahr_kwh'), ('Name', 'grid_bezug_kwh'))))","('Div', ('Name',), ('Add', (('Name',), ('Name',))))","eigenverbrauch_pro_jahr_kwh,grid_bezug_kwh",autarkiegrad = eigenverbrauch_pro_jahr_kwh / (eigenverbrauch_pro_jahr_kwh + grid_bezug_kwh)
.\pdf_widgets.py,245,available_charts,"('List', (('Const', ""'monthly_generation_chart'""), ('Const', ""'deckungsgrad_chart'""), ('Const', ""'cost_savings_chart'""), ('Const', ""'amortization_chart'"")))","('List', 4)",,available_charts = [
.\multi_offer_generator_old.py,1099,available_charts,"('List', (('Const', ""'monthly_generation_chart'""), ('Const', ""'deckungsgrad_chart'""), ('Const', ""'cost_savings_chart'""), ('Const', ""'amortization_chart'""), ('Const', ""'co2_savings_chart'"")))","('List', 5)",,available_charts = [
.\multi_offer_generator.py,1039,available_charts,"('List', ())","('List', 0)",,available_charts = []
.\multi_offer_generator.py,1043,available_charts,"('Name', 'chart_keys')","('Name',)",chart_keys,available_charts = chart_keys
.\analysis.py,7755,available_sections,"('Call', ('Name', 'list'), (('Call', ('Attr', 'financing_data', 'keys'), (), ()),), ())","('Call', 1, 0)","financing_data,list",available_sections = list(financing_data.keys())
.\multi_offer_generator.py,547,available_sections,"('Dict', (('KV', ('Const', ""'CO2Savings'""), ('Const', ""'6. CO₂-Einsparung'"")), ('KV', ('Const', ""'CostDetails'""), ('Const', ""'3. Kostenaufstellung'"")), ('KV', ('Const', ""'Economics'""), ('Const', ""'4. Wirtschaftlichkeit'"")), ('KV', ('Const', ""'FutureAspects'""), ('Const', ""'8. Zukunftsaspekte'"")), ('KV', ('Const', ""'ProjectOverview'""), ('Const', ""'1. Projektübersicht'"")), ('KV', ('Const', ""'SimulationDetails'""), ('Const', ""'5. Simulation'"")), ('KV', ('Const', ""'TechnicalComponents'""), ('Const', ""'2. Systemkomponenten'"")), ('KV', ('Const', ""'Visualizations'""), ('Const', ""'7. Grafiken'""))))","('Dict', 8)",,available_sections = {
.\product_attributes.py,253,aval,"('Call', ('Attr', ""row.get('attribute_value') or ''"", 'strip'), (), ())","('Call', 0, 0)",row,aval = (row.get('attribute_value') or '').strip()
.\admin_product_attributes_ui.py,63,aval,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Wert'""),), ())","('Call', 1, 0)",st,"aval = st.text_input(""Wert"")"
.\pdf_template_engine\placeholders.py,1754,aval,"('Call', ('Name', '_get_attr_any'), (('Name', 'inv_id'), ('List', (('Const', ""'inverter_backup_capable'""), ('Const', ""'backup'""), ('Const', ""'notstrom'""), ('Const', ""'notstromfaehig'""), ('Const', ""'ersatzstrom'"")))), ())","('Call', 2, 0)","_get_attr_any,inv_id","aval = _get_attr_any(inv_id, [""inverter_backup_capable"", ""backup"", ""notstrom"", ""notstromfaehig"", ""ersatzstrom""])"
.\pdf_template_engine\placeholders.py,1762,aval,"('Call', ('Name', '_get_attr_any'), (('Name', 'inv_id'), ('List', (('Const', ""'inverter_guarantee_text'""), ('Const', ""'garantie'""), ('Const', ""'garantie_text'""), ('Const', ""'warranty_text'"")))), ())","('Call', 2, 0)","_get_attr_any,inv_id","aval = _get_attr_any(inv_id, [""inverter_guarantee_text"", ""garantie"", ""garantie_text"", ""warranty_text""])"
.\pdf_template_engine\placeholders.py,1730,aval,"('Call', ('Name', '_get_attr_any'), (('Name', 'inv_id'), ('List', (('Const', ""'inverter_phases'""), ('Const', ""'phasen'""), ('Const', ""'phases'""), ('Const', ""'wr_phasen'"")))), ())","('Call', 2, 0)","_get_attr_any,inv_id","aval = _get_attr_any(inv_id, [""inverter_phases"", ""phasen"", ""phases"", ""wr_phasen""])"
.\pdf_template_engine\placeholders.py,1740,aval,"('Call', ('Name', '_get_attr_any'), (('Name', 'inv_id'), ('List', (('Const', ""'inverter_shading_management'""), ('Const', ""'shade_management'""), ('Const', ""'shading_management'""), ('Const', ""'schattenmanagement'"")))), ())","('Call', 2, 0)","_get_attr_any,inv_id","aval = _get_attr_any(inv_id, [""inverter_shading_management"", ""shade_management"", ""shading_management"", ""schattenmanagement""])"
.\pdf_template_engine\placeholders.py,1758,aval,"('Call', ('Name', '_get_attr_any'), (('Name', 'inv_id'), ('List', (('Const', ""'inverter_smart_home_integration'""), ('Const', ""'smart_home'""), ('Const', ""'smarthome'""), ('Const', ""'smart home'"")))), ())","('Call', 2, 0)","_get_attr_any,inv_id","aval = _get_attr_any(inv_id, [""inverter_smart_home_integration"", ""smart_home"", ""smarthome"", ""smart home""])"
.\pdf_template_engine\placeholders.py,1724,aval,"('Call', ('Name', '_get_attr_any'), (('Name', 'inv_id'), ('List', (('Const', ""'inverter_type'""), ('Const', ""'wr_typ'""), ('Const', ""'typ wechselrichter'""), ('Const', ""'typ'""), ('Const', ""'inverter_typ'"")))), ())","('Call', 2, 0)","_get_attr_any,inv_id","aval = _get_attr_any(inv_id, ["
.\pdf_template_engine\placeholders.py,1953,aval,"('Call', ('Name', '_get_attr_any_sto'), (('Name', 'sto_id'), ('List', (('Const', ""'dod_percent'""), ('Const', ""'dod'""), ('Const', ""'entladetiefe'"")))), ())","('Call', 2, 0)","_get_attr_any_sto,sto_id","aval = _get_attr_any_sto(sto_id, [""dod_percent"", ""dod"", ""entladetiefe""])"
.\pdf_template_engine\placeholders.py,1959,aval,"('Call', ('Name', '_get_attr_any_sto'), (('Name', 'sto_id'), ('List', (('Const', ""'max_cycles'""), ('Const', ""'zyklen'""), ('Const', ""'cycle_count'"")))), ())","('Call', 2, 0)","_get_attr_any_sto,sto_id","aval = _get_attr_any_sto(sto_id, [""max_cycles"", ""zyklen"", ""cycle_count""])"
.\pdf_template_engine\placeholders.py,1940,aval,"('Call', ('Name', '_get_attr_any_sto'), (('Name', 'sto_id'), ('List', (('Const', ""'storage_backup_text'""), ('Const', ""'backup'""), ('Const', ""'notstrom'""), ('Const', ""'ersatzstrom'""), ('Const', ""'reserve'"")))), ())","('Call', 2, 0)","_get_attr_any_sto,sto_id","aval = _get_attr_any_sto(sto_id, [""storage_backup_text"", ""backup"", ""notstrom"", ""ersatzstrom"", ""reserve""])"
.\pdf_template_engine\placeholders.py,1926,aval,"('Call', ('Name', '_get_attr_any_sto'), (('Name', 'sto_id'), ('List', (('Const', ""'storage_extension_module_size_kwh'""), ('Const', ""'extension_module_kwh'""), ('Const', ""'expansion_module'""), ('Const', ""'erweiterungsmodul'""), ('Const', ""'erweiterungsmodul_kwh'"")))), ())","('Call', 2, 0)","_get_attr_any_sto,sto_id","aval = _get_attr_any_sto(sto_id, ["
.\pdf_template_engine\placeholders.py,1933,aval,"('Call', ('Name', '_get_attr_any_sto'), (('Name', 'sto_id'), ('List', (('Const', ""'storage_max_size_kwh'""), ('Const', ""'max_capacity_kwh'""), ('Const', ""'max_size_kwh'""), ('Const', ""'max_speichergroesse'""), ('Const', ""'max_speichergröße'""), ('Const', ""'max_storage_size'""), ('Const', ""'max. speichergröße'"")))), ())","('Call', 2, 0)","_get_attr_any_sto,sto_id","aval = _get_attr_any_sto(sto_id, ["
.\pdf_template_engine\placeholders.py,1944,aval,"('Call', ('Name', '_get_attr_any_sto'), (('Name', 'sto_id'), ('List', (('Const', ""'storage_outdoor_capability'""), ('Const', ""'outdoor'""), ('Const', ""'outdoorfaehig'""), ('Const', ""'outdoor_fähig'"")))), ())","('Call', 2, 0)","_get_attr_any_sto,sto_id","aval = _get_attr_any_sto(sto_id, [""storage_outdoor_capability"", ""outdoor"", ""outdoorfaehig"", ""outdoor_fähig""])"
.\pdf_template_engine\placeholders.py,1948,aval,"('Call', ('Name', '_get_attr_any_sto'), (('Name', 'sto_id'), ('List', (('Const', ""'storage_warranty_text'""), ('Const', ""'garantie_text'""), ('Const', ""'warranty_text'""), ('Const', ""'garantie'"")))), ())","('Call', 2, 0)","_get_attr_any_sto,sto_id","aval = _get_attr_any_sto(sto_id, [""storage_warranty_text"", ""garantie_text"", ""warranty_text"", ""garantie""])"
.\analysis.py,1872,az,"('BoolOp', 'Or', (('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'stromkosten_heizung_euro_jahr'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","_parse_float,project_data","az = _parse_float(project_data.get(""stromkosten_heizung_euro_jahr"")) or 0.0"
.\analysis.py,1889,az,"('BoolOp', 'Or', (('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'stromkosten_heizung_euro_jahr'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","_parse_float,project_details","az = _parse_float(project_details.get(""stromkosten_heizung_euro_jahr"")) or 0.0"
.\tools\import_module_attributes_generic.py,515,b,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,b = f.read()
.\pdf_styles.py,654,b,"('Call', ('Name', 'int'), (('Mult', (('Const', '235'), ('Sub', ('Const', '1'), ('Mult', (('Div', ('Name', 'y'), ('Name', 'height')), ('Name', 'opacity')))))),), ())","('Call', 1, 0)","height,int,opacity,y",b = int(235 * (1 - y / height * opacity))
.\pdf_generator.py,614,b,"('Call', ('Name', 'int'), (('Subscript', ('Name', '_hex'), ('Other', 'Slice')), ('Const', '16')), ())","('Call', 2, 0)","_hex,int","r = int(_hex[1:3], 16); g = int(_hex[3:5], 16); b = int(_hex[5:7], 16)"
.\pdf_generator.py,615,b,"('Call', ('Name', 'min'), (('Const', '255'), ('Add', (('Const', '16'), ('Name', 'b')))), ())","('Call', 2, 0)","b,min","b = min(255, b + 16)  # +16 Blauanteil"
.\pdf_template_engine\dynamic_overlay.py,184,b,"('Div', ('BitAnd', ('Name', 'value'), ('Const', '255')), ('Const', '255.0'))","('Div', ('BitAnd', ('Name',), ('Const',)), ('Const',))",value,b = (value & 0xFF) / 255.0
.\pdf_template_engine\dynamic_overlay.py,190,b64,"('BoolOp', 'Or', (('Call', ('Attr', 'dynamic_data', 'get'), (('Const', ""'company_logo_b64'""),), ()), ('Const', ""''"")))","('BoolOp', 'Or', 2)",dynamic_data,"b64 = dynamic_data.get(""company_logo_b64"") or """""
.\tools\import_module_attributes_generic.py,517,b64,"('Call', ('Attr', 'base64.b64encode(b)', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)","b,base64",b64 = base64.b64encode(b).decode('utf-8')
.\components\progress_demo.py,134,background_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Hintergrund'""), ('Const', ""'#f1f5f9'"")), ())","('Call', 2, 0)",st,"background_color = st.color_picker(""Hintergrund"", ""#f1f5f9"")"
.\components\progress_settings.py,62,background_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Hintergrundfarbe'""),), (('help', ('Const', ""'Hintergrundfarbe des Ladebalkens'"")), ('value', ('Attr', 'current_config', 'color_background'))))","('Call', 1, 2)","current_config,st",background_color = st.color_picker(
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_settings.py.insert.py,64,background_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Hintergrundfarbe'""),), (('help', ('Const', ""'Hintergrundfarbe des Ladebalkens'"")), ('value', ('Attr', 'current_config', 'color_background'))))","('Call', 1, 2)","current_config,st",background_color = st.color_picker(
.\notwendig oder nicht\wichtig\portings\patches\components\progress_settings.py.insert.py,65,background_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Hintergrundfarbe'""),), (('help', ('Const', ""'Hintergrundfarbe des Ladebalkens'"")), ('value', ('Attr', 'current_config', 'color_background'))))","('Call', 1, 2)","current_config,st",background_color = st.color_picker(
.\tools\out_selected\patches\components\progress_settings.py.insert.py,64,background_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Hintergrundfarbe'""),), (('help', ('Const', ""'Hintergrundfarbe des Ladebalkens'"")), ('value', ('Attr', 'current_config', 'color_background'))))","('Call', 1, 2)","current_config,st",background_color = st.color_picker(
.\tools\portings\patches\components\progress_settings.py.insert.py,65,background_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Hintergrundfarbe'""),), (('help', ('Const', ""'Hintergrundfarbe des Ladebalkens'"")), ('value', ('Attr', 'current_config', 'color_background'))))","('Call', 1, 2)","current_config,st",background_color = st.color_picker(
.\calculations.py,3961,backup_data,"('Dict', (('KV', ('Const', ""'project_data_summary'""), ('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Call', ('Attr', 'results', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '0')), ())), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '0')), ())), ('KV', ('Const', ""'total_investment_brutto'""), ('Call', ('Attr', 'results', 'get'), (('Const', ""'total_investment_brutto'""), ('Const', '0')), ()))))), ('KV', ('Const', ""'results'""), ('Call', ('Attr', 'results', 'copy'), (), ())), ('KV', ('Const', ""'timestamp'""), ('Name', 'timestamp'))))","('Dict', 3)","results,timestamp",backup_data = {
.\analysis.py,7079,backup_data,"('Dict', (('KV', ('Const', ""'project_data_summary'""), ('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '0')), ())), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '0')), ())), ('KV', ('Const', ""'total_investment_brutto'""), ('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'total_investment_brutto'""), ('Const', '0')), ()))))), ('KV', ('Const', ""'results'""), ('Call', ('Attr', 'results_for_display', 'copy'), (), ())), ('KV', ('Const', ""'timestamp'""), ('Name', 'timestamp'))))","('Dict', 3)","results_for_display,timestamp",backup_data = {
.\doc_output.py,306,bar_width,"('Call', ('Attr', 'st', 'slider'), (('Const', ""' Balken-Breite'""), ('Const', '0.3'), ('Const', '1.0'), ('Const', '0.6'), ('Const', '0.1')), (('key', ('Const', ""'pdf_bar_width'"")),))","('Call', 5, 1)",st,"bar_width = st.slider("" Balken-Breite"", 0.3, 1.0, 0.6, 0.1, key=""pdf_bar_width"")"
.\crm_pipeline_ui.py,481,bar_width,"('Call', ('Name', 'max'), (('Const', '10'), ('Call', ('Name', 'int'), (('Name', 'conversion'),), ())), ())","('Call', 2, 0)","conversion,int,max","bar_width = max(10, int(conversion))"
.\pdf_widgets.py,274,base,"('BoolOp', 'Or', (('Call', ('Attr', 'base', 'strip'), (('Const', ""'-_'""),), ()), ('Const', ""'custom'"")))","('BoolOp', 'Or', 2)",base,"base = base.strip(""-_"") or ""custom"""
.\tools\import_module_attributes_generic.py,37,base,"('BoolOp', 'Or', (('Call', ('Name', '_pdf_canonical_map'), (), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",_pdf_canonical_map,base = _pdf_canonical_map() or {}
.\pdf_widgets.py,273,base,"('Call', ('Attr', ""''"", 'join'), (('Other', 'GeneratorExp'),), ())","('Call', 1, 0)","ch,section_name","base = """".join(ch.lower() if (ch.isalnum() or ch in ""-_"") else ""-"" for ch in section_name.strip())"
.\pdf_template_engine\dynamic_overlay.py,954,base,"('Call', ('Attr', 'PageObject', 'create_blank_page'), (), (('height', ('Name', 'bh')), ('width', ('Name', 'bw'))))","('Call', 0, 2)","PageObject,bh,bw","base = PageObject.create_blank_page(width=bw, height=bh)  # type: ignore"
.\dev_tools\kakerlake_ultra_cleaner.py,49,base,"('Call', ('Attr', 'ast', 'unparse'), (('Attr', 'node', 'value'),), ())","('Call', 1, 0)","ast,node",try: base=ast.unparse(node.value)
.\mnt\data\kakerlake_ultra_cleaner.py,49,base,"('Call', ('Attr', 'ast', 'unparse'), (('Attr', 'node', 'value'),), ())","('Call', 1, 0)","ast,node",try: base=ast.unparse(node.value)
.\tools\kakerlake_ultra_cleaner.py,50,base,"('Call', ('Attr', 'ast', 'unparse'), (('Attr', 'node', 'value'),), ())","('Call', 1, 0)","ast,node",try: base=ast.unparse(node.value)
.\heatpump_pricing.py,228,base,"('Call', ('Attr', 'offer', 'get'), (('Const', ""'base'""), ('Dict', ())), ())","('Call', 2, 0)",offer,"base = offer.get(""base"", {})"
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,176,base,"('Call', ('Attr', 'offer', 'get'), (('Const', ""'base'""), ('Dict', ())), ())","('Call', 2, 0)",offer,"base = offer.get(""base"", {})"
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,176,base,"('Call', ('Attr', 'offer', 'get'), (('Const', ""'base'""), ('Dict', ())), ())","('Call', 2, 0)",offer,"base = offer.get(""base"", {})"
.\dev_tools\kakerlake_ultra_cleaner.py,327,base,"('Call', ('Attr', 'os.path.basename(path)', 'lower'), (), ())","('Call', 0, 0)","os,path",code=read_text(path); base=os.path.basename(path).lower()
.\dev_tools\kakerlake_ultra_cleaner.py,453,base,"('Call', ('Attr', 'os.path.basename(path)', 'lower'), (), ())","('Call', 0, 0)","os,path",code=read_text(path); base=os.path.basename(path).lower()
.\dev_tools\kakerlake_ultra_cleaner_v2.py,188,base,"('Call', ('Attr', 'os.path.basename(path)', 'lower'), (), ())","('Call', 0, 0)","os,path",base = os.path.basename(path).lower()
.\dev_tools\kakerlake_ultra_cleaner_v2.py,331,base,"('Call', ('Attr', 'os.path.basename(path)', 'lower'), (), ())","('Call', 0, 0)","os,path",code = read_text(path); base = os.path.basename(path).lower()
.\dev_tools\kakerlake_ultra_cleaner_v3.py,202,base,"('Call', ('Attr', 'os.path.basename(path)', 'lower'), (), ())","('Call', 0, 0)","os,path",base = os.path.basename(path).lower()
.\dev_tools\kakerlake_ultra_cleaner_v3.py,347,base,"('Call', ('Attr', 'os.path.basename(path)', 'lower'), (), ())","('Call', 0, 0)","os,path",code = read_text(path); base = os.path.basename(path).lower()
.\mnt\data\kakerlake_ultra_cleaner.py,327,base,"('Call', ('Attr', 'os.path.basename(path)', 'lower'), (), ())","('Call', 0, 0)","os,path",code=read_text(path); base=os.path.basename(path).lower()
.\mnt\data\kakerlake_ultra_cleaner.py,453,base,"('Call', ('Attr', 'os.path.basename(path)', 'lower'), (), ())","('Call', 0, 0)","os,path",code=read_text(path); base=os.path.basename(path).lower()
.\mnt\data\kakerlake_ultra_cleaner_v2.py,188,base,"('Call', ('Attr', 'os.path.basename(path)', 'lower'), (), ())","('Call', 0, 0)","os,path",base = os.path.basename(path).lower()
.\mnt\data\kakerlake_ultra_cleaner_v2.py,331,base,"('Call', ('Attr', 'os.path.basename(path)', 'lower'), (), ())","('Call', 0, 0)","os,path",code = read_text(path); base = os.path.basename(path).lower()
.\tools\kakerlake_ultra_cleaner.py,328,base,"('Call', ('Attr', 'os.path.basename(path)', 'lower'), (), ())","('Call', 0, 0)","os,path",code=read_text(path); base=os.path.basename(path).lower()
.\tools\kakerlake_ultra_cleaner.py,454,base,"('Call', ('Attr', 'os.path.basename(path)', 'lower'), (), ())","('Call', 0, 0)","os,path",code=read_text(path); base=os.path.basename(path).lower()
.\multi_offer_generator_old.py,1064,base,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'base_price'""), ('Const', '20000')), ())","('Call', 2, 0)",st,"base = st.session_state.get('base_price', 20000)"
.\excel_eval.py,252,base,"('Call', ('Name', 'Path'), (('Name', 'base'),), ())","('Call', 1, 0)","Path,base",base = Path(base)
.\heatpump_pricing.py,197,base,"('Call', ('Name', 'calculate_base_price'), (('Name', 'comps'),), ())","('Call', 1, 0)","calculate_base_price,comps",base = calculate_base_price(comps)
.\heatpump_ui.py,1139,base,"('Call', ('Name', 'calculate_base_price'), (('Name', 'comps'),), ())","('Call', 1, 0)","calculate_base_price,comps",base = calculate_base_price(comps)
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,144,base,"('Call', ('Name', 'calculate_base_price'), (('Name', 'comps'),), ())","('Call', 1, 0)","calculate_base_price,comps",base = calculate_base_price(comps)
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_ui.py.insert.py,63,base,"('Call', ('Name', 'calculate_base_price'), (('Name', 'comps'),), ())","('Call', 1, 0)","calculate_base_price,comps",base = calculate_base_price(comps)
.\notwendig oder nicht\wichtig\portings\patches\heatpump_ui.py.insert.py,64,base,"('Call', ('Name', 'calculate_base_price'), (('Name', 'comps'),), ())","('Call', 1, 0)","calculate_base_price,comps",base = calculate_base_price(comps)
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,144,base,"('Call', ('Name', 'calculate_base_price'), (('Name', 'comps'),), ())","('Call', 1, 0)","calculate_base_price,comps",base = calculate_base_price(comps)
.\tools\out_selected\patches\heatpump_ui.py.insert.py,63,base,"('Call', ('Name', 'calculate_base_price'), (('Name', 'comps'),), ())","('Call', 1, 0)","calculate_base_price,comps",base = calculate_base_price(comps)
.\tools\portings\patches\heatpump_ui.py.insert.py,64,base,"('Call', ('Name', 'calculate_base_price'), (('Name', 'comps'),), ())","('Call', 1, 0)","calculate_base_price,comps",base = calculate_base_price(comps)
.\excel_eval.py,29,base,"('Call', ('Name', 'date'), (('Const', '1899'), ('Const', '12'), ('Const', '30')), ())","('Call', 3, 0)",date,"base = date(1899, 12, 30)  # kompensiert Excel 1900-Fehler"
.\excel_eval.py,27,base,"('Call', ('Name', 'date'), (('Const', '1904'), ('Const', '1'), ('Const', '1')), ())","('Call', 3, 0)",date,"base = date(1904, 1, 1)"
.\analysis.py,1916,base,"('Call', ('Name', 'float'), (('Call', ('Name', 'max'), (('Const', '0.0'), ('Name', 'base_annual_cost')), ()),), ())","('Call', 1, 0)","base_annual_cost,float,max","base = float(max(0.0, base_annual_cost))"
.\tools\import_module_attributes_generic.py,39,base,"('Dict', ())","('Dict', 0)",,base = {}
.\pdf_template_engine\placeholders.py,1032,base,"('Name', 'annual_cost')","('Name',)",annual_cost,base = annual_cost
.\calculations.py,83,base,"('Sub', ('Call', ('Name', 'float'), (('Name', 'electricity_costs_without_pv'),), ()), ('Call', ('Name', 'float'), (('Name', 'electricity_costs_with_pv'),), ()))","('Sub', ('Call', 1, 0), ('Call', 1, 0))","electricity_costs_with_pv,electricity_costs_without_pv,float",base = float(electricity_costs_without_pv) - float(electricity_costs_with_pv)
.\tools\kakerlake_ultra_cleaner.py,230,base,"('Sub', ('Call', ('Name', 'float'), (('Name', 'electricity_costs_without_pv'),), ()), ('Call', ('Name', 'float'), (('Name', 'electricity_costs_with_pv'),), ()))","('Sub', ('Call', 1, 0), ('Call', 1, 0))","electricity_costs_with_pv,electricity_costs_without_pv,float",base = float(electricity_costs_without_pv) - float(electricity_costs_with_pv)
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\merger.py.insert.py,15,base,"('Subscript', ('Attr', ""PdfReader(BG / f'nt_{i:02d}.pdf')"", 'pages'), ('Const', '0'))","('Subscript',)","BG,PdfReader,i","base = PdfReader(BG / f""nt_{i:02d}.pdf"").pages[0]"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\merger.py.insert.py,16,base,"('Subscript', ('Attr', ""PdfReader(BG / f'nt_{i:02d}.pdf')"", 'pages'), ('Const', '0'))","('Subscript',)","BG,PdfReader,i","base = PdfReader(BG / f""nt_{i:02d}.pdf"").pages[0]"
.\pdf_template_engine\merger.py,13,base,"('Subscript', ('Attr', ""PdfReader(BG / f'nt_{i:02d}.pdf')"", 'pages'), ('Const', '0'))","('Subscript',)","BG,PdfReader,i","base = PdfReader(BG / f""nt_{i:02d}.pdf"").pages[0]"
.\tools\out_selected\patches\pdf_template_engine\merger.py.insert.py,15,base,"('Subscript', ('Attr', ""PdfReader(BG / f'nt_{i:02d}.pdf')"", 'pages'), ('Const', '0'))","('Subscript',)","BG,PdfReader,i","base = PdfReader(BG / f""nt_{i:02d}.pdf"").pages[0]"
.\tools\portings\patches\pdf_template_engine\merger.py.insert.py,16,base,"('Subscript', ('Attr', ""PdfReader(BG / f'nt_{i:02d}.pdf')"", 'pages'), ('Const', '0'))","('Subscript',)","BG,PdfReader,i","base = PdfReader(BG / f""nt_{i:02d}.pdf"").pages[0]"
.\dev_tools\kakerlake_ultra_cleaner.py,50,base,"('Tuple', (('Const', ""'AttrBase'""),))","('Tuple', 1)",,"except Exception: base=('AttrBase',)"
.\mnt\data\kakerlake_ultra_cleaner.py,50,base,"('Tuple', (('Const', ""'AttrBase'""),))","('Tuple', 1)",,"except Exception: base=('AttrBase',)"
.\tools\kakerlake_ultra_cleaner.py,51,base,"('Tuple', (('Const', ""'AttrBase'""),))","('Tuple', 1)",,"except Exception: base=('AttrBase',)"
.\analysis.py,3703,base_benefit_total_sim,"('Call', ('Name', 'sum'), (('Other', 'GeneratorExp'),), ())","('Call', 1, 0)","annual_benefits_sim_raw,b,float,math,sum",base_benefit_total_sim = sum(
.\analysis.py,3701,base_benefit_total_sim,"('Mult', (('Const', '0.07'), ('Name', 'base_investment'), ('Name', 'simulation_period')))","('Mult', (('Const',), ('Name',), ('Name',)))","base_investment,simulation_period",base_benefit_total_sim = base_investment * 0.07 * simulation_period
.\gui.py,147,base_cost,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'base_matrix_price_netto'""), ('Const', '0.0')), ())","('Call', 2, 0)",calc_results,"base_cost = calc_results.get(""base_matrix_price_netto"", 0.0)"
.\pdf_ui.py,96,base_cost,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'base_matrix_price_netto'""), ('Const', '0.0')), ())","('Call', 2, 0)",calc_results,"base_cost = calc_results.get(""base_matrix_price_netto"", 0.0)"
.\gui.py,149,base_cost,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'base_matrix_price_netto'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,"base_cost = st.session_state.get(""base_matrix_price_netto"", 0.0)"
.\pdf_ui.py,98,base_cost,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'base_matrix_price_netto'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,"base_cost = st.session_state.get(""base_matrix_price_netto"", 0.0)"
.\calculations.py,4137,base_cost,"('Mult', (('Attr', 'self', 'current_consumption'), ('Attr', 'self', 'current_price')))","('Mult', (('Attr',), ('Attr',)))",self,base_cost = self.current_consumption * self.current_price
.\pdf_erstellen_komplett.py,19,base_dir,"('Attr', 'Path(__file__)', 'parent')","('Attr',)","Path,__file__",base_dir = Path(__file__).parent
.\pdf_erstellen_komplett.py,123,base_dir,"('Attr', 'Path(__file__)', 'parent')","('Attr',)","Path,__file__",base_dir = Path(__file__).parent
.\pdf_erstellen_komplett.py,164,base_dir,"('Attr', 'Path(__file__)', 'parent')","('Attr',)","Path,__file__",base_dir = Path(__file__).parent
.\pdf_generator.py,358,base_dir,"('Call', ('Attr', 'os.path', 'dirname'), (('Call', ('Attr', 'os.path', 'abspath'), (('Name', '__file__'),), ()),), ())","('Call', 1, 0)","__file__,os",base_dir = os.path.dirname(os.path.abspath(__file__))
.\admin_panel.py,607,base_dir,"('Div', ('Div', ('Div', ('Call', ('Name', 'Path'), (('Const', ""'data'""),), ()), ('Const', ""'imports'"")), ('Const', ""'mixed'"")), ('Name', 'ts'))","('Div', ('Div', ('Div', ('Call', 1, 0), ('Const',)), ('Const',)), ('Name',))","Path,ts","base_dir = Path(""data"")/""imports""/""mixed""/ts"
.\tests\test_numbering.py,4,base_dir,"('Subscript', ('Attr', 'Path(__file__).resolve()', 'parents'), ('Const', '1'))","('Subscript',)","Path,__file__",base_dir = Path(__file__).resolve().parents[1]
.\tests\test_overlay_footer.py,4,base_dir,"('Subscript', ('Attr', 'Path(__file__).resolve()', 'parents'), ('Const', '1'))","('Subscript',)","Path,__file__",base_dir = Path(__file__).resolve().parents[1]
.\tools\test_numbering.py,4,base_dir,"('Subscript', ('Attr', 'Path(__file__).resolve()', 'parents'), ('Const', '1'))","('Subscript',)","Path,__file__",base_dir = Path(__file__).resolve().parents[1]
.\tools\test_overlay_footer.py,4,base_dir,"('Subscript', ('Attr', 'Path(__file__).resolve()', 'parents'), ('Const', '1'))","('Subscript',)","Path,__file__",base_dir = Path(__file__).resolve().parents[1]
.\multi_offer_generator.py,780,base_index,"('Name', 'i')","('Name',)",i,base_index = i
.\multi_offer_generator.py,777,base_index,"('USub', ('Const', '1'))","('USub', ('Const',))",,base_index = -1
.\solar_calculator.py,165,base_inverter_power_kw,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'invd', 'get'), (('Const', ""'power_kw'""), ('Const', '0.0')), ()), ('Const', '0.0'))),), ())","('Call', 1, 0)","float,invd","base_inverter_power_kw = float(invd.get('power_kw', 0.0) or 0.0)"
.\solar_calculator.py,160,base_inverter_power_kw,"('Const', '0.0')","('Const',)",,base_inverter_power_kw = 0.0
.\solar_calculator.py,168,base_inverter_power_kw,"('Const', '0.0')","('Const',)",,base_inverter_power_kw = 0.0
.\solar_calculator.py,171,base_inverter_power_kw,"('Const', '0.0')","('Const',)",,base_inverter_power_kw = 0.0
.\calculations.py,1760,base_investment,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'total_investment_netto'""), ('Const', '20000')), ())","('Call', 2, 0)",calc_results,"base_investment = calc_results.get(""total_investment_netto"", 20000)"
.\calculations.py,1822,base_investment,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'total_investment_netto'""), ('Const', '20000')), ())","('Call', 2, 0)",calc_results,"base_investment = calc_results.get(""total_investment_netto"", 20000)"
.\analysis.py,3694,base_investment,"('Call', ('Name', 'float'), (('Name', 'base_investment_raw'),), ())","('Call', 1, 0)","base_investment_raw,float",base_investment = float(base_investment_raw)
.\calculations.py,3018,base_matrix_price_netto,"('Call', ('Name', 'float'), (('Other', 'IfExp'),), ())","('Call', 1, 0)","float,pd,price_value_from_matrix",base_matrix_price_netto = float(
.\calculations.py,3033,base_matrix_price_netto,"('Const', '0.0')","('Const',)",,base_matrix_price_netto = 0.0
.\pdf_template_engine\dynamic_overlay.py,906,base_page,"('Name', 'bg_page')","('Name',)",bg_page,base_page = bg_page
.\pdf_template_engine\dynamic_overlay.py,908,base_page,"('Name', 'extra_bg_page')","('Name',)",extra_bg_page,base_page = extra_bg_page
.\multi_offer_generator_old.py,1142,base_price,"('Call', ('Attr', 'custom_analysis', 'get'), (('Const', ""'total_investment_cost_netto'""), ('Const', '0')), ())","('Call', 2, 0)",custom_analysis,"base_price = custom_analysis.get('total_investment_cost_netto', 0)"
.\calculations.py,1006,base_price,"('Const', '0.3')","('Const',)",,base_price = 0.30  # EUR/kWh
.\calculations.py,1089,base_price,"('Const', '0.3')","('Const',)",,base_price = 0.30  # EUR/kWh
.\pdf_template_engine\dynamic_overlay.py,978,base_reader,"('Call', ('Name', 'PdfReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'base_pdf'),), ()),), ())","('Call', 1, 0)","PdfReader,base_pdf,io",base_reader = PdfReader(io.BytesIO(base_pdf))
.\pdf_generator.py,673,base_reader,"('Call', ('Name', 'PdfReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'main7'),), ()),), ())","('Call', 1, 0)","PdfReader,io,main7",base_reader = PdfReader(io.BytesIO(main7))
.\calculations.py,686,base_shading,"('Const', '0.1')","('Const',)",,base_shading = 0.1  # 10% Basis-Verschattung
.\calculations.py,1596,base_shading,"('Const', '5')","('Const',)",,base_shading = 5  # 5% Grundverschattung
.\data_input.py,111,base_url,"('Const', ""'https://maps.googleapis.com/maps/api/geocode/json'"")","('Const',)",,"base_url = ""https://maps.googleapis.com/maps/api/geocode/json"""
.\data_input.py,145,base_url,"('Const', ""'https://maps.googleapis.com/maps/api/staticmap?'"")","('Const',)",,"base_url = ""https://maps.googleapis.com/maps/api/staticmap?"""
.\calculations.py,2204,base_url,"('Const', ""'https://re.jrc.ec.europa.eu/api/seriescalc'"")","('Const',)",,"base_url = ""https://re.jrc.ec.europa.eu/api/seriescalc"""
.\pdf_template_engine\placeholders.py,595,bat_kwh,"('Const', 'None')","('Const',)",,bat_kwh = None
.\pdf_template_engine\placeholders.py,627,bat_kwh,"('Name', 'ui_kwh')","('Name',)",ui_kwh,bat_kwh = ui_kwh
.\pdf_template_engine\placeholders.py,618,bat_kwh,"('Name', 'val')","('Name',)",val,bat_kwh = val
.\pdf_template_engine\placeholders.py,640,bat_kwh,"('Name', 'val')","('Name',)",val,bat_kwh = val
.\calculations.py,1065,battery_capacity,"('Call', ('Attr', 'base_data', 'get'), (('Const', ""'battery_capacity_kwh'""), ('Const', '0')), ())","('Call', 2, 0)",base_data,"battery_capacity = base_data.get(""battery_capacity_kwh"", 0)"
.\calculations.py,763,battery_capacity,"('Call', ('Attr', 'base_data', 'get'), (('Const', ""'battery_capacity_kwh'""), ('Const', '10')), ())","('Call', 2, 0)",base_data,"battery_capacity = base_data.get(""battery_capacity_kwh"", 10)"
.\calculations.py,1026,battery_capacity,"('Call', ('Attr', 'base_data', 'get'), (('Const', ""'battery_capacity_kwh'""), ('Const', '10')), ())","('Call', 2, 0)",base_data,"battery_capacity = base_data.get(""battery_capacity_kwh"", 10)"
.\central_pdf_system.py,491,battery_capacity,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'battery_capacity_kwh'""), ('Const', ""'N/A'"")), ())","('Call', 2, 0)",project_data,"battery_capacity = project_data.get('battery_capacity_kwh', 'N/A')"
.\live_calculation_engine.py,19,battery_capacity_kwh,"('Call', ('Attr', 'results', 'get'), (('Const', ""'battery_capacity_kwh'""), ('Const', '0')), ())","('Call', 2, 0)",results,"battery_capacity_kwh = results.get('battery_capacity_kwh', 0)"
.\live_preview_helpers.py,138,battery_capacity_kwh,"('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'battery_capacity_kwh'""), ('Const', '0.0')), ())","('Call', 2, 0)",results_for_display,"battery_capacity_kwh = results_for_display.get('battery_capacity_kwh', 0.0)"
.\live_preview_helpers.py,201,battery_capacity_kwh_correct,"('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_storage_storage_power_kw'""), ('Const', '0.0')), ())","('Call', 2, 0)",project_details,"battery_capacity_kwh_correct = project_details.get('selected_storage_storage_power_kw', 0.0)"
.\live_preview_helpers.py,205,battery_capacity_kwh_correct,"('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'battery_capacity_kwh'""), ('Const', '0.0')), ())","('Call', 2, 0)",results_for_display,"battery_capacity_kwh_correct = results_for_display.get('battery_capacity_kwh', 0.0)"
.\live_preview_helpers.py,195,battery_capacity_kwh_correct,"('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'selected_storage_storage_power_kw'""), ('Const', '0.0')), ())","('Call', 2, 0)",results_for_display,"battery_capacity_kwh_correct = results_for_display.get('selected_storage_storage_power_kw', 0.0)"
.\live_preview_helpers.py,192,battery_capacity_kwh_correct,"('Const', '0.0')","('Const',)",,battery_capacity_kwh_correct = 0.0
.\calculations.py,1429,battery_charge,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'annual_battery_charge_kwh'""), ('Const', '1500')), ())","('Call', 2, 0)",calc_results,"battery_charge = calc_results.get(""annual_battery_charge_kwh"", 1500)"
.\notwendig oder nicht\custom_dynamic_calculation.py,71,battery_charge,"('Mult', (('Call', ('Name', 'float'), (('Name', 'days_per_year'),), ()), ('Name', 'battery_capacity_kwh')))","('Mult', (('Call', 1, 0), ('Name',)))","battery_capacity_kwh,days_per_year,float",battery_charge = battery_capacity_kwh * float(days_per_year)
.\notwendig oder nicht\wichtig\out_selected\patches\tools\custom_dynamic_calculation.py.insert.py,34,battery_charge,"('Mult', (('Call', ('Name', 'float'), (('Name', 'days_per_year'),), ()), ('Name', 'battery_capacity_kwh')))","('Mult', (('Call', 1, 0), ('Name',)))","battery_capacity_kwh,days_per_year,float",battery_charge = battery_capacity_kwh * float(days_per_year)
.\notwendig oder nicht\wichtig\portings\patches\tools\custom_dynamic_calculation.py.insert.py,35,battery_charge,"('Mult', (('Call', ('Name', 'float'), (('Name', 'days_per_year'),), ()), ('Name', 'battery_capacity_kwh')))","('Mult', (('Call', 1, 0), ('Name',)))","battery_capacity_kwh,days_per_year,float",battery_charge = battery_capacity_kwh * float(days_per_year)
.\tools\custom_dynamic_calculation.py,71,battery_charge,"('Mult', (('Call', ('Name', 'float'), (('Name', 'days_per_year'),), ()), ('Name', 'battery_capacity_kwh')))","('Mult', (('Call', 1, 0), ('Name',)))","battery_capacity_kwh,days_per_year,float",battery_charge = battery_capacity_kwh * float(days_per_year)
.\tools\out_selected\patches\tools\custom_dynamic_calculation.py.insert.py,34,battery_charge,"('Mult', (('Call', ('Name', 'float'), (('Name', 'days_per_year'),), ()), ('Name', 'battery_capacity_kwh')))","('Mult', (('Call', 1, 0), ('Name',)))","battery_capacity_kwh,days_per_year,float",battery_charge = battery_capacity_kwh * float(days_per_year)
.\tools\portings\patches\tools\custom_dynamic_calculation.py.insert.py,35,battery_charge,"('Mult', (('Call', ('Name', 'float'), (('Name', 'days_per_year'),), ()), ('Name', 'battery_capacity_kwh')))","('Mult', (('Call', 1, 0), ('Name',)))","battery_capacity_kwh,days_per_year,float",battery_charge = battery_capacity_kwh * float(days_per_year)
.\pdf_template_engine\placeholders.py,941,battery_cover_pct,"('Call', ('Name', '_parse_pct_str'), (('Call', ('Attr', 'result', 'get'), (('Const', ""'battery_cover_consumption_percent'""),), ()),), ())","('Call', 1, 0)","_parse_pct_str,result","battery_cover_pct = _parse_pct_str(result.get(""battery_cover_consumption_percent""))  # z.B. ""Speichernutzung quote"""
.\pdf_template_engine\placeholders.py,897,battery_cover_pct,"('Div', ('Mult', (('Call', ('Name', 'max'), (('Const', '0.0'), ('Call', ('Name', 'min'), (('Name', 'discharge_sc_sum'), ('Name', 'cons_total')), ())), ()), ('Const', '100.0'))), ('Name', 'cons_total'))","('Div', ('Mult', (('Call', 2, 0), ('Const',))), ('Name',))","cons_total,discharge_sc_sum,max,min","battery_cover_pct = 100.0 * max(0.0, min(discharge_sc_sum, cons_total)) / cons_total"
.\calculations.py,1430,battery_discharge,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'annual_battery_discharge_kwh'""), ('Const', '1200')), ())","('Call', 2, 0)",calc_results,"battery_discharge = calc_results.get(""annual_battery_discharge_kwh"", 1200)"
.\notwendig oder nicht\custom_dynamic_calculation.py,75,battery_discharge,"('Call', ('Name', 'min'), (('Name', 'remaining_consumption'), ('Name', 'battery_charge')), ())","('Call', 2, 0)","battery_charge,min,remaining_consumption","battery_discharge = min(remaining_consumption, battery_charge)"
.\notwendig oder nicht\wichtig\out_selected\patches\tools\custom_dynamic_calculation.py.insert.py,38,battery_discharge,"('Call', ('Name', 'min'), (('Name', 'remaining_consumption'), ('Name', 'battery_charge')), ())","('Call', 2, 0)","battery_charge,min,remaining_consumption","battery_discharge = min(remaining_consumption, battery_charge)"
.\notwendig oder nicht\wichtig\portings\patches\tools\custom_dynamic_calculation.py.insert.py,39,battery_discharge,"('Call', ('Name', 'min'), (('Name', 'remaining_consumption'), ('Name', 'battery_charge')), ())","('Call', 2, 0)","battery_charge,min,remaining_consumption","battery_discharge = min(remaining_consumption, battery_charge)"
.\tools\custom_dynamic_calculation.py,75,battery_discharge,"('Call', ('Name', 'min'), (('Name', 'remaining_consumption'), ('Name', 'battery_charge')), ())","('Call', 2, 0)","battery_charge,min,remaining_consumption","battery_discharge = min(remaining_consumption, battery_charge)"
.\tools\out_selected\patches\tools\custom_dynamic_calculation.py.insert.py,38,battery_discharge,"('Call', ('Name', 'min'), (('Name', 'remaining_consumption'), ('Name', 'battery_charge')), ())","('Call', 2, 0)","battery_charge,min,remaining_consumption","battery_discharge = min(remaining_consumption, battery_charge)"
.\tools\portings\patches\tools\custom_dynamic_calculation.py.insert.py,39,battery_discharge,"('Call', ('Name', 'min'), (('Name', 'remaining_consumption'), ('Name', 'battery_charge')), ())","('Call', 2, 0)","battery_charge,min,remaining_consumption","battery_discharge = min(remaining_consumption, battery_charge)"
.\pdf_template_engine\placeholders.py,653,battery_expected_annual_kwh,"('Const', 'None')","('Const',)",,battery_expected_annual_kwh = None
.\pdf_template_engine\placeholders.py,655,battery_expected_annual_kwh,"('Const', 'None')","('Const',)",,battery_expected_annual_kwh = None
.\pdf_template_engine\placeholders.py,651,battery_expected_annual_kwh,"('Mult', (('Call', ('Name', 'float'), (('Name', 'bat_kwh'),), ()), ('Const', '300.0')))","('Mult', (('Call', 1, 0), ('Const',)))","bat_kwh,float",battery_expected_annual_kwh = float(bat_kwh) * 300.0
.\pdf_template_engine\placeholders.py,1266,best_id,"('Call', ('Name', 'int'), (('Call', ('Attr', 'p', 'get'), (('Const', ""'id'""),), ()),), ())","('Call', 1, 0)","int,p","best_id = int(p.get(""id""))"
.\pdf_template_engine\placeholders.py,1276,best_id,"('Call', ('Name', 'int'), (('Call', ('Attr', 'p', 'get'), (('Const', ""'id'""),), ()),), ())","('Call', 1, 0)","int,p","best_id = int(p.get(""id""))"
.\pdf_template_engine\placeholders.py,1259,best_id,"('Const', 'None')","('Const',)",,best_id = None
.\pdf_generator.py,361,bg_dir,"('Div', ('Div', ('Call', ('Name', 'Path'), (('Name', 'base_dir'),), ()), ('Const', ""'pdf_templates_static'"")), ('Const', ""'notext'""))","('Div', ('Div', ('Call', 1, 0), ('Const',)), ('Const',))","Path,base_dir","bg_dir = Path(base_dir) / ""pdf_templates_static"" / ""notext"""
.\pdf_erstellen_komplett.py,125,bg_dir,"('Div', ('Div', ('Name', 'base_dir'), ('Const', ""'pdf_templates_static'"")), ('Const', ""'notext'""))","('Div', ('Div', ('Name',), ('Const',)), ('Const',))",base_dir,"bg_dir = base_dir / ""pdf_templates_static"" / ""notext"""
.\pdf_erstellen_komplett.py,166,bg_dir,"('Div', ('Div', ('Name', 'base_dir'), ('Const', ""'pdf_templates_static'"")), ('Const', ""'notext'""))","('Div', ('Div', ('Name',), ('Const',)), ('Const',))",base_dir,"bg_dir = base_dir / ""pdf_templates_static"" / ""notext"""
.\tests\test_numbering.py,13,bg_dir,"('Div', ('Div', ('Name', 'base_dir'), ('Const', ""'pdf_templates_static'"")), ('Const', ""'notext'""))","('Div', ('Div', ('Name',), ('Const',)), ('Const',))",base_dir,"bg_dir = base_dir / ""pdf_templates_static"" / ""notext"""
.\tests\test_overlay_footer.py,12,bg_dir,"('Div', ('Div', ('Name', 'base_dir'), ('Const', ""'pdf_templates_static'"")), ('Const', ""'notext'""))","('Div', ('Div', ('Name',), ('Const',)), ('Const',))",base_dir,"bg_dir = base_dir / ""pdf_templates_static"" / ""notext"""
.\tools\test_numbering.py,13,bg_dir,"('Div', ('Div', ('Name', 'base_dir'), ('Const', ""'pdf_templates_static'"")), ('Const', ""'notext'""))","('Div', ('Div', ('Name',), ('Const',)), ('Const',))",base_dir,"bg_dir = base_dir / ""pdf_templates_static"" / ""notext"""
.\tools\test_overlay_footer.py,12,bg_dir,"('Div', ('Div', ('Name', 'base_dir'), ('Const', ""'pdf_templates_static'"")), ('Const', ""'notext'""))","('Div', ('Div', ('Name',), ('Const',)), ('Const',))",base_dir,"bg_dir = base_dir / ""pdf_templates_static"" / ""notext"""
.\pdf_template_engine\dynamic_overlay.py,881,bg_page,"('Const', 'None')","('Const',)",,bg_page = None
.\pdf_template_engine\dynamic_overlay.py,886,bg_page,"('Subscript', ('Attr', 'bg_reader', 'pages'), ('Const', '0'))","('Subscript',)",bg_reader,bg_page = bg_reader.pages[0]
.\pdf_template_engine\dynamic_overlay.py,927,bh,"('Call', ('Name', 'float'), (('Attr', 'base_page.mediabox', 'height'),), ())","('Call', 1, 0)","base_page,float",bh = float(base_page.mediabox.height)
.\pdf_template_engine\dynamic_overlay.py,951,bh,"('Call', ('Name', 'float'), (('Attr', 'ov_page.mediabox', 'height'),), ())","('Call', 1, 0)","float,ov_page",bh = float(ov_page.mediabox.height)
.\notwendig oder nicht\wichtig\repo_porter_select.py,160,blocks,"('Call', ('Name', 'parse_blocks'), (('Name', 'text'),), ())","('Call', 1, 0)","parse_blocks,text",blocks = parse_blocks(text)
.\tools\repo_porter_select.py,160,blocks,"('Call', ('Name', 'parse_blocks'), (('Name', 'text'),), ())","('Call', 1, 0)","parse_blocks,text",blocks = parse_blocks(text)
.\notwendig oder nicht\wichtig\repo_porter_select.py,64,blocks,"('Dict', ())","('Dict', 0)",,"blocks: Dict[Tuple[str,str], List[str]] = {}"
.\tools\repo_porter_select.py,64,blocks,"('Dict', ())","('Dict', 0)",,"blocks: Dict[Tuple[str,str], List[str]] = {}"
.\notwendig oder nicht\wichtig\repo_porter.py,510,blocks,"('List', ())","('List', 0)",,blocks = []
.\tools\repo_porter.py,510,blocks,"('List', ())","('List', 0)",,blocks = []
.\tools\schema_extractor.py,30,body,"('Call', ('Attr', 'm', 'group'), (('Const', '2'),), ())","('Call', 1, 0)",m,body = m.group(2)
.\dev_tools\kakerlake_ultra_cleaner.py,286,body,"('Call', ('Name', 'list'), (('Attr', 'mod', 'body'),), ())","('Call', 1, 0)","list,mod",body=list(mod.body); insert_idx=0
.\dev_tools\kakerlake_ultra_cleaner_v2.py,58,body,"('Call', ('Name', 'list'), (('Attr', 'mod', 'body'),), ())","('Call', 1, 0)","list,mod",body=list(mod.body); insert_idx=0
.\dev_tools\kakerlake_ultra_cleaner_v3.py,71,body,"('Call', ('Name', 'list'), (('Attr', 'mod', 'body'),), ())","('Call', 1, 0)","list,mod",body=list(mod.body); insert_idx=0
.\mnt\data\kakerlake_ultra_cleaner.py,286,body,"('Call', ('Name', 'list'), (('Attr', 'mod', 'body'),), ())","('Call', 1, 0)","list,mod",body=list(mod.body); insert_idx=0
.\mnt\data\kakerlake_ultra_cleaner_v2.py,58,body,"('Call', ('Name', 'list'), (('Attr', 'mod', 'body'),), ())","('Call', 1, 0)","list,mod",body=list(mod.body); insert_idx=0
.\tools\kakerlake_ultra_cleaner.py,287,body,"('Call', ('Name', 'list'), (('Attr', 'mod', 'body'),), ())","('Call', 1, 0)","list,mod",body=list(mod.body); insert_idx=0
.\dev_tools\kakerlake_ultra_cleaner.py,305,body,"('Call', ('Name', 'list'), (('Attr', 'module', 'body'),), ())","('Call', 1, 0)","list,module",body=list(module.body); insert_idx=0
.\dev_tools\kakerlake_ultra_cleaner_v2.py,77,body,"('Call', ('Name', 'list'), (('Attr', 'module', 'body'),), ())","('Call', 1, 0)","list,module",body=list(module.body); insert_idx=0
.\dev_tools\kakerlake_ultra_cleaner_v3.py,90,body,"('Call', ('Name', 'list'), (('Attr', 'module', 'body'),), ())","('Call', 1, 0)","list,module",body=list(module.body); insert_idx=0
.\mnt\data\kakerlake_ultra_cleaner.py,305,body,"('Call', ('Name', 'list'), (('Attr', 'module', 'body'),), ())","('Call', 1, 0)","list,module",body=list(module.body); insert_idx=0
.\mnt\data\kakerlake_ultra_cleaner_v2.py,77,body,"('Call', ('Name', 'list'), (('Attr', 'module', 'body'),), ())","('Call', 1, 0)","list,module",body=list(module.body); insert_idx=0
.\tools\kakerlake_ultra_cleaner.py,306,body,"('Call', ('Name', 'list'), (('Attr', 'module', 'body'),), ())","('Call', 1, 0)","list,module",body=list(module.body); insert_idx=0
.\notwendig oder nicht\wichtig\repo_porter.py,418,body,"('List', ())","('List', 0)",,body = []
.\tools\repo_porter.py,418,body,"('List', ())","('List', 0)",,body = []
.\tools\schema_extractor.py,35,body,"('Subscript', ('Name', 'create'), ('Const', ""'body'""))","('Subscript',)",create,"body = create[""body""]"
.\doc_output.py,1423,border_radius,"('Call', ('Attr', 'st', 'slider'), (('Const', ""'Ecken-Radius (px):'""), ('Const', '0'), ('Const', '20'), ('Const', '4')), ())","('Call', 4, 0)",st,"border_radius = st.slider(""Ecken-Radius (px):"", 0, 20, 4)"
.\components\progress_manager.py,32,border_radius,"('Const', '6')","('Const',)",,border_radius: int = 6
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,86,border_radius,"('Const', '6')","('Const',)",,border_radius: int = 6
.\tools\out_selected\patches\components\progress_manager.py.insert.py,86,border_radius,"('Const', '6')","('Const',)",,border_radius: int = 6
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,92,bottom_label_y1,"('Call', ('Name', 'max'), (('Name', 'candidates'),), ())","('Call', 1, 0)","candidates,max",bottom_label_y1 = max(candidates)
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,110,bottom_label_y1,"('Call', ('Name', 'max'), (('Name', 'candidates'),), ())","('Call', 1, 0)","candidates,max",bottom_label_y1 = max(candidates)
.\pdf_template_engine\dynamic_overlay.py,605,bottom_label_y1,"('Call', ('Name', 'max'), (('Name', 'candidates'),), ())","('Call', 1, 0)","candidates,max",bottom_label_y1 = max(candidates)
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,92,bottom_label_y1,"('Call', ('Name', 'max'), (('Name', 'candidates'),), ())","('Call', 1, 0)","candidates,max",bottom_label_y1 = max(candidates)
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,110,bottom_label_y1,"('Call', ('Name', 'max'), (('Name', 'candidates'),), ())","('Call', 1, 0)","candidates,max",bottom_label_y1 = max(candidates)
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,97,bottom_label_y1,"('Const', '326.1')","('Const',)",,bottom_label_y1 = 326.1
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,115,bottom_label_y1,"('Const', '326.1')","('Const',)",,bottom_label_y1 = 326.1
.\pdf_template_engine\dynamic_overlay.py,610,bottom_label_y1,"('Const', '326.1')","('Const',)",,bottom_label_y1 = 326.1
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,97,bottom_label_y1,"('Const', '326.1')","('Const',)",,bottom_label_y1 = 326.1
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,115,bottom_label_y1,"('Const', '326.1')","('Const',)",,bottom_label_y1 = 326.1
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,73,bottom_label_y1,"('Const', 'None')","('Const',)",,bottom_label_y1 = None
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,91,bottom_label_y1,"('Const', 'None')","('Const',)",,bottom_label_y1 = None
.\pdf_template_engine\dynamic_overlay.py,586,bottom_label_y1,"('Const', 'None')","('Const',)",,bottom_label_y1 = None
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,73,bottom_label_y1,"('Const', 'None')","('Const',)",,bottom_label_y1 = None
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,91,bottom_label_y1,"('Const', 'None')","('Const',)",,bottom_label_y1 = None
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,79,bottom_label_y1,"('Subscript', ('Subscript', ('Name', 'el'), ('Const', ""'position'"")), ('Const', '3'))","('Subscript',)",el,"bottom_label_y1 = el[""position""][3]"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,97,bottom_label_y1,"('Subscript', ('Subscript', ('Name', 'el'), ('Const', ""'position'"")), ('Const', '3'))","('Subscript',)",el,"bottom_label_y1 = el[""position""][3]"
.\pdf_template_engine\dynamic_overlay.py,592,bottom_label_y1,"('Subscript', ('Subscript', ('Name', 'el'), ('Const', ""'position'"")), ('Const', '3'))","('Subscript',)",el,"bottom_label_y1 = el[""position""][3]"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,79,bottom_label_y1,"('Subscript', ('Subscript', ('Name', 'el'), ('Const', ""'position'"")), ('Const', '3'))","('Subscript',)",el,"bottom_label_y1 = el[""position""][3]"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,97,bottom_label_y1,"('Subscript', ('Subscript', ('Name', 'el'), ('Const', ""'position'"")), ('Const', '3'))","('Subscript',)",el,"bottom_label_y1 = el[""position""][3]"
.\admin_panel.py,774,brand,"('BoolOp', 'Or', (('Call', ('Attr', 'p', 'get'), (('Const', ""'brand'""),), ()), ('Const', ""''"")))","('BoolOp', 'Or', 2)",p,brand = p.get('brand') or ''
.\debug_brand_extraction.py,56,brand,"('BoolOp', 'Or', (('Call', ('Attr', 'prod_data', 'get'), (('Const', ""'brand'""),), ()), ('Call', ('Attr', 'prod_data', 'get'), (('Const', ""'brand_name'""),), ())))","('BoolOp', 'Or', 2)",prod_data,brand = prod_data.get('brand_name') or prod_data.get('brand')
.\admin_logo_management_ui.py,46,brand,"('Call', ('Attr', ""product.get('brand', '')"", 'strip'), (), ())","('Call', 0, 0)",product,"brand = product.get('brand', '').strip()"
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,24,brand,"('Call', ('Attr', ""product.get('brand', '')"", 'strip'), (), ())","('Call', 0, 0)",product,"brand = product.get('brand', '').strip()"
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,25,brand,"('Call', ('Attr', ""product.get('brand', '')"", 'strip'), (), ())","('Call', 0, 0)",product,"brand = product.get('brand', '').strip()"
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,24,brand,"('Call', ('Attr', ""product.get('brand', '')"", 'strip'), (), ())","('Call', 0, 0)",product,"brand = product.get('brand', '').strip()"
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,25,brand,"('Call', ('Attr', ""product.get('brand', '')"", 'strip'), (), ())","('Call', 0, 0)",product,"brand = product.get('brand', '').strip()"
.\pdf_generator.py,1590,brand,"('Call', ('Attr', ""product_details.get('brand', '')"", 'strip'), (), ())","('Call', 0, 0)",product_details,"brand = product_details.get('brand', '').strip()"
.\product_attributes.py,243,brand,"('Call', ('Attr', ""row.get(brand_col) or ''"", 'strip'), (), ())","('Call', 0, 0)","brand_col,row",brand = (row.get(brand_col) or '').strip()
.\tools\import_module_attributes_generic.py,289,brand,"('Call', ('Attr', 'norm', 'get'), (('Const', ""'brand'""),), ())","('Call', 1, 0)",norm,"brand = norm.get(""brand"")"
.\add_test_product_images.py,77,brand,"('Call', ('Attr', 'product', 'get'), (('Const', ""'brand'""), ('Const', ""'Unbekannt'"")), ())","('Call', 2, 0)",product,"brand = product.get('brand', 'Unbekannt')"
.\notwendig oder nicht\wichtig\portings\patches\add_test_product_images.py.insert.py,104,brand,"('Call', ('Attr', 'product', 'get'), (('Const', ""'brand'""), ('Const', ""'Unbekannt'"")), ())","('Call', 2, 0)",product,"brand = product.get('brand', 'Unbekannt')"
.\tools\portings\patches\add_test_product_images.py.insert.py,104,brand,"('Call', ('Attr', 'product', 'get'), (('Const', ""'brand'""), ('Const', ""'Unbekannt'"")), ())","('Call', 2, 0)",product,"brand = product.get('brand', 'Unbekannt')"
.\admin_logo_management_ui.py,140,brand_name,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Hersteller-Name:'""),), (('key', ('Const', ""'logo_brand_input'"")), ('placeholder', ('Const', ""'Z.B. SolarTech GmbH'""))))","('Call', 1, 2)",st,brand_name = st.text_input(
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,130,brand_name,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Hersteller-Name:'""),), (('key', ('Const', ""'logo_brand_input'"")), ('placeholder', ('Const', ""'Z.B. SolarTech GmbH'""))))","('Call', 1, 2)",st,brand_name = st.text_input(
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,171,brand_name,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Hersteller-Name:'""),), (('key', ('Const', ""'logo_brand_input'"")), ('placeholder', ('Const', ""'Z.B. SolarTech GmbH'""))))","('Call', 1, 2)",st,brand_name = st.text_input(
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,130,brand_name,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Hersteller-Name:'""),), (('key', ('Const', ""'logo_brand_input'"")), ('placeholder', ('Const', ""'Z.B. SolarTech GmbH'""))))","('Call', 1, 2)",st,brand_name = st.text_input(
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,171,brand_name,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Hersteller-Name:'""),), (('key', ('Const', ""'logo_brand_input'"")), ('placeholder', ('Const', ""'Z.B. SolarTech GmbH'""))))","('Call', 1, 2)",st,brand_name = st.text_input(
.\admin_logo_management_ui.py,129,brand_name,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Neuer Hersteller-Name:'""),), (('key', ('Const', ""'logo_brand_new'"")), ('placeholder', ('Const', ""'Z.B. SolarTech GmbH'""))))","('Call', 1, 2)",st,brand_name = st.text_input(
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,119,brand_name,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Neuer Hersteller-Name:'""),), (('key', ('Const', ""'logo_brand_new'"")), ('placeholder', ('Const', ""'Z.B. SolarTech GmbH'""))))","('Call', 1, 2)",st,brand_name = st.text_input(
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,160,brand_name,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Neuer Hersteller-Name:'""),), (('key', ('Const', ""'logo_brand_new'"")), ('placeholder', ('Const', ""'Z.B. SolarTech GmbH'""))))","('Call', 1, 2)",st,brand_name = st.text_input(
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,119,brand_name,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Neuer Hersteller-Name:'""),), (('key', ('Const', ""'logo_brand_new'"")), ('placeholder', ('Const', ""'Z.B. SolarTech GmbH'""))))","('Call', 1, 2)",st,brand_name = st.text_input(
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,160,brand_name,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Neuer Hersteller-Name:'""),), (('key', ('Const', ""'logo_brand_new'"")), ('placeholder', ('Const', ""'Z.B. SolarTech GmbH'""))))","('Call', 1, 2)",st,brand_name = st.text_input(
.\admin_logo_management_ui.py,137,brand_name,"('Const', ""''"")","('Const',)",,"brand_name = """""
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,127,brand_name,"('Const', ""''"")","('Const',)",,"brand_name = """""
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,168,brand_name,"('Const', ""''"")","('Const',)",,"brand_name = """""
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,127,brand_name,"('Const', ""''"")","('Const',)",,"brand_name = """""
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,168,brand_name,"('Const', ""''"")","('Const',)",,"brand_name = """""
.\admin_logo_management_ui.py,135,brand_name,"('Name', 'selected_brand_option')","('Name',)",selected_brand_option,brand_name = selected_brand_option
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,125,brand_name,"('Name', 'selected_brand_option')","('Name',)",selected_brand_option,brand_name = selected_brand_option
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,166,brand_name,"('Name', 'selected_brand_option')","('Name',)",selected_brand_option,brand_name = selected_brand_option
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,125,brand_name,"('Name', 'selected_brand_option')","('Name',)",selected_brand_option,brand_name = selected_brand_option
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,166,brand_name,"('Name', 'selected_brand_option')","('Name',)",selected_brand_option,brand_name = selected_brand_option
.\admin_logo_management_ui.py,44,brands,"('Call', ('Name', 'set'), (), ())","('Call', 0, 0)",set,brands = set()
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,22,brands,"('Call', ('Name', 'set'), (), ())","('Call', 0, 0)",set,brands = set()
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,23,brands,"('Call', ('Name', 'set'), (), ())","('Call', 0, 0)",set,brands = set()
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,22,brands,"('Call', ('Name', 'set'), (), ())","('Call', 0, 0)",set,brands = set()
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,23,brands,"('Call', ('Name', 'set'), (), ())","('Call', 0, 0)",set,brands = set()
.\pdf_template_engine\placeholders.py,2412,brands,"('Dict', ())","('Dict', 0)",,brands = {}
.\notwendig oder nicht\wichtig\portings\patches\simple_logo_test.py.insert.py,92,brands,"('List', (('Const', ""'Huawei'""), ('Const', ""'GoodWe'""), ('Const', ""'BYD'"")))","('List', 3)",,"brands = [""Huawei"", ""GoodWe"", ""BYD""]"
.\simple_logo_test.py,84,brands,"('List', (('Const', ""'Huawei'""), ('Const', ""'GoodWe'""), ('Const', ""'BYD'"")))","('List', 3)",,"brands = [""Huawei"", ""GoodWe"", ""BYD""]"
.\tools\portings\patches\simple_logo_test.py.insert.py,92,brands,"('List', (('Const', ""'Huawei'""), ('Const', ""'GoodWe'""), ('Const', ""'BYD'"")))","('List', 3)",,"brands = [""Huawei"", ""GoodWe"", ""BYD""]"
.\pdf_generator.py,430,buf,"('Call', ('Attr', '_io', 'BytesIO'), (), ())","('Call', 0, 0)",_io,buf = _io.BytesIO()
.\pdf_generator.py,700,buf,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buf = io.BytesIO(); writer.write(buf)
.\pdf_styles.py,372,buf,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buf = io.BytesIO()
.\pdf_styles.py,808,buf,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buf = io.BytesIO()
.\tests\test_numbering.py,28,buf,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buf = io.BytesIO()
.\tools\test_numbering.py,28,buf,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buf = io.BytesIO()
.\tools\schema_extractor.py,74,buf,"('List', ())","('List', 0)",,"res.append("""".join(buf).strip()); buf = []"
.\central_pdf_system.py,457,buffer,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buffer = io.BytesIO()
.\create_png_test_images.py,41,buffer,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buffer = io.BytesIO()
.\notwendig oder nicht\wichtig\portings\patches\create_png_test_images.py.insert.py,41,buffer,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buffer = io.BytesIO()
.\notwendig oder nicht\wichtig\portings\patches\test_brand_logos.py.insert.py,43,buffer,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buffer = io.BytesIO()
.\pdf_helpers.py,186,buffer,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buffer = io.BytesIO()
.\pdf_template_engine\dynamic_overlay.py,325,buffer,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buffer = io.BytesIO()
.\tests\test_brand_logos.py,40,buffer,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buffer = io.BytesIO()
.\tools\portings\patches\create_png_test_images.py.insert.py,41,buffer,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buffer = io.BytesIO()
.\tools\portings\patches\test_brand_logos.py.insert.py,43,buffer,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,buffer = io.BytesIO()
.\pdf_generator.py,3064,buffer,"('Call', ('Name', 'BytesIO'), (), ())","('Call', 0, 0)",BytesIO,buffer = BytesIO()
.\heatpump_ui.py,856,building_data,"('Attr', 'st.session_state', 'building_data')","('Attr',)",st,building_data = st.session_state.building_data
.\heatpump_ui.py,889,building_data,"('Attr', 'st.session_state', 'building_data')","('Attr',)",st,building_data = st.session_state.building_data
.\heatpump_ui.py,939,building_data,"('Attr', 'st.session_state', 'building_data')","('Attr',)",st,building_data = st.session_state.building_data
.\heatpump_ui.py,59,building_data,"('Call', ('Name', 'render_building_analysis'), (('Name', 'texts'),), ())","('Call', 1, 0)","render_building_analysis,texts",building_data = render_building_analysis(texts)
.\heatpump_ui.py,249,building_data,"('Dict', (('KV', ('Const', ""'area'""), ('Name', 'building_area')), ('KV', ('Const', ""'calculated_at'""), ('Call', ('Attr', 'datetime', 'now'), (), ())), ('KV', ('Const', ""'consumption_inputs'""), ('Dict', (('KV', ('Const', ""'gas_kwh'""), ('Name', 'gas_kwh')), ('KV', ('Const', ""'heating_hours'""), ('Name', 'heating_hours')), ('KV', ('Const', ""'oil_l'""), ('Name', 'oil_l')), ('KV', ('Const', ""'system_efficiency_pct'""), ('Name', 'custom_eff')), ('KV', ('Const', ""'wood_ster'""), ('Name', 'wood_ster'))))), ('KV', ('Const', ""'desired_temp'""), ('Name', 'desired_temperature')), ('KV', ('Const', ""'heat_load_kw'""), ('Name', 'heat_load')), ('KV', ('Const', ""'heat_load_source'""), ('Other', 'IfExp')), ('KV', ('Const', ""'heating_days'""), ('Name', 'heating_days')), ('KV', ('Const', ""'heating_system'""), ('Name', 'heating_system')), ('KV', ('Const', ""'hot_water'""), ('Name', 'hot_water_demand')), ('KV', ('Const', ""'insulation'""), ('Name', 'insulation_quality')), ('KV', ('Const', ""'outside_temp'""), ('Name', 'outside_temp_design')), ('KV', ('Const', ""'system_temp'""), ('Name', 'heating_system_temp')), ('KV', ('Const', ""'type'""), ('Name', 'building_type')), ('KV', ('Const', ""'year'""), ('Name', 'building_year'))))","('Dict', 14)","any,building_area,building_type,building_year,custom_eff,datetime,desired_temperature,gas_kwh,heat_load,heating_days,heating_hours,heating_system,heating_system_temp,hot_water_demand,insulation_quality,oil_l,outside_temp_design,wood_ster",building_data = {
.\calculations_heatpump.py,92,building_data,"('Dict', ())","('Dict', 0)",,building_data = {}
.\heatpump_ui.py,478,building_data,"('Subscript', ('Name', 'heatpump_data'), ('Const', ""'building_data'""))","('Subscript',)",heatpump_data,building_data = heatpump_data['building_data']
.\calculations_heatpump.py,149,building_type,"('Call', ('Attr', 'building_data', 'get'), (('Const', ""'building_type'""), ('Const', ""'Altbau saniert'"")), ())","('Call', 2, 0)",building_data,"building_type = building_data.get('building_type', 'Altbau saniert')"
.\heatpump_ui.py,125,building_type,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Gebäudetyp'""),), (('options', ('List', (('Const', ""'Neubau KfW40'""), ('Const', ""'Neubau KfW55'""), ('Const', ""'Neubau Standard'""), ('Const', ""'Altbau saniert'""), ('Const', ""'Altbau teilsaniert'""), ('Const', ""'Altbau unsaniert'"")))),))","('Call', 1, 1)",st,building_type = st.selectbox(
.\pdf_template_engine\dynamic_overlay.py,558,bw,"('Call', ('Attr', 'c', 'stringWidth'), (('Call', ('Name', 'str'), (('Name', 'val'),), ()), ('Name', 'font_name'), ('Name', 'font_size')), ())","('Call', 3, 0)","c,font_name,font_size,str,val","bw = c.stringWidth(str(val), font_name, font_size)"
.\pdf_template_engine\dynamic_overlay.py,926,bw,"('Call', ('Name', 'float'), (('Attr', 'base_page.mediabox', 'width'),), ())","('Call', 1, 0)","base_page,float",bw = float(base_page.mediabox.width)
.\pdf_template_engine\dynamic_overlay.py,950,bw,"('Call', ('Name', 'float'), (('Attr', 'ov_page.mediabox', 'width'),), ())","('Call', 1, 0)","float,ov_page",bw = float(ov_page.mediabox.width)
.\tests\test_numbering.py,29,c,"('Call', ('Attr', 'canvas', 'Canvas'), (('Name', 'buf'),), (('pagesize', ('Name', 'A4')),))","('Call', 1, 1)","A4,buf,canvas","c = canvas.Canvas(buf, pagesize=A4)"
.\tools\test_numbering.py,29,c,"('Call', ('Attr', 'canvas', 'Canvas'), (('Name', 'buf'),), (('pagesize', ('Name', 'A4')),))","('Call', 1, 1)","A4,buf,canvas","c = canvas.Canvas(buf, pagesize=A4)"
.\pdf_template_engine\dynamic_overlay.py,326,c,"('Call', ('Attr', 'canvas', 'Canvas'), (('Name', 'buffer'),), (('pagesize', ('Name', 'A4')),))","('Call', 1, 1)","A4,buffer,canvas","c = canvas.Canvas(buffer, pagesize=A4)"
.\pdf_generator.py,1215,c,"('Call', ('Attr', 'canvas', 'Canvas'), (('Name', 'output_filename'),), (('pagesize', ('Name', 'A4')),))","('Call', 1, 1)","A4,canvas,output_filename","c = canvas.Canvas(output_filename, pagesize=A4)"
.\database.py,600,c,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,c = conn.cursor()
.\database.py,618,c,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,c = conn.cursor()
.\notwendig oder nicht\python_function_recipes.py,126,c1,"('Add', (('Name', 'c0'), ('Other', 'IfExp')))","('Add', (('Name',), ('Other', 'IfExp')))","c0,int,ref,width",c1 = c0 + (int(width) if width is not None else ref.shape[1]-c0)
.\dev_tools\kakerlake_ultra_cleaner.py,383,c1,"('BoolOp', 'Or', (('Call', ('Name', 'name_in'), (('Name', 'l'), ('Name', 'CONSUMP_SAVINGS_NAMES')), ()), ('Call', ('Name', 'name_in'), (('Name', 'r'), ('Name', 'CONSUMP_SAVINGS_NAMES')), ())))","('BoolOp', 'Or', 2)","CONSUMP_SAVINGS_NAMES,l,name_in,r","c1 = name_in(l, CONSUMP_SAVINGS_NAMES) or name_in(r, CONSUMP_SAVINGS_NAMES)"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,253,c1,"('BoolOp', 'Or', (('Call', ('Name', 'name_in'), (('Name', 'l'), ('Name', 'CONSUMP_SAVINGS_NAMES')), ()), ('Call', ('Name', 'name_in'), (('Name', 'r'), ('Name', 'CONSUMP_SAVINGS_NAMES')), ())))","('BoolOp', 'Or', 2)","CONSUMP_SAVINGS_NAMES,l,name_in,r","c1 = name_in(l, CONSUMP_SAVINGS_NAMES) or name_in(r, CONSUMP_SAVINGS_NAMES)"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,269,c1,"('BoolOp', 'Or', (('Call', ('Name', 'name_in'), (('Name', 'l'), ('Name', 'CONSUMP_SAVINGS_NAMES')), ()), ('Call', ('Name', 'name_in'), (('Name', 'r'), ('Name', 'CONSUMP_SAVINGS_NAMES')), ())))","('BoolOp', 'Or', 2)","CONSUMP_SAVINGS_NAMES,l,name_in,r","c1 = name_in(l, CONSUMP_SAVINGS_NAMES) or name_in(r, CONSUMP_SAVINGS_NAMES)"
.\mnt\data\kakerlake_ultra_cleaner.py,383,c1,"('BoolOp', 'Or', (('Call', ('Name', 'name_in'), (('Name', 'l'), ('Name', 'CONSUMP_SAVINGS_NAMES')), ()), ('Call', ('Name', 'name_in'), (('Name', 'r'), ('Name', 'CONSUMP_SAVINGS_NAMES')), ())))","('BoolOp', 'Or', 2)","CONSUMP_SAVINGS_NAMES,l,name_in,r","c1 = name_in(l, CONSUMP_SAVINGS_NAMES) or name_in(r, CONSUMP_SAVINGS_NAMES)"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,253,c1,"('BoolOp', 'Or', (('Call', ('Name', 'name_in'), (('Name', 'l'), ('Name', 'CONSUMP_SAVINGS_NAMES')), ()), ('Call', ('Name', 'name_in'), (('Name', 'r'), ('Name', 'CONSUMP_SAVINGS_NAMES')), ())))","('BoolOp', 'Or', 2)","CONSUMP_SAVINGS_NAMES,l,name_in,r","c1 = name_in(l, CONSUMP_SAVINGS_NAMES) or name_in(r, CONSUMP_SAVINGS_NAMES)"
.\tools\kakerlake_ultra_cleaner.py,384,c1,"('BoolOp', 'Or', (('Call', ('Name', 'name_in'), (('Name', 'l'), ('Name', 'CONSUMP_SAVINGS_NAMES')), ()), ('Call', ('Name', 'name_in'), (('Name', 'r'), ('Name', 'CONSUMP_SAVINGS_NAMES')), ())))","('BoolOp', 'Or', 2)","CONSUMP_SAVINGS_NAMES,l,name_in,r","c1 = name_in(l, CONSUMP_SAVINGS_NAMES) or name_in(r, CONSUMP_SAVINGS_NAMES)"
.\analysis.py,5132,c1,"('Call', ('Attr', 'st.session_state', 'get'), (('Other', 'JoinedStr'), ('Call', ('Name', '_safe_viz_get'), (('Name', 'viz_settings'), ('Const', ""'primary_chart_color'"")), ())), ())","('Call', 2, 0)","_safe_viz_get,chart_key_prefix,st,viz_settings",c1 = st.session_state.get(
.\pdf_preview.py,47,cache_key,"('Call', ('Attr', 'self', '_create_cache_key'), (('Name', 'project_data'), ('Name', 'inclusion_options')), ())","('Call', 2, 0)","inclusion_options,project_data,self","cache_key = self._create_cache_key(project_data, inclusion_options)"
.\analysis.py,1716,cache_key,"('Const', 'None')","('Const',)",,cache_key = None
.\analysis.py,1711,cache_key,"('Name', 'fig_json')","('Name',)",fig_json,cache_key = fig_json  # bereits JSON-String
.\multi_offer_generator.py,1014,calc_results,"('Call', ('Attr', 'self', 'apply_price_scaling'), (('Name', 'company_index'), ('Name', 'base_settings'), ('Name', 'calc_results')), ())","('Call', 3, 0)","base_settings,calc_results,company_index,self","calc_results = self.apply_price_scaling(company_index, base_settings, calc_results)"
.\gui.py,139,calc_results,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'calculation_results'""), ('Dict', ())), ())","('Call', 2, 0)",st,"calc_results = st.session_state.get(""calculation_results"", {})"
.\multi_offer_generator.py,992,calc_results,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'calculation_results'""), ('Dict', ())), ())","('Call', 2, 0)",st,"calc_results = st.session_state.get('calculation_results', {})"
.\pdf_ui.py,95,calc_results,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'calculation_results'""), ('Dict', ())), ())","('Call', 2, 0)",st,"calc_results = st.session_state.get(""calculation_results"", {})"
.\multi_offer_generator.py,996,calc_results,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'multi_offer_calc_results'""), ('Dict', ())), ())","('Call', 2, 0)",st,"calc_results = st.session_state.get('multi_offer_calc_results', {})"
.\multi_offer_generator.py,1001,calc_results,"('Dict', (('KV', ('Const', ""'amortization_time_years'""), ('Const', '12.5')), ('KV', ('Const', ""'anlage_kwp'""), ('Mult', (('Call', ('Attr', 'offer_data', 'get'), (('Const', ""'module_quantity'""), ('Const', '20')), ()), ('Const', '0.4')))), ('KV', ('Const', ""'annual_financial_benefit_year1'""), ('Const', '1200')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Mult', (('Call', ('Attr', 'offer_data', 'get'), (('Const', ""'module_quantity'""), ('Const', '20')), ()), ('Const', '400')))), ('KV', ('Const', ""'self_supply_rate_percent'""), ('Const', '65.0')), ('KV', ('Const', ""'total_investment_netto'""), ('Mult', (('Call', ('Attr', 'offer_data', 'get'), (('Const', ""'module_quantity'""), ('Const', '20')), ()), ('Const', '750'))))))","('Dict', 6)",offer_data,calc_results = {
.\calculations.py,3904,calculated_default_max_cycles_val,"('Mult', (('Name', 'cycles_per_year_for_default_from_constants_val'), ('Subscript', ('Name', 'results'), ('Const', ""'simulation_period_years_effective'""))))","('Mult', (('Name',), ('Subscript',)))","cycles_per_year_for_default_from_constants_val,results",calculated_default_max_cycles_val = (
.\calculations.py,3899,calculated_default_max_cycles_val,"('Name', 'default_cycles_from_product_db_val')","('Name',)",default_cycles_from_product_db_val,calculated_default_max_cycles_val = default_cycles_from_product_db_val
.\gui.py,731,calculations_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'calculations'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","calculations_module = import_module_with_fallback(""calculations"", import_errors)"
.\gui.py,85,calculations_module,"('Const', 'None')","('Const',)",,calculations_module: Optional[Any] = None
.\dev_tools\kakerlake_ultra_cleaner.py,353,call,"('Attr', 'orig', 'value')","('Attr',)",orig,call=orig.value
.\mnt\data\kakerlake_ultra_cleaner.py,353,call,"('Attr', 'orig', 'value')","('Attr',)",orig,call=orig.value
.\tools\kakerlake_ultra_cleaner.py,354,call,"('Attr', 'orig', 'value')","('Attr',)",orig,call=orig.value
.\dev_tools\kakerlake_ultra_cleaner.py,470,call,"('Attr', 'orig.body[0]', 'value')","('Attr',)",orig,call=orig.body[0].value
.\dev_tools\kakerlake_ultra_cleaner_v2.py,352,call,"('Attr', 'orig.body[0]', 'value')","('Attr',)",orig,call=orig.body[0].value
.\dev_tools\kakerlake_ultra_cleaner_v3.py,368,call,"('Attr', 'orig.body[0]', 'value')","('Attr',)",orig,call=orig.body[0].value
.\mnt\data\kakerlake_ultra_cleaner.py,470,call,"('Attr', 'orig.body[0]', 'value')","('Attr',)",orig,call=orig.body[0].value
.\mnt\data\kakerlake_ultra_cleaner_v2.py,352,call,"('Attr', 'orig.body[0]', 'value')","('Attr',)",orig,call=orig.body[0].value
.\tools\kakerlake_ultra_cleaner.py,471,call,"('Attr', 'orig.body[0]', 'value')","('Attr',)",orig,call=orig.body[0].value
.\dev_tools\kakerlake_ultra_cleaner_v2.py,221,call,"('Name', 'rhs')","('Name',)",rhs,call = rhs
.\dev_tools\kakerlake_ultra_cleaner_v3.py,235,call,"('Name', 'rhs')","('Name',)",rhs,call = rhs
.\mnt\data\kakerlake_ultra_cleaner_v2.py,221,call,"('Name', 'rhs')","('Name',)",rhs,call = rhs
.\pdf_template_engine\placeholders.py,1464,cand_keys,"('Add', (('List', (('Call', ('Name', '_norm_key'), (('Name', 'canonical'),), ()),)), ('Other', 'ListComp')))","('Add', (('List', 1), ('Other', 'ListComp')))","_norm_key,canonical,syns,x",cand_keys = [_norm_key(canonical)] + [_norm_key(x) for x in syns]
.\pdf_template_engine\placeholders.py,1270,cand_keys,"('Call', ('Name', 'list'), (('Call', ('Attr', 'cands_norm', 'keys'), (), ()),), ())","('Call', 1, 0)","cands_norm,list",cand_keys = list(cands_norm.keys())
.\heatpump_ui.py,863,candidates,"('BoolOp', 'Or', (('Name', 'hp_db'), ('Other', 'ListComp')))","('BoolOp', 'Or', 2)","hp,hp_db",candidates = [hp for hp in hp_db if hp.get('type') == 'Luft-Wasser-Wärmepumpe'] or hp_db
.\heatpump_ui.py,407,candidates,"('Call', ('Name', 'sorted'), (('Name', 'candidates'),), (('key', ('Other', 'Lambda')),))","('Call', 1, 1)","abs,candidates,hp,required_kw,sorted","candidates = sorted(candidates, key=lambda hp: abs(hp.get('heating_power', 0) - required_kw))"
.\heatpump_ui.py,869,candidates,"('Call', ('Name', 'sorted'), (('Name', 'candidates'),), (('key', ('Other', 'Lambda')),))","('Call', 1, 1)","abs,candidates,float,hp,required_kw,sorted","candidates = sorted(candidates, key=lambda hp: abs(float(hp.get('heating_power', 0) or 0) - required_kw))"
.\pdf_generator.py,515,candidates,"('List', (('Call', ('Attr', 'safe_analysis_results', 'get'), (('Const', ""'total_investment_netto'""),), ()), ('Call', ('Attr', 'safe_analysis_results', 'get'), (('Const', ""'total_investment_brutto'""),), ()), ('Call', ('Attr', 'safe_analysis_results', 'get'), (('Const', ""'subtotal_netto'""),), ())))","('List', 3)",safe_analysis_results,candidates = [
.\pdf_template_engine\dynamic_overlay.py,880,candidates,"('List', (('Div', ('Name', 'bg_dir'), ('Other', 'JoinedStr')), ('Div', ('Name', 'bg_dir'), ('Other', 'JoinedStr'))))","('List', 2)","bg_dir,page_num","candidates = [bg_dir / f""nt_nt_{page_num:02d}.pdf"", bg_dir / f""nt_{page_num:02d}.pdf""]"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,83,candidates,"('List', ())","('List', 0)",,candidates = []
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,101,candidates,"('List', ())","('List', 0)",,candidates = []
.\pdf_template_engine\dynamic_overlay.py,596,candidates,"('List', ())","('List', 0)",,candidates = []
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,83,candidates,"('List', ())","('List', 0)",,candidates = []
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,101,candidates,"('List', ())","('List', 0)",,candidates = []
.\heatpump_ui.py,396,candidates,"('Other', 'ListComp')","('Other', 'ListComp')","heatpump_type,heatpumps_db,hp",candidates = [hp for hp in heatpumps_db if hp.get('type') == heatpump_type]
.\heatpump_ui.py,398,candidates,"('Other', 'ListComp')","('Other', 'ListComp')","candidates,hp,manufacturer_preference",candidates = [hp for hp in candidates if hp.get('manufacturer') == manufacturer_preference]
.\tools\import_module_attributes_generic.py,193,candidates,"('Other', 'Set')","('Other', 'Set')","key_target,key_target_base","candidates = {key_target, key_target_base}"
.\pdf_template_engine\placeholders.py,1002,cands,"('List', (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'electricity_price_increase_annual_percent'""),), ()), ('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'electricity_price_increase'""),), ()), ('Call', ('Attr', 'project_data', 'get'), (('Const', ""'electricity_price_increase_annual_percent'""),), ()), ('Call', ('Attr', 'project_details', 'get'), (('Const', ""'electricity_price_increase_annual_percent'""),), ())))","('List', 4)","analysis_results,project_data,project_details",cands = [
.\pdf_template_engine\placeholders.py,1246,cands,"('List', ())","('List', 0)",,cands = []
.\pv_visuals.py,246,car_km_equiv,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'co2_equivalent_car_km_per_year'""), ('Const', '0.0')), ())","('Call', 2, 0)",analysis_results,"car_km_equiv = analysis_results.get('co2_equivalent_car_km_per_year', 0.0)"
.\pdf_generator.py,2306,car_km_equiv,"('Call', ('Attr', 'current_analysis_results_pdf', 'get'), (('Const', ""'co2_equivalent_car_km_per_year'""), ('Const', '0.0')), ())","('Call', 2, 0)",current_analysis_results_pdf,"car_km_equiv = current_analysis_results_pdf.get('co2_equivalent_car_km_per_year', 0.0)"
.\analysis.py,9017,car_km_equivalent,"('Call', ('Name', 'int'), (('Div', ('Mult', (('Const', '1000'), ('Name', 'co2_20_years'))), ('Const', '0.12')),), ())","('Call', 1, 0)","co2_20_years,int",car_km_equivalent = int(co2_20_years * 1000 / 0.12)
.\calculations.py,1948,car_km_equivalent,"('Div', ('Mult', (('Const', '1000'), ('Name', 'total_co2_savings'))), ('Const', '0.12'))","('Div', ('Mult', (('Const',), ('Name',))), ('Const',))",total_co2_savings,car_km_equivalent = total_co2_savings * 1000 / 0.12  # 120g CO2/km für PKW
.\calculations.py,1393,cash_flows,"('Add', (('List', (('USub', ('Name', 'investment')),)), ('Mult', (('List', (('Name', 'annual_benefit'),)), ('Name', 'lifetime')))))","('Add', (('List', 1), ('Mult', (('List', 1), ('Name',)))))","annual_benefit,investment,lifetime",cash_flows = [-investment] + [annual_benefit] * lifetime
.\calculations_extended.py,62,cash_flows,"('Add', (('List', (('USub', ('Name', 'investment')),)), ('Mult', (('List', (('Name', 'annual_savings'),)), ('Name', 'LIFESPAN_YEARS')))))","('Add', (('List', 1), ('Mult', (('List', 1), ('Name',)))))","LIFESPAN_YEARS,annual_savings,investment",cash_flows = [-investment] + [annual_savings] * LIFESPAN_YEARS
.\calculations_extended.py,55,cash_flows,"('Mult', (('List', (('Name', 'annual_savings'),)), ('Name', 'LIFESPAN_YEARS')))","('Mult', (('List', 1), ('Name',)))","LIFESPAN_YEARS,annual_savings",cash_flows = [annual_savings] * LIFESPAN_YEARS
.\admin_panel.py,773,cat,"('BoolOp', 'Or', (('Call', ('Attr', 'p', 'get'), (('Const', ""'category'""),), ()), ('Const', ""''"")))","('BoolOp', 'Or', 2)",p,cat = p.get('category') or ''
.\pdf_atomizer.py,211,cat,"('BoolOp', 'Or', (('Call', ('Name', 'getattr'), (('Name', 'pdf'), ('Const', ""'Root'""), ('Const', 'None')), ()), ('Subscript', ('Attr', 'pdf', 'trailer'), ('Const', ""'/Root'""))))","('BoolOp', 'Or', 2)","getattr,pdf","cat = getattr(pdf, ""Root"", None) or pdf.trailer[""/Root""]"
.\multi_offer_generator.py,85,cat,"('Call', ('Attr', ""p.get('category', 'Sonstiges')"", 'lower'), (), ())","('Call', 0, 0)",p,"cat = p.get(""category"", ""Sonstiges"").lower()"
.\multi_offer_generator_new.py,80,cat,"('Call', ('Attr', ""p.get('category', 'Sonstiges')"", 'lower'), (), ())","('Call', 0, 0)",p,"cat = p.get(""category"", ""Sonstiges"").lower()"
.\multi_offer_generator_old.py,81,cat,"('Call', ('Attr', ""p.get('category', 'Sonstiges')"", 'lower'), (), ())","('Call', 0, 0)",p,"cat = p.get(""category"", ""Sonstiges"").lower()"
.\multi_offer_generator_old.py,441,cat,"('Call', ('Attr', ""p.get('category', 'Sonstiges')"", 'lower'), (), ())","('Call', 0, 0)",p,"cat = p.get(""category"", ""Sonstiges"").lower()"
.\heatpump_pricing.py,76,cat,"('Call', ('Name', '_norm'), (('Call', ('Attr', 'p', 'get'), (('Const', ""'category'""), ('Const', ""''"")), ()),), ())","('Call', 1, 0)","_norm,p","cat = _norm(p.get(""category"", """"))"
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,27,cat,"('Call', ('Name', '_norm'), (('Call', ('Attr', 'p', 'get'), (('Const', ""'category'""), ('Const', ""''"")), ()),), ())","('Call', 1, 0)","_norm,p","cat = _norm(p.get(""category"", """"))"
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,27,cat,"('Call', ('Name', '_norm'), (('Call', ('Attr', 'p', 'get'), (('Const', ""'category'""), ('Const', ""''"")), ()),), ())","('Call', 1, 0)","_norm,p","cat = _norm(p.get(""category"", """"))"
.\pdf_styles.py,415,categories,"('Call', ('Attr', 'data', 'get'), (('Const', ""'categories'""), ('List', ())), ())","('Call', 2, 0)",data,"categories = data.get('categories', [])"
.\product_db.py,346,categories,"('Call', ('Attr', 'product_db', 'list_product_categories'), (), ())","('Call', 0, 0)",product_db,categories = product_db.list_product_categories()
.\multi_offer_generator.py,761,categories,"('List', (('Const', ""'module'""), ('Const', ""'inverter'""), ('Const', ""'storage'"")))","('List', 3)",,"categories = [""module"", ""inverter"", ""storage""]"
.\analysis.py,1421,categories,"('Subscript', ('Name', 'data'), ('Const', ""'categories'""))","('Subscript',)",data,"categories = data[""categories""]"
.\tools\import_module_attributes_generic.py,290,category,"('Call', ('Attr', ""norm.get('category') or default_category or 'Modul'"", 'strip'), (), ())","('Call', 0, 0)","default_category,norm","category = (norm.get(""category"") or default_category or ""Modul"").strip()"
.\product_attributes.py,241,category,"('Call', ('Attr', ""row.get(category_col) or ''"", 'strip'), (), ())","('Call', 0, 0)","category_col,row",category = (row.get(category_col) or '').strip()
.\admin_product_attributes_ui.py,35,category,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Kategorie'""),), (('index', ('Const', '1')), ('options', ('List', (('Const', ""''""), ('Const', ""'Modul'""), ('Const', ""'Wechselrichter'""), ('Const', ""'Batteriespeicher'""))))))","('Call', 1, 2)",st,"category = st.selectbox(""Kategorie"", options=["""", ""Modul"", ""Wechselrichter"", ""Batteriespeicher""], index=1)"
.\admin_panel.py,785,category_options,"('Call', ('Name', 'sorted'), (('Other', 'SetComp'),), ())","('Call', 1, 0)","all_products_for_attr,p,sorted",category_options = sorted({(p.get('category') or '').strip() for p in all_products_for_attr if p.get('category')})
.\admin_panel.py,782,category_options,"('List', ())","('List', 0)",,category_options = []
.\admin_panel.py,780,category_options,"('Other', 'IfExp')","('Other', 'IfExp')","callable,list_product_categories_func",category_options = list_product_categories_func() if callable(list_product_categories_func) else []
.\calculations.py,1868,cf_combo,"('Sub', ('Add', (('Mult', (('Const', '0.8'), ('USub', ('Name', 'base_investment')))), ('Name', 'annual_benefit'))), ('Mult', (('Const', '0.005'), ('Const', '0.7'), ('Name', 'base_investment'))))","('Sub', ('Add', (('Mult', (('Const',), ('USub', ('Name',)))), ('Name',))), ('Mult', (('Const',), ('Const',), ('Name',))))","annual_benefit,base_investment",cf_combo = (
.\calculations.py,1874,cf_combo,"('Sub', ('Add', (('Name', 'annual_benefit'), ('Subscript', ('Subscript', ('Name', 'scenarios'), ('Const', ""'Kombination'"")), ('USub', ('Const', '1'))))), ('Mult', (('Const', '0.005'), ('Const', '0.7'), ('Name', 'base_investment'))))","('Sub', ('Add', (('Name',), ('Subscript',))), ('Mult', (('Const',), ('Const',), ('Name',))))","annual_benefit,base_investment,scenarios",cf_combo = (
.\calculations.py,1861,cf_grant,"('Add', (('Mult', (('Const', '0.9'), ('USub', ('Name', 'base_investment')))), ('Name', 'annual_benefit')))","('Add', (('Mult', (('Const',), ('USub', ('Name',)))), ('Name',)))","annual_benefit,base_investment",cf_grant = -base_investment * 0.9 + annual_benefit
.\calculations.py,1863,cf_grant,"('Add', (('Name', 'annual_benefit'), ('Subscript', ('Subscript', ('Name', 'scenarios'), ('Const', ""'Zuschuss 10%'"")), ('USub', ('Const', '1')))))","('Add', (('Name',), ('Subscript',)))","annual_benefit,scenarios","cf_grant = scenarios[""Zuschuss 10%""][-1] + annual_benefit"
.\calculations.py,1846,cf_kfw,"('Sub', ('Add', (('Mult', (('Const', '0.2'), ('USub', ('Name', 'base_investment')))), ('Name', 'annual_benefit'))), ('Mult', (('Const', '0.01'), ('Const', '0.8'), ('Name', 'base_investment'))))","('Sub', ('Add', (('Mult', (('Const',), ('USub', ('Name',)))), ('Name',))), ('Mult', (('Const',), ('Const',), ('Name',))))","annual_benefit,base_investment",cf_kfw = (
.\calculations.py,1852,cf_kfw,"('Sub', ('Add', (('Name', 'annual_benefit'), ('Subscript', ('Subscript', ('Name', 'scenarios'), ('Const', ""'KfW-Kredit (1%)'"")), ('USub', ('Const', '1'))))), ('Mult', (('Const', '0.01'), ('Const', '0.8'), ('Name', 'base_investment'))))","('Sub', ('Add', (('Name',), ('Subscript',))), ('Mult', (('Const',), ('Const',), ('Name',))))","annual_benefit,base_investment,scenarios",cf_kfw = (
.\calculations.py,1841,cf_none,"('Add', (('Name', 'annual_benefit'), ('Subscript', ('Subscript', ('Name', 'scenarios'), ('Const', ""'Ohne Förderung'"")), ('USub', ('Const', '1')))))","('Add', (('Name',), ('Subscript',)))","annual_benefit,scenarios","cf_none = scenarios[""Ohne Förderung""][-1] + annual_benefit"
.\calculations.py,1839,cf_none,"('Add', (('Name', 'annual_benefit'), ('USub', ('Name', 'base_investment'))))","('Add', (('Name',), ('USub', ('Name',))))","annual_benefit,base_investment",cf_none = -base_investment + annual_benefit
.\pdf_template_engine\placeholders.py,775,charge_sum,"('Call', ('Name', 'float'), (('Name', 'battery_expected_annual_kwh'),), ())","('Call', 1, 0)","battery_expected_annual_kwh,float",charge_sum = float(battery_expected_annual_kwh)
.\pdf_template_engine\placeholders.py,797,charge_sum,"('Call', ('Name', 'min'), (('Name', 'charge_sum'), ('Call', ('Name', 'max'), (('Const', '0.0'), ('Sub', ('Name', 'annual_prod_float'), ('Name', 'direct_sc_sum'))), ())), ())","('Call', 2, 0)","annual_prod_float,charge_sum,direct_sc_sum,max,min","charge_sum = min(charge_sum, max(0.0, annual_prod_float - direct_sc_sum))"
.\pdf_template_engine\placeholders.py,768,charge_sum,"('Call', ('Name', 'sum'), (('Other', 'GeneratorExp'),), ())","('Call', 1, 0)","float,monthly_storage_charge,sum,v",charge_sum = sum(float(v or 0) for v in monthly_storage_charge)
.\analysis.py,5394,chart_cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'len'), (('Name', 'modern_charts'),), ()),), ())","('Call', 1, 0)","len,modern_charts,st",chart_cols = st.columns(len(modern_charts))
.\central_pdf_system.py,1506,chart_cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,chart_cols = st.columns(2)
.\pdf_generator.py,1878,chart_config,"('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'chart_config'""), ('Dict', ())), ())","('Call', 2, 0)",inclusion_options,"chart_config = inclusion_options.get(""chart_config"", {})"
.\pdf_ui.py,533,chart_config,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'chart_config'""), ('Dict', ())), ())","('Call', 2, 0)",st,"chart_config = st.session_state.get('chart_config', {})"
.\doc_output.py,374,chart_config,"('Dict', (('KV', ('Const', ""'animate_charts'""), ('Name', 'animate_charts')), ('KV', ('Const', ""'chart_resolution'""), ('Name', 'chart_resolution')), ('KV', ('Const', ""'chart_style_detailed'""), ('Name', 'chart_style')), ('KV', ('Const', ""'chart_types'""), ('Name', 'chart_types')), ('KV', ('Const', ""'color_mapping'""), ('Name', 'color_mapping')), ('KV', ('Const', ""'explode_slices'""), ('Name', 'explode_slices')), ('KV', ('Const', ""'gradient_effects'""), ('Name', 'gradient_effects')), ('KV', ('Const', ""'highlight_segments'""), ('Name', 'highlight_segments')), ('KV', ('Const', ""'label_rotation'""), ('Name', 'label_rotation')), ('KV', ('Const', ""'rounded_corners'""), ('Name', 'rounded_corners')), ('KV', ('Const', ""'shadow_effects'""), ('Name', 'shadow_effects')), ('KV', ('Const', ""'show_absolute'""), ('Name', 'show_absolute')), ('KV', ('Const', ""'show_legend'""), ('Name', 'show_legend')), ('KV', ('Const', ""'show_percentages'""), ('Name', 'show_percentages')), ('KV', ('Const', ""'show_values'""), ('Name', 'show_values')), ('KV', ('Const', ""'title_size'""), ('Name', 'title_size')), ('KV', ('Const', ""'transparency'""), ('Name', 'transparency')), ('KV', ('Const', ""'use_3d_effect'""), ('Name', 'use_3d_effect'))))","('Dict', 18)","animate_charts,chart_resolution,chart_style,chart_types,color_mapping,explode_slices,gradient_effects,highlight_segments,label_rotation,rounded_corners,shadow_effects,show_absolute,show_legend,show_percentages,show_values,title_size,transparency,use_3d_effect",chart_config = {
.\analysis.py,2758,chart_data,"('Dict', (('KV', ('Const', ""'categories'""), ('Name', 'anbieter')), ('KV', ('Const', ""'series'""), ('List', (('Dict', (('KV', ('Const', ""'data'""), ('Name', 'gesamt')), ('KV', ('Const', ""'name'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'annual_costs_label_switcher'""), ('Const', ""'Jahreskosten (€)'"")), ())))),)))))","('Dict', 2)","anbieter,gesamt,get_text,texts",chart_data = {
.\analysis.py,3957,chart_data,"('Dict', (('KV', ('Const', ""'categories'""), ('Name', 'jahre_sim_labels')), ('KV', ('Const', ""'series'""), ('List', (('Dict', (('KV', ('Const', ""'data'""), ('Name', 'eigen_sim_kwh')), ('KV', ('Const', ""'name'""), ('Const', ""'Eigenverbrauch (kWh)'"")))), ('Dict', (('KV', ('Const', ""'data'""), ('Name', 'einspeisung_sim_kwh')), ('KV', ('Const', ""'name'""), ('Const', ""'Einspeisung (kWh)'"")))))))))","('Dict', 2)","eigen_sim_kwh,einspeisung_sim_kwh,jahre_sim_labels",chart_data = {
.\analysis.py,4293,chart_data,"('Dict', (('KV', ('Const', ""'categories'""), ('Name', 'labels')), ('KV', ('Const', ""'series'""), ('List', ()))))","('Dict', 2)",labels,chart_data = {
.\analysis.py,4402,chart_data,"('Dict', (('KV', ('Const', ""'categories'""), ('Name', 'month_labels')), ('KV', ('Const', ""'series'""), ('List', (('Dict', (('KV', ('Const', ""'data'""), ('Name', 'kosten_vorher')), ('KV', ('Const', ""'name'""), ('Const', ""'Kosten Vorher (ohne Photovoltaik)'"")))), ('Dict', (('KV', ('Const', ""'data'""), ('Name', 'kosten_nachher')), ('KV', ('Const', ""'name'""), ('Const', ""'Kosten Nachher (mit Photovoltaik)'"")))))))))","('Dict', 2)","kosten_nachher,kosten_vorher,month_labels",chart_data = {
.\analysis.py,4028,chart_data,"('Dict', (('KV', ('Const', ""'categories'""), ('Other', 'ListComp')), ('KV', ('Const', ""'series'""), ('List', ()))))","('Dict', 2)","jahr,jahre_axis","chart_data = {""categories"": [f""Jahr {jahr}"" for jahr in jahre_axis], ""series"": []}"
.\analysis.py,5039,chart_data,"('Dict', (('KV', ('Const', ""'labels'""), ('Call', ('Name', 'list'), (('Name', 'labels'),), ())), ('KV', ('Const', ""'values'""), ('Call', ('Name', 'list'), (('Name', 'values'),), ()))))","('Dict', 2)","labels,list,values","chart_data = {""labels"": list(labels), ""values"": list(values)}"
.\analysis.py,5191,chart_data,"('Dict', (('KV', ('Const', ""'labels'""), ('Call', ('Name', 'list'), (('Name', 'labels'),), ())), ('KV', ('Const', ""'values'""), ('Call', ('Name', 'list'), (('Name', 'values'),), ()))))","('Dict', 2)","labels,list,values","chart_data = {""labels"": list(labels), ""values"": list(values)}"
.\analysis.py,2172,chart_data,"('Dict', (('KV', ('Const', ""'labels'""), ('Name', 'days')), ('KV', ('Const', ""'values'""), ('Name', 'weekly_production'))))","('Dict', 2)","days,weekly_production","chart_data = {""labels"": days, ""values"": weekly_production}"
.\analysis.py,2462,chart_data,"('Dict', (('KV', ('Const', ""'labels'""), ('Name', 'month_labels')), ('KV', ('Const', ""'values'""), ('Name', 'einnahmen'))))","('Dict', 2)","einnahmen,month_labels","chart_data = {""labels"": month_labels, ""values"": einnahmen}"
.\analysis.py,2270,chart_data,"('Dict', (('KV', ('Const', ""'labels'""), ('Name', 'month_labels')), ('KV', ('Const', ""'values'""), ('Name', 'production_data'))))","('Dict', 2)","month_labels,production_data","chart_data = {""labels"": month_labels, ""values"": production_data}"
.\analysis.py,2345,chart_data,"('Dict', (('KV', ('Const', ""'labels'""), ('Name', 'scenarios')), ('KV', ('Const', ""'values'""), ('Name', 'roi_values'))))","('Dict', 2)","roi_values,scenarios","chart_data = {""labels"": scenarios, ""values"": roi_values}"
.\analysis.py,3609,chart_data,"('Dict', (('KV', ('Const', ""'labels'""), ('Other', 'ListComp')), ('KV', ('Const', ""'values'""), ('Name', 'co2_savings_tonnes_per_year')), ('KV', ('Const', ""'x'""), ('Name', 'jahre_axis')), ('KV', ('Const', ""'y'""), ('Name', 'co2_savings_tonnes_per_year'))))","('Dict', 4)","co2_savings_tonnes_per_year,jahre_axis,year",chart_data = {
.\analysis.py,2785,chart_data,"('Dict', (('KV', ('Const', ""'labels'""), ('Other', 'ListComp')), ('KV', ('Const', ""'x'""), ('Name', 'anbieter')), ('KV', ('Const', ""'y'""), ('Name', 'gesamt'))))","('Dict', 3)","anbieter,arbeitspreis,enumerate,gesamt,grundgebuehr,i,name",chart_data = {
.\analysis.py,3740,chart_data,"('Dict', (('KV', ('Const', ""'series_data'""), ('List', (('Dict', (('KV', ('Const', ""'customdata'""), ('Other', 'ListComp')), ('KV', ('Const', ""'hovertemplate'""), ('Const', ""'<b>Maßnahme:</b> %{x}<br><b>Kosten:</b> %{customdata[0]:.2f} €<br><b>Nutzen:</b> %{customdata[1]:.2f} €<br><b>Rendite:</b> %{customdata[2]:.2f}%<extra></extra>'"")), ('KV', ('Const', ""'name'""), ('Const', ""'Gesamtrendite (%)'"")), ('KV', ('Const', ""'x'""), ('Name', 'massnahmen_labels')), ('KV', ('Const', ""'y'""), ('Name', 'effizienz_roi')))),))), ('KV', ('Const', ""'x'""), ('Name', 'massnahmen_labels')), ('KV', ('Const', ""'y'""), ('Name', 'effizienz_roi'))))","('Dict', 3)","effizienz_roi,kosten,kosten_abs,massnahmen_labels,nutzen,nutzwert_simuliert_abs,roi,zip",chart_data = {
.\analysis.py,4201,chart_data,"('Dict', (('KV', ('Const', ""'series_data'""), ('List', (('Dict', (('KV', ('Const', ""'customdata'""), ('Other', 'ListComp')), ('KV', ('Const', ""'hovertemplate'""), ('Const', ""'<b>Projekt:</b> %{x}<br><b>Investition:</b> %{customdata[0]:.2f} €<br><b>Jährl. Nutzen:</b> %{customdata[1]:.2f} €<br><b>Jährl. ROI:</b> %{customdata[2]:.2f}%<extra></extra>'"")), ('KV', ('Const', ""'name'""), ('Const', ""'ROI-Vergleich (%)'"")), ('KV', ('Const', ""'x'""), ('Name', 'labels')), ('KV', ('Const', ""'y'""), ('Name', 'roi_opts')))),))), ('KV', ('Const', ""'x'""), ('Name', 'labels')), ('KV', ('Const', ""'y'""), ('Name', 'roi_opts'))))","('Dict', 3)","ben,benefit_opts,inv,invest_opts,labels,roi,roi_opts,zip",chart_data = {
.\analysis.py,3833,chart_data,"('Dict', (('KV', ('Const', ""'series_data'""), ('List', (('Dict', (('KV', ('Const', ""'name'""), ('Const', ""'Simulierter Nutzenverlauf'"")), ('KV', ('Const', ""'x'""), ('Other', 'ListComp')), ('KV', ('Const', ""'y'""), ('Call', ('Attr', 'nutzwert_illustrativ_eur', 'tolist'), (), ())))),))), ('KV', ('Const', ""'x'""), ('Other', 'ListComp')), ('KV', ('Const', ""'y'""), ('Call', ('Attr', 'nutzwert_illustrativ_eur', 'tolist'), (), ()))))","('Dict', 3)","cap,kapazitaet_range_kwh,nutzwert_illustrativ_eur",chart_data = {
.\analysis.py,2891,chart_data,"('Dict', (('KV', ('Const', ""'series_data'""), ('List', (('Dict', (('KV', ('Const', ""'x'""), ('Other', 'ListComp')), ('KV', ('Const', ""'y'""), ('Name', 'co2_savings_tonnes_per_year')))), ('Dict', (('KV', ('Const', ""'x'""), ('Other', 'ListComp')), ('KV', ('Const', ""'y'""), ('Name', 'wert_co2_eur_per_year'))))))), ('KV', ('Const', ""'series_names'""), ('List', (('Const', ""'CO₂-Einsparung (t)'""), ('Const', ""'Monetärer Wert (€)'"")))), ('KV', ('Const', ""'x'""), ('Other', 'ListComp')), ('KV', ('Const', ""'y'""), ('List', (('Name', 'co2_savings_tonnes_per_year'), ('Name', 'wert_co2_eur_per_year'))))))","('Dict', 4)","co2_savings_tonnes_per_year,jahre_axis,wert_co2_eur_per_year,year",chart_data = {
.\analysis.py,4142,chart_data,"('Dict', (('KV', ('Const', ""'x'""), ('Name', 'month_labels')), ('KV', ('Const', ""'y'""), ('Name', 'ev_monat_grad'))))","('Dict', 2)","ev_monat_grad,month_labels","chart_data = {""x"": month_labels, ""y"": ev_monat_grad}"
.\analysis.py,4479,chart_data,"('Dict', (('KV', ('Const', ""'x'""), ('Other', 'ListComp')), ('KV', ('Const', ""'y'""), ('Name', 'kum_vorteile'))))","('Dict', 2)","int,jahre_axis,kum_vorteile,year","chart_data = {""x"": [f""Jahr {int(year)}"" for year in jahre_axis], ""y"": kum_vorteile}"
.\analysis.py,2120,chart_data,"('Dict', (('KV', ('Const', ""'x'""), ('Other', 'ListComp')), ('KV', ('Const', ""'y'""), ('Name', 'power'))))","('Dict', 2)","h,hours,power","chart_data = {""x"": [f""{h}:00"" for h in hours], ""y"": power}"
.\pdf_generator.py,2444,chart_display_title,"('Call', ('Name', '_sanitize_chart_title'), (('Name', 'chart_display_title'),), ())","('Call', 1, 0)","_sanitize_chart_title,chart_display_title",chart_display_title = _sanitize_chart_title(chart_display_title)
.\pdf_generator.py,2443,chart_display_title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Subscript', ('Name', 'config'), ('Const', ""'title_key'"")), ('Subscript', ('Name', 'config'), ('Const', ""'default_title'""))), ())","('Call', 3, 0)","config,get_text,texts","chart_display_title = get_text(texts, config[""title_key""], config[""default_title""])"
.\pdf_ui.py,393,chart_key_to_friendly_name_map,"('Dict', (('KV', ('Const', ""'amortisation_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_Photovoltaikvis_amort'""), ('Const', ""'Photovoltaik Visuals: Amortisation'"")), ())), ('KV', ('Const', ""'break_even_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_pvvis_breakeven'""), ('Const', ""'PV Visuals: Break-Even'"")), ())), ('KV', ('Const', ""'co2_savings_value_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_co2value_3d'""), ('Const', ""'CO2-Ersparnis vs. Wert (3D)'"")), ())), ('KV', ('Const', ""'consumption_coverage_pie_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_consum_coverage_pie'""), ('Const', ""'Verbrauchsdeckung (Kreis)'"")), ())), ('KV', ('Const', ""'cost_growth_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_costgrowth_3d'""), ('Const', ""'Stromkostensteigerung (3D)'"")), ())), ('KV', ('Const', ""'cost_projection_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_cost_projection'""), ('Const', ""'Stromkosten-Hochrechnung (2D)'"")), ())), ('KV', ('Const', ""'cumulative_cashflow_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_cum_cashflow'""), ('Const', ""'Kumulierter Cashflow (2D)'"")), ())), ('KV', ('Const', ""'daily_production_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_daily_3d'""), ('Const', ""'Tagesproduktion (3D)'"")), ())), ('KV', ('Const', ""'feed_in_revenue_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_feedin_3d'""), ('Const', ""'Einspeisevergütung (3D)'"")), ())), ('KV', ('Const', ""'income_projection_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_incomeproj_3d'""), ('Const', ""'Einnahmenprognose (3D)'"")), ())), ('KV', ('Const', ""'investment_value_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_investval_3D'""), ('Const', ""'Investitionsnutzwert (3D)'"")), ())), ('KV', ('Const', ""'monthly_prod_cons_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_monthly_compare'""), ('Const', ""'Monatl. Produktion/Verbrauch (2D)'"")), ())), ('KV', ('Const', ""'prod_vs_cons_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_prodcons_3d'""), ('Const', ""'Verbr. vs. Prod. (3D)'"")), ())), ('KV', ('Const', ""'project_roi_matrix_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_roi_matrix_3d'""), ('Const', ""'Projektrendite-Matrix (3D)'"")), ())), ('KV', ('Const', ""'pv_usage_pie_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_pv_usage_pie'""), ('Const', ""'PV-Nutzung (Kreis)'"")), ())), ('KV', ('Const', ""'roi_comparison_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_roicompare_3d'""), ('Const', ""'ROI-Vergleich (3D)'"")), ())), ('KV', ('Const', ""'scenario_comparison_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_scenariocomp_3d'""), ('Const', ""'Szenarienvergleich (3D)'"")), ())), ('KV', ('Const', ""'selfuse_ratio_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_selfuseratio_3d'""), ('Const', ""'Eigenverbrauchsgrad (3D)'"")), ())), ('KV', ('Const', ""'selfuse_stack_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_selfusestack_3d'""), ('Const', ""'Eigenverbr. vs. Einspeis. (3D)'"")), ())), ('KV', ('Const', ""'storage_effect_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_storageeff_3d'""), ('Const', ""'Speicherwirkung (3D)'"")), ())), ('KV', ('Const', ""'tariff_comparison_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_tariffcomp_3d'""), ('Const', ""'Vorher/Nachher Stromkosten (3D)'"")), ())), ('KV', ('Const', ""'tariff_cube_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_tariffcube_3d'""), ('Const', ""'Tarifvergleich (3D)'"")), ())), ('KV', ('Const', ""'weekly_production_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_weekly_3d'""), ('Const', ""'Wochenproduktion (3D)'"")), ())), ('KV', ('Const', ""'yearly_production_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_pvvis_yearly'""), ('Const', ""'Photovoltaik Visuals: Jahresproduktion'"")), ())), ('KV', ('Const', ""'yearly_production_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_yearly_3d_bar'""), ('Const', ""'Jahresproduktion (3D-Balken)'"")), ()))))","('Dict', 25)","get_text_pdf_ui,texts","chart_key_to_friendly_name_map = {'monthly_prod_cons_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_monthly_compare"", ""Monatl. Produktion/Verbrauch (2D)""),'cost_projection_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_cost_projection"", ""Stromkosten-Hochrechnung (2D)""),'cumulative_cashflow_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_cum_cashflow"", ""Kumulierter Cashflow (2D)""),'consumption_coverage_pie_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_consum_coverage_pie"", ""Verbrauchsdeckung (Kreis)""),'pv_usage_pie_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_pv_usage_pie"", ""PV-Nutzung (Kreis)""),'daily_production_switcher_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_daily_3d"", ""Tagesproduktion (3D)""),'weekly_production_switcher_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_weekly_3d"", ""Wochenproduktion (3D)""),'yearly_production_switcher_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_yearly_3d_bar"", ""Jahresproduktion (3D-Balken)""),'project_roi_matrix_switcher_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_roi_matrix_3d"", ""Projektrendite-Matrix (3D)""),'feed_in_revenue_switcher_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_feedin_3d"", ""Einspeisevergütung (3D)""),'prod_vs_cons_switcher_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_prodcons_3d"", ""Verbr. vs. Prod. (3D)""),'tariff_cube_switcher_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_tariffcube_3d"", ""Tarifvergleich (3D)""),'co2_savings_value_switcher_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_co2value_3d"", ""CO2-Ersparnis vs. Wert (3D)""),'investment_value_switcher_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_investval_3D"", ""Investitionsnutzwert (3D)""),'storage_effect_switcher_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_storageeff_3d"", ""Speicherwirkung (3D)""),'selfuse_stack_switcher_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_selfusestack_3d"", ""Eigenverbr. vs. Einspeis. (3D)""),'cost_growth_switcher_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_costgrowth_3d"", ""Stromkostensteigerung (3D)""),'selfuse_ratio_switcher_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_selfuseratio_3d"", ""Eigenverbrauchsgrad (3D)""),'roi_comparison_switcher_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_roicompare_3d"", ""ROI-Vergleich (3D)""),'scenario_comparison_switcher_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_scenariocomp_3d"", ""Szenarienvergleich (3D)""),'tariff_comparison_switcher_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_tariffcomp_3d"", ""Vorher/Nachher Stromkosten (3D)""),'income_projection_switcher_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_incomeproj_3d"", ""Einnahmenprognose (3D)""),'yearly_production_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_pvvis_yearly"", ""Photovoltaik Visuals: Jahresproduktion""),'break_even_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_pvvis_breakeven"", ""PV Visuals: Break-Even""),'amortisation_chart_bytes': get_text_pdf_ui(texts, ""pdf_chart_label_Photovoltaikvis_amort"", ""Photovoltaik Visuals: Amortisation"")}"
.\doc_output.py,2074,chart_key_to_friendly_name_map,"('Dict', (('KV', ('Const', ""'amortisation_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_pvvis_amort'""), ('Const', ""'PV Visuals: Amortisation'"")), ())), ('KV', ('Const', ""'break_even_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_pvvis_breakeven'""), ('Const', ""'PV Visuals: Break-Even'"")), ())), ('KV', ('Const', ""'co2_savings_value_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_co2value_3d'""), ('Const', ""'CO2-Ersparnis vs. Wert (3D)'"")), ())), ('KV', ('Const', ""'consumption_coverage_pie_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_consum_coverage_pie'""), ('Const', ""'Verbrauchsdeckung (Kreis)'"")), ())), ('KV', ('Const', ""'cost_growth_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_costgrowth_3d'""), ('Const', ""'Stromkostensteigerung (3D)'"")), ())), ('KV', ('Const', ""'cost_projection_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_cost_projection'""), ('Const', ""'Stromkosten-Hochrechnung (2D)'"")), ())), ('KV', ('Const', ""'cumulative_cashflow_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_cum_cashflow'""), ('Const', ""'Kumulierter Cashflow (2D)'"")), ())), ('KV', ('Const', ""'daily_production_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_daily_3d'""), ('Const', ""'Tagesproduktion (3D)'"")), ())), ('KV', ('Const', ""'feed_in_revenue_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_feedin_3d'""), ('Const', ""'Einspeisevergütung (3D)'"")), ())), ('KV', ('Const', ""'income_projection_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_incomeproj_3d'""), ('Const', ""'Einnahmenprognose (3D)'"")), ())), ('KV', ('Const', ""'investment_value_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_investval_3D'""), ('Const', ""'Investitionsnutzwert (3D)'"")), ())), ('KV', ('Const', ""'monthly_prod_cons_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_monthly_compare'""), ('Const', ""'Monatl. Produktion/Verbrauch (2D)'"")), ())), ('KV', ('Const', ""'prod_vs_cons_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_prodcons_3d'""), ('Const', ""'Verbr. vs. Prod. (3D)'"")), ())), ('KV', ('Const', ""'project_roi_matrix_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_roi_matrix_3d'""), ('Const', ""'Projektrendite-Matrix (3D)'"")), ())), ('KV', ('Const', ""'pv_usage_pie_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_pv_usage_pie'""), ('Const', ""'PV-Nutzung (Kreis)'"")), ())), ('KV', ('Const', ""'roi_comparison_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_roicompare_3d'""), ('Const', ""'ROI-Vergleich (3D)'"")), ())), ('KV', ('Const', ""'scenario_comparison_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_scenariocomp_3d'""), ('Const', ""'Szenarienvergleich (3D)'"")), ())), ('KV', ('Const', ""'selfuse_ratio_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_selfuseratio_3d'""), ('Const', ""'Eigenverbrauchsgrad (3D)'"")), ())), ('KV', ('Const', ""'selfuse_stack_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_selfusestack_3d'""), ('Const', ""'Eigenverbr. vs. Einspeis. (3D)'"")), ())), ('KV', ('Const', ""'storage_effect_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_storageeff_3d'""), ('Const', ""'Speicherwirkung (3D)'"")), ())), ('KV', ('Const', ""'tariff_comparison_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_tariffcomp_3d'""), ('Const', ""'Vorher/Nachher Stromkosten (3D)'"")), ())), ('KV', ('Const', ""'tariff_cube_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_tariffcube_3d'""), ('Const', ""'Tarifvergleich (3D)'"")), ())), ('KV', ('Const', ""'weekly_production_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_weekly_3d'""), ('Const', ""'Wochenproduktion (3D)'"")), ())), ('KV', ('Const', ""'yearly_production_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_pvvis_yearly'""), ('Const', ""'PV Visuals: Jahresproduktion'"")), ())), ('KV', ('Const', ""'yearly_production_switcher_chart_bytes'""), ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_chart_label_yearly_3d_bar'""), ('Const', ""'Jahresproduktion (3D-Balken)'"")), ()))))","('Dict', 25)","get_text_pdf_ui,texts",chart_key_to_friendly_name_map = {
.\doc_output.py,476,chart_style,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""' Diagrammstil'""), ('List', (('Const', ""'Modern'""), ('Const', ""'Business'""), ('Const', ""'Minimalist'""), ('Const', ""'Colorful'"")))), (('key', ('Const', ""'pdf_chart_style'"")),))","('Call', 2, 1)",st,"chart_style = st.selectbox("" Diagrammstil"","
.\doc_output.py,297,chart_style,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""' Stil'""), ('List', (('Const', ""'Modern'""), ('Const', ""'Classic'""), ('Const', ""'Minimal'""), ('Const', ""'Bold'"")))), (('key', ('Const', ""'pdf_chart_style_detailed'"")),))","('Call', 2, 1)",st,"chart_style = st.selectbox("" Stil"", [""Modern"", ""Classic"", ""Minimal"", ""Bold""], key=""pdf_chart_style_detailed"")"
.\pdf_styles.py,928,chart_style,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Stil auswählen'""),), (('format_func', ('Other', 'Lambda')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'self.chart_styles', 'keys'), (), ()),), ()))))","('Call', 1, 2)","list,self,st,x",chart_style = st.selectbox(
.\analysis.py,2051,chart_type,"('Call', ('Attr', 'st', 'selectbox'), (('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'daily_prod_chart_type_label'""), ('Const', ""'Diagrammtyp'"")), ()), ('List', (('Const', ""'Säulen'""), ('Const', ""'Balken'""), ('Const', ""'Strich'""), ('Const', ""'Kreis'""), ('Const', ""'Donut'"")))), (('key', ('Const', ""'daily_prod_chart_type_switcher'"")),))","('Call', 2, 1)","get_text,st,texts",chart_type = st.selectbox(
.\pdf_styles.py,707,chart_type,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Diagrammtyp'""),), (('format_func', ('Other', 'Lambda')), ('options', ('List', (('Const', ""'monthly_generation_enhanced'""), ('Const', ""'cost_breakdown_3d'""), ('Const', ""'amortization_timeline'""), ('Const', ""'energy_flow'""), ('Const', ""'roi_dashboard'""))))))","('Call', 1, 2)","st,x",chart_type = st.selectbox(
.\analysis.py,1046,chart_type,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Diagrammtyp:'""), ('List', (('Const', ""'Balken'""), ('Const', ""'Säulen'""), ('Const', ""'Kreis'""), ('Const', ""'Donut'""), ('Const', ""'Strich'"")))), (('index', ('Other', 'IfExp')), ('key', ('Other', 'JoinedStr'))))","('Call', 2, 2)","chart_key,default_chart_type,st",chart_type = st.selectbox(
.\analysis.py,1319,chart_type,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Diagrammtyp:'""), ('List', (('Const', ""'Säulen'""), ('Const', ""'Balken'""), ('Const', ""'Kreis'""), ('Const', ""'Donut'"")))), (('key', ('Other', 'JoinedStr')),))","('Call', 2, 1)","chart_key,st",chart_type = st.selectbox(
.\analysis.py,1383,chart_type,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Diagrammtyp:'""), ('List', (('Const', ""'Säulen'""), ('Const', ""'Balken'""), ('Const', ""'Strich'""), ('Const', ""'Kreis'""), ('Const', ""'Donut'"")))), (('index', ('Other', 'IfExp')), ('key', ('Other', 'JoinedStr'))))","('Call', 2, 2)","chart_key,default_chart_type,st",chart_type = st.selectbox(
.\analysis.py,2613,chart_type,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Diagrammtyp:'""), ('List', (('Const', ""'Säulen'""), ('Const', ""'Strich'""), ('Const', ""'Balken'"")))), (('key', ('Const', ""'prod_vs_cons_type'"")),))","('Call', 2, 1)",st,chart_type = st.selectbox(
.\doc_output.py,232,chart_type,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Wählen Sie den Diagramm-Typ'""),), (('format_func', ('Other', 'Lambda')), ('index', ('Const', '0')), ('key', ('Const', ""'pdf_chart_type'"")), ('options', ('List', (('Const', ""'CIRCLE'""), ('Const', ""'DONUT'""), ('Const', ""'BAR'""), ('Const', ""'COLUMN'""), ('Const', ""'LINE'""), ('Const', ""'AREA'""), ('Const', ""'PIE'""))))))","('Call', 1, 4)","st,x",chart_type = st.selectbox(
.\doc_output.py,1683,chart_type,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Wählen Sie den Diagramm-Typ'""),), (('index', ('Const', '0')), ('key', ('Const', ""'pdf_chart_type_select'"")), ('options', ('List', (('Const', ""'KREISDIAGRAMM'""), ('Const', ""'DONUT'""), ('Const', ""'BALKENDIAGRAMM'""), ('Const', ""'LINIENDIAGRAMM'""), ('Const', ""'SÄULENDIAGRAMM'""))))))","('Call', 1, 3)",st,chart_type = st.selectbox(
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,114,chart_width,"('Const', '230.0')","('Const',)",,chart_width = 230.0
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,132,chart_width,"('Const', '230.0')","('Const',)",,chart_width = 230.0
.\pdf_template_engine\dynamic_overlay.py,627,chart_width,"('Const', '230.0')","('Const',)",,chart_width = 230.0
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,114,chart_width,"('Const', '230.0')","('Const',)",,chart_width = 230.0
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,132,chart_width,"('Const', '230.0')","('Const',)",,chart_width = 230.0
.\pdf_generator.py,2451,chart_width,"('Mult', (('Const', '0.6'), ('Name', 'available_width_content')))","('Mult', (('Const',), ('Name',)))",available_width_content,chart_width = available_width_content * 0.6  # Reduziert von 0.7 auf 0.6
.\multi_offer_generator.py,1074,charts_to_include,"('Other', 'IfExp')","('Other', 'IfExp')","available_charts,pdf_options","charts_to_include = available_charts if pdf_options.get(""include_charts"", True) else []"
.\multi_offer_generator.py,1077,charts_to_include,"('Other', 'ListComp')","('Other', 'ListComp')","any,c,charts_to_include,vis_key",charts_to_include = [c for c in charts_to_include if not any(
.\admin_panel.py,1317,cheat_current,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'amortization_cheat_settings'""), ('Dict', (('KV', ('Const', ""'enabled'""), ('Const', 'False')), ('KV', ('Const', ""'mode'""), ('Const', ""'fixed'"")), ('KV', ('Const', ""'percent'""), ('Const', 'None')), ('KV', ('Const', ""'value_years'""), ('Const', 'None'))))), ())","('Call', 2, 0)",load_admin_setting_func,"cheat_current = load_admin_setting_func('amortization_cheat_settings', {""enabled"": False, ""mode"": ""fixed"", ""value_years"": None, ""percent"": None})"
.\admin_panel.py,1319,cheat_current,"('Dict', (('KV', ('Const', ""'enabled'""), ('Const', 'False')), ('KV', ('Const', ""'mode'""), ('Const', ""'fixed'"")), ('KV', ('Const', ""'percent'""), ('Const', 'None')), ('KV', ('Const', ""'value_years'""), ('Const', 'None'))))","('Dict', 4)",,"cheat_current = {""enabled"": False, ""mode"": ""fixed"", ""value_years"": None, ""percent"": None}"
.\analysis.py,407,cheated,"('Call', ('Name', 'max'), (('Const', '0.1'), ('Mult', (('Name', 'amortisation_years'), ('Sub', ('Const', '1'), ('Div', ('Name', 'pct'), ('Const', '100.0')))))), ())","('Call', 2, 0)","amortisation_years,max,pct","cheated = max(0.1, amortisation_years * (1 - pct / 100.0))"
.\calculations.py,3338,cheated,"('Call', ('Name', 'max'), (('Const', '0.1'), ('Mult', (('Name', 'original'), ('Sub', ('Const', '1'), ('Div', ('Name', 'pct'), ('Const', '100.0')))))), ())","('Call', 2, 0)","max,original,pct","cheated = max(0.1, original * (1 - pct / 100.0))"
.\analysis.py,399,cheated,"('Call', ('Name', 'max'), (('Const', '0.1'), ('Sub', ('Name', 'amortisation_years'), ('Name', 'red'))), ())","('Call', 2, 0)","amortisation_years,max,red","cheated = max(0.1, amortisation_years - red)"
.\calculations.py,3330,cheated,"('Call', ('Name', 'max'), (('Const', '0.1'), ('Sub', ('Name', 'original'), ('Name', 'red'))), ())","('Call', 2, 0)","max,original,red","cheated = max(0.1, original - red)"
.\analysis.py,387,cheated,"('Const', 'None')","('Const',)",,cheated = None
.\calculations.py,3318,cheated,"('Const', 'None')","('Const',)",,cheated = None
.\calculations.py,3325,cheated,"('Const', 'None')","('Const',)",,cheated = None
.\calculations.py,3332,cheated,"('Const', 'None')","('Const',)",,cheated = None
.\calculations.py,3340,cheated,"('Const', 'None')","('Const',)",,cheated = None
.\analysis.py,392,cheated,"('Name', 'val')","('Name',)",val,cheated = val
.\calculations.py,3323,cheated,"('Name', 'val')","('Name',)",val,cheated = val
.\pdf_template_engine\placeholders.py,1875,chem,"('Call', ('Attr', ""chem.replace('LiFePO5', 'LiFePO4').replace('Lifepo5', 'LiFePO4')"", 'replace'), (('Const', ""'LiFePo5'""), ('Const', ""'LiFePO4'"")), ())","('Call', 2, 0)",chem,"chem = chem.replace(""LiFePO5"", ""LiFePO4"").replace(""Lifepo5"", ""LiFePO4"").replace(""LiFePo5"", ""LiFePO4"")"
.\pdf_template_engine\placeholders.py,1873,chem,"('Call', ('Name', 'as_str'), (('Name', 'val'),), ())","('Call', 1, 0)","as_str,val",chem = as_str(val)
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,67,chosen,"('Call', ('Name', '_normalize_tariff_to_eur_per_kwh'), (('Call', ('Attr', 'trf', 'get'), (('Const', ""'ct_per_kwh'""),), ()),), ())","('Call', 1, 0)","_normalize_tariff_to_eur_per_kwh,trf","chosen = _normalize_tariff_to_eur_per_kwh(trf.get(""ct_per_kwh""))"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,89,chosen,"('Call', ('Name', '_normalize_tariff_to_eur_per_kwh'), (('Call', ('Attr', 'trf', 'get'), (('Const', ""'ct_per_kwh'""),), ()),), ())","('Call', 1, 0)","_normalize_tariff_to_eur_per_kwh,trf","chosen = _normalize_tariff_to_eur_per_kwh(trf.get(""ct_per_kwh""))"
.\pdf_template_engine\placeholders.py,106,chosen,"('Call', ('Name', '_normalize_tariff_to_eur_per_kwh'), (('Call', ('Attr', 'trf', 'get'), (('Const', ""'ct_per_kwh'""),), ()),), ())","('Call', 1, 0)","_normalize_tariff_to_eur_per_kwh,trf","chosen = _normalize_tariff_to_eur_per_kwh(trf.get(""ct_per_kwh""))"
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,67,chosen,"('Call', ('Name', '_normalize_tariff_to_eur_per_kwh'), (('Call', ('Attr', 'trf', 'get'), (('Const', ""'ct_per_kwh'""),), ()),), ())","('Call', 1, 0)","_normalize_tariff_to_eur_per_kwh,trf","chosen = _normalize_tariff_to_eur_per_kwh(trf.get(""ct_per_kwh""))"
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,89,chosen,"('Call', ('Name', '_normalize_tariff_to_eur_per_kwh'), (('Call', ('Attr', 'trf', 'get'), (('Const', ""'ct_per_kwh'""),), ()),), ())","('Call', 1, 0)","_normalize_tariff_to_eur_per_kwh,trf","chosen = _normalize_tariff_to_eur_per_kwh(trf.get(""ct_per_kwh""))"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,63,chosen,"('Const', 'None')","('Const',)",,chosen = None
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,85,chosen,"('Const', 'None')","('Const',)",,chosen = None
.\notwendig oder nicht\wichtig\repo_porter.py,553,chosen,"('Const', 'None')","('Const',)",,chosen: Optional[List[str]] = None
.\pdf_template_engine\placeholders.py,102,chosen,"('Const', 'None')","('Const',)",,chosen = None
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,63,chosen,"('Const', 'None')","('Const',)",,chosen = None
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,85,chosen,"('Const', 'None')","('Const',)",,chosen = None
.\tools\repo_porter.py,553,chosen,"('Const', 'None')","('Const',)",,chosen: Optional[List[str]] = None
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,81,chosen,"('Name', 'default_parts_under_10_eur_per_kwh')","('Name',)",default_parts_under_10_eur_per_kwh,chosen = default_parts_under_10_eur_per_kwh
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,103,chosen,"('Name', 'default_parts_under_10_eur_per_kwh')","('Name',)",default_parts_under_10_eur_per_kwh,chosen = default_parts_under_10_eur_per_kwh
.\pdf_template_engine\placeholders.py,120,chosen,"('Name', 'default_parts_under_10_eur_per_kwh')","('Name',)",default_parts_under_10_eur_per_kwh,chosen = default_parts_under_10_eur_per_kwh
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,81,chosen,"('Name', 'default_parts_under_10_eur_per_kwh')","('Name',)",default_parts_under_10_eur_per_kwh,chosen = default_parts_under_10_eur_per_kwh
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,103,chosen,"('Name', 'default_parts_under_10_eur_per_kwh')","('Name',)",default_parts_under_10_eur_per_kwh,chosen = default_parts_under_10_eur_per_kwh
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,77,chosen,"('Name', 'norm')","('Name',)",norm,chosen = norm
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,99,chosen,"('Name', 'norm')","('Name',)",norm,chosen = norm
.\pdf_template_engine\placeholders.py,116,chosen,"('Name', 'norm')","('Name',)",norm,chosen = norm
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,77,chosen,"('Name', 'norm')","('Name',)",norm,chosen = norm
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,99,chosen,"('Name', 'norm')","('Name',)",norm,chosen = norm
.\notwendig oder nicht\wichtig\repo_porter.py,557,chosen,"('Subscript', ('Name', 'b'), ('Other', 'Slice'))","('Subscript',)",b,chosen = b[1:]  # ohne Headerzeile
.\tools\repo_porter.py,557,chosen,"('Subscript', ('Name', 'b'), ('Other', 'Slice'))","('Subscript',)",b,chosen = b[1:]  # ohne Headerzeile
.\notwendig oder nicht\wichtig\repo_porter.py,186,cinfo,"('Call', ('Name', 'DefInfo'), (), (('decorators', ('Call', ('Name', 'collect_decorator_lines'), (('Name', 'n'),), ())), ('depends_on_local', ('Call', ('Name', 'set'), (), ())), ('end_lineno', ('Other', 'IfExp')), ('import_lines', ('Name', 'imports')), ('kind', ('Const', ""'class'"")), ('lineno', ('Attr', 'n', 'lineno')), ('module_rel', ('Name', 'mod_rel')), ('name', ('Attr', 'n', 'name')), ('parent_class', ('Const', 'None')), ('qualname', ('Attr', 'n', 'name')), ('signature_hint', ('Call', ('Name', 'node_signature'), (('Name', 'n'),), ()))))","('Call', 0, 11)","DefInfo,collect_decorator_lines,hasattr,imports,mod_rel,n,node_signature,set",cinfo = DefInfo(
.\tools\repo_porter.py,186,cinfo,"('Call', ('Name', 'DefInfo'), (), (('decorators', ('Call', ('Name', 'collect_decorator_lines'), (('Name', 'n'),), ())), ('depends_on_local', ('Call', ('Name', 'set'), (), ())), ('end_lineno', ('Other', 'IfExp')), ('import_lines', ('Name', 'imports')), ('kind', ('Const', ""'class'"")), ('lineno', ('Attr', 'n', 'lineno')), ('module_rel', ('Name', 'mod_rel')), ('name', ('Attr', 'n', 'name')), ('parent_class', ('Const', 'None')), ('qualname', ('Attr', 'n', 'name')), ('signature_hint', ('Call', ('Name', 'node_signature'), (('Name', 'n'),), ()))))","('Call', 0, 11)","DefInfo,collect_decorator_lines,hasattr,imports,mod_rel,n,node_signature,set",cinfo = DefInfo(
.\multi_offer_generator.py,271,cinfo,"('Other', 'IfExp')","('Other', 'IfExp')","callable,cid,get_company","cinfo = get_company(cid) if callable(get_company) else {""name"": f""Firma {cid}"", ""id"": cid}"
.\pdf_styles.py,508,circle,"('Call', ('Name', 'Circle'), (('Subscript', ('Name', 'info'), ('Const', ""'pos'"")), ('Subscript', ('Name', 'info'), ('Const', ""'size'""))), (('edgecolor', ('Const', ""'white'"")), ('facecolor', ('Subscript', ('Subscript', ('Name', 'theme_config'), ('Const', ""'colors'"")), ('Const', '0'))), ('linewidth', ('Const', '3'))))","('Call', 2, 3)","Circle,info,theme_config","circle = Circle(info['pos'], info['size'],"
.\pdf_styles.py,583,circle,"('Call', ('Name', 'Circle'), (('Tuple', (('Const', '0.5'), ('Const', '0.5'))), ('Const', '0.4')), (('edgecolor', ('Subscript', ('Subscript', ('Name', 'theme_config'), ('Const', ""'colors'"")), ('Const', '4'))), ('facecolor', ('Const', ""'none'"")), ('linewidth', ('Const', '10'))))","('Call', 2, 3)","Circle,theme_config","circle = Circle((0.5, 0.5), 0.4, facecolor='none',"
.\pdf_template_engine\placeholders.py,487,city,"('Call', ('Attr', ""as_str(customer.get('city') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,customer","city = as_str(customer.get(""city"") or """").strip()"
.\crm.py,335,city,"('Call', ('Attr', 'st', 'text_input'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'city_label'""), ('Const', ""'Ort'"")), ()),), (('value', ('Call', ('Attr', 'customer_to_edit', 'get'), (('Const', ""'city'""), ('Const', ""''"")), ())),))","('Call', 1, 1)","customer_to_edit,get_text_crm,st,texts","city = st.text_input(get_text_crm(texts, ""city_label"", ""Ort""), value=customer_to_edit.get('city', ''))"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,105,clean_val,"('Call', ('Attr', 'clean_val', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",clean_val,"clean_val = clean_val.replace(',', '.')"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,141,clean_val,"('Call', ('Attr', 'clean_val', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",clean_val,"clean_val = clean_val.replace(',', '.')"
.\pdf_template_engine\placeholders.py,392,clean_val,"('Call', ('Attr', 'clean_val', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",clean_val,"clean_val = clean_val.replace(',', '.')"
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,105,clean_val,"('Call', ('Attr', 'clean_val', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",clean_val,"clean_val = clean_val.replace(',', '.')"
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,141,clean_val,"('Call', ('Attr', 'clean_val', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",clean_val,"clean_val = clean_val.replace(',', '.')"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,104,clean_val,"('Call', ('Attr', 're', 'sub'), (('Const', ""'[^\\\\d,.-]'""), ('Const', ""''""), ('Name', 'value')), ())","('Call', 3, 0)","re,value","clean_val = re.sub(r'[^\d,.-]', '', value)"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,140,clean_val,"('Call', ('Attr', 're', 'sub'), (('Const', ""'[^\\\\d,.-]'""), ('Const', ""''""), ('Name', 'value')), ())","('Call', 3, 0)","re,value","clean_val = re.sub(r'[^\d,.-]', '', value)"
.\pdf_template_engine\placeholders.py,391,clean_val,"('Call', ('Attr', 're', 'sub'), (('Const', ""'[^\\\\d,.-]'""), ('Const', ""''""), ('Name', 'value')), ())","('Call', 3, 0)","re,value","clean_val = re.sub(r'[^\d,.-]', '', value)"
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,104,clean_val,"('Call', ('Attr', 're', 'sub'), (('Const', ""'[^\\\\d,.-]'""), ('Const', ""''""), ('Name', 'value')), ())","('Call', 3, 0)","re,value","clean_val = re.sub(r'[^\d,.-]', '', value)"
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,140,clean_val,"('Call', ('Attr', 're', 'sub'), (('Const', ""'[^\\\\d,.-]'""), ('Const', ""''""), ('Name', 'value')), ())","('Call', 3, 0)","re,value","clean_val = re.sub(r'[^\d,.-]', '', value)"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,107,clean_val,"('Call', ('Name', 'str'), (('Name', 'value'),), ())","('Call', 1, 0)","str,value",clean_val = str(value)
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,143,clean_val,"('Call', ('Name', 'str'), (('Name', 'value'),), ())","('Call', 1, 0)","str,value",clean_val = str(value)
.\pdf_template_engine\placeholders.py,394,clean_val,"('Call', ('Name', 'str'), (('Name', 'value'),), ())","('Call', 1, 0)","str,value",clean_val = str(value)
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,107,clean_val,"('Call', ('Name', 'str'), (('Name', 'value'),), ())","('Call', 1, 0)","str,value",clean_val = str(value)
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,143,clean_val,"('Call', ('Name', 'str'), (('Name', 'value'),), ())","('Call', 1, 0)","str,value",clean_val = str(value)
.\pdf_generator.py,774,cleaned,"('Call', ('Attr', ""re.sub('\\\\s+', ' ', cleaned)"", 'strip'), (), ())","('Call', 0, 0)","cleaned,re","cleaned = re.sub(r""\s+"", "" "", cleaned).strip()"
.\pdf_generator.py,772,cleaned,"('Call', ('Attr', 're', 'sub'), (('Const', ""'\\\\s*\\\\([^)]*\\\\)'""), ('Const', ""''""), ('Name', 'raw_title')), ())","('Call', 3, 0)","raw_title,re","cleaned = re.sub(r""\s*\([^)]*\)"", """", raw_title)"
.\calculations.py,2099,cleaned_value_str,"('Call', ('Attr', 'cleaned_value_str', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",cleaned_value_str,"cleaned_value_str = cleaned_value_str.replace("","", ""."")"
.\pdf_generator.py,753,cleaned_value_str,"('Call', ('Attr', 'cleaned_value_str', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",cleaned_value_str,"cleaned_value_str = cleaned_value_str.replace(',', '.')"
.\calculations.py,2089,cleaned_value_str,"('Call', ('Attr', 'value', 'replace'), (('Const', ""','""), ('Const', ""''"")), ())","('Call', 2, 0)",value,cleaned_value_str = value.replace(
.\pdf_generator.py,751,cleaned_value_str,"('Call', ('Attr', 'value', 'replace'), (('Const', ""','""), ('Const', ""''"")), ())","('Call', 2, 0)",value,"if value.rfind('.') > value.rfind(','): cleaned_value_str = value.replace(',', '')"
.\calculations.py,2095,cleaned_value_str,"('Call', ('Attr', 'value', 'replace'), (('Const', ""'.'""), ('Const', ""''"")), ())","('Call', 2, 0)",value,cleaned_value_str = value.replace(
.\pdf_generator.py,752,cleaned_value_str,"('Call', ('Attr', 'value', 'replace'), (('Const', ""'.'""), ('Const', ""''"")), ())","('Call', 2, 0)",value,"elif value.rfind(',') > value.rfind('.'): cleaned_value_str = value.replace('.', '')"
.\calculations.py,2082,cleaned_value_str,"('Name', 'value')","('Name',)",value,cleaned_value_str = value
.\pdf_generator.py,749,cleaned_value_str,"('Name', 'value')","('Name',)",value,cleaned_value_str = value
.\analysis.py,8977,co2_annual,"('BoolOp', 'Or', (('Call', ('Attr', 'results', 'get'), (('Const', ""'co2_einsparung_jahr_kg'""), ('Const', '0.0')), ()), ('Call', ('Attr', 'results', 'get'), (('Const', ""'co2_savings_annual_kg'""), ('Const', '0.0')), ()), ('Call', ('Attr', 'results', 'get'), (('Const', ""'co2_savings_kg_per_year'""), ('Const', '0.0')), ()), ('Call', ('Attr', 'results', 'get'), (('Const', ""'environmental_co2_savings_kg_year'""), ('Const', '0.0')), ())))","('BoolOp', 'Or', 4)",results,co2_annual = (
.\analysis.py,8989,co2_annual,"('Mult', (('Const', '0.4'), ('Name', 'annual_production')))","('Mult', (('Const',), ('Name',)))",annual_production,co2_annual = annual_production * 0.4
.\dev_tools\kakerlake_ultra_cleaner.py,327,code,"('Call', ('Name', 'read_text'), (('Name', 'path'),), ())","('Call', 1, 0)","path,read_text",code=read_text(path); base=os.path.basename(path).lower()
.\dev_tools\kakerlake_ultra_cleaner.py,453,code,"('Call', ('Name', 'read_text'), (('Name', 'path'),), ())","('Call', 1, 0)","path,read_text",code=read_text(path); base=os.path.basename(path).lower()
.\dev_tools\kakerlake_ultra_cleaner_v2.py,187,code,"('Call', ('Name', 'read_text'), (('Name', 'path'),), ())","('Call', 1, 0)","path,read_text",code = read_text(path)
.\dev_tools\kakerlake_ultra_cleaner_v2.py,331,code,"('Call', ('Name', 'read_text'), (('Name', 'path'),), ())","('Call', 1, 0)","path,read_text",code = read_text(path); base = os.path.basename(path).lower()
.\dev_tools\kakerlake_ultra_cleaner_v3.py,201,code,"('Call', ('Name', 'read_text'), (('Name', 'path'),), ())","('Call', 1, 0)","path,read_text",code = read_text(path)
.\dev_tools\kakerlake_ultra_cleaner_v3.py,347,code,"('Call', ('Name', 'read_text'), (('Name', 'path'),), ())","('Call', 1, 0)","path,read_text",code = read_text(path); base = os.path.basename(path).lower()
.\mnt\data\kakerlake_ultra_cleaner.py,327,code,"('Call', ('Name', 'read_text'), (('Name', 'path'),), ())","('Call', 1, 0)","path,read_text",code=read_text(path); base=os.path.basename(path).lower()
.\mnt\data\kakerlake_ultra_cleaner.py,453,code,"('Call', ('Name', 'read_text'), (('Name', 'path'),), ())","('Call', 1, 0)","path,read_text",code=read_text(path); base=os.path.basename(path).lower()
.\mnt\data\kakerlake_ultra_cleaner_v2.py,187,code,"('Call', ('Name', 'read_text'), (('Name', 'path'),), ())","('Call', 1, 0)","path,read_text",code = read_text(path)
.\mnt\data\kakerlake_ultra_cleaner_v2.py,331,code,"('Call', ('Name', 'read_text'), (('Name', 'path'),), ())","('Call', 1, 0)","path,read_text",code = read_text(path); base = os.path.basename(path).lower()
.\tools\kakerlake_ultra_cleaner.py,328,code,"('Call', ('Name', 'read_text'), (('Name', 'path'),), ())","('Call', 1, 0)","path,read_text",code=read_text(path); base=os.path.basename(path).lower()
.\tools\kakerlake_ultra_cleaner.py,454,code,"('Call', ('Name', 'read_text'), (('Name', 'path'),), ())","('Call', 1, 0)","path,read_text",code=read_text(path); base=os.path.basename(path).lower()
.\kakerlake_ultra_cleaner.py,6,code,"('Const', '\'#!/usr/bin/env python3\\n# -*- coding: utf-8 -*-\\n""""""\\nkakerlake_ultra_cleaner.py\\n=================================\\nEin einziger „Super Ultra Reiniger“ für dein Projekt. Kombiniert:\\n  1) SCAN: Duplikate & Kollisionen (Python)\\n     - Gleicher LHS-Name mit unterschiedlichen RHS-Formeln\\n     - Gleiche RHS-Formel für unterschiedliche LHS-Namen\\n     - Gleiche LHS-Form (Shape), aber unterschiedliche Variablen\\n     - Funktionsnamen-Konflikte (gleicher Name, verschiedene Bodies)\\n     - Duplizierte Funktionskörper (exakter Hash)\\n  2) AUTOPATCH: annual_savings ➜ compute_annual_savings(...)\\n     - Insert DEF-Block in calculations.py (falls fehlt)\\n     - Import ergänzen\\n  3) AUTOPATCH: project_data ➜ build_project_data(...)\\n     - Insert DEF-Block in calculations.py (falls fehlt)\\n     - Import ergänzen\\n  4) STRUCTURE: App-Struktur-Manifest, Verzeichnis-Übersicht, Trees\\n  5) YAML-CHECK: Positionskollisionen (x/y/left/top/page) ähnlich belegte Koordinaten\\n\\nAusgabe: CSV-Reports im Ziel-Ordner, optional ZIP.\\n\\nAbhängigkeiten:\\n  - Standardbibliothek\\n  - Für Autopatcher: libcst (installierbar via `pip install libcst`)\\n  - Für YAML-Parsing optional: pyyaml (`pip install pyyaml`), sonst heuristischer Fallback\\n\\nNutzung (Beispiele):\\n  python kakerlake_ultra_cleaner.py scan . --out reports\\n  python kakerlake_ultra_cleaner.py autopatch-annual-savings . --write\\n  python kakerlake_ultra_cleaner.py autopatch-project-data . --write\\n  python kakerlake_ultra_cleaner.py structure . --out reports\\n  python kakerlake_ultra_cleaner.py yaml-check . --out reports --tol-mm 0.2\\n  python kakerlake_ultra_cleaner.py all . --out reports --write\\n\\nAutor: GPT-5 Thinking — Kompakt, reproduzierbar, side-effect-frei.\\n""""""\\n\\nfrom __future__ import annotations\\nimport os, re, sys, ast, csv, argparse, hashlib, textwrap\\nfrom dataclasses import dataclass\\nfrom typing import Any, Dict, List, Optional, Tuple, Set\\n\\n# ----------------------------- Utils -----------------------------\\n\\ndef read_text(path:str)->str:\\n    return open(path, ""r"", encoding=""utf-8"", errors=""ignore"").read()\\n\\ndef write_text(path:str, text:str):\\n    os.makedirs(os.path.dirname(path), exist_ok=True)\\n    with open(path, ""w"", encoding=""utf-8"", errors=""ignore"") as f:\\n        f.write(text)\\n\\ndef ensure_dir(p:str):\\n    os.makedirs(p, exist_ok=True)\\n    return p\\n\\ndef sha1_bytes(b:bytes)->str:\\n    import hashlib\\n    return hashlib.sha1(b).hexdigest()\\n\\ndef list_py(root:str)->List[str]:\\n    out=[]\\n    for r,_,f in os.walk(root):\\n        for fn in f:\\n            if fn.endswith("".py""):\\n                out.append(os.path.join(r,fn))\\n    return out\\n\\ndef list_yaml(root:str)->List[str]:\\n    out=[]\\n    for r,_,f in os.walk(root):\\n        for fn in f:\\n            if fn.lower().endswith(("".yml"","".yaml"")):\\n                out.append(os.path.join(r,fn))\\n    return out\\n\\n# ----------------------------- SCAN: Python Kollisionen -----------------------------\\n\\nCOMMUTATIVE_OPS = (ast.Add, ast.Mult,)\\n\\ndef node_signature(node:ast.AST)->Tuple[Any,...]:\\n    if node is None:\\n        return (\\\'None\\\',)\\n    if isinstance(node, ast.Name):\\n        return (\\\'Name\\\', node.id)\\n    if isinstance(node, ast.Attribute):\\n        try:\\n            base = ast.unparse(node.value)\\n        except Exception:\\n            base = (\\\'AttrBase\\\',)\\n        return (\\\'Attr\\\', base, node.attr)\\n    if isinstance(node, ast.Constant):\\n        return (\\\'Const\\\', repr(node.value))\\n    if isinstance(node, ast.Call):\\n        func_sig = node_signature(node.func)\\n        args_sig = tuple(node_signature(a) for a in node.args)\\n        kwargs_sig = tuple(sorted((k.arg if k.arg else \\\'**\\\', node_signature(k.value)) for k in node.keywords))\\n        return (\\\'Call\\\', func_sig, args_sig, kwargs_sig)\\n    if isinstance(node, ast.BinOp):\\n        op_type = type(node.op).__name__\\n        if isinstance(node.op, COMMUTATIVE_OPS):\\n            def flatten(n):\\n                if isinstance(n, ast.BinOp) and isinstance(n.op, type(node.op)):\\n                    return flatten(n.left) + flatten(n.right)\\n                else:\\n                    return [n]\\n            terms = flatten(node.left) + flatten(node.right)\\n            term_sigs = sorted([node_signature(t) for t in terms])\\n            return (op_type, tuple(term_sigs))\\n        else:\\n            return (op_type, node_signature(node.left), node_signature(node.right))\\n    if isinstance(node, ast.UnaryOp):\\n        return (type(node.op).__name__, node_signature(node.operand))\\n    if isinstance(node, ast.Compare):\\n        return (\\\'Compare\\\', node_signature(node.left),\\n                tuple(type(op).__name__ for op in node.ops),\\n                tuple(node_signature(c) for c in node.comparators))\\n    if isinstance(node, ast.BoolOp):\\n        op_type = type(node.op).__name__\\n        values = tuple(sorted(node_signature(v) for v in node.values)) if isinstance(node.op,(ast.And,ast.Or)) else tuple(node_signature(v) for v in node.values)\\n        return (\\\'BoolOp\\\', op_type, values)\\n    if isinstance(node, ast.Subscript):\\n        try:\\n            slice_sig = node_signature(node.slice)\\n        except Exception:\\n            slice_sig = (\\\'Slice\\\', \\\'err\\\')\\n        return (\\\'Subscript\\\', node_signature(node.value), slice_sig)\\n    if isinstance(node, ast.Dict):\\n        items=[]\\n        for k,v in zip(node.keys, node.values):\\n            if k is None:\\n                items.append((\\\'UNPACK\\\', node_signature(v)))\\n            else:\\n                items.append((\\\'KV\\\', node_signature(k), node_signature(v)))\\n        return (\\\'Dict\\\', tuple(sorted(items)))\\n    if isinstance(node, ast.List):\\n        return (\\\'List\\\', tuple(node_signature(e) for e in node.elts))\\n    if isinstance(node, ast.Tuple):\\n        return (\\\'Tuple\\\', tuple(node_signature(e) for e in node.elts))\\n    return (\\\'Other\\\', type(node).__name__)\\n\\ndef node_shape(node:ast.AST)->Tuple[Any,...]:\\n    if node is None:\\n        return (\\\'None\\\',)\\n    if isinstance(node, ast.Name):\\n        return (\\\'Name\\\',)\\n    if isinstance(node, ast.Attribute):\\n        return (\\\'Attr\\\',)\\n    if isinstance(node, ast.Constant):\\n        return (\\\'Const\\\',)\\n    if isinstance(node, ast.Call):\\n        return (\\\'Call\\\', len(node.args), len(node.keywords))\\n    if isinstance(node, ast.BinOp):\\n        op_type = type(node.op).__name__\\n        if isinstance(node.op, COMMUTATIVE_OPS):\\n            def flatten(n):\\n                if isinstance(n, ast.BinOp) and isinstance(n.op, type(node.op)):\\n                    return flatten(n.left) + flatten(n.right)\\n                else:\\n                    return [n]\\n            terms = flatten(node.left) + flatten(node.right)\\n            term_shapes = sorted([node_shape(t) for t in terms])\\n            return (op_type, tuple(term_shapes))\\n        else:\\n            return (op_type, node_shape(node.left), node_shape(node.right))\\n    if isinstance(node, ast.UnaryOp):\\n        return (type(node.op).__name__, node_shape(node.operand))\\n    if isinstance(node, ast.Compare):\\n        return (\\\'Compare\\\', tuple(type(op).__name__ for op in node.ops), len(node.comparators))\\n    if isinstance(node, ast.BoolOp):\\n        return (\\\'BoolOp\\\', type(node.op).__name__, len(node.values))\\n    if isinstance(node, ast.Subscript):\\n        return (\\\'Subscript\\\',)\\n    if isinstance(node, ast.Dict):\\n        return (\\\'Dict\\\', len(node.keys))\\n    if isinstance(node, ast.List):\\n        return (\\\'List\\\', len(node.elts))\\n    if isinstance(node, ast.Tuple):\\n        return (\\\'Tuple\\\', len(node.elts))\\n    return (\\\'Other\\\', type(node).__name__)\\n\\ndef collect_names(node:ast.AST)->Set[str]:\\n    names=set()\\n    for n in ast.walk(node):\\n        if isinstance(n, ast.Name):\\n            names.add(n.id)\\n    return names\\n\\ndef scan_python(root:str, out:str):\\n    ensure_dir(out)\\n    py = list_py(root)\\n    assignments=[]\\n    func_defs=[]\\n    errors=[]\\n    for p in py:\\n        try:\\n            src = read_text(p)\\n            tree = ast.parse(src, filename=p)\\n            lines = src.splitlines()\\n        except Exception as e:\\n            errors.append((p, repr(e)))\\n            continue\\n        for node in ast.walk(tree):\\n            if isinstance(node, (ast.Assign, ast.AnnAssign)):\\n                targets = node.targets if isinstance(node, ast.Assign) else ([node.target] if node.target is not None else [])\\n                value = node.value if hasattr(node, \\\'value\\\') else None\\n                if value is None: \\n                    continue\\n                for t in targets:\\n                    lhs=None\\n                    if isinstance(t, ast.Name):\\n                        lhs=t.id\\n                    elif isinstance(t, ast.Attribute):\\n                        try:\\n                            lhs=ast.unparse(t)\\n                        except Exception:\\n                            lhs=None\\n                    if lhs is None: \\n                        continue\\n                    sig = node_signature(value)\\n                    shape = node_shape(value)\\n                    vars_used = "","".join(sorted(list(collect_names(value))))\\n                    lineno = getattr(node, \\\'lineno\\\', None)\\n                    text_line = lines[lineno-1].strip() if lineno and 1<=lineno<=len(lines) else """"\\n                    assignments.append(dict(file=p, lineno=lineno, lhs=lhs, rhs_sig=repr(sig), rhs_shape=repr(shape), rhs_vars=vars_used, line=text_line))\\n            if isinstance(node, ast.FunctionDef):\\n                start=node.lineno; end=getattr(node,\\\'end_lineno\\\',start)\\n                body_src=""\\\\n"".join(lines[start-1:end])\\n                norm=re.sub(r\\\'\\\\s+\\\',\\\'\\\',body_src)\\n                func_defs.append(dict(file=p,name=node.name,lineno=start,end_lineno=end,hash=hashlib.md5(norm.encode()).hexdigest(),body=body_src))\\n    import pandas as pd\\n    assign_df=pd.DataFrame(assignments)\\n    func_df=pd.DataFrame(func_defs)\\n\\n    # 1) Same LHS, different RHS\\n    dup_lhs = assign_df.groupby(\\\'lhs\\\').agg(count=(\\\'lhs\\\',\\\'size\\\'), unique_rhs=(\\\'rhs_sig\\\',\\\'nunique\\\')).reset_index()\\n    conflicting_lhs = dup_lhs[(dup_lhs[\\\'count\\\']>1) & (dup_lhs[\\\'unique_rhs\\\']>1)]\\n    lhs_conflicts_df = assign_df[assign_df[\\\'lhs\\\'].isin(set(conflicting_lhs[\\\'lhs\\\']))].sort_values([\\\'lhs\\\',\\\'rhs_sig\\\',\\\'file\\\',\\\'lineno\\\'])\\n    lhs_conflicts_df.to_csv(os.path.join(out,""python_lhs_conflicts.csv""), index=False, encoding=""utf-8"")\\n\\n    # 2) Same RHS, different LHS\\n    rhs_groups = assign_df.groupby(\\\'rhs_sig\\\').agg(lhs_set=(\\\'lhs\\\', lambda x: sorted(set(x))), count=(\\\'lhs\\\',\\\'size\\\')).reset_index()\\n    rhs_conflicting = rhs_groups[rhs_groups[\\\'lhs_set\\\'].map(len) > 1]\\n    rhs_conflict_df = assign_df.merge(rhs_conflicting[[\\\'rhs_sig\\\']], on=\\\'rhs_sig\\\', how=\\\'inner\\\').sort_values([\\\'rhs_sig\\\',\\\'lhs\\\',\\\'file\\\',\\\'lineno\\\'])\\n    rhs_conflict_df.to_csv(os.path.join(out,""python_rhs_same_expr_diff_lhs.csv""), index=False, encoding=""utf-8"")\\n\\n    # 3) Same LHS, same shape, different vars\\n    rows=[]\\n    for lhs, g in assign_df.groupby(\\\'lhs\\\'):\\n        for shape, sub in g.groupby(\\\'rhs_shape\\\'):\\n            if len(sub)>=2 and sub[\\\'rhs_vars\\\'].nunique()>1:\\n                rows.append(sub)\\n    if rows:\\n        import pandas as pd\\n        pd.concat(rows).to_csv(os.path.join(out, ""python_lhs_same_shape_diff_vars.csv""), index=False, encoding=""utf-8"")\\n    else:\\n        assign_df.head(0).to_csv(os.path.join(out, ""python_lhs_same_shape_diff_vars.csv""), index=False, encoding=""utf-8"")\\n\\n    # 4) Function name conflicts\\n    name_groups = func_df.groupby(\\\'name\\\').agg(files=(\\\'file\\\', list), hashes=(\\\'hash\\\', lambda x: list(x))).reset_index()\\n    conflicts = []\\n    for _, row in name_groups.iterrows():\\n        if len(set(row[\\\'hashes\\\']))>1:\\n            conflicts.append(dict(name=row[\\\'name\\\'], distinct_impls=len(set(row[\\\'hashes\\\'])), files="" | "".join(sorted(set(row[\\\'files\\\'])))))\\n    import pandas as pd\\n    pd.DataFrame(conflicts).to_csv(os.path.join(out, ""python_function_name_conflicts.csv""), index=False, encoding=""utf-8"")\\n\\n    # 5) Exact duplicate bodies\\n    body_groups = func_df.groupby(\\\'hash\\\').agg(names=(\\\'name\\\', list), files=(\\\'file\\\', list), count=(\\\'hash\\\',\\\'size\\\')).reset_index()\\n    body_groups[body_groups[\\\'count\\\']>1][[\\\'hash\\\',\\\'count\\\',\\\'names\\\',\\\'files\\\']].to_csv(os.path.join(out, ""python_function_body_duplicates.csv""), index=False, encoding=""utf-8"")\\n\\n    # 6) Parse errors\\n    import pandas as pd\\n    pd.DataFrame(errors, columns=[""file"",""error""]).to_csv(os.path.join(out, ""python_parse_errors.csv""), index=False, encoding=""utf-8"")\\n\\n    # 7) Top 30 conflicting LHS\\n    top30 = dup_lhs.sort_values(""unique_rhs"", ascending=False).head(30)[[""lhs"",""count"",""unique_rhs""]].rename(columns={""count"":""n_assign"",""unique_rhs"":""n_rhs""})\\n    top30.to_csv(os.path.join(out, ""top30_conflicting_lhs.csv""), index=False, encoding=""utf-8"")\\n\\n# ----------------------------- DEF-Blocks -----------------------------\\n\\nCOMPUTE_DEF_CODE = r""""""\\ndef compute_annual_savings(\\n    *,\\n    results: Optional[Dict[str, Any]] = None,\\n    annual_feedin_revenue: Optional[float] = None,\\n    annual_electricity_savings: Optional[float] = None,\\n    annual_old_cost: Optional[float] = None,\\n    annual_hp_cost: Optional[float] = None,\\n    electricity_costs_without_pv: Optional[float] = None,\\n    electricity_costs_with_pv: Optional[float] = None,\\n    annual_feed_in_revenue: Optional[float] = None,\\n    default: float = 0.0,\\n) -> float:\\n    \\\\""\\\\""\\\\""Gleichschaltung für *annual_savings* (kanonisch).\\\\""\\\\""\\\\""\\n    try:\\n        if results:\\n            for key in (\\n                \\\'annual_total_savings_euro\\\',\\n                \\\'annual_financial_benefit_year1\\\',\\n                \\\'annual_savings_consumption_eur\\\',\\n                \\\'jahresersparnis_gesamt\\\',\\n                \\\'total_annual_savings\\\',\\n                \\\'annual_savings\\\',\\n                \\\'annual_savings_total_euro\\\',\\n            ):\\n                if isinstance(results, dict) and key in results:\\n                    val = results.get(key, None)\\n                    try:\\n                        if val is not None and float(val) != 0.0:\\n                            return float(val)\\n                    except Exception:\\n                        pass\\n            try:\\n                feed_in_revenue = results.get(\\\'annual_revenue_feed_in_eur\\\', 0.0)\\n                consumption_savings = results.get(\\\'annual_savings_consumption_eur\\\', 0.0)\\n                if (float(feed_in_revenue) > 0.0) or (float(consumption_savings) > 0.0):\\n                    return float(feed_in_revenue) + float(consumption_savings)\\n            except Exception:\\n                pass\\n\\n        if annual_feedin_revenue is not None and annual_electricity_savings is not None:\\n            return float(annual_feedin_revenue) + float(annual_electricity_savings)\\n\\n        if annual_old_cost is not None and annual_hp_cost is not None:\\n            return float(annual_old_cost) - float(annual_hp_cost)\\n\\n        if electricity_costs_without_pv is not None and electricity_costs_with_pv is not None:\\n            base = float(electricity_costs_without_pv) - float(electricity_costs_with_pv)\\n            if annual_feed_in_revenue is not None:\\n                base += float(annual_feed_in_revenue)\\n            return base\\n\\n        return float(default)\\n    except Exception:\\n        try:\\n            return float(default)\\n        except Exception:\\n            return 0.0\\n"""""".strip(""\\\\n"")\\n\\nBUILD_PD_DEF_CODE = r""""""\\ndef build_project_data(*parts, drop_none=True, drop_empty_str=True, normalize=True, keymap=None):\\n    \\\\""\\\\""\\\\""Zentraler, side-effect-freier Builder für *project_data*.\\n    - *parts*: beliebig viele dict-ähnliche Objekte (None ignoriert).\\n    - *drop_none*: None-Werte entfernen.\\n    - *drop_empty_str*: leere Strings entfernen.\\n    - *normalize*: Keys trimmen, Zero-Width/Zeilenumbrüche bereinigen.\\n    - *keymap*: optionales Synonym-Mapping.\\n    \\\\""\\\\""\\\\""\\n    out = {}\\n    def _coerce(x):\\n        try:\\n            if x is None:\\n                return {}\\n            if isinstance(x, dict):\\n                return x\\n            if hasattr(x, \\\'items\\\'):\\n                return dict(x.items())\\n            return dict(x)\\n        except Exception:\\n            return {}\\n    for part in parts:\\n        d = _coerce(part)\\n        for k, v in d.items():\\n            if drop_none and v is None:\\n                continue\\n            if drop_empty_str and isinstance(v, str) and v.strip() == """":\\n                continue\\n            kk = k\\n            try:\\n                if isinstance(kk, str):\\n                    kk = kk.strip().replace(""\\\\\\\\u200b"","""").replace(""\\\\\\\\n"","" "").strip()\\n                if keymap and kk in keymap:\\n                    kk = keymap[kk]\\n            except Exception:\\n                pass\\n            out[kk] = v\\n    return out\\n"""""".strip(""\\\\n"")\\n\\n# ----------------------------- LibCST Helpers -----------------------------\\n\\ndef require_libcst():\\n    try:\\n        import libcst as cst  # type: ignore\\n        import libcst.matchers as m  # type: ignore\\n        return cst, m\\n    except Exception as e:\\n        print(""Fehlende Abhängigkeit: Bitte installieren: pip install libcst"", file=sys.stderr)\\n        raise\\n\\ndef insert_def_if_missing_calculations(code:str, func_name:str, def_code:str):\\n    cst, m = require_libcst()\\n    try:\\n        mod = cst.parse_module(code)\\n    except Exception:\\n        return code\\n    class Finder(cst.CSTVisitor):\\n        def __init__(self): self.found=False\\n        def visit_FunctionDef(self, node:cst.FunctionDef):\\n            if node.name.value == func_name:\\n                self.found=True\\n    f=Finder(); mod.visit(f)\\n    if f.found: return code\\n    insert_stmt = cst.parse_statement(def_code + ""\\\\n\\\\n"")\\n    body=list(mod.body)\\n    insert_idx=0\\n    for i, stmt in enumerate(body):\\n        if m.matches(stmt, m.SimpleStatementLine(body=[m.Import() | m.ImportFrom()])) or \\\\\\n           m.matches(stmt, m.ImportFrom()) or m.matches(stmt, m.Import()):\\n            insert_idx=i+1\\n    body.insert(insert_idx, insert_stmt)\\n    return mod.with_changes(body=body).code\\n\\ndef add_named_import(module, module_name:str, symbol:str)->Tuple[Any,bool]:\\n    cst, m = require_libcst()\\n    class Finder(cst.CSTVisitor):\\n        def __init__(self): self.found=False\\n        def visit_ImportFrom(self, node:cst.ImportFrom):\\n            if node.module and node.module.value == module_name:\\n                for n in node.names:\\n                    if isinstance(n, cst.ImportAlias) and n.name.value == symbol:\\n                        self.found=True\\n    finder=Finder(); module.visit(finder)\\n    if finder.found:\\n        return module, False\\n    imp = cst.parse_statement(f""from {module_name} import {symbol}\\\\n"")\\n    body=list(module.body)\\n    insert_idx=0\\n    for i, stmt in enumerate(body):\\n        if m.matches(stmt, m.SimpleStatementLine(body=[m.Import() | m.ImportFrom()])) or \\\\\\n           m.matches(stmt, m.ImportFrom()) or m.matches(stmt, m.Import()):\\n            insert_idx=i+1\\n    body.insert(insert_idx, imp)\\n    return module.with_changes(body=body), True\\n\\n# ----------------------------- AUTOPATCH: annual_savings -----------------------------\\n\\nHEIKLE_PATTERNS = {(\\\'peak_reduction_kw\\\',\\\'*\\\',\\\'power_price_per_kw\\\')}\\n\\nRESULT_KEYS = {\\n    \\\'annual_total_savings_euro\\\',\\n    \\\'annual_financial_benefit_year1\\\',\\n    \\\'annual_savings_consumption_eur\\\',\\n    \\\'jahresersparnis_gesamt\\\',\\n    \\\'total_annual_savings\\\',\\n    \\\'annual_savings\\\',\\n    \\\'annual_savings_total_euro\\\',\\n}\\nFEEDIN_NAMES = {\\\'annual_feedin_revenue\\\',\\\'feed_in_revenue\\\',\\\'annual_feed_in_revenue\\\',\\\'annual_revenue_feed_in_eur\\\'}\\nCONSUMP_SAVINGS_NAMES = {\\\'annual_electricity_savings\\\',\\\'consumption_savings\\\',\\\'annual_savings_consumption_eur\\\'}\\nOLD_COST_NAMES = {\\\'annual_old_cost\\\',\\\'old_annual_cost\\\',\\\'annual_cost_old\\\'}\\nHP_COST_NAMES  = {\\\'annual_hp_cost\\\',\\\'hp_annual_cost\\\',\\\'annual_cost_hp\\\'}\\nWITHOUT_PV_NAMES={\\\'electricity_costs_without_pv\\\',\\\'cost_without_pv\\\',\\\'annual_cost_without_pv\\\'}\\nWITH_PV_NAMES={\\\'electricity_costs_with_pv\\\',\\\'cost_with_pv\\\',\\\'annual_cost_with_pv\\\'}\\nFEEDIN_EXTRA = {\\\'annual_feed_in_revenue\\\',\\\'annual_feedin_revenue\\\',\\\'feed_in_revenue\\\',\\\'annual_revenue_feed_in_eur\\\'}\\n\\ndef autopatch_annual_savings(root:str, write:bool, no_backup:bool, out:str):\\n    cst, m = require_libcst()\\n    ensure_dir(out)\\n    report=[]\\n    changed_files=0\\n\\n    def process(path:str)->bool:\\n        nonlocal report\\n        code = read_text(path)\\n        base = os.path.basename(path).lower()\\n        if base == ""calculations.py"":\\n            new_code = insert_def_if_missing_calculations(code, ""compute_annual_savings"", COMPUTE_DEF_CODE)\\n            if new_code != code and write:\\n                if not no_backup: write_text(path+"".bak"", code)\\n                write_text(path, new_code)\\n                code = new_code\\n        try:\\n            mod = cst.parse_module(code)\\n        except Exception:\\n            return False\\n\\n        class Tx(cst.CSTTransformer):\\n            def __init__(self): self.changed=False\\n            def leave_Module(self, orig, updated):\\n                if self.changed:\\n                    updated, imp = add_named_import(updated, ""calculations"", ""compute_annual_savings"")\\n                    if imp:\\n                        report.append(dict(file=path, lineno=""1"", before=""(kein Import)"", after=""from calculations import compute_annual_savings"", reason=""missing_import_added""))\\n                return updated\\n            def leave_Assign(self, orig, updated):\\n                try:\\n                    if len(orig.targets)!=1 or not m.matches(orig.targets[0].target, m.Name(""annual_savings"")):\\n                        return updated\\n                except Exception:\\n                    return updated\\n                orig_code = orig.value.code\\n                for a,b,c in HEIKLE_PATTERNS:\\n                    if a in orig_code and c in orig_code:\\n                        report.append(dict(file=path, lineno=str(getattr(orig,\\\'ln\\\',\\\'?\\\')), before=orig_code, after=""(unchanged)"", reason=""skipped_suspicious_pattern""))\\n                        return updated\\n                # results.get(\\\'key\\\', default)\\n                if m.matches(orig.value, m.Call(func=m.Attribute(attr=m.Name(""get"")))):\\n                    call = orig.value\\n                    if call.args and m.matches(call.args[0].value, m.SimpleString()):\\n                        key = call.args[0].value.value.strip(\\\'\\\\\\\'""\\\')\\n                        if key in RESULT_KEYS:\\n                            default_expr = call.args[1].value.code if len(call.args)>=2 else ""0.0""\\n                            new_call = cst.parse_expression(f""compute_annual_savings(results={call.func.value.code}, default={default_expr})"")\\n                            self.changed=True\\n                            report.append(dict(file=path, lineno=str(getattr(orig,\\\'ln\\\',\\\'?\\\')), before=orig_code, after=new_call.code, reason=""results_get_to_compute""))\\n                            return updated.with_changes(value=new_call)\\n                # dict[\\\'key\\\']\\n                if m.matches(orig.value, m.Subscript(value=m.DoNotCare(), slice=m.SubscriptElement())):\\n                    sub = orig.value\\n                    try:\\n                        if m.matches(sub.slice, m.Index(value=m.SimpleString())):\\n                            key = sub.slice.value.value.strip(\\\'\\\\\\\'""\\\')\\n                            if key in RESULT_KEYS:\\n                                new_call = cst.parse_expression(f""compute_annual_savings(results={sub.value.code}, default=0.0)"")\\n                                self.changed=True\\n                                report.append(dict(file=path, lineno=str(getattr(orig,\\\'ln\\\',\\\'?\\\')), before=orig_code, after=new_call.code, reason=""dict_index_to_compute""))\\n                                return updated.with_changes(value=new_call)\\n                    except Exception:\\n                        pass\\n                # feedin + consumption\\n                if m.matches(orig.value, m.BinaryOperation(operator=m.Add())):\\n                    l=orig.value.left; r=orig.value.right\\n                    def name_in(node, names:Set[str]):\\n                        if m.matches(node, m.Name()):\\n                            if node.value in names: return node.value\\n                        if m.matches(node, m.Attribute()):\\n                            try:\\n                                if node.attr.value in names: return node.attr.value\\n                            except Exception: pass\\n                        return None\\n                    f1 = name_in(l, FEEDIN_NAMES) or name_in(r, FEEDIN_NAMES)\\n                    c1 = name_in(l, CONSUMP_SAVINGS_NAMES) or name_in(r, CONSUMP_SAVINGS_NAMES)\\n                    if f1 and c1:\\n                        feed = l if name_in(l, FEEDIN_NAMES) else r\\n                        cons = r if feed is l else l\\n                        new_call=cst.parse_expression(f""compute_annual_savings(annual_feedin_revenue={feed.code}, annual_electricity_savings={cons.code}, default=0.0)"")\\n                        self.changed=True\\n                        report.append(dict(file=path, lineno=str(getattr(orig,\\\'ln\\\',\\\'?\\\')), before=orig_code, after=new_call.code, reason=""feedin_plus_consumption""))\\n                        return updated.with_changes(value=new_call)\\n                # old - hp\\n                if m.matches(orig.value, m.BinaryOperation(operator=m.Subtract())):\\n                    l=orig.value.left; r=orig.value.right\\n                    def name_in(node, names:Set[str]):\\n                        if m.matches(node, m.Name()):\\n                            if node.value in names: return node.value\\n                        if m.matches(node, m.Attribute()):\\n                            try:\\n                                if node.attr.value in names: return node.attr.value\\n                            except Exception: pass\\n                        return None\\n                    if (name_in(l, OLD_COST_NAMES) and name_in(r, HP_COST_NAMES)):\\n                        new_call=cst.parse_expression(f""compute_annual_savings(annual_old_cost={l.code}, annual_hp_cost={r.code}, default=0.0)"")\\n                        self.changed=True\\n                        report.append(dict(file=path, lineno=str(getattr(orig,\\\'ln\\\',\\\'?\\\')), before=orig_code, after=new_call.code, reason=""old_minus_hp""))\\n                        return updated.with_changes(value=new_call)\\n                # (without - with) (+ feedin)\\n                val=orig.value\\n                def has_names(node, A:Set[str], B:Set[str]):\\n                    if not m.matches(node, m.BinaryOperation(operator=m.Subtract())): return False\\n                    l=node.left; r=node.right\\n                    def name_in(n, names:Set[str]):\\n                        if m.matches(n, m.Name()):\\n                            return n.value in names\\n                        if m.matches(n, m.Attribute()):\\n                            try: return n.attr.value in names\\n                            except Exception: return False\\n                        return False\\n                    return name_in(l, A) and name_in(r, B)\\n                if m.matches(val, m.BinaryOperation(operator=m.Subtract())) and has_names(val, WITHOUT_PV_NAMES, WITH_PV_NAMES):\\n                    new_call=cst.parse_expression(f""compute_annual_savings(electricity_costs_without_pv={val.left.code}, electricity_costs_with_pv={val.right.code}, default=0.0)"")\\n                    self.changed=True\\n                    report.append(dict(file=path, lineno=str(getattr(orig,\\\'ln\\\',\\\'?\\\')), before=orig.value.code, after=new_call.code, reason=""without_with_difference""))\\n                    return updated.with_changes(value=new_call)\\n                if m.matches(val, m.BinaryOperation(operator=m.Add())):\\n                    l=val.left; r=val.right\\n                    if m.matches(l, m.BinaryOperation(operator=m.Subtract())) and has_names(l, WITHOUT_PV_NAMES, WITH_PV_NAMES):\\n                        # (a-b)+c where c is feedin\\n                        if r.code and any(k in r.code for k in FEEDIN_EXTRA):\\n                            new_call=cst.parse_expression(f""compute_annual_savings(electricity_costs_without_pv={l.left.code}, electricity_costs_with_pv={l.right.code}, annual_feed_in_revenue={r.code}, default=0.0)"")\\n                            self.changed=True\\n                            report.append(dict(file=path, lineno=str(getattr(orig,\\\'ln\\\',\\\'?\\\')), before=orig.value.code, after=new_call.code, reason=""diff_plus_feedin""))\\n                            return updated.with_changes(value=new_call)\\n                    if m.matches(r, m.BinaryOperation(operator=m.Subtract())) and has_names(r, WITHOUT_PV_NAMES, WITH_PV_NAMES):\\n                        if l.code and any(k in l.code for k in FEEDIN_EXTRA):\\n                            new_call=cst.parse_expression(f""compute_annual_savings(electricity_costs_without_pv={r.left.code}, electricity_costs_with_pv={r.right.code}, annual_feed_in_revenue={l.code}, default=0.0)"")\\n                            self.changed=True\\n                            report.append(dict(file=path, lineno=str(getattr(orig,\\\'ln\\\',\\\'?\\\')), before=orig.value.code, after=new_call.code, reason=""feedin_plus_diff""))\\n                            return updated.with_changes(value=new_call)\\n                return updated\\n\\n        tx=Tx()\\n        new_mod = mod.visit(tx)\\n        if tx.changed and write:\\n            if not no_backup: write_text(path+"".bak"", code)\\n            write_text(path, new_mod.code)\\n            return True\\n        return tx.changed\\n\\n    for p in list_py(root):\\n        try:\\n            if process(p): changed_files+=1\\n        except Exception as e:\\n            report.append(dict(file=p, lineno=""?"", before="""", after="""", reason=f""ERROR:{e}""))\\n\\n    rep=os.path.join(out,""autopatch_annual_savings_report.csv"")\\n    with open(rep,""w"",newline="""",encoding=""utf-8"") as f:\\n        w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""])\\n        w.writeheader()\\n        for r in report: w.writerow(r)\\n    return changed_files, rep\\n\\n# ----------------------------- AUTOPATCH: project_data -----------------------------\\n\\ndef autopatch_project_data(root:str, write:bool, no_backup:bool, out:str):\\n    cst, m = require_libcst()\\n    ensure_dir(out)\\n    report=[]; changed_files=0\\n\\n    def process(path:str)->bool:\\n        nonlocal report\\n        code = read_text(path)\\n        base = os.path.basename(path).lower()\\n        if base == ""calculations.py"":\\n            new_code = insert_def_if_missing_calculations(code, ""build_project_data"", BUILD_PD_DEF_CODE)\\n            if new_code != code and write:\\n                if not no_backup: write_text(path+"".bak"", code)\\n                write_text(path, new_code)\\n                code = new_code\\n        try:\\n            mod = cst.parse_module(code)\\n        except Exception:\\n            return False\\n\\n        class Tx(cst.CSTTransformer):\\n            def __init__(self): self.changed=False\\n            def leave_Module(self, orig, updated):\\n                if self.changed:\\n                    updated, imp = add_named_import(updated, ""calculations"", ""build_project_data"")\\n                    if imp:\\n                        report.append(dict(file=path, lineno=""1"", before=""(kein Import)"", after=""from calculations import build_project_data"", reason=""missing_import_added""))\\n                return updated\\n\\n            def leave_SimpleStatementLine(self, orig, updated):\\n                # project_data.update({...})\\n                if len(orig.body)==1 and m.matches(orig.body[0], m.Expr(value=m.Call(func=m.Attribute()))):\\n                    call = orig.body[0].value\\n                    if m.matches(call.func, m.Attribute(value=m.Name(""project_data""), attr=m.Name(""update""))):\\n                        arg_code = call.args[0].value.code if call.args else ""{}""\\n                        repl = cst.parse_statement(f""project_data = build_project_data(project_data, {arg_code})\\\\n"")\\n                        self.changed=True\\n                        report.append(dict(file=path, lineno=str(getattr(orig,\\\'ln\\\',\\\'?\\\')), before=call.code, after=repl.code.strip(), reason=""project_data.update""))\\n                        return repl\\n                return updated\\n\\n            def leave_Assign(self, orig, updated):\\n                # project_data = ...\\n                if len(orig.targets)!=1 or not m.matches(orig.targets[0].target, m.Name(""project_data"")):\\n                    return updated\\n                rhs = orig.value\\n                # dict literal (inkl. {**a, **b})\\n                if m.matches(rhs, m.Dict()):\\n                    new = cst.parse_expression(f""build_project_data({rhs.code})"")\\n                    self.changed=True\\n                    report.append(dict(file=path, lineno=str(getattr(orig,\\\'ln\\\',\\\'?\\\')), before=rhs.code, after=new.code, reason=""dict_literal_to_builder""))\\n                    return updated.with_changes(value=new)\\n                # dict union: a | b\\n                if m.matches(rhs, m.BinaryOperation(operator=m.BitOr())):\\n                    new = cst.parse_expression(f""build_project_data({rhs.left.code}, {rhs.right.code})"")\\n                    self.changed=True\\n                    report.append(dict(file=path, lineno=str(getattr(orig,\\\'ln\\\',\\\'?\\\')), before=rhs.code, after=new.code, reason=""dict_union_to_builder""))\\n                    return updated.with_changes(value=new)\\n                # call(...)\\n                if m.matches(rhs, m.Call()):\\n                    fname = rhs.func.attr.value if m.matches(rhs.func, m.Attribute()) else (rhs.func.value if m.matches(rhs.func, m.Name()) else ""call"")\\n                    new = cst.parse_expression(f""build_project_data({rhs.code})"")\\n                    reason = f""{fname}_to_builder"" if str(fname).lower() in {""dict"",""merge"",""combine"",""deepmerge"",""update""} else ""call_wrapped_to_builder""\\n                    self.changed=True\\n                    report.append(dict(file=path, lineno=str(getattr(orig,\\\'ln\\\',\\\'?\\\')), before=rhs.code, after=new.code, reason=reason))\\n                    return updated.with_changes(value=new)\\n                return updated\\n\\n        tx=Tx()\\n        new_mod = mod.visit(tx)\\n        if tx.changed and write:\\n            if not no_backup: write_text(path+"".bak"", code)\\n            write_text(path, new_mod.code)\\n            return True\\n        return tx.changed\\n\\n    for p in list_py(root):\\n        try:\\n            if process(p): changed_files+=1\\n        except Exception as e:\\n            report.append(dict(file=p, lineno=""?"", before="""", after="""", reason=f""ERROR:{e}""))\\n\\n    rep=os.path.join(out,""autopatch_project_data_report.csv"")\\n    with open(rep,""w"",newline="""",encoding=""utf-8"") as f:\\n        w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""])\\n        w.writeheader()\\n        for r in report: w.writerow(r)\\n    return changed_files, rep\\n\\n# ----------------------------- STRUCTURE -----------------------------\\n\\ndef do_structure(root:str, out:str):\\n    ensure_dir(out)\\n    rows=[]\\n    for r,_,f in os.walk(root):\\n        for fn in f:\\n            p=os.path.join(r,fn)\\n            rel=os.path.relpath(p, root)\\n            try:\\n                size=os.path.getsize(p)\\n            except Exception:\\n                size=None\\n            text=""""; ext=os.path.splitext(fn)[1].lower()\\n            if ext in {"".py"","".ts"","".tsx"","".js"","".json"","".yml"","".yaml"","".md"","".txt"","".ini"","".cfg""}:\\n                try:\\n                    text=read_text(p)\\n                except Exception: text=""""\\n            n_lines=text.count(""\\\\n"")+1 if text else 0\\n            rows.append(dict(path=rel, ext=ext, size=size, lines=n_lines))\\n    import pandas as pd, json\\n    df=pd.DataFrame(rows).sort_values(""path"")\\n\\n    def tag_roles(path, ext, text):\\n        tags=[]; primary=""misc""\\n        p=path.lower()\\n        if any(k in p for k in [""pdf"",""doc"",""report""]): tags.append(""pdf"")\\n        if any(k in p for k in [""ui"",""view"",""screen"",""pages"",""components""]): tags.append(""ui"")\\n        if any(k in p for k in [""calc"",""analysis"",""compute""]): tags.append(""calc"")\\n        if any(k in p for k in [""api"",""server"",""backend"",""fastapi""]): tags.append(""api"")\\n        if any(k in p for k in [""data"",""csv"",""excel"",""db"",""sql""]): tags.append(""data"")\\n        if any(k in p for k in [""utils"",""helpers"",""common"",""lib""]): tags.append(""utils"")\\n        if ext in ["".tsx"","".ts"","".js""]: tags.append(""frontend"")\\n        if ext == "".py"": tags.append(""python"")\\n        if ext in ["".yml"","".yaml""]: tags.append(""yaml"")\\n        if ext == "".json"": tags.append(""json"")\\n        if text:\\n            if re.search(r""\\\\bstreamlit\\\\b"", text): tags += [""streamlit"",""ui""]\\n            if re.search(r""\\\\b(reportlab|fitz|pymupdf|pypdf|borb|weasyprint|pikepdf)\\\\b"", text, re.I): tags.append(""pdf"")\\n            if re.search(r""\\\\b(pandas|numpy|scipy)\\\\b"", text): tags.append(""calc"")\\n            if re.search(r""\\\\bfastapi\\\\b"", text, re.I): tags.append(""api"")\\n            if re.search(r""\\\\b(sqlite3|better-sqlite3|sqlalchemy|psycopg2)\\\\b"", text, re.I): tags.append(""db"")\\n            if re.search(r""\\\\breact\\\\b|\\\\bprimereact\\\\b|\\\\bchakra-ui\\\\b|\\\\btailwind\\\\b"", text, re.I): tags += [""react"",""ui""]\\n            if re.search(r""\\\\belectron\\\\b"", text, re.I): tags.append(""electron"")\\n            if re.search(r""\\\\bheatpump|waermepumpe|wärmepumpe\\\\b"", text, re.I): tags.append(""heatpump"")\\n            if re.search(r""\\\\bphotovoltaic|photovoltaik|pv\\\\b"", text, re.I): tags.append(""pv"")\\n            if re.search(r""\\\\bcrm\\\\b"", text, re.I): tags.append(""crm"")\\n            if re.search(r""\\\\bqrcode|qr\\\\b"", text, re.I): tags.append(""qr"")\\n            if re.search(r""\\\\bicc\\\\b|\\\\bcolorspace\\\\b|\\\\bcolormanagement\\\\b"", text, re.I): tags.append(""color"")\\n            if re.search(r""\\\\bpyyaml|yaml\\\\.safe_load\\\\b"", text, re.I): tags.append(""yaml-io"")\\n            if re.search(r""\\\\bghostscript|gswin|pdfcompress\\\\b"", text, re.I): tags.append(""pdf-post"")\\n            if re.search(r""\\\\bdocx|python-docx\\\\b"", text, re.I): tags.append(""docx"")\\n            if re.search(r""\\\\bmatplotlib|plotly|altair\\\\b"", text, re.I): tags.append(""charts"")\\n        prio=[""frontend"",""ui"",""pdf"",""calc"",""api"",""db"",""data"",""utils"",""python"",""yaml"",""json""]\\n        uniq=[]\\n        for t in tags:\\n            if t not in uniq: uniq.append(t)\\n        for c in prio:\\n            if c in uniq: primary=c; break\\n        return primary, "","".join(uniq)\\n\\n    roles=[]\\n    for _, r in df.iterrows():\\n        t=""""\\n        if r[""ext""] in ["".py"","".ts"","".tsx"","".js"","".json"","".yml"","".yaml"","".md"","".txt"","".ini"","".cfg""]:\\n            try:\\n                t=read_text(os.path.join(root, r[""path""]))\\n            except Exception: t=""""\\n        primary, tags = tag_roles(r[""path""], r[""ext""], t)\\n        roles.append((primary, tags))\\n    df[""primary_role""]=[x[0] for x in roles]\\n    df[""tags""]=[x[1] for x in roles]\\n\\n    # Save\\n    manifest = os.path.join(out, ""app_structure_manifest.csv"")\\n    df.to_csv(manifest, index=False, encoding=""utf-8"")\\n\\n    # Dir summary\\n    import pandas as pd\\n    from pathlib import Path\\n    by_dir=[]\\n    for _, r in df.iterrows():\\n        d=str(Path(r[""path""]).parent)\\n        by_dir.append((d, r[""path""], r[""primary_role""]))\\n    bdf=pd.DataFrame(by_dir, columns=[""dir"",""path"",""role""])\\n    dir_summary=bdf.groupby(""dir"").agg(files=(""path"",""count""), roles=(""role"", lambda s: "","".join(sorted(set([x for x in s if pd.notna(x)]))))).reset_index().sort_values(""dir"")\\n    dir_csv=os.path.join(out, ""app_structure_dirs.csv"")\\n    dir_summary.to_csv(dir_csv, index=False, encoding=""utf-8"")\\n\\n    # Trees\\n    from pathlib import Path\\n    def tree_text(root_dir, max_depth=3):\\n        lines=[]\\n        root_path=Path(root_dir)\\n        for path in sorted(root_path.rglob(""*"")):\\n            rel=path.relative_to(root_path)\\n            if len(rel.parts)==0: continue\\n            depth=len(rel.parts)\\n            if depth>max_depth: continue\\n            indent=""  ""*(depth-1)\\n            lines.append(f""{indent}{\\\'📁\\\' if path.is_dir() else \\\'📄\\\'} {rel.name}"")\\n        return ""\\\\n"".join(lines)\\n\\n    depth3=os.path.join(out,""app_tree_depth3.txt"")\\n    write_text(depth3, tree_text(root,3))\\n\\n    # Full tree\\n    all_lines=[]\\n    for p in sorted(Path(root).rglob(""*"")):\\n        rel=p.relative_to(Path(root))\\n        if len(rel.parts)==0: continue\\n        indent=""  ""*(len(rel.parts)-1)\\n        all_lines.append(f""{indent}{\\\'📁\\\' if p.is_dir() else \\\'📄\\\'} {rel.name}"")\\n    full=os.path.join(out,""app_tree_full.txt"")\\n    write_text(full, ""\\\\n"".join(all_lines))\\n\\n    return manifest, dir_csv, depth3, full\\n\\n# ----------------------------- YAML Positions-Check -----------------------------\\n\\ndef yaml_positions_check(root:str, out:str, tol_mm:float=0.2, key_x=(""x"",""left""), key_y=(""y"",""top""), key_page=(""page"",""seite"",""p"")):\\n    ensure_dir(out)\\n    try:\\n        import yaml  # type: ignore\\n        loader_available=True\\n    except Exception:\\n        yaml=None; loader_available=False\\n\\n    collisions=[]\\n    import math, json\\n    for path in list_yaml(root):\\n        try:\\n            text=read_text(path)\\n        except Exception:\\n            continue\\n        docs=[]\\n        if loader_available:\\n            try:\\n                for doc in yaml.safe_load_all(text):  # type: ignore\\n                    if doc is not None: docs.append(doc)\\n            except Exception:\\n                # Fallback: naive\\n                docs=[]\\n        # Heuristic fallback: try to extract dict-like blocks\\n        if not docs:\\n            # naive parse of ""key: value"" lines into one dict (best-effort)\\n            current={}\\n            for line in text.splitlines():\\n                m=re.match(r\\\'^\\\\s*([A-Za-z0-9_\\\\-\\\\.]+)\\\\s*:\\\\s*(.+?)\\\\s*$\\\', line)\\n                if m:\\n                    current[m.group(1)] = m.group(2)\\n            if current: docs=[current]\\n\\n        def visit(o, file_path):\\n            if isinstance(o, dict):\\n                keys_lower={str(k).lower():k for k in o.keys()}\\n                def first_key(cands):\\n                    for c in cands:\\n                        if c in keys_lower:\\n                            return keys_lower[c]\\n                    return None\\n                kx=first_key(k.lower() for k in key_x) if False else None  # not used\\n                # read numeric x,y if present\\n                xk = first_key([k for k in key_x])\\n                yk = first_key([k for k in key_y])\\n                pg = first_key([k for k in key_page])\\n                try:\\n                    x = float(o[xk]) if xk and o.get(xk) is not None else None\\n                    y = float(o[yk]) if yk and o.get(yk) is not None else None\\n                    p = int(o[pg]) if pg and o.get(pg) is not None else 1\\n                except Exception:\\n                    x=y=None; p=None\\n                if x is not None and y is not None and p is not None:\\n                    collisions.append(dict(file=file_path, page=p, x=x, y=y, key_hint=list(o.keys())[:3]))\\n                # recurse\\n                for v in o.values():\\n                    visit(v, file_path)\\n            elif isinstance(o, list):\\n                for it in o:\\n                    visit(it, file_path)\\n\\n        for d in docs:\\n            visit(d, path)\\n\\n    # Group by (page, x,y) within tolerance\\n    # Convert mm tolerance to absolute tolerance; we assume coordinates already in mm; if not, it\\\'s still a useful near-duplicate detector.\\n    groups=[]\\n    used=[False]*len(collisions)\\n    for i,a in enumerate(collisions):\\n        if used[i]: continue\\n        group=[a]; used[i]=True\\n        for j,b in enumerate(collisions):\\n            if used[j]: continue\\n            if a[""file""]==b[""file""] and a[""page""]==b[""page""] and abs(a[""x""]-b[""x""])<=tol_mm and abs(a[""y""]-b[""y""])<=tol_mm:\\n                group.append(b); used[j]=True\\n        if len(group)>1:\\n            groups.append(group)\\n\\n    # Save CSV\\n    import pandas as pd\\n    flat=[]\\n    for g in groups:\\n        for item in g:\\n            flat.append(dict(file=item[""file""], page=item[""page""], x=item[""x""], y=item[""y""], key_hint="";"".join(map(str,item[""key_hint""]))))\\n        flat.append(dict(file=""---"", page="""", x="""", y="""", key_hint=""""))\\n    out_csv=os.path.join(out, ""yaml_position_collisions.csv"")\\n    pd.DataFrame(flat).to_csv(out_csv, index=False, encoding=""utf-8"")\\n    return out_csv\\n\\n# ----------------------------- CLI -----------------------------\\n\\ndef main():\\n    ap = argparse.ArgumentParser(description=""Kakerlake Super Ultra Cleaner"")\\n    sub = ap.add_subparsers(dest=""cmd"", required=True)\\n\\n    ap_scan = sub.add_parser(""scan"", help=""Python-Kollisionen scannen"")\\n    ap_scan.add_argument(""root"")\\n    ap_scan.add_argument(""--out"", default=""ultra_reports"")\\n\\n    ap_aas = sub.add_parser(""autopatch-annual-savings"", help=""annual_savings zentralisieren"")\\n    ap_aas.add_argument(""root"")\\n    ap_aas.add_argument(""--out"", default=""ultra_reports"")\\n    ap_aas.add_argument(""--write"", action=""store_true"")\\n    ap_aas.add_argument(""--no-backup"", action=""store_true"")\\n\\n    ap_pd = sub.add_parser(""autopatch-project-data"", help=""project_data zentralisieren"")\\n    ap_pd.add_argument(""root"")\\n    ap_pd.add_argument(""--out"", default=""ultra_reports"")\\n    ap_pd.add_argument(""--write"", action=""store_true"")\\n    ap_pd.add_argument(""--no-backup"", action=""store_true"")\\n\\n    ap_struct = sub.add_parser(""structure"", help=""App-Struktur-Manifest & Trees erzeugen"")\\n    ap_struct.add_argument(""root"")\\n    ap_struct.add_argument(""--out"", default=""ultra_reports"")\\n\\n    ap_yaml = sub.add_parser(""yaml-check"", help=""YAML-Positionskollisionen erkennen"")\\n    ap_yaml.add_argument(""root"")\\n    ap_yaml.add_argument(""--out"", default=""ultra_reports"")\\n    ap_yaml.add_argument(""--tol-mm"", type=float, default=0.2)\\n\\n    ap_all = sub.add_parser(""all"", help=""Alles: scan + structure + yaml-check + Autopatches (write)"")\\n    ap_all.add_argument(""root"")\\n    ap_all.add_argument(""--out"", default=""ultra_reports"")\\n    ap_all.add_argument(""--no-backup"", action=""store_true"")\\n\\n    args = ap.parse_args()\\n    out = ensure_dir(args.out)\\n\\n    if args.cmd == ""scan"":\\n        scan_python(args.root, out)\\n        print(""SCAN fertig. CSVs in:"", out)\\n        return\\n\\n    if args.cmd == ""autopatch-annual-savings"":\\n        ch, rep = autopatch_annual_savings(args.root, write=args.write, no_backup=args.no_backup, out=out)\\n        print(f""Autopatch annual_savings: {ch} Dateien geändert. Report: {rep}"")\\n        return\\n\\n    if args.cmd == ""autopatch-project-data"":\\n        ch, rep = autopatch_project_data(args.root, write=args.write, no_backup=args.no_backup, out=out)\\n        print(f""Autopatch project_data: {ch} Dateien geändert. Report: {rep}"")\\n        return\\n\\n    if args.cmd == ""structure"":\\n        manifest, dirs, t3, full = do_structure(args.root, out)\\n        print(""STRUCTURE fertig:"", manifest, dirs, t3, full)\\n        return\\n\\n    if args.cmd == ""yaml-check"":\\n        csv_path = yaml_positions_check(args.root, out, tol_mm=args.tol_mm)\\n        print(""YAML-CHECK fertig:"", csv_path)\\n        return\\n\\n    if args.cmd == ""all"":\\n        # 1) Struktur & Scan & YAML\\n        manifest, dirs, t3, full = do_structure(args.root, out)\\n        scan_python(args.root, out)\\n        yaml_positions_check(args.root, out, tol_mm=0.2)\\n\\n        # 2) Autopatches (write)\\n        try:\\n            aas_ch, aas_rep = autopatch_annual_savings(args.root, write=True, no_backup=args.no_backup, out=out)\\n        except Exception as e:\\n            aas_ch, aas_rep = 0, f""(ERROR:{e})""\\n        try:\\n            pd_ch, pd_rep = autopatch_project_data(args.root, write=True, no_backup=args.no_backup, out=out)\\n        except Exception as e:\\n            pd_ch, pd_rep = 0, f""(ERROR:{e})""\\n\\n        # 3) ZIP zusammenstellen\\n        import zipfile\\n        zip_path = os.path.join(out, ""ultra_reports.zip"")\\n        with zipfile.ZipFile(zip_path, ""w"", zipfile.ZIP_DEFLATED) as z:\\n            for fn in os.listdir(out):\\n                if fn == ""ultra_reports.zip"": continue\\n                z.write(os.path.join(out, fn), arcname=fn)\\n\\n        print(""ALL fertig."")\\n        print(""SCAN/STRUCT/YAML CSVs und Reports in:"", out)\\n        print(""Autopatch annual_savings:"", aas_ch, ""Dateien; Report:"", aas_rep)\\n        print(""Autopatch project_data:"", pd_ch, ""Dateien; Report:"", pd_rep)\\n        print(""ZIP:"", zip_path)\\n        return\\n\\nif __name__ == ""__main__"":\\n    main()\\n\'')","('Const',)",,code = r'''#!/usr/bin/env python3
.\dev_tools\kakerlake_ultra_cleaner.py,332,code,"('Name', 'new')","('Name',)",new,"write_text(path, new); code=new"
.\dev_tools\kakerlake_ultra_cleaner.py,458,code,"('Name', 'new')","('Name',)",new,"write_text(path, new); code=new"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,194,code,"('Name', 'new')","('Name',)",new,code = new
.\dev_tools\kakerlake_ultra_cleaner_v2.py,336,code,"('Name', 'new')","('Name',)",new,"write_text(path, new); code = new"
.\mnt\data\kakerlake_ultra_cleaner.py,332,code,"('Name', 'new')","('Name',)",new,"write_text(path, new); code=new"
.\mnt\data\kakerlake_ultra_cleaner.py,458,code,"('Name', 'new')","('Name',)",new,"write_text(path, new); code=new"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,194,code,"('Name', 'new')","('Name',)",new,code = new
.\mnt\data\kakerlake_ultra_cleaner_v2.py,336,code,"('Name', 'new')","('Name',)",new,"write_text(path, new); code = new"
.\tools\kakerlake_ultra_cleaner.py,333,code,"('Name', 'new')","('Name',)",new,"write_text(path, new); code=new"
.\tools\kakerlake_ultra_cleaner.py,459,code,"('Name', 'new')","('Name',)",new,"write_text(path, new); code=new"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,208,code,"('Name', 'newc')","('Name',)",newc,code = newc
.\dev_tools\kakerlake_ultra_cleaner_v3.py,352,code,"('Name', 'newc')","('Name',)",newc,"write_text(path, newc); code = newc"
.\tools\kakerlake_ultra_cleaner.py,2,code,"('Name', 'r')","('Name',)",r,code = r#!/usr/bin/env python3
.\tools\schema_extractor.py,48,col,"('Call', ('Attr', 'cm', 'group'), (('Const', '1'),), ())","('Call', 1, 0)",cm,col = cm.group(1)
.\pdf_template_engine\dynamic_overlay.py,107,col,"('Call', ('Name', 'Color'), (('Const', '0.6'), ('Const', '0.65'), ('Const', '0.75')), ())","('Call', 3, 0)",Color,"col = Color(0.6, 0.65, 0.75)"
.\multi_offer_generator_old.py,1322,col,"('Subscript', ('Name', 'cols'), ('Mod', ('Name', 'idx'), ('Const', '3')))","('Subscript',)","cols,idx",col = cols[idx % 3]
.\notwendig oder nicht\python_function_recipes.py,36,col_idx,"('Subscript', ('Attr', ""key_row.sort_values(kind='mergesort')"", 'index'), ('Name', 'pos'))","('Subscript',)","key_row,pos",col_idx = key_row.sort_values(kind='mergesort').index[pos]
.\notwendig oder nicht\python_function_recipes.py,41,col_idx,"('Subscript', ('Attr', 'hits', 'index'), ('Const', '0'))","('Subscript',)",hits,col_idx = hits.index[0]
.\analysis.py,1679,color_discrete_sequence,"('BoolOp', 'Or', (('Call', ('Attr', 'specific_settings', 'get'), (('Const', ""'color_discrete_sequence'""),), ()), ('Call', ('Name', '_safe_viz_get'), (('Name', 'viz_settings'), ('Const', ""'color_discrete_sequence'"")), ())))","('BoolOp', 'Or', 2)","_safe_viz_get,specific_settings,viz_settings","color_discrete_sequence = specific_settings.get(""color_discrete_sequence"") or _safe_viz_get(viz_settings, ""color_discrete_sequence"")"
.\analysis.py,1681,color_discrete_sequence,"('Other', 'ListComp')","('Other', 'ListComp')","c,primary_color,secondary_color","color_discrete_sequence = [c for c in [primary_color, secondary_color] if c]"
.\analysis.py,1072,color_palettes,"('Dict', (('KV', ('Const', ""'Blau-Töne'""), ('List', (('Const', ""'#0f3460'""), ('Const', ""'#16537e'""), ('Const', ""'#1e6091'""), ('Const', ""'#266ba0'""), ('Const', ""'#2e86ab'""), ('Const', ""'#37a0b4'"")))), ('KV', ('Const', ""'Bunt'""), ('List', (('Const', ""'#e74c3c'""), ('Const', ""'#f39c12'""), ('Const', ""'#f1c40f'""), ('Const', ""'#27ae60'""), ('Const', ""'#3498db'""), ('Const', ""'#9b59b6'"")))), ('KV', ('Const', ""'Grün-Töne'""), ('List', (('Const', ""'#2d5016'""), ('Const', ""'#4a7c59'""), ('Const', ""'#6fa866'""), ('Const', ""'#95d473'""), ('Const', ""'#bcf5bc'""), ('Const', ""'#e8f5e8'"")))), ('KV', ('Const', ""'Kalt'""), ('List', (('Const', ""'#00d2d3'""), ('Const', ""'#0abdc6'""), ('Const', ""'#009ffd'""), ('Const', ""'#2196f3'""), ('Const', ""'#4fc3f7'""), ('Const', ""'#81d4fa'"")))), ('KV', ('Const', ""'Standard'""), ('List', (('Const', ""'#1f77b4'""), ('Const', ""'#ff7f0e'""), ('Const', ""'#2ca02c'""), ('Const', ""'#d62728'""), ('Const', ""'#9467bd'""), ('Const', ""'#8c564b'"")))), ('KV', ('Const', ""'Warm'""), ('List', (('Const', ""'#ff6b35'""), ('Const', ""'#f7931e'""), ('Const', ""'#ffd23f'""), ('Const', ""'#ff8c42'""), ('Const', ""'#ff6b6b'""), ('Const', ""'#ff4757'""))))))","('Dict', 6)",,color_palettes = {
.\analysis.py,1406,color_palettes,"('Dict', (('KV', ('Const', ""'Blau-Töne'""), ('List', (('Const', ""'#0f3460'""), ('Const', ""'#16537e'""), ('Const', ""'#1e6091'""), ('Const', ""'#266ba0'""), ('Const', ""'#2e86ab'""), ('Const', ""'#37a0b4'"")))), ('KV', ('Const', ""'Bunt'""), ('List', (('Const', ""'#e74c3c'""), ('Const', ""'#f39c12'""), ('Const', ""'#f1c40f'""), ('Const', ""'#27ae60'""), ('Const', ""'#3498db'""), ('Const', ""'#9b59b6'"")))), ('KV', ('Const', ""'Grün-Töne'""), ('List', (('Const', ""'#2d5016'""), ('Const', ""'#4a7c59'""), ('Const', ""'#6fa866'""), ('Const', ""'#95d473'""), ('Const', ""'#bcf5bc'""), ('Const', ""'#e8f5e8'"")))), ('KV', ('Const', ""'Kalt'""), ('List', (('Const', ""'#00d2d3'""), ('Const', ""'#0abdc6'""), ('Const', ""'#009ffd'""), ('Const', ""'#2196f3'""), ('Const', ""'#4fc3f7'""), ('Const', ""'#81d4fa'"")))), ('KV', ('Const', ""'Standard'""), ('List', (('Const', ""'#1f77b4'""), ('Const', ""'#ff7f0e'""), ('Const', ""'#2ca02c'""), ('Const', ""'#d62728'""), ('Const', ""'#9467bd'""), ('Const', ""'#8c564b'"")))), ('KV', ('Const', ""'Warm'""), ('List', (('Const', ""'#ff6b35'""), ('Const', ""'#f7931e'""), ('Const', ""'#ffd23f'""), ('Const', ""'#ff8c42'""), ('Const', ""'#ff6b6b'""), ('Const', ""'#ff4757'""))))))","('Dict', 6)",,color_palettes = {
.\analysis.py,2625,color_palettes,"('Dict', (('KV', ('Const', ""'Grün-Blau'""), ('List', (('Const', ""'#2ca02c'""), ('Const', ""'#1f77b4'"")))), ('KV', ('Const', ""'Kalt'""), ('List', (('Const', ""'#00d2d3'""), ('Const', ""'#0abdc6'"")))), ('KV', ('Const', ""'Rot-Grün'""), ('List', (('Const', ""'#d62728'""), ('Const', ""'#2ca02c'"")))), ('KV', ('Const', ""'Standard'""), ('List', (('Const', ""'#1f77b4'""), ('Const', ""'#ff7f0e'"")))), ('KV', ('Const', ""'Warm'""), ('List', (('Const', ""'#ff6b35'""), ('Const', ""'#f7931e'""))))))","('Dict', 5)",,color_palettes = {
.\options.py,272,color_scheme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""' Farbschema'""),), (('help', ('Const', ""'Wählen Sie Ihr bevorzugtes Farbschema'"")), ('index', ('Call', ('Attr', ""['Standard', 'Ocean Blue', 'Forest Green', 'Sunset Orange', 'Purple Rain', 'Monochrome']"", 'index'), (('Name', 'current_color_scheme'),), ())), ('options', ('List', (('Const', ""'Standard'""), ('Const', ""'Ocean Blue'""), ('Const', ""'Forest Green'""), ('Const', ""'Sunset Orange'""), ('Const', ""'Purple Rain'""), ('Const', ""'Monochrome'""))))))","('Call', 1, 3)","current_color_scheme,st",color_scheme = st.selectbox(
.\doc_output.py,250,color_scheme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Farb-Schema auswählen'""),), (('format_func', ('Other', 'Lambda')), ('key', ('Const', ""'pdf_color_scheme'"")), ('options', ('List', (('Const', ""'PROFESSIONAL'""), ('Const', ""'SOLAR'""), ('Const', ""'ECO'""), ('Const', ""'MODERN'""), ('Const', ""'CUSTOM'""))))))","('Call', 1, 3)","st,x",color_scheme = st.selectbox(
.\doc_output.py,1691,color_scheme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Farben für Diagramme'""),), (('key', ('Const', ""'pdf_color_scheme_select'"")), ('options', ('List', (('Const', ""'Standard'""), ('Const', ""'Blau-Töne'""), ('Const', ""'Grün-Töne'""), ('Const', ""'Orange-Töne'""), ('Const', ""'Violett-Töne'""), ('Const', ""'Benutzerdefiniert'""))))))","('Call', 1, 2)",st,color_scheme = st.selectbox(
.\analysis.py,2618,color_scheme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Farbschema:'""), ('List', (('Const', ""'Standard'""), ('Const', ""'Grün-Blau'""), ('Const', ""'Rot-Grün'""), ('Const', ""'Warm'""), ('Const', ""'Kalt'"")))), (('key', ('Const', ""'prod_vs_cons_colors'"")),))","('Call', 2, 1)",st,color_scheme = st.selectbox(
.\analysis.py,1065,color_scheme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Farbschema:'""), ('List', (('Const', ""'Standard'""), ('Const', ""'Grün-Töne'""), ('Const', ""'Blau-Töne'""), ('Const', ""'Warm'""), ('Const', ""'Kalt'""), ('Const', ""'Bunt'"")))), (('key', ('Other', 'JoinedStr')),))","('Call', 2, 1)","chart_key,st",color_scheme = st.selectbox(
.\analysis.py,1399,color_scheme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Farbschema:'""), ('List', (('Const', ""'Standard'""), ('Const', ""'Grün-Töne'""), ('Const', ""'Blau-Töne'""), ('Const', ""'Warm'""), ('Const', ""'Kalt'""), ('Const', ""'Bunt'"")))), (('key', ('Other', 'JoinedStr')),))","('Call', 2, 1)","chart_key,st",color_scheme = st.selectbox(
.\analysis.py,2633,colors,"('Call', ('Attr', 'color_palettes', 'get'), (('Name', 'color_scheme'), ('List', (('Const', ""'#1f77b4'""), ('Const', ""'#ff7f0e'"")))), ())","('Call', 2, 0)","color_palettes,color_scheme","colors = color_palettes.get(color_scheme, [""#1f77b4"", ""#ff7f0e""])"
.\analysis.py,1415,colors,"('Call', ('Attr', 'color_palettes', 'get'), (('Name', 'color_scheme'), ('List', (('Const', ""'#1f77b4'""), ('Const', ""'#ff7f0e'""), ('Const', ""'#2ca02c'"")))), ())","('Call', 2, 0)","color_palettes,color_scheme","colors = color_palettes.get(color_scheme, [""#1f77b4"", ""#ff7f0e"", ""#2ca02c""])"
.\analysis.py,1102,colors,"('Call', ('Attr', 'color_palettes', 'get'), (('Name', 'color_scheme'), ('Name', 'default_colors')), ())","('Call', 2, 0)","color_palettes,color_scheme,default_colors","colors = color_palettes.get(color_scheme, default_colors)"
.\pdf_styles.py,895,colors,"('Other', 'IfExp')","('Other', 'IfExp')","hasattr,theme","colors = theme['colors'].to_dict() if hasattr(theme['colors'], 'to_dict') else theme['colors']"
.\pdf_ui.py,789,cols,"('Call', ('Attr', 'st', 'columns'), (('Add', (('Call', ('Name', 'len'), (('Subscript', ('Subscript', ('Attr', 'st', 'session_state'), ('Const', ""'temp_table_data'"")), ('Const', ""'headers'"")),), ()), ('Const', '1'))),), ())","('Call', 1, 0)","len,st",cols = st.columns(len(st.session_state['temp_table_data']['headers']) + 1)
.\components\progress_settings.py,195,cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'len'), (('Name', 'PRESET_THEMES'),), ()),), ())","('Call', 1, 0)","PRESET_THEMES,len,st",cols = st.columns(len(PRESET_THEMES))
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_settings.py.insert.py,174,cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'len'), (('Name', 'PRESET_THEMES'),), ()),), ())","('Call', 1, 0)","PRESET_THEMES,len,st",cols = st.columns(len(PRESET_THEMES))
.\notwendig oder nicht\wichtig\portings\patches\components\progress_settings.py.insert.py,183,cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'len'), (('Name', 'PRESET_THEMES'),), ()),), ())","('Call', 1, 0)","PRESET_THEMES,len,st",cols = st.columns(len(PRESET_THEMES))
.\tools\out_selected\patches\components\progress_settings.py.insert.py,174,cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'len'), (('Name', 'PRESET_THEMES'),), ()),), ())","('Call', 1, 0)","PRESET_THEMES,len,st",cols = st.columns(len(PRESET_THEMES))
.\tools\portings\patches\components\progress_settings.py.insert.py,183,cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'len'), (('Name', 'PRESET_THEMES'),), ()),), ())","('Call', 1, 0)","PRESET_THEMES,len,st",cols = st.columns(len(PRESET_THEMES))
.\crm_pipeline_ui.py,139,cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'len'), (('Name', 'active_stages'),), ()),), ())","('Call', 1, 0)","active_stages,len,st",cols = st.columns(len(active_stages))
.\multi_offer_generator.py,117,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,cols = st.columns(2)
.\multi_offer_generator.py,146,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,cols = st.columns(2)
.\multi_offer_generator_new.py,112,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,cols = st.columns(2)
.\multi_offer_generator_new.py,142,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,cols = st.columns(2)
.\multi_offer_generator_new.py,205,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,cols = st.columns(2)
.\multi_offer_generator_old.py,103,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,cols = st.columns(2)
.\multi_offer_generator_old.py,150,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,cols = st.columns(2)
.\multi_offer_generator_old.py,456,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,cols = st.columns(2)
.\multi_offer_generator_old.py,503,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '2'),), ())","('Call', 1, 0)",st,cols = st.columns(2)
.\multi_offer_generator.py,293,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '3'),), ())","('Call', 1, 0)",st,cols = st.columns(3)
.\multi_offer_generator_old.py,1319,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '3'),), ())","('Call', 1, 0)",st,cols = st.columns(3)
.\pdf_styles.py,818,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '3'),), ())","('Call', 1, 0)",st,cols = st.columns(3)
.\pdf_styles.py,897,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '4'),), ())","('Call', 1, 0)",st,cols = st.columns(4)
.\pdf_styles.py,1064,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '5'),), ())","('Call', 1, 0)",st,cols = st.columns(5)
.\crm_calendar_ui.py,113,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '7'),), ())","('Call', 1, 0)",st,cols = st.columns(7)
.\crm_calendar_ui.py,121,cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '7'),), ())","('Call', 1, 0)",st,cols = st.columns(7)
.\admin_product_attributes_ui.py,50,cols,"('Call', ('Attr', 'st', 'columns'), (('List', (('Const', '2'), ('Const', '3'), ('Const', '1'), ('Const', '1'), ('Const', '1'))),), ())","('Call', 1, 0)",st,"cols = st.columns([2,3,1,1,1])"
.\multi_offer_generator.py,183,cols,"('Call', ('Attr', 'st', 'columns'), (('List', (('Const', '3'), ('Const', '1'))),), ())","('Call', 1, 0)",st,"cols = st.columns([3, 1])"
.\crm.py,491,cols,"('Call', ('Attr', 'st', 'columns'), (('List', (('Const', '3'), ('Const', '2'), ('Const', '2'), ('Const', '2'))),), ())","('Call', 1, 0)",st,"cols = st.columns([3, 2, 2, 2])"
.\admin_panel.py,2053,cols,"('Call', ('Attr', 'st', 'columns'), (('Name', 'cols_per_row'),), ())","('Call', 1, 0)","cols_per_row,st",cols = st.columns(cols_per_row)
.\notwendig oder nicht\excel_range_reader.py,70,cols,"('Other', 'ListComp')","('Other', 'ListComp')","first_row,str,x",cols = [str(x) for x in first_row]
.\tools\schema_extractor.py,87,cols,"('Other', 'ListComp')","('Other', 'ListComp')","c,im","tname = im.group(1); cols = [c.strip() for c in im.group(2).split(',')]"
.\pdf_template_engine\placeholders.py,2556,combined,"('Add', (('Call', ('Name', 'float'), (('Name', 'hp_after'),), ()), ('Call', ('Name', 'float'), (('Name', 'pv_total'),), ())))","('Add', (('Call', 1, 0), ('Call', 1, 0)))","float,hp_after,pv_total",combined = float(hp_after) + float(pv_total)
.\pdf_template_engine\placeholders.py,2553,combined,"('Const', 'None')","('Const',)",,combined = None
.\pdf_template_engine\placeholders.py,2558,combined,"('Const', 'None')","('Const',)",,combined = None
.\excel_eval.py,128,comp,"('Call', ('Name', 'ModelCompiler'), (), ())","('Call', 0, 0)",ModelCompiler,comp = ModelCompiler()
.\solar_calculator.py,277,comp,"('Call', ('Name', 'get_product_by_model_name_safe'), (('Subscript', ('Name', 'details'), ('Name', 'name_key')),), ())","('Call', 1, 0)","details,get_product_by_model_name_safe,name_key",comp = get_product_by_model_name_safe(details[name_key])
.\multi_offer_generator.py,1226,companies_selected,"('Call', ('Attr', 'generator', 'render_company_selection'), (), ())","('Call', 0, 0)",generator,companies_selected = generator.render_company_selection()
.\multi_offer_generator.py,1178,companies_selected,"('Call', ('Attr', 'self', 'render_company_selection'), (), ())","('Call', 0, 0)",self,companies_selected = self.render_company_selection()
.\multi_offer_generator_new.py,434,companies_selected,"('Call', ('Attr', 'self', 'render_company_selection'), (), ())","('Call', 0, 0)",self,companies_selected = self.render_company_selection()
.\multi_offer_generator_old.py,1354,company,"('Call', ('Name', 'next'), (('Other', 'GeneratorExp'), ('Const', 'None')), ())","('Call', 2, 0)","all_companies,c,company_id,next","company = next((c for c in all_companies if c['id'] == company_id), None)"
.\multi_offer_generator_old.py,1421,company,"('Call', ('Name', 'next'), (('Other', 'GeneratorExp'), ('Const', 'None')), ())","('Call', 2, 0)","all_companies,c,company_id,next","company = next((c for c in all_companies if c['id'] == company_id), None)"
.\multi_offer_generator_old.py,1454,company,"('Call', ('Name', 'next'), (('Other', 'GeneratorExp'), ('Const', 'None')), ())","('Call', 2, 0)","all_companies,c,company_id,next","company = next((c for c in all_companies if c['id'] == company_id), None)"
.\multi_offer_generator.py,241,company,"('Other', 'IfExp')","('Other', 'IfExp')","callable,company_id,get_company","company = get_company(company_id) if callable(get_company) else {""name"": f""Firma {company_id}"", ""id"": company_id}"
.\multi_offer_generator.py,601,company,"('Other', 'IfExp')","('Other', 'IfExp')","callable,company_id,get_company",company = get_company(company_id) if callable(get_company) else {}
.\multi_offer_generator_new.py,301,company,"('Other', 'IfExp')","('Other', 'IfExp')","callable,company_id,get_company",company = get_company(company_id) if callable(get_company) else {}
.\admin_panel.py,240,company_data_for_form,"('Dict', ())","('Dict', 0)",,company_data_for_form = {}
.\admin_panel.py,244,company_data_for_form,"('Name', 'company_to_edit')","('Name',)",company_to_edit,company_data_for_form = company_to_edit
.\pdf_ui.py,1364,company_details,"('Call', ('Name', 'get_active_company_details_func'), (), ())","('Call', 0, 0)",get_active_company_details_func,company_details = get_active_company_details_func()
.\database.py,1423,company_details,"('Call', ('Name', 'get_company'), (('Name', 'active_id'),), ())","('Call', 1, 0)","active_id,get_company",company_details = get_company(active_id)
.\pdf_ui.py,1367,company_details,"('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'info@ihresolarfirma.de'"")), ('KV', ('Const', ""'id'""), ('Const', '1')), ('KV', ('Const', ""'name'""), ('Const', ""'Ihre Solarfirma'"")), ('KV', ('Const', ""'phone'""), ('Const', ""'+49 123 456789'"")), ('KV', ('Const', ""'street'""), ('Const', ""'Musterstraße 1'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))","('Dict', 7)",,company_details = {
.\multi_offer_generator_old.py,252,company_details,"('Other', 'IfExp')","('Other', 'IfExp')","callable,company_id,get_company",company_details = (
.\multi_offer_generator_old.py,722,company_details,"('Other', 'IfExp')","('Other', 'IfExp')","callable,company_id,get_company",company_details = (
.\multi_offer_generator.py,1090,company_doc_ids,"('List', ())","('List', 0)",,company_doc_ids: list[int] = []
.\multi_offer_generator.py,1094,company_doc_ids,"('Other', 'ListComp')","('Other', 'ListComp')","d,dict,docs,isinstance","company_doc_ids = [d.get(""id"") for d in docs if isinstance(d, dict) and d.get(""id"") is not None]"
.\pdf_ui.py,1429,company_docs,"('Call', ('Name', 'db_list_company_documents_func'), (('Call', ('Attr', 'active_company', 'get'), (('Const', ""'id'""),), ()), ('Const', 'None')), ())","('Call', 2, 0)","active_company,db_list_company_documents_func","company_docs = db_list_company_documents_func(active_company.get('id'), None)"
.\multi_offer_generator_old.py,665,company_docs,"('Call', ('Name', 'get_company_documents'), (), (('company_id', ('Subscript', ('Name', 'offer_data'), ('Const', ""'company_id'""))),))","('Call', 0, 1)","get_company_documents,offer_data","company_docs = get_company_documents(company_id=offer_data[""company_id""])"
.\heatpump_ui.py,1060,company_info,"('BoolOp', 'Or', (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'active_company_info'""), ('Dict', ())), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",st,"company_info = st.session_state.get('active_company_info', {}) or {}"
.\pdf_erstellen_komplett.py,184,company_info,"('BoolOp', 'Or', (('Call', ('Name', 'get_active_company'), (), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",get_active_company,company_info = get_active_company() or {}
.\tests\test_main_pdf.py,73,company_info,"('BoolOp', 'Or', (('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Hamburg'"")), ('KV', ('Const', ""'email'""), ('Const', ""'info@ding-solar.de'"")), ('KV', ('Const', ""'name'""), ('Const', ""'DING Solar GmbH'"")), ('KV', ('Const', ""'phone'""), ('Const', ""'+49 40 123456'"")), ('KV', ('Const', ""'short_name'""), ('Const', ""'DING'"")), ('KV', ('Const', ""'street'""), ('Const', ""'Sonnenweg 1'"")), ('KV', ('Const', ""'website'""), ('Const', ""'https://ding-solar.de'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'20095'"")))), ('Name', 'active_company')))","('BoolOp', 'Or', 2)",active_company,company_info = active_company or {
.\tools\test_main_pdf.py,73,company_info,"('BoolOp', 'Or', (('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Hamburg'"")), ('KV', ('Const', ""'email'""), ('Const', ""'info@ding-solar.de'"")), ('KV', ('Const', ""'name'""), ('Const', ""'DING Solar GmbH'"")), ('KV', ('Const', ""'phone'""), ('Const', ""'+49 40 123456'"")), ('KV', ('Const', ""'short_name'""), ('Const', ""'DING'"")), ('KV', ('Const', ""'street'""), ('Const', ""'Sonnenweg 1'"")), ('KV', ('Const', ""'website'""), ('Const', ""'https://ding-solar.de'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'20095'"")))), ('Name', 'active_company')))","('BoolOp', 'Or', 2)",active_company,company_info = active_company or {
.\pdf_template_engine\placeholders.py,422,company_info,"('BoolOp', 'Or', (('Dict', ()), ('Name', 'company_info')))","('BoolOp', 'Or', 2)",company_info,company_info = company_info or {}
.\pdf_erstellen_komplett.py,212,company_info,"('Call', ('Attr', 'json', 'loads'), (('Call', ('Attr', 'cj.read()', 'decode'), (('Const', ""'utf-8'""),), ()),), ())","('Call', 1, 0)","cj,json","company_info = json.loads(cj.read().decode(""utf-8""))"
.\central_pdf_system.py,152,company_info,"('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'company_info'""), ('Dict', ())), ())","('Call', 2, 0)",kwargs,"company_info = kwargs.get('company_info', {})"
.\central_pdf_system.py,169,company_info,"('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'company_info'""), ('Dict', ())), ())","('Call', 2, 0)",kwargs,"company_info = kwargs.get('company_info', {})"
.\central_pdf_system.py,193,company_info,"('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'company_info'""), ('Dict', ())), ())","('Call', 2, 0)",kwargs,"company_info = kwargs.get('company_info', {})"
.\central_pdf_system.py,349,company_info,"('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'company_info'""), ('Dict', ())), ())","('Call', 2, 0)",kwargs,"company_info = kwargs.get('company_info', {})"
.\central_pdf_system.py,410,company_info,"('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'company_info'""), ('Dict', ())), ())","('Call', 2, 0)",kwargs,"company_info = kwargs.get('company_info', {})"
.\central_pdf_system.py,461,company_info,"('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'company_info'""), ('Dict', ())), ())","('Call', 2, 0)",kwargs,"company_info = kwargs.get('company_info', {})"
.\pdf_erstellen_komplett.py,129,company_info,"('Call', ('Name', '_read_json'), (('Name', 'company_json'),), ())","('Call', 1, 0)","_read_json,company_json",company_info = _read_json(company_json)
.\central_pdf_system.py,1975,company_info,"('Call', ('Name', 'get_active_company_details_func'), (), ())","('Call', 0, 0)",get_active_company_details_func,company_info = get_active_company_details_func()
.\multi_offer_generator_old.py,1129,company_info,"('Call', ('Name', 'get_company_by_id'), (('Name', 'company_id'),), ())","('Call', 1, 0)","company_id,get_company_by_id",company_info = get_company_by_id(company_id)
.\multi_offer_generator_old.py,1240,company_info,"('Call', ('Name', 'get_company_by_id'), (('Name', 'company_id'),), ())","('Call', 1, 0)","company_id,get_company_by_id",company_info = get_company_by_id(company_id)
.\.tmp_placeholder_test.py,29,company_info,"('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Berlin'"")), ('KV', ('Const', ""'email'""), ('Const', ""'info@example.com'"")), ('KV', ('Const', ""'name'""), ('Const', ""'ACME Solar'"")), ('KV', ('Const', ""'phone'""), ('Const', ""'01234'"")), ('KV', ('Const', ""'street'""), ('Const', ""'Musterweg 1'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))","('Dict', 6)",,company_info = {
.\tests\test_numbering.py,17,company_info,"('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Hamburg'"")), ('KV', ('Const', ""'name'""), ('Const', ""'DING Solar GmbH'"")), ('KV', ('Const', ""'short_name'""), ('Const', ""'DING'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'22359'""))))","('Dict', 4)",,"company_info = {""name"": ""DING Solar GmbH"", ""short_name"": ""DING"", ""city"": ""Hamburg"", ""zip_code"": ""22359""}"
.\tests\test_overlay_footer.py,16,company_info,"('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Hamburg'"")), ('KV', ('Const', ""'name'""), ('Const', ""'DING Solar GmbH'"")), ('KV', ('Const', ""'short_name'""), ('Const', ""'DING'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'22359'""))))","('Dict', 4)",,"company_info = {""name"": ""DING Solar GmbH"", ""short_name"": ""DING"", ""city"": ""Hamburg"", ""zip_code"": ""22359""}"
.\tools\test_numbering.py,17,company_info,"('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Hamburg'"")), ('KV', ('Const', ""'name'""), ('Const', ""'DING Solar GmbH'"")), ('KV', ('Const', ""'short_name'""), ('Const', ""'DING'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'22359'""))))","('Dict', 4)",,"company_info = {""name"": ""DING Solar GmbH"", ""short_name"": ""DING"", ""city"": ""Hamburg"", ""zip_code"": ""22359""}"
.\tools\test_overlay_footer.py,16,company_info,"('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Hamburg'"")), ('KV', ('Const', ""'name'""), ('Const', ""'DING Solar GmbH'"")), ('KV', ('Const', ""'short_name'""), ('Const', ""'DING'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'22359'""))))","('Dict', 4)",,"company_info = {""name"": ""DING Solar GmbH"", ""short_name"": ""DING"", ""city"": ""Hamburg"", ""zip_code"": ""22359""}"
.\tests\test_main6_render.py,58,company_info,"('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Solingen'"")), ('KV', ('Const', ""'email'""), ('Const', ""'info@mustersolar.de'"")), ('KV', ('Const', ""'name'""), ('Const', ""'Muster Solar GmbH'"")), ('KV', ('Const', ""'phone'""), ('Const', ""'+49 555 123'"")), ('KV', ('Const', ""'street'""), ('Const', ""'Hauptstraße 1'"")), ('KV', ('Const', ""'website'""), ('Const', ""'https://mustersolar.de'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'98765'""))))","('Dict', 7)",,company_info = {
.\tools\test_main6_render.py,58,company_info,"('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Solingen'"")), ('KV', ('Const', ""'email'""), ('Const', ""'info@mustersolar.de'"")), ('KV', ('Const', ""'name'""), ('Const', ""'Muster Solar GmbH'"")), ('KV', ('Const', ""'phone'""), ('Const', ""'+49 555 123'"")), ('KV', ('Const', ""'street'""), ('Const', ""'Hauptstraße 1'"")), ('KV', ('Const', ""'website'""), ('Const', ""'https://mustersolar.de'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'98765'""))))","('Dict', 7)",,company_info = {
.\notwendig oder nicht\wichtig\portings\patches\test_final_pdf_logos.py.insert.py,58,company_info,"('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Sonnenstein'"")), ('KV', ('Const', ""'email'""), ('Const', ""'info@solar-gmbh.de'"")), ('KV', ('Const', ""'name'""), ('Const', ""'Solar GmbH'"")), ('KV', ('Const', ""'phone'""), ('Const', ""'0123-456789'"")), ('KV', ('Const', ""'street'""), ('Const', ""'Solarweg 123'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'54321'""))))","('Dict', 6)",,company_info = {
.\notwendig oder nicht\wichtig\portings\patches\test_pdf_logos.py.insert.py,58,company_info,"('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Sonnenstein'"")), ('KV', ('Const', ""'email'""), ('Const', ""'info@solar-gmbh.de'"")), ('KV', ('Const', ""'name'""), ('Const', ""'Solar GmbH'"")), ('KV', ('Const', ""'phone'""), ('Const', ""'0123-456789'"")), ('KV', ('Const', ""'street'""), ('Const', ""'Solarweg 123'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'54321'""))))","('Dict', 6)",,company_info = {
.\tests\test_final_pdf_logos.py,60,company_info,"('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Sonnenstein'"")), ('KV', ('Const', ""'email'""), ('Const', ""'info@solar-gmbh.de'"")), ('KV', ('Const', ""'name'""), ('Const', ""'Solar GmbH'"")), ('KV', ('Const', ""'phone'""), ('Const', ""'0123-456789'"")), ('KV', ('Const', ""'street'""), ('Const', ""'Solarweg 123'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'54321'""))))","('Dict', 6)",,company_info = {
.\tests\test_pdf_logos.py,60,company_info,"('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Sonnenstein'"")), ('KV', ('Const', ""'email'""), ('Const', ""'info@solar-gmbh.de'"")), ('KV', ('Const', ""'name'""), ('Const', ""'Solar GmbH'"")), ('KV', ('Const', ""'phone'""), ('Const', ""'0123-456789'"")), ('KV', ('Const', ""'street'""), ('Const', ""'Solarweg 123'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'54321'""))))","('Dict', 6)",,company_info = {
.\tools\portings\patches\test_final_pdf_logos.py.insert.py,58,company_info,"('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Sonnenstein'"")), ('KV', ('Const', ""'email'""), ('Const', ""'info@solar-gmbh.de'"")), ('KV', ('Const', ""'name'""), ('Const', ""'Solar GmbH'"")), ('KV', ('Const', ""'phone'""), ('Const', ""'0123-456789'"")), ('KV', ('Const', ""'street'""), ('Const', ""'Solarweg 123'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'54321'""))))","('Dict', 6)",,company_info = {
.\tools\portings\patches\test_pdf_logos.py.insert.py,58,company_info,"('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Sonnenstein'"")), ('KV', ('Const', ""'email'""), ('Const', ""'info@solar-gmbh.de'"")), ('KV', ('Const', ""'name'""), ('Const', ""'Solar GmbH'"")), ('KV', ('Const', ""'phone'""), ('Const', ""'0123-456789'"")), ('KV', ('Const', ""'street'""), ('Const', ""'Solarweg 123'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'54321'""))))","('Dict', 6)",,company_info = {
.\notwendig oder nicht\wichtig\portings\patches\test_product_images.py.insert.py,34,company_info,"('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Teststadt'"")), ('KV', ('Const', ""'company_name'""), ('Const', ""'Test Solar GmbH'"")), ('KV', ('Const', ""'plz'""), ('Const', ""'12345'"")), ('KV', ('Const', ""'street'""), ('Const', ""'Teststraße 1'""))))","('Dict', 4)",,company_info = {
.\tests\test_product_images.py,35,company_info,"('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Teststadt'"")), ('KV', ('Const', ""'company_name'""), ('Const', ""'Test Solar GmbH'"")), ('KV', ('Const', ""'plz'""), ('Const', ""'12345'"")), ('KV', ('Const', ""'street'""), ('Const', ""'Teststraße 1'""))))","('Dict', 4)",,company_info = {
.\tools\portings\patches\test_product_images.py.insert.py,34,company_info,"('Dict', (('KV', ('Const', ""'city'""), ('Const', ""'Teststadt'"")), ('KV', ('Const', ""'company_name'""), ('Const', ""'Test Solar GmbH'"")), ('KV', ('Const', ""'plz'""), ('Const', ""'12345'"")), ('KV', ('Const', ""'street'""), ('Const', ""'Teststraße 1'""))))","('Dict', 4)",,company_info = {
.\central_pdf_system.py,1978,company_info,"('Dict', (('KV', ('Const', ""'id'""), ('Const', '1')), ('KV', ('Const', ""'name'""), ('Const', ""'Fallback Firma'""))))","('Dict', 2)",,"company_info = {""name"": ""Fallback Firma"", ""id"": 1}"
.\tests\test_page4_images.py,32,company_info,"('Dict', (('KV', ('Const', ""'name'""), ('Const', ""'ACME GmbH'"")),))","('Dict', 1)",,company_info={'name':'ACME GmbH'}
.\tools\test_page4_images.py,32,company_info,"('Dict', (('KV', ('Const', ""'name'""), ('Const', ""'ACME GmbH'"")),))","('Dict', 1)",,company_info={'name':'ACME GmbH'}
.\debug_logo_pdf.py,52,company_info,"('Dict', (('KV', ('Const', ""'name'""), ('Const', ""'Solar GmbH'"")),))","('Dict', 1)",,company_info = {
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_pdf.py.insert.py,50,company_info,"('Dict', (('KV', ('Const', ""'name'""), ('Const', ""'Solar GmbH'"")),))","('Dict', 1)",,company_info = {
.\notwendig oder nicht\wichtig\portings\patches\simple_logo_test.py.insert.py,49,company_info,"('Dict', (('KV', ('Const', ""'name'""), ('Const', ""'Solar GmbH'"")),))","('Dict', 1)",,company_info = {
.\notwendig oder nicht\wichtig\portings\patches\test_section_titles_logos.py.insert.py,52,company_info,"('Dict', (('KV', ('Const', ""'name'""), ('Const', ""'Solar GmbH'"")),))","('Dict', 1)",,company_info = {
.\simple_logo_test.py,51,company_info,"('Dict', (('KV', ('Const', ""'name'""), ('Const', ""'Solar GmbH'"")),))","('Dict', 1)",,company_info = {
.\tests\test_section_titles_logos.py,54,company_info,"('Dict', (('KV', ('Const', ""'name'""), ('Const', ""'Solar GmbH'"")),))","('Dict', 1)",,company_info = {
.\tools\portings\patches\debug_logo_pdf.py.insert.py,50,company_info,"('Dict', (('KV', ('Const', ""'name'""), ('Const', ""'Solar GmbH'"")),))","('Dict', 1)",,company_info = {
.\tools\portings\patches\simple_logo_test.py.insert.py,49,company_info,"('Dict', (('KV', ('Const', ""'name'""), ('Const', ""'Solar GmbH'"")),))","('Dict', 1)",,company_info = {
.\tools\portings\patches\test_section_titles_logos.py.insert.py,52,company_info,"('Dict', (('KV', ('Const', ""'name'""), ('Const', ""'Solar GmbH'"")),))","('Dict', 1)",,company_info = {
.\debug_logo_rendering.py,34,company_info,"('Dict', (('KV', ('Const', ""'name'""), ('Const', ""'Test GmbH'"")),))","('Dict', 1)",,"company_info = {""name"": ""Test GmbH""}"
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_rendering.py.insert.py,32,company_info,"('Dict', (('KV', ('Const', ""'name'""), ('Const', ""'Test GmbH'"")),))","('Dict', 1)",,"company_info = {""name"": ""Test GmbH""}"
.\tools\portings\patches\debug_logo_rendering.py.insert.py,32,company_info,"('Dict', (('KV', ('Const', ""'name'""), ('Const', ""'Test GmbH'"")),))","('Dict', 1)",,"company_info = {""name"": ""Test GmbH""}"
.\debug_page3_check.py,54,company_info,"('Dict', ())","('Dict', 0)",,company_info = {}
.\notwendig oder nicht\wichtig\portings\patches\debug_page3_check.py.insert.py,31,company_info,"('Dict', ())","('Dict', 0)",,company_info = {}
.\notwendig oder nicht\wichtig\portings\patches\test_roof_data.py.insert.py,22,company_info,"('Dict', ())","('Dict', 0)",,company_info = {}
.\pdf_erstellen_komplett.py,174,company_info,"('Dict', ())","('Dict', 0)",,"company_info: Dict[str, Any] = {}"
.\pdf_erstellen_komplett.py,186,company_info,"('Dict', ())","('Dict', 0)",,company_info = {}
.\tests\test_roof_data.py,24,company_info,"('Dict', ())","('Dict', 0)",,company_info = {}
.\tools\debug_dynamic_page3.py,17,company_info,"('Dict', ())","('Dict', 0)",,company_info = {}
.\tools\portings\patches\debug_page3_check.py.insert.py,31,company_info,"('Dict', ())","('Dict', 0)",,company_info = {}
.\tools\portings\patches\test_roof_data.py.insert.py,22,company_info,"('Dict', ())","('Dict', 0)",,company_info = {}
.\admin_panel.py,1544,company_info_for_pdf,"('Dict', (('KV', ('Const', ""'id'""), ('Const', '0')), ('KV', ('Const', ""'name'""), ('Const', ""'Ihre Firma (Platzhalter)'""))))","('Dict', 2)",,"company_info_for_pdf = {""name"": ""Ihre Firma (Platzhalter)"", ""id"":0}; company_logo_b64_for_pdf = None"
.\doc_output.py,1861,company_info_for_pdf,"('Dict', (('KV', ('Const', ""'name'""), ('Const', ""'Ihre Firma (Fallback)'"")),))","('Dict', 1)",,"st.warning(""Keine aktive Firma ausgewählt. PDF verwendet Fallback-Daten für Firmeninformationen.""); company_info_for_pdf = {""name"": ""Ihre Firma (Fallback)""}; active_company_id_for_docs = 0"
.\doc_output.py,1852,company_info_for_pdf,"('Dict', ())","('Dict', 0)",,company_info_for_pdf = {}
.\doc_output.py,1856,company_info_for_pdf,"('Name', 'active_company')","('Name',)",active_company,company_info_for_pdf = active_company
.\admin_panel.py,1547,company_info_for_pdf,"('Name', 'active_company_data')","('Name',)",active_company_data,if active_company_data: company_info_for_pdf = active_company_data; company_logo_b64_for_pdf = active_company_data.get('logo_base64')
.\pdf_ui.py,266,company_info_for_pdf,"('Other', 'IfExp')","('Other', 'IfExp')",active_company,"company_info_for_pdf = active_company if active_company else {""name"": ""Ihre Firma (Fallback)""}"
.\doc_output.py,1857,company_logo_b64_for_pdf,"('Call', ('Attr', 'active_company', 'get'), (('Const', ""'logo_base64'""),), ())","('Call', 1, 0)",active_company,company_logo_b64_for_pdf = active_company.get('logo_base64')
.\admin_panel.py,1547,company_logo_b64_for_pdf,"('Call', ('Attr', 'active_company_data', 'get'), (('Const', ""'logo_base64'""),), ())","('Call', 1, 0)",active_company_data,if active_company_data: company_info_for_pdf = active_company_data; company_logo_b64_for_pdf = active_company_data.get('logo_base64')
.\admin_panel.py,1544,company_logo_b64_for_pdf,"('Const', 'None')","('Const',)",,"company_info_for_pdf = {""name"": ""Ihre Firma (Platzhalter)"", ""id"":0}; company_logo_b64_for_pdf = None"
.\doc_output.py,1853,company_logo_b64_for_pdf,"('Const', 'None')","('Const',)",,company_logo_b64_for_pdf = None
.\pdf_ui.py,267,company_logo_b64_for_pdf,"('Other', 'IfExp')","('Other', 'IfExp')",active_company,company_logo_b64_for_pdf = active_company.get('logo_base64') if active_company else None
.\multi_offer_generator_old.py,264,company_name,"('Call', ('Attr', ""re.sub('[^\\\\w\\\\s-]', '', company_details.get('name', f'Firma_{company_id}'))"", 'strip'), (), ())","('Call', 0, 0)","company_details,company_id,re",company_name = re.sub(
.\multi_offer_generator_old.py,732,company_name,"('Call', ('Attr', ""re.sub('[^\\\\w\\\\s-]', '', company_details.get('name', f'Firma_{company_id}'))"", 'strip'), (), ())","('Call', 0, 0)","company_details,company_id,re",company_name = re.sub(
.\multi_offer_generator.py,602,company_name,"('Call', ('Attr', 'company', 'get'), (('Const', ""'name'""), ('Other', 'JoinedStr')), ())","('Call', 2, 0)","company,company_id","company_name = company.get(""name"", f""Firma_{company_id}"")  # Überschreibe mit echtem Namen"
.\multi_offer_generator_new.py,302,company_name,"('Call', ('Attr', 'company', 'get'), (('Const', ""'name'""), ('Other', 'JoinedStr')), ())","('Call', 2, 0)","company,company_id","company_name = company.get(""name"", f""Firma_{company_id}"")"
.\central_pdf_system.py,465,company_name,"('Call', ('Attr', 'company_info', 'get'), (('Const', ""'name'""), ('Const', ""'Unbekannte Firma'"")), ())","('Call', 2, 0)",company_info,"company_name = company_info.get('name', 'Unbekannte Firma')"
.\crm.py,330,company_name,"('Call', ('Attr', 'st', 'text_input'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'company_name_label'""), ('Const', ""'Firmenname (optional)'"")), ()),), (('value', ('Call', ('Attr', 'customer_to_edit', 'get'), (('Const', ""'company_name'""), ('Const', ""''"")), ())),))","('Call', 1, 1)","customer_to_edit,get_text_crm,st,texts","company_name = st.text_input(get_text_crm(texts, ""company_name_label"", ""Firmenname (optional)""), value=customer_to_edit.get('company_name', ''))"
.\crm_pipeline_ui.py,223,company_name,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Firmenname *'""),), (('placeholder', ('Const', ""'z.B. Mustermann GmbH'"")),))","('Call', 1, 1)",st,"company_name = st.text_input(""Firmenname *"", placeholder=""z.B. Mustermann GmbH"")"
.\multi_offer_generator_old.py,1241,company_name,"('Other', 'IfExp')","('Other', 'IfExp')","company_id,company_info","company_name = company_info.get('name', f'Firma_{company_id}') if company_info else f'Firma_{company_id}'"
.\multi_offer_generator_old.py,1422,company_name,"('Other', 'IfExp')","('Other', 'IfExp')","company,company_id","company_name = company['name'] if company else f""Firma {company_id}"""
.\multi_offer_generator_old.py,1455,company_name,"('Other', 'IfExp')","('Other', 'IfExp')","company,company_id","company_name = company['name'] if company else f""Firma {company_id}"""
.\multi_offer_generator.py,598,company_name,"('Other', 'JoinedStr')","('Other', 'JoinedStr')",company_id,"company_name = f""Firma_{company_id}""  # Fallback-Name sofort setzen"
.\analysis_utils.py,349,comparisons,"('Dict', ())","('Dict', 0)",,comparisons = {}
.\calculations.py,4143,comparisons,"('List', ())","('List', 0)",,comparisons = []
.\pdf_generator.py,1616,component_specific_fields_prod,"('List', (('Tuple', (('Const', ""'capacity_w'""), ('Const', ""'product_capacity_wp'""))), ('Tuple', (('Const', ""'efficiency_percent'""), ('Const', ""'product_efficiency'""))), ('Tuple', (('Const', ""'length_m'""), ('Const', ""'product_length_m'""))), ('Tuple', (('Const', ""'width_m'""), ('Const', ""'product_width_m'""))), ('Tuple', (('Const', ""'weight_kg'""), ('Const', ""'product_weight_kg'""))), ('Tuple', (('Const', ""'cell_technology'""), ('Const', ""'product_module_cell_technology'""))), ('Tuple', (('Const', ""'module_structure'""), ('Const', ""'product_module_structure'""))), ('Tuple', (('Const', ""'cell_type'""), ('Const', ""'product_module_cell_type'""))), ('Tuple', (('Const', ""'version'""), ('Const', ""'product_module_version'""))), ('Tuple', (('Const', ""'module_warranty_text'""), ('Const', ""'product_module_warranty_text'"")))))","('List', 10)",,component_specific_fields_prod = [
.\pdf_generator.py,1636,component_specific_fields_prod,"('List', (('Tuple', (('Const', ""'description'""), ('Const', ""'product_description_short'""))),))","('List', 1)",,"component_specific_fields_prod = [('description', 'product_description_short')] # Beispiel, anpassen!"
.\pdf_generator.py,1645,component_specific_fields_prod,"('List', (('Tuple', (('Const', ""'description'""), ('Const', ""'product_description_short'""))),))","('List', 1)",,"component_specific_fields_prod = [('description', 'product_description_short')] # Beispiel"
.\pdf_generator.py,1638,component_specific_fields_prod,"('List', (('Tuple', (('Const', ""'efficiency_percent'""), ('Const', ""'product_optimizer_efficiency'""))),))","('List', 1)",,"component_specific_fields_prod = [('efficiency_percent', 'product_optimizer_efficiency')] # Beispiel"
.\pdf_generator.py,1640,component_specific_fields_prod,"('List', (('Tuple', (('Const', ""'length_m'""), ('Const', ""'product_length_m'""))), ('Tuple', (('Const', ""'width_m'""), ('Const', ""'product_width_m'"")))))","('List', 2)",,"component_specific_fields_prod = [('length_m', 'product_length_m'), ('width_m', 'product_width_m')] # Beispiel"
.\pdf_generator.py,1643,component_specific_fields_prod,"('List', (('Tuple', (('Const', ""'power_kw'""), ('Const', ""'product_emergency_power_kw'""))),))","('List', 1)",,"component_specific_fields_prod = [('power_kw', 'product_emergency_power_kw')] # Beispiel"
.\pdf_generator.py,1630,component_specific_fields_prod,"('List', (('Tuple', (('Const', ""'power_kw'""), ('Const', ""'product_power_kw'""))), ('Tuple', (('Const', ""'efficiency_percent'""), ('Const', ""'product_efficiency_inverter'"")))))","('List', 2)",,"component_specific_fields_prod = [('power_kw', 'product_power_kw'), ('efficiency_percent', 'product_efficiency_inverter')]"
.\pdf_generator.py,1634,component_specific_fields_prod,"('List', (('Tuple', (('Const', ""'power_kw'""), ('Const', ""'product_power_wallbox_kw'""))),))","('List', 1)",,"component_specific_fields_prod = [('power_kw', 'product_power_wallbox_kw')]"
.\pdf_generator.py,1632,component_specific_fields_prod,"('List', (('Tuple', (('Const', ""'storage_power_kw'""), ('Const', ""'product_capacity_kwh'""))), ('Tuple', (('Const', ""'power_kw'""), ('Const', ""'product_power_storage_kw'""))), ('Tuple', (('Const', ""'max_cycles'""), ('Const', ""'product_max_cycles_label'"")))))","('List', 3)",,"component_specific_fields_prod = [('storage_power_kw', 'product_capacity_kwh'), ('power_kw', 'product_power_storage_kw'), ('max_cycles', 'product_max_cycles_label')]"
.\pdf_generator.py,1612,component_specific_fields_prod,"('List', ())","('List', 0)",,"component_specific_fields_prod: List[Tuple[str,str]] = []"
.\pdf_styles.py,499,components,"('Dict', (('KV', ('Const', ""'battery'""), ('Dict', (('KV', ('Const', ""'label'""), ('Const', ""'Batterie'"")), ('KV', ('Const', ""'pos'""), ('Tuple', (('Const', '0.4'), ('Const', '0.7')))), ('KV', ('Const', ""'size'""), ('Const', '0.1'))))), ('KV', ('Const', ""'grid'""), ('Dict', (('KV', ('Const', ""'label'""), ('Const', ""'Netz'"")), ('KV', ('Const', ""'pos'""), ('Tuple', (('Const', '0.4'), ('Const', '0.2')))), ('KV', ('Const', ""'size'""), ('Const', '0.1'))))), ('KV', ('Const', ""'home'""), ('Dict', (('KV', ('Const', ""'label'""), ('Const', ""'Haushalt'"")), ('KV', ('Const', ""'pos'""), ('Tuple', (('Const', '0.7'), ('Const', '0.5')))), ('KV', ('Const', ""'size'""), ('Const', '0.12'))))), ('KV', ('Const', ""'pv'""), ('Dict', (('KV', ('Const', ""'label'""), ('Const', ""'Photovoltaik-Anlage'"")), ('KV', ('Const', ""'pos'""), ('Tuple', (('Const', '0.1'), ('Const', '0.5')))), ('KV', ('Const', ""'size'""), ('Const', '0.15')))))))","('Dict', 4)",,components = {
.\calculations.py,3787,components,"('List', (('Dict', (('KV', ('Const', ""'last_maintenance_date'""), ('Call', ('Attr', 'datetime.now()', 'strftime'), (('Const', ""'%Y-%m-%d'""),), ())), ('KV', ('Const', ""'maintenance_cost'""), ('Div', ('Name', 'maintenance_cost_fixed_pa'), ('Const', '2'))), ('KV', ('Const', ""'maintenance_interval_months'""), ('Const', '12')), ('KV', ('Const', ""'name'""), ('Const', ""'Wechselrichter'"")))), ('Dict', (('KV', ('Const', ""'last_maintenance_date'""), ('Call', ('Attr', 'datetime.now()', 'strftime'), (('Const', ""'%Y-%m-%d'""),), ())), ('KV', ('Const', ""'maintenance_cost'""), ('Div', ('Name', 'maintenance_cost_fixed_pa'), ('Const', '2'))), ('KV', ('Const', ""'maintenance_interval_months'""), ('Const', '6')), ('KV', ('Const', ""'name'""), ('Const', ""'PV-Module'""))))))","('List', 2)","datetime,maintenance_cost_fixed_pa",components = [
.\components\progress_demo.py,159,config,"('Attr', 'progress_manager', 'config')","('Attr',)",progress_manager,config = progress_manager.config
.\components\progress_manager.py,99,config,"('Attr', 'st.session_state', 'progress_config')","('Attr',)",st,config = st.session_state.progress_config
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,156,config,"('Attr', 'st.session_state', 'progress_config')","('Attr',)",st,config = st.session_state.progress_config
.\tools\out_selected\patches\components\progress_manager.py.insert.py,156,config,"('Attr', 'st.session_state', 'progress_config')","('Attr',)",st,config = st.session_state.progress_config
.\pdf_widgets.py,373,config,"('Call', ('Attr', 'json', 'load'), (('Name', 'uploaded_file'),), ())","('Call', 1, 0)","json,uploaded_file",config = json.load(uploaded_file)
.\pdf_widgets.py,356,config,"('Call', ('Attr', 'manager', 'export_configuration'), (), ())","('Call', 0, 0)",manager,config = manager.export_configuration()
.\multi_offer_generator_old.py,1134,config,"('Call', ('Attr', 'st.session_state.multi_offer_pdf_configs', 'get'), (('Name', 'company_id'), ('Dict', ())), ())","('Call', 2, 0)","company_id,st","config = st.session_state.multi_offer_pdf_configs.get(company_id, {})"
.\multi_offer_generator_old.py,1002,config,"('Subscript', ('Attr', 'st.session_state', 'multi_offer_pdf_configs'), ('Name', 'company_id'))","('Subscript',)","company_id,st",config = st.session_state.multi_offer_pdf_configs[company_id]
.\pdf_generator.py,2203,config,"('Subscript', ('Name', 'financing_config'), ('Name', 'scenario'))","('Subscript',)","financing_config,scenario",config = financing_config[scenario]
.\multi_offer_generator.py,1230,config_ready,"('Call', ('Attr', 'generator', 'render_offer_configuration'), (), ())","('Call', 0, 0)",generator,config_ready = generator.render_offer_configuration()
.\multi_offer_generator.py,1182,config_ready,"('Call', ('Attr', 'self', 'render_offer_configuration'), (), ())","('Call', 0, 0)",self,config_ready = self.render_offer_configuration()
.\multi_offer_generator_new.py,438,config_ready,"('Call', ('Attr', 'self', 'render_offer_configuration'), (), ())","('Call', 0, 0)",self,config_ready = self.render_offer_configuration()
.\crm.py,747,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Const', ""':memory:'""),), ())","('Call', 1, 0)",sqlite3,conn = sqlite3.connect(':memory:')
.\check_product_image_details.py,7,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Const', ""'data/app_data.db'""),), ())","('Call', 1, 0)",sqlite3,conn = sqlite3.connect('data/app_data.db')
.\check_product_images.py,6,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Const', ""'data/app_data.db'""),), ())","('Call', 1, 0)",sqlite3,conn = sqlite3.connect('data/app_data.db')
.\notwendig oder nicht\wichtig\portings\patches\check_product_image_details.py.insert.py,12,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Const', ""'data/app_data.db'""),), ())","('Call', 1, 0)",sqlite3,conn = sqlite3.connect('data/app_data.db')
.\notwendig oder nicht\wichtig\portings\patches\check_product_images.py.insert.py,11,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Const', ""'data/app_data.db'""),), ())","('Call', 1, 0)",sqlite3,conn = sqlite3.connect('data/app_data.db')
.\tools\portings\patches\check_product_image_details.py.insert.py,12,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Const', ""'data/app_data.db'""),), ())","('Call', 1, 0)",sqlite3,conn = sqlite3.connect('data/app_data.db')
.\tools\portings\patches\check_product_images.py.insert.py,11,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Const', ""'data/app_data.db'""),), ())","('Call', 1, 0)",sqlite3,conn = sqlite3.connect('data/app_data.db')
.\check_companies.py,15,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Name', 'DB_PATH'),), ())","('Call', 1, 0)","DB_PATH,sqlite3",conn = sqlite3.connect(DB_PATH)
.\check_db.py,14,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Name', 'DB_PATH'),), ())","('Call', 1, 0)","DB_PATH,sqlite3",conn = sqlite3.connect(DB_PATH)
.\database.py,270,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Name', 'DB_PATH'),), ())","('Call', 1, 0)","DB_PATH,sqlite3",conn = sqlite3.connect(DB_PATH)
.\database.py,1808,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Name', 'DB_PATH'),), ())","('Call', 1, 0)","DB_PATH,sqlite3",conn = sqlite3.connect(DB_PATH)
.\database.py,1865,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Name', 'DB_PATH'),), ())","('Call', 1, 0)","DB_PATH,sqlite3",conn = sqlite3.connect(DB_PATH)
.\database.py,1961,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Name', 'DB_PATH'),), ())","('Call', 1, 0)","DB_PATH,sqlite3",conn = sqlite3.connect(DB_PATH)
.\update_tariffs.py,29,conn,"('Call', ('Attr', 'sqlite3', 'connect'), (('Name', 'DB_PATH'),), ())","('Call', 1, 0)","DB_PATH,sqlite3",conn = sqlite3.connect(DB_PATH)
.\brand_logo_db.py,51,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\brand_logo_db.py,101,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\brand_logo_db.py,147,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\brand_logo_db.py,195,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\brand_logo_db.py,253,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\brand_logo_db.py,294,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\brand_logo_db.py,345,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\brand_logo_db.py,377,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_calendar_ui.py,354,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_calendar_ui.py,420,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_calendar_ui.py,500,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_calendar_ui.py,530,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_pipeline_ui.py,520,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_pipeline_ui.py,561,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_pipeline_ui.py,622,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_pipeline_ui.py,654,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_pipeline_ui.py,711,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_pipeline_ui.py,744,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm_pipeline_ui.py,764,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,55,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,68,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,101,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,135,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,153,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,277,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,321,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,363,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,379,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,461,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,509,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,669,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,962,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1096,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1121,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1158,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1171,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1185,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1196,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1209,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1225,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1318,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1329,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1340,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1379,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1403,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1426,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1442,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1474,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1496,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1549,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1577,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1611,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1635,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1651,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1680,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1700,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1719,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1737,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1760,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\database.py,1918,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\migrate_logo_database.py,16,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\multi_offer_generator.py,656,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,46,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,99,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,148,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,199,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,263,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,307,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,361,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\out_selected\patches\migrate_logo_database.py.insert.py,15,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,54,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,114,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,170,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,228,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,306,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,357,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,418,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\portings\patches\migrate_logo_database.py.insert.py,16,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,25,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\pdf_ui.py,1211,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\product_attributes.py,41,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\product_attributes.py,85,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\product_attributes.py,117,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\product_attributes.py,150,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tests\test_logo_integration.py,26,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\out_selected\patches\brand_logo_db.py.insert.py,46,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\out_selected\patches\brand_logo_db.py.insert.py,99,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\out_selected\patches\brand_logo_db.py.insert.py,148,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\out_selected\patches\brand_logo_db.py.insert.py,199,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\out_selected\patches\brand_logo_db.py.insert.py,263,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\out_selected\patches\brand_logo_db.py.insert.py,307,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\out_selected\patches\brand_logo_db.py.insert.py,361,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\out_selected\patches\migrate_logo_database.py.insert.py,15,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\portings\patches\brand_logo_db.py.insert.py,54,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\portings\patches\brand_logo_db.py.insert.py,114,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\portings\patches\brand_logo_db.py.insert.py,170,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\portings\patches\brand_logo_db.py.insert.py,228,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\portings\patches\brand_logo_db.py.insert.py,306,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\portings\patches\brand_logo_db.py.insert.py,357,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\portings\patches\brand_logo_db.py.insert.py,418,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\portings\patches\migrate_logo_database.py.insert.py,16,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\portings\patches\test_logo_integration.py.insert.py,25,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\tools\smoke_crm_save.py,8,conn,"('Call', ('Name', 'get_db_connection'), (), ())","('Call', 0, 0)",get_db_connection,conn = get_db_connection()
.\crm.py,253,conn,"('Call', ('Name', 'get_db_connection_func'), (), ())","('Call', 0, 0)",get_db_connection_func,conn = get_db_connection_func()
.\product_db.py,143,conn,"('Call', ('Name', 'get_db_connection_safe_pd'), (), ())","('Call', 0, 0)",get_db_connection_safe_pd,conn = get_db_connection_safe_pd()
.\product_db.py,179,conn,"('Call', ('Name', 'get_db_connection_safe_pd'), (), ())","('Call', 0, 0)",get_db_connection_safe_pd,conn = get_db_connection_safe_pd();
.\product_db.py,201,conn,"('Call', ('Name', 'get_db_connection_safe_pd'), (), ())","('Call', 0, 0)",get_db_connection_safe_pd,conn = get_db_connection_safe_pd();
.\product_db.py,213,conn,"('Call', ('Name', 'get_db_connection_safe_pd'), (), ())","('Call', 0, 0)",get_db_connection_safe_pd,conn = get_db_connection_safe_pd();
.\product_db.py,238,conn,"('Call', ('Name', 'get_db_connection_safe_pd'), (), ())","('Call', 0, 0)",get_db_connection_safe_pd,conn = get_db_connection_safe_pd();
.\product_db.py,249,conn,"('Call', ('Name', 'get_db_connection_safe_pd'), (), ())","('Call', 0, 0)",get_db_connection_safe_pd,conn = get_db_connection_safe_pd();
.\product_db.py,260,conn,"('Call', ('Name', 'get_db_connection_safe_pd'), (), ())","('Call', 0, 0)",get_db_connection_safe_pd,conn = get_db_connection_safe_pd();
.\product_db.py,279,conn,"('Call', ('Name', 'get_db_connection_safe_pd'), (), ())","('Call', 0, 0)",get_db_connection_safe_pd,conn = get_db_connection_safe_pd();
.\check_db.py,12,conn,"('Const', 'None')","('Const',)",,conn = None
.\update_tariffs.py,27,conn,"('Const', 'None')","('Const',)",,conn = None
.\analysis.py,1900,cons_kwh,"('BoolOp', 'Or', (('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'jahresstromverbrauch_fuer_hochrechnung_kwh'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","_parse_float,analysis_results","cons_kwh = _parse_float(analysis_results.get(""jahresstromverbrauch_fuer_hochrechnung_kwh"")) or 0.0"
.\pdf_template_engine\placeholders.py,992,cons_kwh,"('Call', ('Name', 'parse_float'), (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'jahresstromverbrauch_fuer_hochrechnung_kwh'""),), ()),), ())","('Call', 1, 0)","analysis_results,parse_float","cons_kwh = parse_float(analysis_results.get(""jahresstromverbrauch_fuer_hochrechnung_kwh""))"
.\pdf_styles.py,384,consumption,"('Call', ('Attr', 'data', 'get'), (('Const', ""'consumption'""), ('List', ())), ())","('Call', 2, 0)",data,"consumption = data.get('consumption', [])"
.\multi_offer_generator.py,135,consumption,"('Subscript', ('Name', 'project_data'), ('Const', ""'consumption_data'""))","('Subscript',)",project_data,"consumption = project_data[""consumption_data""]"
.\multi_offer_generator_new.py,130,consumption,"('Subscript', ('Name', 'project_data'), ('Const', ""'consumption_data'""))","('Subscript',)",project_data,"consumption = project_data[""consumption_data""]"
.\notwendig oder nicht\wichtig\repo_porter.py,429,content,"('Add', (('Call', ('Attr', ""'\\n'"", 'join'), (('Name', 'header'),), ()), ('Const', ""'\\n'"")))","('Add', (('Call', 1, 0), ('Const',)))",header,"content = ""\n"".join(header) + ""\n"""
.\tools\repo_porter.py,429,content,"('Add', (('Call', ('Attr', ""'\\n'"", 'join'), (('Name', 'header'),), ()), ('Const', ""'\\n'"")))","('Add', (('Call', 1, 0), ('Const',)))",header,"content = ""\n"".join(header) + ""\n"""
.\clean_unicode_emojis.py,92,content,"('Call', ('Attr', 'content', 'replace'), (('Name', 'pattern'), ('Name', 'replacement')), ())","('Call', 2, 0)","content,pattern,replacement","content = content.replace(pattern, replacement)"
.\clean_unicode_emojis.py,74,content,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,content = f.read()
.\clean_unicode_emojis.py,151,content,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,content = f.read()
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,156,content,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,content = f.read()
.\pdf_migration.py,185,content,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,content = f.read()
.\tests\test_logo_integration.py,136,content,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,content = f.read()
.\tools\portings\patches\test_logo_integration.py.insert.py,156,content,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,content = f.read()
.\pdf_generator.py,2689,content,"('Call', ('Attr', 'item', 'get'), (('Const', ""'content'""), ('Const', ""''"")), ())","('Call', 2, 0)",item,"content = item.get('content', '')"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,274,content,"('Call', ('Attr', 'page', 'get_contents'), (), ())","('Call', 0, 0)",page,content = page.get_contents()
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,308,content,"('Call', ('Attr', 'page', 'get_contents'), (), ())","('Call', 0, 0)",page,content = page.get_contents()
.\pdf_template_engine\dynamic_overlay.py,828,content,"('Call', ('Attr', 'page', 'get_contents'), (), ())","('Call', 0, 0)",page,content = page.get_contents()
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,274,content,"('Call', ('Attr', 'page', 'get_contents'), (), ())","('Call', 0, 0)",page,content = page.get_contents()
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,308,content,"('Call', ('Attr', 'page', 'get_contents'), (), ())","('Call', 0, 0)",page,content = page.get_contents()
.\clean_unicode_emojis.py,82,content,"('Call', ('Attr', 're', 'sub'), (('Name', 'pattern'), ('Name', 'replacement'), ('Name', 'content')), ())","('Call', 3, 0)","content,pattern,re,replacement","content = re.sub(pattern, replacement, content)"
.\doc_output.py,1767,content,"('Call', ('Attr', 'st', 'text_area'), (('Other', 'JoinedStr'),), (('height', ('Const', '100')), ('key', ('Other', 'JoinedStr'))))","('Call', 1, 2)","i,st","content = st.text_area(f""Inhalt {i+1}"", key=f""custom_text_content_{i}"", height=100)"
.\notwendig oder nicht\wichtig\repo_porter.py,427,content,"('Const', ""''"")","('Const',)",,"content = """""
.\tools\repo_porter.py,427,content,"('Const', ""''"")","('Const',)",,"content = """""
.\tools\pv_berechnungen_50.py,214,content,"('List', ())","('List', 0)",,content = []
.\pdf_generator.py,2693,content,"('Other', 'JoinedStr')","('Other', 'JoinedStr')",content,"content = f""<b>{content}</b>"""
.\pdf_generator.py,2695,content,"('Other', 'JoinedStr')","('Other', 'JoinedStr')",content,"content = f""<i>{content}</i>"""
.\pdf_generator.py,2697,content,"('Other', 'JoinedStr')","('Other', 'JoinedStr')",content,"content = f""<b><font color='#ff7b7b'>{content}</font></b>"""
.\pdf_generator.py,2699,content,"('Other', 'JoinedStr')","('Other', 'JoinedStr')",content,"content = f""<i>\""{content}\""</i>"""
.\pdf_ui.py,134,content_count,"('Call', ('Name', 'len'), (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'custom_content_items'""), ('List', ())), ()),), ())","('Call', 1, 0)","len,st","content_count = len(st.session_state.get('custom_content_items', []))"
.\pdf_ui.py,955,content_count,"('Call', ('Name', 'len'), (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'custom_content_items'""), ('List', ())), ()),), ())","('Call', 1, 0)","len,st","content_count = len(st.session_state.get('custom_content_items', []))"
.\pdf_ui.py,853,content_count,"('Call', ('Name', 'len'), (('Subscript', ('Attr', 'st', 'session_state'), ('Const', ""'custom_content_items'"")),), ())","('Call', 1, 0)","len,st",content_count = len(st.session_state['custom_content_items'])
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,280,content_data,"('Call', ('Attr', 'content', 'get_data'), (), ())","('Call', 0, 0)",content,content_data = content.get_data()
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,314,content_data,"('Call', ('Attr', 'content', 'get_data'), (), ())","('Call', 0, 0)",content,content_data = content.get_data()
.\pdf_template_engine\dynamic_overlay.py,834,content_data,"('Call', ('Attr', 'content', 'get_data'), (), ())","('Call', 0, 0)",content,content_data = content.get_data()
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,280,content_data,"('Call', ('Attr', 'content', 'get_data'), (), ())","('Call', 0, 0)",content,content_data = content.get_data()
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,314,content_data,"('Call', ('Attr', 'content', 'get_data'), (), ())","('Call', 0, 0)",content,content_data = content.get_data()
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,282,content_data,"('Call', ('Attr', 'content', 'read'), (), ())","('Call', 0, 0)",content,content_data = content.read()
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,316,content_data,"('Call', ('Attr', 'content', 'read'), (), ())","('Call', 0, 0)",content,content_data = content.read()
.\pdf_template_engine\dynamic_overlay.py,836,content_data,"('Call', ('Attr', 'content', 'read'), (), ())","('Call', 0, 0)",content,content_data = content.read()
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,282,content_data,"('Call', ('Attr', 'content', 'read'), (), ())","('Call', 0, 0)",content,content_data = content.read()
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,316,content_data,"('Call', ('Attr', 'content', 'read'), (), ())","('Call', 0, 0)",content,content_data = content.read()
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,286,content_str,"('Call', ('Attr', 'content_data', 'decode'), (('Const', ""'latin-1'""),), (('errors', ('Const', ""'ignore'"")),))","('Call', 1, 1)",content_data,"content_str = content_data.decode('latin-1', errors='ignore')"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,320,content_str,"('Call', ('Attr', 'content_data', 'decode'), (('Const', ""'latin-1'""),), (('errors', ('Const', ""'ignore'"")),))","('Call', 1, 1)",content_data,"content_str = content_data.decode('latin-1', errors='ignore')"
.\pdf_template_engine\dynamic_overlay.py,840,content_str,"('Call', ('Attr', 'content_data', 'decode'), (('Const', ""'latin-1'""),), (('errors', ('Const', ""'ignore'"")),))","('Call', 1, 1)",content_data,"content_str = content_data.decode('latin-1', errors='ignore')"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,286,content_str,"('Call', ('Attr', 'content_data', 'decode'), (('Const', ""'latin-1'""),), (('errors', ('Const', ""'ignore'"")),))","('Call', 1, 1)",content_data,"content_str = content_data.decode('latin-1', errors='ignore')"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,320,content_str,"('Call', ('Attr', 'content_data', 'decode'), (('Const', ""'latin-1'""),), (('errors', ('Const', ""'ignore'"")),))","('Call', 1, 1)",content_data,"content_str = content_data.decode('latin-1', errors='ignore')"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,307,content_str,"('Call', ('Attr', 'content_str', 'replace'), (('Name', 'pattern'), ('Name', 'replacement')), ())","('Call', 2, 0)","content_str,pattern,replacement","content_str = content_str.replace(pattern, replacement)"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,341,content_str,"('Call', ('Attr', 'content_str', 'replace'), (('Name', 'pattern'), ('Name', 'replacement')), ())","('Call', 2, 0)","content_str,pattern,replacement","content_str = content_str.replace(pattern, replacement)"
.\pdf_template_engine\dynamic_overlay.py,861,content_str,"('Call', ('Attr', 'content_str', 'replace'), (('Name', 'pattern'), ('Name', 'replacement')), ())","('Call', 2, 0)","content_str,pattern,replacement","content_str = content_str.replace(pattern, replacement)"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,307,content_str,"('Call', ('Attr', 'content_str', 'replace'), (('Name', 'pattern'), ('Name', 'replacement')), ())","('Call', 2, 0)","content_str,pattern,replacement","content_str = content_str.replace(pattern, replacement)"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,341,content_str,"('Call', ('Attr', 'content_str', 'replace'), (('Name', 'pattern'), ('Name', 'replacement')), ())","('Call', 2, 0)","content_str,pattern,replacement","content_str = content_str.replace(pattern, replacement)"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,290,content_str,"('Call', ('Name', 'str'), (('Name', 'content_data'),), ())","('Call', 1, 0)","content_data,str",content_str = str(content_data)
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,324,content_str,"('Call', ('Name', 'str'), (('Name', 'content_data'),), ())","('Call', 1, 0)","content_data,str",content_str = str(content_data)
.\pdf_template_engine\dynamic_overlay.py,844,content_str,"('Call', ('Name', 'str'), (('Name', 'content_data'),), ())","('Call', 1, 0)","content_data,str",content_str = str(content_data)
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,290,content_str,"('Call', ('Name', 'str'), (('Name', 'content_data'),), ())","('Call', 1, 0)","content_data,str",content_str = str(content_data)
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,324,content_str,"('Call', ('Name', 'str'), (('Name', 'content_data'),), ())","('Call', 1, 0)","content_data,str",content_str = str(content_data)
.\crm_pipeline_ui.py,475,conversion,"('Const', '100.0')","('Const',)",,conversion = 100.0
.\crm_pipeline_ui.py,478,conversion,"('Other', 'IfExp')","('Other', 'IfExp')","count,prev_count",conversion = (count / prev_count * 100) if prev_count > 0 else 0
.\data_input.py,301,coords,"('Call', ('Name', 'get_coordinates_from_address_google'), (('Name', 'addr_geo'), ('Name', 'city_geo'), ('Name', 'zip_geo'), ('Name', 'EFFECTIVE_GOOGLE_API_KEY'), ('Name', 'texts')), ())","('Call', 5, 0)","EFFECTIVE_GOOGLE_API_KEY,addr_geo,city_geo,get_coordinates_from_address_google,texts,zip_geo","coords = get_coordinates_from_address_google(addr_geo, city_geo, zip_geo, EFFECTIVE_GOOGLE_API_KEY, texts)"
.\debug_logo_rendering.py,67,coords,"('Other', 'ListComp')","('Other', 'ListComp')","float,pos_str,x","coords = [float(x.strip()) for x in pos_str.split(',')]"
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_rendering.py.insert.py,65,coords,"('Other', 'ListComp')","('Other', 'ListComp')","float,pos_str,x","coords = [float(x.strip()) for x in pos_str.split(',')]"
.\tools\portings\patches\debug_logo_rendering.py.insert.py,65,coords,"('Other', 'ListComp')","('Other', 'ListComp')","float,pos_str,x","coords = [float(x.strip()) for x in pos_str.split(',')]"
.\notwendig oder nicht\wichtig\portings\patches\test_product_images.py.insert.py,57,coords_dir,"('Call', ('Name', 'Path'), (('Const', ""'coords'""),), ())","('Call', 1, 0)",Path,"coords_dir = Path(""coords"")"
.\tests\test_product_images.py,58,coords_dir,"('Call', ('Name', 'Path'), (('Const', ""'coords'""),), ())","('Call', 1, 0)",Path,"coords_dir = Path(""coords"")"
.\tools\portings\patches\test_product_images.py.insert.py,57,coords_dir,"('Call', ('Name', 'Path'), (('Const', ""'coords'""),), ())","('Call', 1, 0)",Path,"coords_dir = Path(""coords"")"
.\pdf_erstellen_komplett.py,124,coords_dir,"('Div', ('Name', 'base_dir'), ('Const', ""'coords'""))","('Div', ('Name',), ('Const',))",base_dir,"coords_dir = base_dir / ""coords"""
.\pdf_erstellen_komplett.py,165,coords_dir,"('Div', ('Name', 'base_dir'), ('Const', ""'coords'""))","('Div', ('Name',), ('Const',))",base_dir,"coords_dir = base_dir / ""coords"""
.\tests\test_numbering.py,12,coords_dir,"('Div', ('Name', 'base_dir'), ('Const', ""'coords'""))","('Div', ('Name',), ('Const',))",base_dir,"coords_dir = base_dir / ""coords"""
.\tests\test_overlay_footer.py,11,coords_dir,"('Div', ('Name', 'base_dir'), ('Const', ""'coords'""))","('Div', ('Name',), ('Const',))",base_dir,"coords_dir = base_dir / ""coords"""
.\tools\test_numbering.py,12,coords_dir,"('Div', ('Name', 'base_dir'), ('Const', ""'coords'""))","('Div', ('Name',), ('Const',))",base_dir,"coords_dir = base_dir / ""coords"""
.\tools\test_overlay_footer.py,11,coords_dir,"('Div', ('Name', 'base_dir'), ('Const', ""'coords'""))","('Div', ('Name',), ('Const',))",base_dir,"coords_dir = base_dir / ""coords"""
.\calculations.py,3082,cost_accessories_aufpreis_netto,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'global_constants', 'get'), (('Const', ""'additional_components_flat_rate_netto'""), ('Const', '500.0')), ()), ('Const', '500.0'))),), ())","('Call', 1, 0)","float,global_constants",cost_accessories_aufpreis_netto = float(
.\calculations.py,3066,cost_accessories_aufpreis_netto,"('Const', '0.0')","('Const',)",,cost_accessories_aufpreis_netto = 0.0
.\calculations.py,3065,cost_inverter_aufpreis_netto,"('Const', '0.0')","('Const',)",,cost_inverter_aufpreis_netto = 0.0
.\calculations.py,3076,cost_inverter_aufpreis_netto,"('Other', 'IfExp')","('Other', 'IfExp')","float,inverter_details",cost_inverter_aufpreis_netto = (
.\calculations.py,3086,cost_misc_netto,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'global_constants', 'get'), (('Const', ""'misc_costs_flat_rate_netto'""), ('Const', '200.0')), ()), ('Const', '200.0'))),), ())","('Call', 1, 0)","float,global_constants",cost_misc_netto = float(
.\calculations.py,3067,cost_misc_netto,"('Const', '0.0')","('Const',)",,cost_misc_netto = 0.0  # Sonstige Kosten
.\calculations.py,3064,cost_modules_aufpreis_netto,"('Const', '0.0')","('Const',)",,cost_modules_aufpreis_netto = 0.0
.\calculations.py,3070,cost_modules_aufpreis_netto,"('Other', 'IfExp')","('Other', 'IfExp')","float,module_details,module_quantity",cost_modules_aufpreis_netto = (
.\calculations.py,3108,cost_storage_aufpreis_product_db_netto,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'storage_details_from_db', 'get'), (('Const', ""'additional_cost_netto'""), ('Const', '0.0')), ()), ('Const', '0.0'))),), ())","('Call', 1, 0)","float,storage_details_from_db",cost_storage_aufpreis_product_db_netto = float(
.\calculations.py,3093,cost_storage_aufpreis_product_db_netto,"('Const', '0.0')","('Const',)",,cost_storage_aufpreis_product_db_netto = 0.0
.\calculations.py,3146,cost_val,"('Const', '0.0')","('Const',)",,cost_val = 0.0
.\calculations.py,3149,cost_val,"('Other', 'IfExp')","('Other', 'IfExp')","component_details_db,float",cost_val = (
.\clean_unicode_emojis.py,90,count,"('Call', ('Attr', 'content', 'count'), (('Name', 'pattern'),), ())","('Call', 1, 0)","content,pattern",count = content.count(pattern)
.\clean_unicode_emojis.py,158,count,"('Call', ('Attr', 'content', 'count'), (('Name', 'pattern'),), ())","('Call', 1, 0)","content,pattern",count = content.count(pattern)
.\crm_pipeline_ui.py,472,count,"('Call', ('Attr', 'funnel_data', 'get'), (('Name', 'stage'), ('Const', '0')), ())","('Call', 2, 0)","funnel_data,stage","count = funnel_data.get(stage, 0)"
.\admin_product_attributes_ui.py,30,count,"('Call', ('Name', 'import_attributes_from_csv'), (('Attr', 'tmp', 'name'),), ())","('Call', 1, 0)","import_attributes_from_csv,tmp",count = import_attributes_from_csv(tmp.name)
.\product_attributes.py,177,count,"('Const', '0')","('Const',)",,count = 0
.\product_attributes.py,237,count,"('Const', '0')","('Const',)",,count = 0
.\check_companies.py,24,count,"('Subscript', ('Call', ('Attr', 'cursor', 'fetchone'), (), ()), ('Const', '0'))","('Subscript',)",cursor,count = cursor.fetchone()[0]
.\doc_output.py,1945,cover_letter_options,"('Dict', (('KV', ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'no_cover_letters_available'""), ('Const', ""'Keine Anschreiben verfügbar'"")), ()), ('Const', ""'Standard Anschreiben'"")),))","('Dict', 1)","get_text_pdf_ui,texts","cover_letter_options = {get_text_pdf_ui(texts, ""no_cover_letters_available"", ""Keine Anschreiben verfügbar""): ""Standard Anschreiben""}"
.\pdf_ui.py,983,cover_letter_options,"('Dict', (('KV', ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'no_cover_letters_available'""), ('Const', ""'Keine Anschreiben verfügbar'"")), ()), ('Const', ""'Standard Anschreiben'"")),))","('Dict', 1)","get_text_pdf_ui,texts","if not cover_letter_options: cover_letter_options = {get_text_pdf_ui(texts, ""no_cover_letters_available"", ""Keine Anschreiben verfügbar""): ""Standard Anschreiben""}"
.\doc_output.py,1943,cover_letter_options,"('Other', 'DictComp')","('Other', 'DictComp')","cover_letter_templates,dict,enumerate,i,isinstance,t","cover_letter_options = {t.get('name', f""Anschreiben {i+1}""): t.get('content') for i, t in enumerate(cover_letter_templates) if isinstance(t, dict) and t.get('name')}"
.\pdf_ui.py,982,cover_letter_options,"('Other', 'DictComp')","('Other', 'DictComp')","cover_letter_templates,dict,enumerate,i,isinstance,t","cover_letter_options = {t.get('name', f""Anschreiben {i+1}""): t.get('content') for i, t in enumerate(cover_letter_templates) if isinstance(t,dict) and t.get('name')}"
.\doc_output.py,1866,cover_letter_templates,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'pdf_cover_letter_templates'""), ('List', ())), ())","('Call', 2, 0)",load_admin_setting_func,"cover_letter_templates = load_admin_setting_func('pdf_cover_letter_templates', [])"
.\pdf_ui.py,354,cover_letter_templates,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'pdf_cover_letter_templates'""), ('List', ())), ())","('Call', 2, 0)",load_admin_setting_func,"cover_letter_templates = load_admin_setting_func('pdf_cover_letter_templates', [])"
.\doc_output.py,1869,cover_letter_templates,"('List', ())","('List', 0)",,"if not isinstance(cover_letter_templates, list): cover_letter_templates = []"
.\pdf_ui.py,376,cover_letter_templates,"('List', ())","('List', 0)",,"if not isinstance(cover_letter_templates, list): cover_letter_templates = []"
.\multi_offer_generator.py,1051,cover_letter_templates,"('Other', 'IfExp')","('Other', 'IfExp')","callable,load_admin_setting","cover_letter_templates = load_admin_setting(""pdf_cover_letter_templates"", []) if callable(load_admin_setting) else []"
.\pdf_ui.py,1226,created_customer_id,"('Call', ('Name', 'int'), (('Subscript', ('Name', 'row'), ('Const', '0')),), ())","('Call', 1, 0)","int,row",created_customer_id = int(row[0])
.\pdf_ui.py,1246,created_customer_id,"('Call', ('Name', 'save_customer'), (('Name', 'conn'), ('Name', 'cust_payload')), ())","('Call', 2, 0)","conn,cust_payload,save_customer","created_customer_id = save_customer(conn, cust_payload)"
.\pdf_ui.py,1278,created_project_id,"('Call', ('Name', 'save_project'), (('Name', 'conn'), ('Name', 'proj_payload')), ())","('Call', 2, 0)","conn,proj_payload,save_project","created_project_id = save_project(conn, proj_payload)"
.\pdf_ui.py,1247,created_project_id,"('Const', 'None')","('Const',)",,created_project_id = None
.\notwendig oder nicht\python_function_recipes.py,160,crit,"('Call', ('Attr', 'str(criteria)', 'strip'), (), ())","('Call', 0, 0)","criteria,str",crit = str(criteria).strip()
.\notwendig oder nicht\python_function_recipes.py,185,crit,"('Call', ('Attr', 'str(criteria_pairs[i + 1])', 'strip'), (), ())","('Call', 0, 0)","criteria_pairs,i,str",crit = str(criteria_pairs[i+1]).strip()
.\gui.py,743,crm_calendar_ui_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'crm_calendar_ui'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","crm_calendar_ui_module = import_module_with_fallback(""crm_calendar_ui"", import_errors)"
.\gui.py,101,crm_calendar_ui_module,"('Const', 'None')","('Const',)",,crm_calendar_ui_module: Optional[Any] = None
.\multi_offer_generator.py,670,crm_customer_id,"('Call', ('Name', 'int'), (('Subscript', ('Name', 'row'), ('Const', '0')),), ())","('Call', 1, 0)","int,row",crm_customer_id = int(row[0])
.\multi_offer_generator.py,690,crm_customer_id,"('Call', ('Name', 'save_customer'), (('Name', 'conn'), ('Name', 'cust_payload')), ())","('Call', 2, 0)","conn,cust_payload,save_customer","crm_customer_id = save_customer(conn, cust_payload)"
.\gui.py,745,crm_dashboard_ui_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'crm_dashboard_ui'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","crm_dashboard_ui_module = import_module_with_fallback(""crm_dashboard_ui"", import_errors)"
.\gui.py,99,crm_dashboard_ui_module,"('Const', 'None')","('Const',)",,crm_dashboard_ui_module: Optional[Any] = None
.\gui.py,733,crm_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'crm'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","crm_module = import_module_with_fallback(""crm"", import_errors)"
.\gui.py,87,crm_module,"('Const', 'None')","('Const',)",,crm_module: Optional[Any] = None
.\gui.py,744,crm_pipeline_ui_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'crm_pipeline_ui'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","crm_pipeline_ui_module = import_module_with_fallback(""crm_pipeline_ui"", import_errors)"
.\gui.py,100,crm_pipeline_ui_module,"('Const', 'None')","('Const',)",,crm_pipeline_ui_module: Optional[Any] = None
.\multi_offer_generator.py,712,crm_project_id,"('Call', ('Name', 'save_project'), (('Name', 'conn'), ('Name', 'proj_payload')), ())","('Call', 2, 0)","conn,proj_payload,save_project","crm_project_id = save_project(conn, proj_payload)"
.\multi_offer_generator.py,693,crm_project_id,"('Const', 'None')","('Const',)",,crm_project_id = None
.\admin_panel.py,1389,csv_content_temp,"('Call', ('Attr', 'csv_bytes', 'decode'), (('Const', ""'iso-8859-1'""),), ())","('Call', 1, 0)",csv_bytes,"try: csv_content_temp = csv_bytes.decode(""iso-8859-1""); st.info(""CSV mit ISO-8859-1 gelesen."")"
.\admin_panel.py,1387,csv_content_temp,"('Call', ('Attr', 'csv_bytes', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)",csv_bytes,"try: csv_content_temp = csv_bytes.decode(""utf-8"")"
.\admin_panel.py,1386,csv_content_temp,"('Const', 'None')","('Const',)",,csv_bytes = uploaded_file_csv.getvalue(); csv_content_temp = None
.\calculations.py,396,csv_file_like,"('Call', ('Attr', 'io', 'StringIO'), (('Name', 'csv_data'),), ())","('Call', 1, 0)","csv_data,io",csv_file_like = io.StringIO(csv_data)
.\calculations.py,398,csv_file_like,"('Name', 'csv_data')","('Name',)",csv_data,csv_file_like = csv_data
.\analysis.py,8839,cumulative,"('List', ())","('List', 0)",,cumulative = []
.\analysis.py,8424,cumulative,"('USub', ('Subscript', ('Name', 'roi_item'), ('Const', ""'initial_investment'"")))","('USub', ('Subscript',))",roi_item,"cumulative = -roi_item[""initial_investment""]"
.\heatpump_ui.py,643,cumulative_cashflow,"('List', (('USub', ('Name', 'total_investment')),))","('List', 1)",total_investment,cumulative_cashflow = [-total_investment]
.\analysis.py,8423,cumulative_cashflow,"('List', ())","('List', 0)",,cumulative_cashflow = []
.\pdf_styles.py,444,cumulative_savings,"('Call', ('Attr', 'data', 'get'), (('Const', ""'cumulative_savings'""), ('List', ())), ())","('Call', 2, 0)",data,"cumulative_savings = data.get('cumulative_savings', [])"
.\calculations.py,4042,cumulative_savings,"('Const', '0')","('Const',)",,cumulative_savings = 0
.\calculations.py,4083,cumulative_savings,"('Const', '0')","('Const',)",,cumulative_savings = 0
.\calculations_extended.py,42,cumulative_savings,"('Const', '0')","('Const',)",,cumulative_savings = 0
.\calculations.py,1933,cumulative_savings,"('Other', 'ListComp')","('Other', 'ListComp')","annual_co2_savings,year,years_list",cumulative_savings = [annual_co2_savings * year for year in years_list]
.\database.py,34,cur,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,cur = conn.cursor()
.\database.py,83,cur,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,cur = conn.cursor()
.\database.py,105,cur,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,cur = conn.cursor()
.\database.py,138,cur,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,cur = conn.cursor()
.\database.py,157,cur,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,cur = conn.cursor()
.\database.py,349,cur,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,cur = conn.cursor()
.\database.py,368,cur,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,cur = conn.cursor()
.\database.py,384,cur,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,cur = conn.cursor()
.\database.py,626,cur,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,cur = conn.cursor()
.\database.py,636,cur,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,cur = conn.cursor()
.\database.py,643,cur,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,cur = conn.cursor()
.\multi_offer_generator.py,666,cur,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,cur = conn.cursor()
.\pdf_ui.py,1219,cur,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,cur = conn.cursor()
.\product_attributes.py,17,cur,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,cur = conn.cursor()
.\product_attributes.py,47,cur,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,cur = conn.cursor()
.\product_attributes.py,90,cur,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,cur = conn.cursor()
.\product_attributes.py,122,cur,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,cur = conn.cursor()
.\product_attributes.py,155,cur,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,cur = conn.cursor()
.\tools\smoke_crm_save.py,33,cur,"('Call', ('Attr', 'conn', 'cursor'), (), ())","('Call', 0, 0)",conn,cur = conn.cursor()
.\notwendig oder nicht\wichtig\repo_porter.py,517,cur,"('List', (('Name', 'line'),))","('List', 1)",line,cur = [line]
.\tools\repo_porter.py,517,cur,"('List', (('Name', 'line'),))","('List', 1)",line,cur = [line]
.\notwendig oder nicht\wichtig\repo_porter.py,511,cur,"('List', ())","('List', 0)",,cur: List[str] = []
.\notwendig oder nicht\wichtig\repo_porter.py,516,cur,"('List', ())","('List', 0)",,cur = []
.\notwendig oder nicht\wichtig\repo_porter_select.py,66,cur,"('List', ())","('List', 0)",,cur: List[str] = []
.\notwendig oder nicht\wichtig\repo_porter_select.py,73,cur,"('List', ())","('List', 0)",,cur = []
.\notwendig oder nicht\wichtig\repo_porter_select.py,87,cur,"('List', ())","('List', 0)",,cur = []
.\tools\repo_porter.py,511,cur,"('List', ())","('List', 0)",,cur: List[str] = []
.\tools\repo_porter.py,516,cur,"('List', ())","('List', 0)",,cur = []
.\tools\repo_porter_select.py,66,cur,"('List', ())","('List', 0)",,cur: List[str] = []
.\tools\repo_porter_select.py,73,cur,"('List', ())","('List', 0)",,cur = []
.\tools\repo_porter_select.py,87,cur,"('List', ())","('List', 0)",,cur = []
.\notwendig oder nicht\wichtig\repo_porter_select.py,65,cur_key,"('Const', 'None')","('Const',)",,cur_key = None
.\notwendig oder nicht\wichtig\repo_porter_select.py,86,cur_key,"('Const', 'None')","('Const',)",,cur_key = None
.\tools\repo_porter_select.py,65,cur_key,"('Const', 'None')","('Const',)",,cur_key = None
.\tools\repo_porter_select.py,86,cur_key,"('Const', 'None')","('Const',)",,cur_key = None
.\notwendig oder nicht\wichtig\repo_porter_select.py,80,cur_key,"('Tuple', (('Call', ('Attr', 'kind', 'strip'), (), ()), ('Call', ('Attr', 'qual', 'strip'), (), ())))","('Tuple', 2)","kind,qual","cur_key = (kind.strip(), qual.strip())"
.\tools\repo_porter_select.py,80,cur_key,"('Tuple', (('Call', ('Attr', 'kind', 'strip'), (), ()), ('Call', ('Attr', 'qual', 'strip'), (), ())))","('Tuple', 2)","kind,qual","cur_key = (kind.strip(), qual.strip())"
.\notwendig oder nicht\wichtig\repo_porter_select.py,82,cur_key,"('Tuple', (('Const', ""'unknown'""), ('Const', ""'unknown'"")))","('Tuple', 2)",,"cur_key = (""unknown"", ""unknown"")"
.\tools\repo_porter_select.py,82,cur_key,"('Tuple', (('Const', ""'unknown'""), ('Const', ""'unknown'"")))","('Tuple', 2)",,"cur_key = (""unknown"", ""unknown"")"
.\admin_module_alias_mapping_ui.py,14,current,"('BoolOp', 'Or', (('Call', ('Name', 'load_admin_setting'), (('Const', ""'module_pdf_alias_map'""), ('Dict', ())), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",load_admin_setting,"current = load_admin_setting(""module_pdf_alias_map"", {}) or {}"
.\pdf_template_engine\dynamic_overlay.py,137,current,"('Dict', ())","('Dict', 0)",,"current: Dict[str, Any] = {}"
.\pdf_template_engine\dynamic_overlay.py,148,current,"('Dict', ())","('Dict', 0)",,current = {}
.\analysis_utils.py,353,current,"('Subscript', ('Name', 'current_values'), ('Name', 'key'))","('Subscript',)","current_values,key",current = current_values[key]
.\admin_panel.py,1093,current_category_attr,"('BoolOp', 'Or', (('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'category'""),), ()), ('Const', ""''"")))","('BoolOp', 'Or', 2)",product_data_for_manual_form,current_category_attr = product_data_for_manual_form.get('category') or ''
.\admin_panel.py,825,current_category_attr,"('BoolOp', 'Or', (('Const', ""''""), ('Other', 'IfExp')))","('BoolOp', 'Or', 2)","dict,isinstance,selected_prod","current_category_attr = (selected_prod.get('category') if isinstance(selected_prod, dict) else '') or ''"
.\admin_panel.py,1611,current_content_val,"('Call', ('Attr', 'template_to_edit', 'get'), (('Const', ""'content'""), ('Const', ""''"")), ())","('Call', 2, 0)",template_to_edit,"else: current_content_val = template_to_edit.get('content', '')"
.\admin_panel.py,1606,current_content_val,"('Const', ""''"")","('Const',)",,"current_name_val = """"; current_content_val = """"; current_image_data_b64 = None"
.\crm_calendar_ui.py,79,current_date,"('Attr', 'st.session_state', 'calendar_date')","('Attr',)",st,current_date = st.session_state.calendar_date
.\multi_offer_generator_old.py,616,current_date,"('Call', ('Attr', 'datetime.now()', 'strftime'), (('Const', ""'%Y-%m-%d'""),), ())","('Call', 1, 0)",datetime,"current_date = datetime.now().strftime(""%Y-%m-%d"")"
.\database.py,982,current_db_version,"('Const', '1')","('Const',)",,"current_db_version = 1; print(""DB: Schema v1 angewendet."")"
.\database.py,1048,current_db_version,"('Const', '12')","('Const',)",,current_db_version = 12
.\database.py,1059,current_db_version,"('Const', '13')","('Const',)",,"current_db_version = 13; print(""DB: Schema v13 angewendet."")"
.\database.py,1069,current_db_version,"('Const', '14')","('Const',)",,"current_db_version = 14; print(""DB: Schema v14 angewendet (Firmenspezifische Angebotsvorlagen)."")"
.\database.py,996,current_db_version,"('Const', '2')","('Const',)",,"current_db_version = 2; print(""DB: Schema v2 angewendet."")"
.\database.py,968,current_db_version,"('Other', 'IfExp')","('Other', 'IfExp')",current_db_version_row,current_db_version = current_db_version_row[0] if current_db_version_row else 0
.\admin_panel.py,1512,current_debug_mode_for_display,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'app_debug_mode_enabled'""), ('Const', 'False')), ())","('Call', 2, 0)",load_admin_setting_func,"current_debug_mode_for_display = load_admin_setting_func('app_debug_mode_enabled', False)"
.\admin_panel.py,1513,current_debug_mode_for_display,"('Const', 'False')","('Const',)",,"if not isinstance(current_debug_mode_for_display, bool): current_debug_mode_for_display = False"
.\admin_panel.py,1567,current_design_settings,"('Call', ('Attr', 'PDF_DESIGN_SETTINGS_DEFAULT', 'copy'), (), ())","('Call', 0, 0)",PDF_DESIGN_SETTINGS_DEFAULT,"if not isinstance(current_design_settings, dict): current_design_settings = PDF_DESIGN_SETTINGS_DEFAULT.copy()"
.\admin_panel.py,1566,current_design_settings,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'pdf_design_settings'""), ('Call', ('Attr', 'PDF_DESIGN_SETTINGS_DEFAULT', 'copy'), (), ())), ())","('Call', 2, 0)","PDF_DESIGN_SETTINGS_DEFAULT,load_admin_setting_func","current_design_settings = load_admin_setting_func('pdf_design_settings', PDF_DESIGN_SETTINGS_DEFAULT.copy())"
.\admin_panel.py,1429,current_feed_in_tariffs_block,"('Call', ('Attr', '_DEFAULT_FEED_IN_TARIFFS_FALLBACK', 'copy'), (), ())","('Call', 0, 0)",_DEFAULT_FEED_IN_TARIFFS_FALLBACK,"if not isinstance(current_feed_in_tariffs_block, dict): current_feed_in_tariffs_block = _DEFAULT_FEED_IN_TARIFFS_FALLBACK.copy()"
.\admin_panel.py,1428,current_feed_in_tariffs_block,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'feed_in_tariffs'""), ('Call', ('Attr', '_DEFAULT_FEED_IN_TARIFFS_FALLBACK', 'copy'), (), ())), ())","('Call', 2, 0)","_DEFAULT_FEED_IN_TARIFFS_FALLBACK,load_admin_setting_func","current_feed_in_tariffs_block = load_admin_setting_func('feed_in_tariffs', _DEFAULT_FEED_IN_TARIFFS_FALLBACK.copy())"
.\admin_panel.py,1265,current_global_constants,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'global_constants'""), ('Dict', ())), ())","('Call', 2, 0)",load_admin_setting_func,"current_global_constants = load_admin_setting_func('global_constants', {})"
.\admin_panel.py,1468,current_global_constants,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'global_constants'""), ('Name', '_DEFAULT_GLOBAL_CONSTANTS_FALLBACK')), ())","('Call', 2, 0)","_DEFAULT_GLOBAL_CONSTANTS_FALLBACK,load_admin_setting_func","current_global_constants = load_admin_setting_func('global_constants', _DEFAULT_GLOBAL_CONSTANTS_FALLBACK)"
.\admin_panel.py,1268,current_global_constants,"('Name', 'temp_merged_constants')","('Name',)",temp_merged_constants,current_global_constants = temp_merged_constants
.\admin_panel.py,1610,current_image_data_b64,"('Call', ('Attr', 'template_to_edit', 'get'), (('Const', ""'data'""),), ())","('Call', 1, 0)",template_to_edit,if is_image_template: current_image_data_b64 = template_to_edit.get('data')
.\admin_panel.py,1606,current_image_data_b64,"('Const', 'None')","('Const',)",,"current_name_val = """"; current_content_val = """"; current_image_data_b64 = None"
.\crm_pipeline_ui.py,782,current_index,"('Call', ('Attr', 'stage_order', 'index'), (('Name', 'current_stage'),), ())","('Call', 1, 0)","current_stage,stage_order",current_index = stage_order.index(current_stage)
.\components\progress_settings.py,27,current_index,"('Const', '0')","('Const',)",,current_index = 0
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_settings.py.insert.py,29,current_index,"('Const', '0')","('Const',)",,current_index = 0
.\notwendig oder nicht\wichtig\portings\patches\components\progress_settings.py.insert.py,30,current_index,"('Const', '0')","('Const',)",,current_index = 0
.\tools\out_selected\patches\components\progress_settings.py.insert.py,29,current_index,"('Const', '0')","('Const',)",,current_index = 0
.\tools\portings\patches\components\progress_settings.py.insert.py,30,current_index,"('Const', '0')","('Const',)",,current_index = 0
.\components\progress_settings.py,30,current_index,"('Name', 'i')","('Name',)",i,current_index = i
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_settings.py.insert.py,32,current_index,"('Name', 'i')","('Name',)",i,current_index = i
.\notwendig oder nicht\wichtig\portings\patches\components\progress_settings.py.insert.py,33,current_index,"('Name', 'i')","('Name',)",i,current_index = i
.\tools\out_selected\patches\components\progress_settings.py.insert.py,32,current_index,"('Name', 'i')","('Name',)",i,current_index = i
.\tools\portings\patches\components\progress_settings.py.insert.py,33,current_index,"('Name', 'i')","('Name',)",i,current_index = i
.\options.py,41,current_index,"('Other', 'IfExp')","('Other', 'IfExp')","current_theme_name,theme_names",current_index = theme_names.index(current_theme_name) if current_theme_name in theme_names else 0
.\options.py,217,current_index,"('Other', 'IfExp')","('Other', 'IfExp')","current_theme_name,theme_names",current_index = theme_names.index(current_theme_name) if current_theme_name in theme_names else 0
.\admin_panel.py,1498,current_locale_data,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'de_locale_data'""), ('Dict', ())), ())","('Call', 2, 0)",load_admin_setting_func,"current_locale_data = load_admin_setting_func('de_locale_data', {}); locale_json_string = ""{}"""
.\admin_panel.py,1499,current_locale_data,"('Dict', ())","('Dict', 0)",,"if not isinstance(current_locale_data, dict): current_locale_data = {}"
.\admin_panel.py,1609,current_name_val,"('Call', ('Attr', 'template_to_edit', 'get'), (('Const', ""'name'""), ('Const', ""''"")), ())","('Call', 2, 0)",template_to_edit,"template_to_edit = templates[st.session_state[edit_index_session_key]]; current_name_val = template_to_edit.get('name', '')"
.\admin_panel.py,1606,current_name_val,"('Const', ""''"")","('Const',)",,"current_name_val = """"; current_content_val = """"; current_image_data_b64 = None"
.\admin_logo_positions_ui.py,45,current_positions,"('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())","('Call', 0, 0)",DEFAULT_POSITIONS,current_positions = DEFAULT_POSITIONS.copy()
.\admin_logo_positions_ui.py,48,current_positions,"('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())","('Call', 0, 0)",DEFAULT_POSITIONS,current_positions = DEFAULT_POSITIONS.copy()
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_positions_ui.py.insert.py,20,current_positions,"('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())","('Call', 0, 0)",DEFAULT_POSITIONS,current_positions = DEFAULT_POSITIONS.copy()
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_positions_ui.py.insert.py,23,current_positions,"('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())","('Call', 0, 0)",DEFAULT_POSITIONS,current_positions = DEFAULT_POSITIONS.copy()
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_positions_ui.py.insert.py,21,current_positions,"('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())","('Call', 0, 0)",DEFAULT_POSITIONS,current_positions = DEFAULT_POSITIONS.copy()
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_positions_ui.py.insert.py,24,current_positions,"('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())","('Call', 0, 0)",DEFAULT_POSITIONS,current_positions = DEFAULT_POSITIONS.copy()
.\tools\out_selected\patches\admin_logo_positions_ui.py.insert.py,20,current_positions,"('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())","('Call', 0, 0)",DEFAULT_POSITIONS,current_positions = DEFAULT_POSITIONS.copy()
.\tools\out_selected\patches\admin_logo_positions_ui.py.insert.py,23,current_positions,"('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())","('Call', 0, 0)",DEFAULT_POSITIONS,current_positions = DEFAULT_POSITIONS.copy()
.\tools\portings\patches\admin_logo_positions_ui.py.insert.py,21,current_positions,"('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())","('Call', 0, 0)",DEFAULT_POSITIONS,current_positions = DEFAULT_POSITIONS.copy()
.\tools\portings\patches\admin_logo_positions_ui.py.insert.py,24,current_positions,"('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())","('Call', 0, 0)",DEFAULT_POSITIONS,current_positions = DEFAULT_POSITIONS.copy()
.\admin_logo_positions_ui.py,43,current_positions,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())), ())","('Call', 2, 0)","DEFAULT_POSITIONS,load_admin_setting_func","current_positions = load_admin_setting_func(""pdf_logo_positions"", DEFAULT_POSITIONS.copy())"
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_positions_ui.py.insert.py,18,current_positions,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())), ())","('Call', 2, 0)","DEFAULT_POSITIONS,load_admin_setting_func","current_positions = load_admin_setting_func(""pdf_logo_positions"", DEFAULT_POSITIONS.copy())"
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_positions_ui.py.insert.py,19,current_positions,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())), ())","('Call', 2, 0)","DEFAULT_POSITIONS,load_admin_setting_func","current_positions = load_admin_setting_func(""pdf_logo_positions"", DEFAULT_POSITIONS.copy())"
.\tools\out_selected\patches\admin_logo_positions_ui.py.insert.py,18,current_positions,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())), ())","('Call', 2, 0)","DEFAULT_POSITIONS,load_admin_setting_func","current_positions = load_admin_setting_func(""pdf_logo_positions"", DEFAULT_POSITIONS.copy())"
.\tools\portings\patches\admin_logo_positions_ui.py.insert.py,19,current_positions,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())), ())","('Call', 2, 0)","DEFAULT_POSITIONS,load_admin_setting_func","current_positions = load_admin_setting_func(""pdf_logo_positions"", DEFAULT_POSITIONS.copy())"
.\calculations.py,4182,current_power,"('Attr', 'self', 'initial_power')","('Attr',)",self,current_power = self.initial_power
.\calculations.py,647,current_power,"('Mult', (('Name', 'initial_power'), ('Pow', ('Sub', ('Const', '1'), ('Name', 'degradation_rate')), ('Name', 'year'))))","('Mult', (('Name',), ('Pow', ('Sub', ('Const',), ('Name',)), ('Name',))))","degradation_rate,initial_power,year",current_power = initial_power * (1 - degradation_rate) ** year
.\calculations.py,4200,current_power,"('Name', 'next_power')","('Name',)",next_power,current_power = next_power
.\analysis.py,6950,current_price_increase_for_ui,"('Call', ('Name', 'float'), (('Call', ('Attr', 'previous_calc_results', 'get'), (('Const', ""'electricity_price_increase_rate_effective_percent'""), ('Name', 'admin_default_price_increase')), ()),), ())","('Call', 1, 0)","admin_default_price_increase,float,previous_calc_results",current_price_increase_for_ui = float(
.\analysis.py,6937,current_price_increase_for_ui,"('Call', ('Name', 'float'), (('Call', ('Attr', 'results', 'get'), (('Const', ""'electricity_price_increase_rate_effective_percent'""), ('Name', 'admin_default_price_increase')), ()),), ())","('Call', 1, 0)","admin_default_price_increase,float,results",current_price_increase_for_ui = float(
.\analysis.py,6929,current_price_increase_for_ui,"('Name', 'admin_default_price_increase')","('Name',)",admin_default_price_increase,current_price_increase_for_ui = admin_default_price_increase
.\analysis.py,6959,current_results,"('BoolOp', 'Or', (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'calculation_results'""), ('BoolOp', 'Or', (('Dict', ()), ('Name', 'results')))), ()), ('Dict', ())))","('BoolOp', 'Or', 2)","results,st","current_results = st.session_state.get(""calculation_results"", results or {}) or {}"
.\analysis.py,6908,current_results,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'calculation_results'""), ('BoolOp', 'Or', (('Dict', ()), ('Name', 'results')))), ())","('Call', 2, 0)","results,st","current_results = st.session_state.get(""calculation_results"", results or {})"
.\admin_panel.py,1591,current_selection_index,"('Add', (('Const', '1'), ('Subscript', ('Attr', 'st', 'session_state'), ('Name', 'edit_index_session_key'))))","('Add', (('Const',), ('Subscript',)))","edit_index_session_key,st",if 0 <= st.session_state[edit_index_session_key] < len(templates): current_selection_index = st.session_state[edit_index_session_key] + 1
.\admin_panel.py,1589,current_selection_index,"('Const', '0')","('Const',)",,current_selection_index = 0
.\analysis.py,6947,current_sim_years_for_ui,"('Call', ('Name', 'int'), (('Subscript', ('Name', 'previous_calc_results'), ('Const', ""'simulation_period_years_effective'"")),), ())","('Call', 1, 0)","int,previous_calc_results",current_sim_years_for_ui = int(
.\analysis.py,6936,current_sim_years_for_ui,"('Call', ('Name', 'int'), (('Subscript', ('Name', 'results'), ('Const', ""'simulation_period_years_effective'"")),), ())","('Call', 1, 0)","int,results","current_sim_years_for_ui = int(results[""simulation_period_years_effective""])"
.\analysis.py,6928,current_sim_years_for_ui,"('Name', 'admin_default_sim_years')","('Name',)",admin_default_sim_years,current_sim_years_for_ui = admin_default_sim_years
.\heatpump_ui.py,906,current_system,"('Call', ('Attr', 'building_data', 'get'), (('Const', ""'heating_system'""), ('Const', ""''"")), ())","('Call', 2, 0)",building_data,"current_system = building_data.get('heating_system', '')"
.\heatpump_ui.py,555,current_system,"('Subscript', ('Name', 'building_data'), ('Const', ""'heating_system'""))","('Subscript',)",building_data,current_system = building_data['heating_system']
.\analysis.py,517,current_tariff_eur_per_kwh,"('Const', '0.35')","('Const',)",,current_tariff_eur_per_kwh = 0.35
.\analysis.py,515,current_tariff_eur_per_kwh,"('Div', ('Name', 'annual_total_costs_without_pv'), ('Name', 'annual_consumption_total'))","('Div', ('Name',), ('Name',))","annual_consumption_total,annual_total_costs_without_pv",current_tariff_eur_per_kwh = annual_total_costs_without_pv / annual_consumption_total
.\debug_logo_rendering.py,58,current_text,"('Const', 'None')","('Const',)",,current_text = None
.\debug_logo_rendering.py,70,current_text,"('Const', 'None')","('Const',)",,current_text = None
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_rendering.py.insert.py,56,current_text,"('Const', 'None')","('Const',)",,current_text = None
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_rendering.py.insert.py,68,current_text,"('Const', 'None')","('Const',)",,current_text = None
.\tools\portings\patches\debug_logo_rendering.py.insert.py,56,current_text,"('Const', 'None')","('Const',)",,current_text = None
.\tools\portings\patches\debug_logo_rendering.py.insert.py,68,current_text,"('Const', 'None')","('Const',)",,current_text = None
.\debug_logo_rendering.py,62,current_text,"('Subscript', ('Call', ('Attr', 'line', 'split'), (('Const', ""': '""),), ()), ('Const', '1'))","('Subscript',)",line,current_text = line.split(': ')[1]
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_rendering.py.insert.py,60,current_text,"('Subscript', ('Call', ('Attr', 'line', 'split'), (('Const', ""': '""),), ()), ('Const', '1'))","('Subscript',)",line,current_text = line.split(': ')[1]
.\tools\portings\patches\debug_logo_rendering.py.insert.py,60,current_text,"('Subscript', ('Call', ('Attr', 'line', 'split'), (('Const', ""': '""),), ()), ('Const', '1'))","('Subscript',)",line,current_text = line.split(': ')[1]
.\central_pdf_system.py,1538,current_theme,"('Call', ('Attr', 'st.session_state', 'get'), (('Other', 'JoinedStr'), ('Const', ""'Blau Elegant'"")), ())","('Call', 2, 0)","self,st","current_theme = st.session_state.get(f""{self.session_prefix}theme_name"", ""Blau Elegant"")"
.\doc_output.py,1481,current_theme,"('Subscript', ('Attr', 'st.session_state', 'pdf_design_config'), ('Const', ""'theme'""))","('Subscript',)",st,current_theme = st.session_state.pdf_design_config['theme']
.\pdf_styles.py,1227,current_theme,"('Subscript', ('Attr', 'st.session_state', 'pdf_theme_settings'), ('Const', ""'selected_theme'""))","('Subscript',)",st,current_theme = st.session_state.pdf_theme_settings['selected_theme']
.\admin_panel.py,1293,current_val_for_field,"('Call', ('Name', 'float'), (('Subscript', ('Subscript', ('Name', 'current_specific_yields_map'), ('Name', 'ori')), ('Name', 'tilt_val_str_loop')),), ())","('Call', 1, 0)","current_specific_yields_map,float,ori,tilt_val_str_loop","if isinstance(current_specific_yields_map.get(ori), dict) and tilt_val_str_loop in current_specific_yields_map[ori]: current_val_for_field = float(current_specific_yields_map[ori][tilt_val_str_loop])"
.\admin_panel.py,1294,current_val_for_field,"('Call', ('Name', 'float'), (('Subscript', ('Subscript', ('Name', 'default_yield_map_template'), ('Name', 'ori')), ('Name', 'tilt_val_str_loop')),), ())","('Call', 1, 0)","default_yield_map_template,float,ori,tilt_val_str_loop","elif isinstance(default_yield_map_template.get(ori), dict) and tilt_val_str_loop in default_yield_map_template[ori]: current_val_for_field = float(default_yield_map_template[ori][tilt_val_str_loop])"
.\admin_panel.py,1292,current_val_for_field,"('Const', '900.0')","('Const',)",,current_val_for_field = 900.0
.\pdf_generator.py,1807,cust,"('BoolOp', 'Or', (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""),), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",project_data,cust = project_data.get('customer_data') or {}
.\pdf_generator.py,688,cust,"('Call', ('Attr', 'project_data or {}', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"cust = (project_data or {}).get('customer_data', {})"
.\tools\smoke_crm_save.py,13,cust,"('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterstr.'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'company_name'""), ('Const', ""''"")), ('KV', ('Const', ""'creation_date'""), ('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())), ('KV', ('Const', ""'email'""), ('Const', ""'streamlit.tester@example.com'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Streamlit'"")), ('KV', ('Const', ""'house_number'""), ('Const', ""'1'"")), ('KV', ('Const', ""'income_tax_rate_percent'""), ('Const', '0.0')), ('KV', ('Const', ""'last_name'""), ('Const', ""'Tester'"")), ('KV', ('Const', ""'phone_landline'""), ('Const', ""''"")), ('KV', ('Const', ""'phone_mobile'""), ('Const', ""''"")), ('KV', ('Const', ""'region'""), ('Const', ""''"")), ('KV', ('Const', ""'salutation'""), ('Const', ""'Herr'"")), ('KV', ('Const', ""'state'""), ('Const', ""''"")), ('KV', ('Const', ""'title'""), ('Const', ""''"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))","('Dict', 16)",datetime,cust = {
.\pdf_generator.py,1809,cust,"('Dict', ())","('Dict', 0)",,cust = {}
.\pdf_ui.py,1228,cust_payload,"('Dict', (('KV', ('Const', ""'address'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'address'""),), ())), ('KV', ('Const', ""'city'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'city'""),), ())), ('KV', ('Const', ""'company_name'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'company_name'""),), ())), ('KV', ('Const', ""'creation_date'""), ('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())), ('KV', ('Const', ""'email'""), ('Name', 'email_val')), ('KV', ('Const', ""'first_name'""), ('BoolOp', 'Or', (('Const', ""'Interessent'""), ('Name', 'first_name')))), ('KV', ('Const', ""'house_number'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'house_number'""),), ())), ('KV', ('Const', ""'income_tax_rate_percent'""), ('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'income_tax_rate_percent'""),), ()), ('Const', '0.0'))),), ())), ('KV', ('Const', ""'last_name'""), ('BoolOp', 'Or', (('Const', ""'Unbekannt'""), ('Name', 'last_name')))), ('KV', ('Const', ""'phone_landline'""), ('BoolOp', 'Or', (('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'phone'""),), ()), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'phone_landline'""),), ())))), ('KV', ('Const', ""'phone_mobile'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'phone_mobile'""),), ())), ('KV', ('Const', ""'region'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'region'""),), ())), ('KV', ('Const', ""'salutation'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'salutation'""),), ())), ('KV', ('Const', ""'state'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'state'""),), ())), ('KV', ('Const', ""'title'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'title'""),), ())), ('KV', ('Const', ""'zip_code'""), ('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'zip_code'""),), ()))))","('Dict', 16)","datetime,email_val,first_name,float,last_name,project_data",cust_payload = {
.\multi_offer_generator.py,672,cust_payload,"('Dict', (('KV', ('Const', ""'address'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'address'""),), ())), ('KV', ('Const', ""'city'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'city'""),), ())), ('KV', ('Const', ""'company_name'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'company_name'""),), ())), ('KV', ('Const', ""'creation_date'""), ('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())), ('KV', ('Const', ""'email'""), ('Name', 'email_val')), ('KV', ('Const', ""'first_name'""), ('BoolOp', 'Or', (('Const', ""'Interessent'""), ('Name', 'first_name')))), ('KV', ('Const', ""'house_number'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'house_number'""),), ())), ('KV', ('Const', ""'income_tax_rate_percent'""), ('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'income_tax_rate_percent'""),), ()), ('Const', '0.0'))),), ())), ('KV', ('Const', ""'last_name'""), ('BoolOp', 'Or', (('Const', ""'Unbekannt'""), ('Name', 'last_name')))), ('KV', ('Const', ""'phone_landline'""), ('BoolOp', 'Or', (('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'phone'""),), ()), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'phone_landline'""),), ())))), ('KV', ('Const', ""'phone_mobile'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'phone_mobile'""),), ())), ('KV', ('Const', ""'region'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'region'""),), ())), ('KV', ('Const', ""'salutation'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'salutation'""),), ())), ('KV', ('Const', ""'state'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'state'""),), ())), ('KV', ('Const', ""'title'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'title'""),), ())), ('KV', ('Const', ""'zip_code'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'zip_code'""),), ()))))","('Dict', 16)","customer_data,datetime,email_val,first_name,float,last_name",cust_payload = {
.\multi_offer_generator_old.py,1141,custom_analysis,"('Call', ('Attr', 'analysis_results', 'copy'), (), ())","('Call', 0, 0)",analysis_results,custom_analysis = analysis_results.copy()
.\multi_offer_generator_old.py,1151,custom_analysis,"('Name', 'analysis_results')","('Name',)",analysis_results,custom_analysis = analysis_results
.\pdf_generator.py,189,customer,"('Call', ('Attr', 'self.offer_data', 'get'), (('Const', ""'customer'""), ('Dict', ())), ())","('Call', 2, 0)",self,"customer = self.offer_data.get(""customer"", {})"
.\database.py,1840,customer,"('Dict', (('KV', ('Const', ""'address'""), ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'row'), ('Const', '5'))))), ('KV', ('Const', ""'created_at'""), ('Subscript', ('Name', 'row'), ('Const', '7'))), ('KV', ('Const', ""'email'""), ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'row'), ('Const', '3'))))), ('KV', ('Const', ""'first_name'""), ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'row'), ('Const', '1'))))), ('KV', ('Const', ""'id'""), ('Subscript', ('Name', 'row'), ('Const', '0'))), ('KV', ('Const', ""'last_name'""), ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'row'), ('Const', '2'))))), ('KV', ('Const', ""'notes'""), ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'row'), ('Const', '9'))))), ('KV', ('Const', ""'phone'""), ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'row'), ('Const', '4'))))), ('KV', ('Const', ""'project_data'""), ('Other', 'IfExp')), ('KV', ('Const', ""'status'""), ('BoolOp', 'Or', (('Const', ""'active'""), ('Subscript', ('Name', 'row'), ('Const', '6'))))), ('KV', ('Const', ""'updated_at'""), ('Subscript', ('Name', 'row'), ('Const', '8')))))","('Dict', 11)","json,row",customer = {
.\database.py,1992,customer,"('Dict', (('KV', ('Const', ""'address'""), ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'row'), ('Const', '5'))))), ('KV', ('Const', ""'created_at'""), ('Subscript', ('Name', 'row'), ('Const', '7'))), ('KV', ('Const', ""'email'""), ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'row'), ('Const', '3'))))), ('KV', ('Const', ""'first_name'""), ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'row'), ('Const', '1'))))), ('KV', ('Const', ""'id'""), ('Subscript', ('Name', 'row'), ('Const', '0'))), ('KV', ('Const', ""'last_name'""), ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'row'), ('Const', '2'))))), ('KV', ('Const', ""'notes'""), ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'row'), ('Const', '9'))))), ('KV', ('Const', ""'phone'""), ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'row'), ('Const', '4'))))), ('KV', ('Const', ""'project_data'""), ('Other', 'IfExp')), ('KV', ('Const', ""'status'""), ('BoolOp', 'Or', (('Const', ""'active'""), ('Subscript', ('Name', 'row'), ('Const', '6'))))), ('KV', ('Const', ""'updated_at'""), ('Subscript', ('Name', 'row'), ('Const', '8')))))","('Dict', 11)","json,row",customer = {
.\pdf_template_engine\placeholders.py,424,customer,"('Other', 'IfExp')","('Other', 'IfExp')","dict,isinstance,project_data","customer = project_data.get(""customer_data"", {}) if isinstance(project_data, dict) else {}"
.\multi_offer_generator.py,578,customer_data,"('Attr', 'st.session_state', 'multi_offer_customer_data')","('Attr',)",st,customer_data = st.session_state.multi_offer_customer_data
.\multi_offer_generator_new.py,279,customer_data,"('Attr', 'st.session_state', 'multi_offer_customer_data')","('Attr',)",st,customer_data = st.session_state.multi_offer_customer_data
.\analysis.py,7846,customer_data,"('Call', ('Attr', ""st.session_state.get('project_data', {})"", 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"customer_data = st.session_state.get(""project_data"", {}).get(""customer_data"", {})"
.\crm.py,153,customer_data,"('Call', ('Attr', 'customer_data', 'copy'), (), ())","('Call', 0, 0)",customer_data,customer_data = customer_data.copy()
.\analysis.py,6669,customer_data,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"customer_data = project_data.get(""customer_data"", {})"
.\analysis.py,7766,customer_data,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"customer_data = project_data.get(""customer_data"", {})"
.\analysis.py,7833,customer_data,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"customer_data = project_data.get(""customer_data"", {})"
.\calculations.py,2350,customer_data,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"customer_data = project_data.get(""customer_data"", {})"
.\doc_output.py,118,customer_data,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"customer_data = project_data.get('customer_data', {})"
.\multi_offer_generator.py,111,customer_data,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"customer_data = project_data.get(""customer_data"", {})"
.\multi_offer_generator_new.py,106,customer_data,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"customer_data = project_data.get(""customer_data"", {})"
.\pdf_generator.py,2984,customer_data,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"customer_data = project_data.get('customer_data', {})"
.\pdf_ui.py,330,customer_data,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"customer_data = project_data.get('customer_data', {})"
.\multi_offer_generator_old.py,1300,customer_data,"('Call', ('Attr', 'st.session_state.multi_offer_project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"customer_data = st.session_state.multi_offer_project_data.get('customer_data', {})"
.\multi_offer_generator_old.py,380,customer_data,"('Dict', ())","('Dict', 0)",,customer_data = {}
.\pdf_generator.py,1850,customer_data,"('Other', 'IfExp')","('Other', 'IfExp')",project_data,"customer_data = project_data.get('customer_data', {}) if project_data else {}"
.\multi_offer_generator.py,1221,customer_data_ready,"('Call', ('Attr', 'generator', 'render_customer_input'), (), ())","('Call', 0, 0)",generator,customer_data_ready = generator.render_customer_input()
.\multi_offer_generator.py,1174,customer_data_ready,"('Call', ('Attr', 'self', 'render_customer_input'), (), ())","('Call', 0, 0)",self,customer_data_ready = self.render_customer_input()
.\multi_offer_generator_new.py,430,customer_data_ready,"('Call', ('Attr', 'self', 'render_customer_input'), (), ())","('Call', 0, 0)",self,customer_data_ready = self.render_customer_input()
.\crm_calendar_ui.py,204,customer_id,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Kunde'""),), (('format_func', ('Other', 'Lambda')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'customer_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","customer_options,list,st,x",customer_id = st.selectbox(
.\crm.py,818,customer_id,"('Call', ('Name', 'save_customer'), (('Name', 'conn_test'), ('Name', 'test_customer_data')), ())","('Call', 2, 0)","conn_test,save_customer,test_customer_data","customer_id = save_customer(conn_test, test_customer_data)"
.\crm_calendar_ui.py,210,customer_id,"('Const', 'None')","('Const',)",,customer_id = None
.\crm_calendar_ui.py,213,customer_id,"('Const', 'None')","('Const',)",,customer_id = None
.\crm.py,172,customer_id,"('Subscript', ('Name', 'data_to_save'), ('Const', ""'id'""))","('Subscript',)",data_to_save,customer_id = data_to_save['id']
.\multi_offer_generator_old.py,618,customer_name,"('Call', ('Attr', ""offer_data.get('customer', {})"", 'get'), (('Const', ""'name'""), ('Const', ""'Unbekannter_Kunde'"")), ())","('Call', 2, 0)",offer_data,"customer_name = offer_data.get(""customer"", {}).get(""name"", ""Unbekannter_Kunde"")"
.\central_pdf_system.py,2056,customer_name,"('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'last_name'""), ('Const', ""'Kunde'"")), ())","('Call', 2, 0)",project_data,"customer_name = project_data.get('customer_data', {}).get('last_name', 'Kunde')"
.\gui.py,503,customer_name,"('Call', ('Attr', ""project_data_fallback.get('customer_data', {})"", 'get'), (('Const', ""'last_name'""), ('Const', ""'Unbekannt'"")), ())","('Call', 2, 0)",project_data_fallback,"customer_name = project_data_fallback.get('customer_data', {}).get('last_name', 'Unbekannt')"
.\pdf_generator.py,3076,customer_name,"('Call', ('Attr', 'f""{customer_data.get(\'first_name\', \'\')} {customer_data.get(\'last_name\', \'\')}""', 'strip'), (), ())","('Call', 0, 0)",customer_data,"customer_name = f""{customer_data.get('first_name', '')} {customer_data.get('last_name', '')}"".strip()"
.\multi_offer_generator_old.py,836,customer_name,"('Other', 'JoinedStr')","('Other', 'JoinedStr')",customer,"customer_name = f""{customer['first_name']} {customer['last_name']}"""
.\multi_offer_generator_old.py,1301,customer_name,"('Other', 'JoinedStr')","('Other', 'JoinedStr')",customer_data,"customer_name = f""{customer_data.get('first_name', '')} {customer_data.get('last_name', '')}"""
.\doc_output.py,2364,customer_name_for_file,"('Call', ('Attr', 'customer_data_pdf', 'get'), (('Const', ""'last_name'""), ('Const', ""'Angebot'"")), ())","('Call', 2, 0)",customer_data_pdf,"customer_name_for_file = customer_data_pdf.get('last_name', 'Angebot')"
.\pdf_ui.py,1175,customer_name_for_file,"('Call', ('Attr', 'customer_data_pdf', 'get'), (('Const', ""'last_name'""), ('Const', ""'Angebot'"")), ())","('Call', 2, 0)",customer_data_pdf,"customer_name_for_file = customer_data_pdf.get('last_name', 'Angebot')"
.\doc_output.py,2365,customer_name_for_file,"('Const', ""'Photovoltaik_Angebot'"")","('Const',)",,"if not customer_name_for_file or not str(customer_name_for_file).strip(): customer_name_for_file = ""Photovoltaik_Angebot"""
.\multi_offer_generator_old.py,844,customer_project_data,"('Other', 'IfExp')","('Other', 'IfExp')",project_data,customer_project_data = project_data if project_data else {
.\multi_offer_generator_old.py,841,customer_project_data,"('Subscript', ('Name', 'customer'), ('Const', ""'project_data'""))","('Subscript',)",customer,customer_project_data = customer['project_data']
.\crm.py,318,customer_to_edit,"('BoolOp', 'Or', (('Call', ('Name', 'load_customer'), (('Name', 'conn'), ('Name', 'selected_customer_id')), ()), ('Dict', ())))","('BoolOp', 'Or', 2)","conn,load_customer,selected_customer_id","customer_to_edit = load_customer(conn, selected_customer_id) or {}"
.\crm.py,316,customer_to_edit,"('Dict', ())","('Dict', 0)",,customer_to_edit = {}
.\crm_calendar_ui.py,197,customers,"('Call', ('Name', 'get_all_active_customers'), (), ())","('Call', 0, 0)",get_all_active_customers,customers = get_all_active_customers()
.\crm_dashboard_ui.py,78,customers,"('Call', ('Name', 'get_all_active_customers'), (), ())","('Call', 0, 0)",get_all_active_customers,customers = get_all_active_customers()
.\crm_dashboard_ui.py,142,customers,"('Call', ('Name', 'get_all_active_customers'), (), ())","('Call', 0, 0)",get_all_active_customers,customers = get_all_active_customers()
.\multi_offer_generator_old.py,645,customers,"('Call', ('Name', 'get_all_active_customers'), (), ())","('Call', 0, 0)",get_all_active_customers,"customers: List[Dict[str, Any]] = get_all_active_customers()"
.\multi_offer_generator_old.py,812,customers,"('Call', ('Name', 'get_all_active_customers'), (), ())","('Call', 0, 0)",get_all_active_customers,customers = get_all_active_customers()
.\crm.py,273,customers,"('Call', ('Name', 'load_all_customers'), (('Name', 'conn'),), ())","('Call', 1, 0)","conn,load_all_customers",customers = load_all_customers(conn)
.\database.py,1837,customers,"('List', ())","('List', 0)",,customers = []
.\multi_offer_generator_old.py,822,customers,"('List', ())","('List', 0)",,customers = []
.\notwendig oder nicht\wichtig\repo_to_json.py,316,d,"('Call', ('Attr', 'sp', 'add_parser'), (('Const', ""'dump'""),), (('help', ('Const', ""'Dump erzeugen'"")),))","('Call', 1, 1)",sp,"d = sp.add_parser(""dump"", help=""Dump erzeugen"")"
.\tools\repo_to_json.py,316,d,"('Call', ('Attr', 'sp', 'add_parser'), (('Const', ""'dump'""),), (('help', ('Const', ""'Dump erzeugen'"")),))","('Call', 1, 1)",sp,"d = sp.add_parser(""dump"", help=""Dump erzeugen"")"
.\notwendig oder nicht\wichtig\repo_porter.py,90,d,"('Call', ('Name', 'Path'), (('Name', 'dp'),), ())","('Call', 1, 0)","Path,dp",d = Path(dp)
.\notwendig oder nicht\wichtig\repo_to_json.py,116,d,"('Call', ('Name', 'Path'), (('Name', 'dp'),), ())","('Call', 1, 0)","Path,dp",d = Path(dp)
.\tools\repo_porter.py,90,d,"('Call', ('Name', 'Path'), (('Name', 'dp'),), ())","('Call', 1, 0)","Path,dp",d = Path(dp)
.\tools\repo_to_json.py,116,d,"('Call', ('Name', 'Path'), (('Name', 'dp'),), ())","('Call', 1, 0)","Path,dp",d = Path(dp)
.\calculations.py,29,d,"('Call', ('Name', '_coerce'), (('Name', 'part'),), ())","('Call', 1, 0)","_coerce,part",d = _coerce(part)
.\tools\kakerlake_ultra_cleaner.py,254,d,"('Call', ('Name', '_coerce'), (('Name', 'part'),), ())","('Call', 1, 0)","_coerce,part",d = _coerce(part)
.\heatpump_pricing.py,45,d,"('Call', ('Name', 'asdict'), (('Name', 'self'),), ())","('Call', 1, 0)","asdict,self",d = asdict(self)
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,236,d,"('Call', ('Name', 'asdict'), (('Name', 'self'),), ())","('Call', 1, 0)","asdict,self",d = asdict(self)
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,236,d,"('Call', ('Name', 'asdict'), (('Name', 'self'),), ())","('Call', 1, 0)","asdict,self",d = asdict(self)
.\dev_tools\kakerlake_ultra_cleaner_v2.py,291,d,"('Call', ('Name', 'diff_names'), (('Name', 'l'),), ())","('Call', 1, 0)","diff_names,l",d=diff_names(l)
.\dev_tools\kakerlake_ultra_cleaner_v3.py,309,d,"('Call', ('Name', 'diff_names'), (('Name', 'l'),), ())","('Call', 1, 0)","diff_names,l",d=diff_names(l)
.\mnt\data\kakerlake_ultra_cleaner_v2.py,291,d,"('Call', ('Name', 'diff_names'), (('Name', 'l'),), ())","('Call', 1, 0)","diff_names,l",d=diff_names(l)
.\dev_tools\kakerlake_ultra_cleaner_v2.py,296,d,"('Call', ('Name', 'diff_names'), (('Name', 'r'),), ())","('Call', 1, 0)","diff_names,r",d=diff_names(r)
.\dev_tools\kakerlake_ultra_cleaner_v3.py,314,d,"('Call', ('Name', 'diff_names'), (('Name', 'r'),), ())","('Call', 1, 0)","diff_names,r",d=diff_names(r)
.\mnt\data\kakerlake_ultra_cleaner_v2.py,296,d,"('Call', ('Name', 'diff_names'), (('Name', 'r'),), ())","('Call', 1, 0)","diff_names,r",d=diff_names(r)
.\dev_tools\kakerlake_ultra_cleaner_v3.py,302,d,"('Call', ('Name', 'diff_names'), (('Name', 'rhs'),), ())","('Call', 1, 0)","diff_names,rhs",d = diff_names(rhs)
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,120,dark_blue,"('Call', ('Name', 'Color'), (('Const', '0.07'), ('Const', '0.34'), ('Const', '0.6')), ())","('Call', 3, 0)",Color,"dark_blue = Color(0.07, 0.34, 0.60)"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,138,dark_blue,"('Call', ('Name', 'Color'), (('Const', '0.07'), ('Const', '0.34'), ('Const', '0.6')), ())","('Call', 3, 0)",Color,"dark_blue = Color(0.07, 0.34, 0.60)"
.\pdf_template_engine\dynamic_overlay.py,633,dark_blue,"('Call', ('Name', 'Color'), (('Const', '0.07'), ('Const', '0.34'), ('Const', '0.6')), ())","('Call', 3, 0)",Color,"dark_blue = Color(0.07, 0.34, 0.60)"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,120,dark_blue,"('Call', ('Name', 'Color'), (('Const', '0.07'), ('Const', '0.34'), ('Const', '0.6')), ())","('Call', 3, 0)",Color,"dark_blue = Color(0.07, 0.34, 0.60)"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,138,dark_blue,"('Call', ('Name', 'Color'), (('Const', '0.07'), ('Const', '0.34'), ('Const', '0.6')), ())","('Call', 3, 0)",Color,"dark_blue = Color(0.07, 0.34, 0.60)"
.\pdf_template_engine\dynamic_overlay.py,547,dark_blue,"('Call', ('Name', '_Color'), (('Const', '0.07'), ('Const', '0.34'), ('Const', '0.6')), ())","('Call', 3, 0)",_Color,"dark_blue = _Color(0.07, 0.34, 0.60)"
.\multi_offer_generator.py,147,data,"('Attr', 'st.session_state', 'multi_offer_customer_data')","('Attr',)",st,data = st.session_state.multi_offer_customer_data
.\multi_offer_generator_new.py,143,data,"('Attr', 'st.session_state', 'multi_offer_customer_data')","('Attr',)",st,data = st.session_state.multi_offer_customer_data
.\multi_offer_generator_old.py,104,data,"('Attr', 'st.session_state', 'multi_offer_customer_data')","('Attr',)",st,data = st.session_state.multi_offer_customer_data
.\multi_offer_generator_old.py,457,data,"('Attr', 'st.session_state', 'multi_offer_customer_data')","('Attr',)",st,data = st.session_state.multi_offer_customer_data
.\pdf_atomizer.py,121,data,"('Call', ('Attr', 'collections', 'OrderedDict'), (), ())","('Call', 0, 0)",collections,data = collections.OrderedDict()
.\pdf_generator.py,272,data,"('Call', ('Attr', 'content', 'get'), (('Const', ""'data'""),), ())","('Call', 1, 0)",content,"data = content.get(""data"")"
.\notwendig oder nicht\wichtig\repo_to_json.py,169,data,"('Call', ('Attr', 'f', 'read'), (('Name', 'max_bytes'),), ())","('Call', 1, 0)","f,max_bytes",data = f.read(max_bytes)
.\tools\repo_to_json.py,169,data,"('Call', ('Attr', 'f', 'read'), (('Name', 'max_bytes'),), ())","('Call', 1, 0)","f,max_bytes",data = f.read(max_bytes)
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,49,data,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,data = f.read()
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,51,data,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,data = f.read()
.\notwendig oder nicht\wichtig\repo_to_json.py,174,data,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,data = f.read()
.\pdf_template_engine\dynamic_overlay.py,81,data,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,data = f.read()
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,49,data,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,data = f.read()
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,51,data,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,data = f.read()
.\tools\repo_to_json.py,174,data,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,data = f.read()
.\notwendig oder nicht\calculations_cli.py,41,data,"('Call', ('Attr', 'json', 'load'), (('Attr', 'sys', 'stdin'),), ())","('Call', 1, 0)","json,sys","data: Dict[str, Any] = json.load(sys.stdin)"
.\notwendig oder nicht\keine ahnung\calculations_cli.py,41,data,"('Call', ('Attr', 'json', 'load'), (('Attr', 'sys', 'stdin'),), ())","('Call', 1, 0)","json,sys","data: Dict[str, Any] = json.load(sys.stdin)"
.\notwendig oder nicht\need or not\calculations_cli.py,41,data,"('Call', ('Attr', 'json', 'load'), (('Attr', 'sys', 'stdin'),), ())","('Call', 1, 0)","json,sys","data: Dict[str, Any] = json.load(sys.stdin)"
.\tools\import_module_attributes_generic.py,430,data,"('Call', ('Attr', 'json', 'load'), (('Name', 'f'),), ())","('Call', 1, 0)","f,json",data = json.load(f)
.\tools\count_pages.py,8,data,"('Call', ('Attr', 'p', 'read_bytes'), (), ())","('Call', 0, 0)",p,data = p.read_bytes()
.\calculations.py,2235,data,"('Call', ('Attr', 'response', 'json'), (), ())","('Call', 0, 0)",response,data = response.json()
.\data_input.py,116,data,"('Call', ('Attr', 'response', 'json'), (), ())","('Call', 0, 0)",response,data = response.json()
.\tools\import_module_attributes_generic.py,444,data,"('Call', ('Attr', 'yaml', 'safe_load'), (('Name', 'f'),), ())","('Call', 1, 0)","f,yaml",data = yaml.safe_load(f)
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,99,data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project'), ('Dict', ()), ('Dict', ())), ())","('Call', 3, 0)","build_dynamic_data,project","data = build_dynamic_data(project, {}, {})"
.\tests\test_logo_integration.py,93,data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project'), ('Dict', ()), ('Dict', ())), ())","('Call', 3, 0)","build_dynamic_data,project","data = build_dynamic_data(project, {}, {})"
.\tools\portings\patches\test_logo_integration.py.insert.py,99,data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project'), ('Dict', ()), ('Dict', ())), ())","('Call', 3, 0)","build_dynamic_data,project","data = build_dynamic_data(project, {}, {})"
.\pdf_template_engine\placeholders.py,1210,data,"('Call', ('Name', 'get_product_by_model_name'), (('Name', 'model_name'),), ())","('Call', 1, 0)","get_product_by_model_name,model_name",data = get_product_by_model_name(model_name)
.\pdf_generator.py,206,data,"('List', (('List', (('Const', ""'Pos'""), ('Const', ""'Beschreibung'""), ('Const', ""'Menge'""), ('Const', ""'Einzelpreis'""), ('Const', ""'Gesamtpreis'""))),))","('List', 1)",,"data = [[""Pos"", ""Beschreibung"", ""Menge"", ""Einzelpreis"", ""Gesamtpreis""]]"
.\pdf_generator.py,243,data,"('Subscript', ('Attr', 'self', 'offer_data'), ('Const', ""'selected_heatpump_data'""))","('Subscript',)",self,data = self.offer_data['selected_heatpump_data']
.\notwendig oder nicht\excel_range_reader.py,69,data,"('Subscript', ('Name', 'vals'), ('Other', 'Slice'))","('Subscript',)",vals,data = vals[1:]
.\gui.py,730,data_input_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'data_input'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","data_input_module = import_module_with_fallback(""data_input"", import_errors)"
.\gui.py,84,data_input_module,"('Const', 'None')","('Const',)",,data_input_module: Optional[Any] = None
.\analysis.py,7629,data_list_processed,"('List', ())","('List', 0)",,data_list_processed = []
.\analysis.py,7631,data_list_processed,"('Other', 'ListComp')","('Other', 'ListComp')","data_list_raw,float,int,isinstance,math,val",data_list_processed = [
.\doc_output.py,102,data_sufficient,"('Call', ('Attr', 'validation_result', 'get'), (('Const', ""'is_valid'""), ('Const', 'False')), ())","('Call', 2, 0)",validation_result,"data_sufficient = validation_result.get('is_valid', False)"
.\doc_output.py,212,data_sufficient,"('Call', ('Name', '_show_pdf_data_status'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'texts')), ())","('Call', 3, 0)","_show_pdf_data_status,analysis_results,project_data,texts","data_sufficient = _show_pdf_data_status(project_data, analysis_results, texts)"
.\doc_output.py,89,data_sufficient,"('Const', 'False')","('Const',)",,data_sufficient = False
.\doc_output.py,111,data_sufficient,"('Const', 'False')","('Const',)",,data_sufficient = False
.\doc_output.py,113,data_sufficient,"('Const', 'True')","('Const',)",,data_sufficient = True
.\product_db.py,322,database.DB_PATH,"('Name', '_original_db_path_pdb')","('Name',)",_original_db_path_pdb,database.DB_PATH = _original_db_path_pdb
.\product_db.py,308,database.DB_PATH,"('Name', 'test_db_file')","('Name',)",test_db_file,database.DB_PATH = test_db_file
.\gui.py,728,database_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'database'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","database_module = import_module_with_fallback(""database"", import_errors)"
.\gui.py,82,database_module,"('Const', 'None')","('Const',)",,database_module: Optional[Any] = None
.\pdf_template_engine\placeholders.py,551,date_str,"('Call', ('Attr', 'datetime.now()', 'strftime'), (('Const', ""'%d.%m.%Y'""),), ())","('Call', 1, 0)",datetime,"date_str = datetime.now().strftime(""%d.%m.%Y"")"
.\pdf_template_engine\placeholders.py,553,date_str,"('Const', ""''"")","('Const',)",,"date_str = """""
.\analysis.py,2153,days,"('Call', ('Attr', ""get_text(texts, 'day_names_short_list_switcher', 'Mo,Di,Mi,Do,Fr,Sa,So')"", 'split'), (('Const', ""','""),), ())","('Call', 1, 0)","get_text,texts",days = get_text(
.\analysis.py,2157,days,"('List', (('Const', ""'Mo'""), ('Const', ""'Di'""), ('Const', ""'Mi'""), ('Const', ""'Do'""), ('Const', ""'Fr'""), ('Const', ""'Sa'""), ('Const', ""'So'"")))","('List', 7)",,"days = [""Mo"", ""Di"", ""Mi"", ""Do"", ""Fr"", ""Sa"", ""So""]"
.\pdf_erstellen_komplett.py,20,de_path,"('Div', ('Name', 'base_dir'), ('Const', ""'de.json'""))","('Div', ('Name',), ('Const',))",base_dir,"de_path = base_dir / ""de.json"""
.\tests\test_main_pdf.py,36,de_path,"('Div', ('Name', 'root'), ('Const', ""'de.json'""))","('Div', ('Name',), ('Const',))",root,de_path = root / 'de.json'
.\tools\test_main_pdf.py,36,de_path,"('Div', ('Name', 'root'), ('Const', ""'de.json'""))","('Div', ('Name',), ('Const',))",root,de_path = root / 'de.json'
.\solar_calculator.py,225,default_cap,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'details', 'get'), (('Const', ""'selected_storage_storage_power_kw'""), ('Const', '0.0')), ()), ('Const', '0.0'))),), ())","('Call', 1, 0)","details,float","default_cap = float(details.get('selected_storage_storage_power_kw', 0.0) or 0.0)"
.\solar_calculator.py,227,default_cap,"('Other', 'IfExp')","('Other', 'IfExp')",storage_capacity_from_model,default_cap = storage_capacity_from_model if storage_capacity_from_model > 0 else 5.0
.\admin_panel.py,917,default_cat_idx,"('Call', ('Attr', 'available_cats_form', 'index'), (('Name', 'current_cat_val'),), ())","('Call', 1, 0)","available_cats_form,current_cat_val",default_cat_idx = available_cats_form.index(current_cat_val)
.\admin_panel.py,914,default_cat_idx,"('Const', '0')","('Const',)",,default_cat_idx = 0
.\product_db.py,125,default_suffix,"('Const', ""' DEFAULT 0'"")","('Const',)",,"elif col_type == ""INTEGER"": default_suffix = "" DEFAULT 0"""
.\product_db.py,131,default_suffix,"('Const', ""' DEFAULT 0'"")","('Const',)",,"elif col_type == ""INTEGER"": default_suffix = "" DEFAULT 0"""
.\product_db.py,124,default_suffix,"('Const', ""' DEFAULT 0.0'"")","('Const',)",,"elif col_type == ""REAL"": default_suffix = "" DEFAULT 0.0"""
.\product_db.py,132,default_suffix,"('Const', ""' DEFAULT 0.0'"")","('Const',)",,"elif col_type == ""REAL"": default_suffix = "" DEFAULT 0.0"""
.\product_db.py,122,default_suffix,"('Const', ""' DEFAULT CURRENT_TIMESTAMP'"")","('Const',)",,"if col_name == ""created_at"" or col_name == ""updated_at"": default_suffix = "" DEFAULT CURRENT_TIMESTAMP"""
.\product_db.py,121,default_suffix,"('Const', ""''"")","('Const',)",,"default_suffix = """""
.\product_db.py,123,default_suffix,"('Const', '"" DEFAULT \'\'""')","('Const',)",,"elif col_type == ""TEXT"": default_suffix = "" DEFAULT ''"""
.\product_db.py,130,default_suffix,"('Const', '"" DEFAULT \'\'""')","('Const',)",,"if col_type == ""TEXT"": default_suffix = "" DEFAULT ''"""
.\calculations.py,4198,degradation_rate,"('Attr', 'self', 'annual_degradation')","('Attr',)",self,degradation_rate = self.annual_degradation
.\calculations.py,1322,degradation_rate,"('Call', ('Attr', 'lcoe_params', 'get'), (('Const', ""'degradation_rate'""), ('Const', '0.005')), ())","('Call', 2, 0)",lcoe_params,"degradation_rate = lcoe_params.get(""degradation_rate"", 0.005)"
.\calculations.py,641,degradation_rate,"('Const', '0.005')","('Const',)",,degradation_rate = 0.005  # 0.5% pro Jahr
.\analysis.py,9089,degradation_rate,"('Const', '0.5')","('Const',)",,degradation_rate = 0.5  # 0.5% pro Jahr
.\calculations.py,4196,degradation_rate,"('Mult', (('Const', '100'), ('Div', ('Sub', ('Name', 'current_power'), ('Name', 'next_power')), ('Name', 'current_power'))))","('Mult', (('Const',), ('Div', ('Sub', ('Name',), ('Name',)), ('Name',))))","current_power,next_power",degradation_rate = ((current_power - next_power) / current_power) * 100
.\admin_module_alias_mapping_ui.py,76,del_key,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'PDF-Spaltenname zum Löschen'""),), (('value', ('Const', ""''"")),))","('Call', 1, 1)",st,"del_key = st.text_input(""PDF-Spaltenname zum Löschen"", value="""")"
.\admin_panel.py,1107,del_key,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","WIDGET_KEY_SUFFIX,a,current_pid_attr","del_key = f""del_attr_{current_pid_attr}_{a.get('id')}{WIDGET_KEY_SUFFIX}"""
.\analysis.py,6501,description,"('Call', ('Attr', 'rec', 'get'), (('Const', ""'description'""), ('Const', ""'Keine Beschreibung verfügbar'"")), ())","('Call', 2, 0)",rec,"description = rec.get(""description"", ""Keine Beschreibung verfügbar"")"
.\heatpump_pricing.py,34,description,"('Const', ""''"")","('Const',)",,"description: str = """""
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,225,description,"('Const', ""''"")","('Const',)",,"description: str = """""
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,225,description,"('Const', ""''"")","('Const',)",,"description: str = """""
.\pdf_generator.py,1240,descriptions,"('Dict', (('KV', ('Const', ""'amortisation_chart_bytes'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'chart_desc_amortisation'""), ('Const', ""'💰 <b>Wie sich Ihre Investition zurückzahlt:</b> Diese Kurve ist Ihr persönlicher Finanzkompass! Sie zeigt, wie sich Ihre Anfangsinvestition Stück für Stück durch Ersparnisse und Einnahmen zurückzahlt. Je steiler die Kurve, desto schneller haben Sie Ihr Geld wieder drin. Und danach? Jahrelange Gewinne sind garantiert!'"")), ())), ('KV', ('Const', ""'break_even_chart_bytes'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'chart_desc_break_even'""), ('Const', '""🎯 <b>Ihr Zielsprint zur Gewinnschwelle:</b> Diese Kurve zeigt Ihren Weg zur \'schwarzen Null\' und darüber hinaus! Der Break-Even-Punkt ist wie die Ziellinie beim Marathon – ab hier läuft alles für Sie! Meist nach 8-12 Jahren ist es soweit: Von da an sind Sie 15+ Jahre im Plus. Das ist finanzielle Freiheit!""')), ())), ('KV', ('Const', ""'co2_savings_chart_bytes'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'chart_desc_co2_savings'""), ('Const', ""'🌱 <b>Ihr Beitrag für die nächste Generation:</b> Jede kWh Ihres Solarstroms ersetzt schmutzigen Kohlestrom! Diese Grafik zeigt nicht nur Zahlen, sondern Ihren echten Umweltbeitrag. Stolze [CO2-Menge] kg CO₂ weniger pro Jahr – das entspricht [Bäume-Anzahl] gepflanzten Bäumen! Sie investieren nicht nur in Ihre Finanzen, sondern in eine saubere Zukunft.'"")), ())), ('KV', ('Const', ""'consumption_coverage_pie_chart_bytes'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'chart_desc_consumption_coverage'""), ('Const', ""'🏠 <b>Ihr Grad der Energiefreiheit:</b> Dieses Kreisdiagramm zeigt, wie unabhängig Sie vom Stromnetz werden. Je größer der grüne Anteil, desto mehr Ihres Haushaltsstroms kommt direkt vom eigenen Dach. Das bedeutet weniger Abhängigkeit von Strompreiserhöhungen und mehr Kontrolle über Ihre Energiekosten. Ihre persönliche Energiewende visualisiert!'"")), ())), ('KV', ('Const', ""'cost_growth_switcher_chart_bytes'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'chart_desc_cost_growth'""), ('Const', ""'📈 <b>Steigende Strompreise – Ihr Vorteil wächst:</b> Während andere über teure Stromrechnungen stöhnen, profitieren Sie! Je mehr die Strompreise steigen, desto wertvoller wird jede selbst erzeugte kWh. Diese Projektion zeigt: Ihre PV-Anlage wird mit jedem Jahr noch rentabler. Sie haben heute die richtige Entscheidung getroffen!'"")), ())), ('KV', ('Const', ""'cost_projection_chart_bytes'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'chart_desc_cost_projection'""), ('Const', ""'💰 <b>Ihre finanzielle Zukunft im Blick:</b> Hier sehen Sie schwarz auf weiß, wie sich Ihre Stromkosten mit und ohne PV-Anlage entwickeln. Während herkömmliche Stromkosten Jahr für Jahr steigen, bleiben Sie mit Ihrer eigenen Solaranlage unabhängig von Preiserhöhungen. Die Schere öffnet sich zu Ihren Gunsten – je länger die Laufzeit, desto größer Ihre Ersparnis!'"")), ())), ('KV', ('Const', ""'cumulative_cashflow_chart_bytes'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'chart_desc_cumulative_cashflow'""), ('Const', '""📈 <b>Der Weg zu Ihrem persönlichen Gewinn:</b> Diese Kurve zeigt Ihren finanziellen Erfolgsweg. Anfangs investieren Sie, aber schon nach wenigen Jahren kehrt sich das Blatt: Ihre Anlage arbeitet für Sie und erwirtschaftet echte Gewinne. Der Break-Even-Punkt markiert den Beginn Ihrer \'kostenlosen\' Stromzeit – ab dann ist jede kWh reiner Gewinn für Sie!""')), ())), ('KV', ('Const', ""'daily_production_switcher_chart_bytes'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'chart_desc_daily_production'""), ('Const', '""🌅 <b>Ihr Kraftwerk im Tagesverlauf:</b> Erleben Sie, wie Ihre Anlage mit der Sonne \'aufwacht\' und arbeitet! Von den ersten Strahlen am Morgen bis zum Sonnenuntergang sehen Sie hier die natürliche Leistungskurve. Die Mittagsspitze zeigt Ihr maximales Potenzial – genau dann, wenn auch Ihr Haushalt oft am meisten Strom braucht. Perfektes Timing der Natur!""')), ())), ('KV', ('Const', ""'feed_in_revenue_switcher_chart_bytes'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'chart_desc_feed_in_revenue'""), ('Const', '""💶 <b>Ihre garantierten Einnahmen:</b> Das ist Ihr \'Gehalt\' vom Stromnetz! 20 Jahre lang bekommen Sie für jede eingespeiste kWh die staatlich garantierte Vergütung – ein sicheres Einkommen neben Ihrer Stromersparnis. Diese Kurve zeigt Ihnen, wie sich Ihre Einspeisevergütung über die Jahre summiert. Nebeneinkommen war nie so einfach!""')), ())), ('KV', ('Const', ""'investment_value_switcher_chart_bytes'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'chart_desc_investment_value'""), ('Const', ""'💎 <b>Mehr als nur Geld – Ihr Wertzuwachs:</b> Diese Darstellung zeigt den Gesamtwert Ihrer Investition: Finanzielle Rendite + Umweltnutzen + Unabhängigkeit + Immobilienwert-Steigerung. Eine PV-Anlage ist mehr als nur Technik – sie ist Ihre persönliche Energiewende mit messbaren Vorteilen auf allen Ebenen!'"")), ())), ('KV', ('Const', ""'monthly_prod_cons_chart_bytes'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'chart_desc_monthly_prod_cons'""), ('Const', ""'📊 <b>Ihr persönlicher Jahresrhythmus:</b> Diese Darstellung zeigt Ihnen, wie Ihre PV-Anlage im Einklang mit den Jahreszeiten arbeitet. In den sonnenreichen Sommermonaten erzeugen Sie deutlich mehr Strom als Sie verbrauchen – perfekt für hohe Einspeisevergütungen! Im Winter gleicht sich Produktion und Verbrauch harmonisch aus. So planen Sie Ihren Energiehaushalt optimal.'"")), ())), ('KV', ('Const', ""'prod_vs_cons_switcher_chart_bytes'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'chart_desc_prod_vs_cons'""), ('Const', ""'⚖️ <b>Das perfekte Gleichgewicht:</b> Hier sehen Sie das Zusammenspiel zwischen dem, was Sie erzeugen und dem, was Sie verbrauchen. Die ideale Balance bedeutet: wenig Strom einkaufen müssen und trotzdem schöne Überschüsse für die Einspeisung. Ihre Anlage ist so dimensioniert, dass Sie optimal zwischen Eigenverbrauch und Gewinnoptimierung navigieren!'"")), ())), ('KV', ('Const', ""'project_roi_matrix_switcher_chart_bytes'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'chart_desc_project_roi'""), ('Const', ""'📊 <b>Ihre Rendite-Sicherheit visualisiert:</b> Diese Matrix zeigt, wie robust Ihre Investition ist. Selbst bei verschiedenen Strompreisentwicklungen bleibt Ihre Rendite attraktiv – das nennt man eine sichere Anlage! Vergleichen Sie das mal mit Ihrem Sparbuch: Hier sehen Sie reale Werte zwischen 3-8% Rendite pro Jahr. Ihre Anlage ist eine Geldanlage mit Garantie!'"")), ())), ('KV', ('Const', ""'pv_usage_pie_chart_bytes'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'chart_desc_pv_usage'""), ('Const', ""'⚡ <b>Wohin fließt Ihr selbst erzeugter Strom:</b> Hier sehen Sie die clevere Aufteilung Ihres Solarstroms. Der blaue Bereich zeigt, was Sie direkt selbst nutzen (= sofortige Ersparnis), der orange Teil wird ins Netz eingespeist (= garantierte Vergütung). Jede selbst verbrauchte kWh spart Ihnen ca. 30 Cent, jede eingespeiste kWh bringt Ihnen sichere Einnahmen!'"")), ())), ('KV', ('Const', ""'roi_comparison_switcher_chart_bytes'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'chart_desc_roi_comparison'""), ('Const', ""'🏆 <b>Besser als jede Bank:</b> Hier sehen Sie Ihre PV-Rendite im Vergleich zu traditionellen Geldanlagen. Während Sparbücher kaum Zinsen bringen und die Inflation Ihr Geld entwertet, arbeitet Ihre Anlage mit 4-7% Rendite für Sie. Dazu kommt: Ihre Investition ist greifbar, auf Ihrem Dach und arbeitet 25+ Jahre zuverlässig!'"")), ())), ('KV', ('Const', ""'selfuse_stack_switcher_chart_bytes'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'chart_desc_selfuse_stack'""), ('Const', ""'🏠 <b>Eigenverbrauch ist bares Geld:</b> Jede selbst verbrauchte kWh ist wertvoller als eine eingespeiste! Diese gestapelte Darstellung zeigt Ihr optimales Verhältnis: Ein hoher blauer Bereich bedeutet direkte Kosteneinsparung, der orange Bereich bringt Ihnen die Einspeisevergütung. Die perfekte Mischung für maximalen finanziellen Vorteil!'"")), ())), ('KV', ('Const', ""'storage_effect_switcher_chart_bytes'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'chart_desc_storage_effect'""), ('Const', '""🔋 <b>Ihr persönlicher Energietresor:</b> Der Batteriespeicher macht Sie noch unabhängiger! Tagsüber \'tanken\' Sie Sonnenstrom, abends nutzen Sie ihn gemütlich beim Fernsehen oder Kochen. Diese Grafik zeigt, wie sich Ihr Eigenverbrauch durch den Speicher erhöht – weniger Netzbezug, mehr Ersparnis, mehr Autarkie!""')), ())), ('KV', ('Const', ""'weekly_production_switcher_chart_bytes'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'chart_desc_weekly_production'""), ('Const', ""'📅 <b>Ihre Wochenenergie im Überblick:</b> So arbeitet Ihre Anlage durch die ganze Woche für Sie! Interessant zu sehen: Auch am Wochenende, wenn Sie vielleicht mehr zu Hause sind, produziert Ihre Anlage zuverlässig. Die gleichmäßige Verteilung zeigt: Ihre Investition arbeitet 7 Tage die Woche ohne Pause für Ihren Geldbeutel.'"")), ())), ('KV', ('Const', ""'yearly_production_switcher_chart_bytes'""), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'chart_desc_yearly_production'""), ('Const', '""🗓️ <b>Ihr Energiejahr in 3D:</b> Hier erleben Sie die Kraft der Jahreszeiten! Die hohen Säulen im Sommer zeigen Ihre \'Erntezeit\' – jetzt sammeln Sie Energie für das ganze Jahr. Selbst in den schwächeren Wintermonaten arbeitet Ihre Anlage noch profitabel. Diese natürlichen Schwankungen sind eingeplant und machen Ihre Jahresrechnung trotzdem sehr positiv!""')), ()))))","('Dict', 19)","get_text,texts",descriptions = {
.\analysis.py,5239,descriptions,"('Dict', (('KV', ('Const', ""'discount'""), ('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_descriptions_discount_text'""), ('Const', ""''"")), ())), ('KV', ('Const', ""'miscellaneous'""), ('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_descriptions_miscellaneous_text'""), ('Const', ""''"")), ())), ('KV', ('Const', ""'rebates'""), ('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_descriptions_rebates_text'""), ('Const', ""''"")), ())), ('KV', ('Const', ""'special_agreements'""), ('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_special_agreements_text'""), ('Const', ""''"")), ())), ('KV', ('Const', ""'special_costs'""), ('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_descriptions_special_costs_text_unique'""), ('Const', ""''"")), ())), ('KV', ('Const', ""'surcharge'""), ('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_descriptions_surcharge_text'""), ('Const', ""''"")), ()))))","('Dict', 6)",st,descriptions = {
.\heatpump_pricing.py,135,details,"('Dict', (('KV', ('Const', ""'base_pct'""), ('Attr', 'cfg', 'base_pct')),))","('Dict', 1)",cfg,"details = {""base_pct"": cfg.base_pct}"
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,80,details,"('Dict', (('KV', ('Const', ""'base_pct'""), ('Attr', 'cfg', 'base_pct')),))","('Dict', 1)",cfg,"details = {""base_pct"": cfg.base_pct}"
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,80,details,"('Dict', (('KV', ('Const', ""'base_pct'""), ('Attr', 'cfg', 'base_pct')),))","('Dict', 1)",cfg,"details = {""base_pct"": cfg.base_pct}"
.\tools\import_module_attributes_generic.py,350,details,"('List', ())","('List', 0)",,"details: List[Dict[str, Any]] = []"
.\tools\import_module_attributes_generic.py,469,details,"('List', ())","('List', 0)",,"details: List[Dict[str, Any]] = []"
.\solar_calculator.py,80,details,"('Subscript', ('Name', 'pd'), ('Const', ""'project_details'""))","('Subscript',)",pd,"details: Dict[str, Any] = pd['project_details']"
.\admin_panel.py,672,detected_encoding,"('Const', 'None')","('Const',)",,"detected_encoding = None; encodings_to_try = ['utf-8', 'iso-8859-1', 'latin1', 'cp1252']"
.\admin_panel.py,678,detected_encoding,"('Name', 'enc')","('Name',)",enc,df_products_import = df_temp_auto; detected_encoding = enc; break
.\admin_panel.py,683,detected_encoding,"('Name', 'enc')","('Name',)",enc,df_products_import = df_temp_semicolon; detected_encoding = enc; break
.\notwendig oder nicht\excel_range_reader.py,74,df,"('Call', ('Attr', 'df', 'apply'), (('Attr', 'pd', 'to_numeric'),), (('errors', ('Const', ""'ignore'"")),))","('Call', 1, 1)","df,pd","df = df.apply(pd.to_numeric, errors=""ignore"")"
.\calculations.py,425,df,"('Call', ('Attr', 'df', 'set_index'), (('Subscript', ('Name', 'potential_index_cols'), ('Const', '0')),), ())","('Call', 1, 0)","df,potential_index_cols",df = df.set_index(potential_index_cols[0])
.\analysis.py,1187,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Dict', (('KV', ('Const', ""'labels'""), ('Subscript', ('Name', 'data'), ('Const', ""'labels'""))), ('KV', ('Const', ""'values'""), ('Subscript', ('Name', 'data'), ('Const', ""'values'""))))),), ())","('Call', 1, 0)","data,pd","df = pd.DataFrame({""labels"": data[""labels""], ""values"": data[""values""]})"
.\analysis.py,1335,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Dict', (('KV', ('Const', ""'labels'""), ('Subscript', ('Name', 'data'), ('Const', ""'labels'""))), ('KV', ('Const', ""'values'""), ('Subscript', ('Name', 'data'), ('Const', ""'values'""))))),), ())","('Call', 1, 0)","data,pd","df = pd.DataFrame({""labels"": data[""labels""], ""values"": data[""values""]})"
.\analysis.py,1144,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Dict', (('KV', ('Const', ""'x'""), ('Subscript', ('Name', 'data'), ('Const', ""'x'""))), ('KV', ('Const', ""'y'""), ('Subscript', ('Name', 'data'), ('Const', ""'y'""))))),), ())","('Call', 1, 0)","data,pd","df = pd.DataFrame({""x"": data[""x""], ""y"": data[""y""]})"
.\analysis.py,1326,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Dict', (('KV', ('Const', ""'x'""), ('Subscript', ('Name', 'data'), ('Const', ""'x'""))), ('KV', ('Const', ""'y'""), ('Subscript', ('Name', 'data'), ('Const', ""'y'""))))),), ())","('Call', 1, 0)","data,pd","df = pd.DataFrame({""x"": data[""x""], ""y"": data[""y""]})"
.\notwendig oder nicht\excel_range_reader.py,71,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'data'),), (('columns', ('Name', 'cols')),))","('Call', 1, 1)","cols,data,pd","df = pd.DataFrame(data, columns=cols)"
.\admin_logo_management_ui.py,231,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'df_data'),), ())","('Call', 1, 0)","df_data,pd",df = pd.DataFrame(df_data)
.\analysis.py,1431,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'df_data'),), ())","('Call', 1, 0)","df_data,pd",df = pd.DataFrame(df_data)
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,224,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'df_data'),), ())","('Call', 1, 0)","df_data,pd",df = pd.DataFrame(df_data)
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,275,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'df_data'),), ())","('Call', 1, 0)","df_data,pd",df = pd.DataFrame(df_data)
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,224,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'df_data'),), ())","('Call', 1, 0)","df_data,pd",df = pd.DataFrame(df_data)
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,275,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'df_data'),), ())","('Call', 1, 0)","df_data,pd",df = pd.DataFrame(df_data)
.\admin_logo_positions_ui.py,183,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'table_data'),), ())","('Call', 1, 0)","pd,table_data",df = pd.DataFrame(table_data)
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_positions_ui.py.insert.py,158,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'table_data'),), ())","('Call', 1, 0)","pd,table_data",df = pd.DataFrame(table_data)
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_positions_ui.py.insert.py,159,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'table_data'),), ())","('Call', 1, 0)","pd,table_data",df = pd.DataFrame(table_data)
.\tools\out_selected\patches\admin_logo_positions_ui.py.insert.py,158,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'table_data'),), ())","('Call', 1, 0)","pd,table_data",df = pd.DataFrame(table_data)
.\tools\portings\patches\admin_logo_positions_ui.py.insert.py,159,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'table_data'),), ())","('Call', 1, 0)","pd,table_data",df = pd.DataFrame(table_data)
.\notwendig oder nicht\excel_range_reader.py,73,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'vals'),), ())","('Call', 1, 0)","pd,vals",df = pd.DataFrame(vals)
.\excel_eval.py,226,df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Other', 'ListComp'),), ())","('Call', 1, 0)","pd,r,rows",df = pd.DataFrame([{
.\calculations.py,401,df,"('Call', ('Attr', 'pd', 'read_csv'), (('Name', 'csv_file_like'),), (('comment', ('Const', ""'#'"")), ('decimal', ('Const', ""','"")), ('index_col', ('Const', '0')), ('sep', ('Const', ""';'"")), ('thousands', ('Const', ""'.'""))))","('Call', 1, 5)","csv_file_like,pd",df = pd.read_csv(
.\calculations.py,436,df,"('Call', ('Attr', 'pd', 'read_csv'), (('Name', 'csv_file_like'),), (('comment', ('Const', ""'#'"")), ('decimal', ('Const', ""','"")), ('index_col', ('Const', '0')), ('sep', ('Const', ""';'"")), ('thousands', ('Const', ""'.'""))))","('Call', 1, 5)","csv_file_like,pd",df = pd.read_csv(
.\tools\import_module_attributes_generic.py,398,df,"('Call', ('Attr', 'pd', 'read_csv'), (('Name', 'path'),), (('engine', ('Const', ""'python'"")), ('sep', ('Const', 'None'))))","('Call', 1, 2)","path,pd","df = pd.read_csv(path, sep=None, engine='python')"
.\tools\import_module_attributes_generic.py,401,df,"('Call', ('Attr', 'pd', 'read_csv'), (('Name', 'path'),), (('sep', ('Const', ""';'"")),))","('Call', 1, 1)","path,pd","df = pd.read_csv(path, sep=';')"
.\admin_panel.py,168,df,"('Call', ('Attr', 'pd', 'read_excel'), (('Name', 'excel_file_like'),), (('header', ('Const', '0')), ('index_col', ('Const', '0'))))","('Call', 1, 2)","excel_file_like,pd","df = pd.read_excel(excel_file_like, index_col=0, header=0)"
.\calculations.py,510,df,"('Call', ('Attr', 'pd', 'read_excel'), (('Name', 'excel_file_like'),), (('header', ('Const', '0')), ('index_col', ('Const', '0'))))","('Call', 1, 2)","excel_file_like,pd","df = pd.read_excel(excel_file_like, index_col=0, header=0)"
.\tools\xlsx_validator.py,20,df,"('Call', ('Attr', 'pd', 'read_excel'), (('Name', 'file_path'),), ())","('Call', 1, 0)","file_path,pd",df = pd.read_excel(file_path)
.\dev_tools\kakerlake_ultra_cleaner.py,521,df,"('Call', ('Attr', 'pd.DataFrame(rows)', 'sort_values'), (('Const', ""'path'""),), ())","('Call', 1, 0)","pd,rows","df=pd.DataFrame(rows).sort_values(""path"")"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,408,df,"('Call', ('Attr', 'pd.DataFrame(rows)', 'sort_values'), (('Const', ""'path'""),), ())","('Call', 1, 0)","pd,rows","df=pd.DataFrame(rows).sort_values(""path"")"
.\mnt\data\kakerlake_ultra_cleaner.py,521,df,"('Call', ('Attr', 'pd.DataFrame(rows)', 'sort_values'), (('Const', ""'path'""),), ())","('Call', 1, 0)","pd,rows","df=pd.DataFrame(rows).sort_values(""path"")"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,408,df,"('Call', ('Attr', 'pd.DataFrame(rows)', 'sort_values'), (('Const', ""'path'""),), ())","('Call', 1, 0)","pd,rows","df=pd.DataFrame(rows).sort_values(""path"")"
.\tools\kakerlake_ultra_cleaner.py,522,df,"('Call', ('Attr', 'pd.DataFrame(rows)', 'sort_values'), (('Const', ""'path'""),), ())","('Call', 1, 0)","pd,rows","df=pd.DataFrame(rows).sort_values(""path"")"
.\notwendig oder nicht\excel_range_reader.py,41,df,"('Call', ('Attr', 'pd.read_csv(path, dtype=str)', 'fillna'), (('Const', ""''""),), ())","('Call', 1, 0)","path,pd,str","df = pd.read_csv(path, dtype=str).fillna("""")"
.\notwendig oder nicht\excel_range_reader.py,45,df,"('Call', ('Name', '_load_sheet_cells'), (('Name', 'sheet_name'),), ())","('Call', 1, 0)","_load_sheet_cells,sheet_name",df = _load_sheet_cells(sheet_name)
.\admin_panel.py,177,df,"('Subscript', ('Name', 'df'), ('Call', ('Attr', 'df.index', 'notna'), (), ()))","('Subscript',)",df,df = df[df.index.notna()]
.\calculations.py,457,df,"('Subscript', ('Name', 'df'), ('Call', ('Attr', 'df.index', 'notna'), (), ()))","('Subscript',)",df,df = df[df.index.notna()]
.\calculations.py,518,df,"('Subscript', ('Name', 'df'), ('Call', ('Attr', 'df.index', 'notna'), (), ()))","('Subscript',)",df,df = df[df.index.notna()]
.\admin_panel.py,181,df.index,"('Call', ('Attr', 'df.index', 'astype'), (('Name', 'int'),), ())","('Call', 1, 0)","df,int",df.index = df.index.astype(int)
.\calculations.py,465,df.index,"('Call', ('Attr', 'df.index', 'astype'), (('Name', 'int'),), ())","('Call', 1, 0)","df,int",df.index = df.index.astype(int)
.\calculations.py,524,df.index,"('Call', ('Attr', 'df.index', 'astype'), (('Name', 'int'),), ())","('Call', 1, 0)","df,int",df.index = df.index.astype(int)
.\admin_panel.py,176,df.index,"('Call', ('Attr', 'pd', 'to_numeric'), (('Attr', 'df', 'index'),), (('errors', ('Const', ""'coerce'"")),))","('Call', 1, 1)","df,pd","df.index = pd.to_numeric(df.index, errors='coerce')"
.\calculations.py,456,df.index,"('Call', ('Attr', 'pd', 'to_numeric'), (('Attr', 'df', 'index'),), (('errors', ('Const', ""'coerce'"")),))","('Call', 1, 1)","df,pd","df.index = pd.to_numeric(df.index, errors=""coerce"")"
.\calculations.py,517,df.index,"('Call', ('Attr', 'pd', 'to_numeric'), (('Attr', 'df', 'index'),), (('errors', ('Const', ""'coerce'"")),))","('Call', 1, 1)","df,pd","df.index = pd.to_numeric(df.index, errors=""coerce"")"
.\analysis.py,1425,df_data,"('Dict', (('KV', ('Const', ""'Kategorie'""), ('Name', 'categories')),))","('Dict', 1)",categories,"df_data = {""Kategorie"": categories}"
.\admin_logo_management_ui.py,221,df_data,"('List', ())","('List', 0)",,df_data = []
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,214,df_data,"('List', ())","('List', 0)",,df_data = []
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,265,df_data,"('List', ())","('List', 0)",,df_data = []
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,214,df_data,"('List', ())","('List', 0)",,df_data = []
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,265,df_data,"('List', ())","('List', 0)",,df_data = []
.\admin_panel.py,668,df_products_import,"('Call', ('Attr', 'pd', 'read_excel'), (('Name', 'uploaded_product_file_bulk'),), (('engine', ('Const', ""'openpyxl'"")),))","('Call', 1, 1)","pd,uploaded_product_file_bulk","df_products_import = pd.read_excel(uploaded_product_file_bulk, engine='openpyxl')"
.\admin_panel.py,666,df_products_import,"('Const', 'None')","('Const',)",,df_products_import = None
.\admin_panel.py,685,df_products_import,"('Const', 'None')","('Const',)",,df_products_import = None
.\admin_panel.py,678,df_products_import,"('Name', 'df_temp_auto')","('Name',)",df_temp_auto,df_products_import = df_temp_auto; detected_encoding = enc; break
.\admin_panel.py,683,df_products_import,"('Name', 'df_temp_semicolon')","('Name',)",df_temp_semicolon,df_products_import = df_temp_semicolon; detected_encoding = enc; break
.\notwendig oder nicht\wichtig\repo_porter.py,171,di,"('Call', ('Name', 'DefInfo'), (), (('decorators', ('Call', ('Name', 'collect_decorator_lines'), (('Name', 'n'),), ())), ('depends_on_local', ('Call', ('Name', 'collect_name_reads'), (('Name', 'n'),), ())), ('end_lineno', ('Other', 'IfExp')), ('import_lines', ('Name', 'imports')), ('kind', ('Const', ""'func'"")), ('lineno', ('Other', 'IfExp')), ('module_rel', ('Name', 'mod_rel')), ('name', ('Attr', 'n', 'name')), ('parent_class', ('Const', 'None')), ('qualname', ('Attr', 'n', 'name')), ('signature_hint', ('Call', ('Name', 'node_signature'), (('Name', 'n'),), ()))))","('Call', 0, 11)","DefInfo,collect_decorator_lines,collect_name_reads,hasattr,imports,mod_rel,n,node_signature",di = DefInfo(
.\tools\repo_porter.py,171,di,"('Call', ('Name', 'DefInfo'), (), (('decorators', ('Call', ('Name', 'collect_decorator_lines'), (('Name', 'n'),), ())), ('depends_on_local', ('Call', ('Name', 'collect_name_reads'), (('Name', 'n'),), ())), ('end_lineno', ('Other', 'IfExp')), ('import_lines', ('Name', 'imports')), ('kind', ('Const', ""'func'"")), ('lineno', ('Other', 'IfExp')), ('module_rel', ('Name', 'mod_rel')), ('name', ('Attr', 'n', 'name')), ('parent_class', ('Const', 'None')), ('qualname', ('Attr', 'n', 'name')), ('signature_hint', ('Call', ('Name', 'node_signature'), (('Name', 'n'),), ()))))","('Call', 0, 11)","DefInfo,collect_decorator_lines,collect_name_reads,hasattr,imports,mod_rel,n,node_signature",di = DefInfo(
.\notwendig oder nicht\wichtig\repo_porter.py,378,di,"('Subscript', ('Attr', 'mi', 'classes'), ('Name', 'n'))","('Subscript',)","mi,n",di = mi.classes[n]
.\notwendig oder nicht\wichtig\repo_porter.py,390,di,"('Subscript', ('Attr', 'mi', 'classes'), ('Name', 'n'))","('Subscript',)","mi,n",di = mi.classes[n]
.\tools\repo_porter.py,378,di,"('Subscript', ('Attr', 'mi', 'classes'), ('Name', 'n'))","('Subscript',)","mi,n",di = mi.classes[n]
.\tools\repo_porter.py,390,di,"('Subscript', ('Attr', 'mi', 'classes'), ('Name', 'n'))","('Subscript',)","mi,n",di = mi.classes[n]
.\notwendig oder nicht\wichtig\repo_porter.py,375,di,"('Subscript', ('Attr', 'mi', 'top_funcs'), ('Name', 'n'))","('Subscript',)","mi,n",di = mi.top_funcs[n]
.\notwendig oder nicht\wichtig\repo_porter.py,387,di,"('Subscript', ('Attr', 'mi', 'top_funcs'), ('Name', 'n'))","('Subscript',)","mi,n",di = mi.top_funcs[n]
.\tools\repo_porter.py,375,di,"('Subscript', ('Attr', 'mi', 'top_funcs'), ('Name', 'n'))","('Subscript',)","mi,n",di = mi.top_funcs[n]
.\tools\repo_porter.py,387,di,"('Subscript', ('Attr', 'mi', 'top_funcs'), ('Name', 'n'))","('Subscript',)","mi,n",di = mi.top_funcs[n]
.\pdf_template_engine\placeholders.py,942,direct_cover_pct,"('Call', ('Name', '_parse_pct_str'), (('Call', ('Attr', 'result', 'get'), (('Const', ""'direct_cover_consumption_percent_number'""),), ()),), ())","('Call', 1, 0)","_parse_pct_str,result","direct_cover_pct = _parse_pct_str(result.get(""direct_cover_consumption_percent_number""))  # Zahl ohne %"
.\pdf_template_engine\placeholders.py,899,direct_cover_pct,"('Div', ('Mult', (('Call', ('Name', 'max'), (('Const', '0.0'), ('Call', ('Name', 'min'), (('Name', 'direct_sc_sum'), ('Name', 'cons_total')), ())), ()), ('Const', '100.0'))), ('Name', 'cons_total'))","('Div', ('Mult', (('Call', 2, 0), ('Const',))), ('Name',))","cons_total,direct_sc_sum,max,min","direct_cover_pct = 100.0 * max(0.0, min(direct_sc_sum, cons_total)) / cons_total"
.\calculations.py,2788,direct_fraction,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'global_constants', 'get'), (('Const', ""'direct_sc_fraction_cap'""), ('Const', '0.35')), ()), ('Const', '0.35'))),), ())","('Call', 1, 0)","float,global_constants","direct_fraction = float(global_constants.get(""direct_sc_fraction_cap"", 0.35) or 0.35)"
.\calculations.py,2790,direct_fraction,"('Const', '0.05')","('Const',)",,direct_fraction = 0.05
.\calculations.py,2792,direct_fraction,"('Const', '0.85')","('Const',)",,direct_fraction = 0.85
.\pdf_template_engine\placeholders.py,874,direct_int,"('Call', ('Name', 'int'), (('Call', ('Name', 'round'), (('Mult', (('Const', '100.0'), ('Name', 'direct_raw'))),), ()),), ())","('Call', 1, 0)","direct_raw,int,round",direct_int = int(round(direct_raw * 100.0))
.\pdf_template_engine\placeholders.py,883,direct_int,"('Call', ('Name', 'max'), (('Const', '0'), ('Sub', ('Name', 'direct_int'), ('Name', 'over'))), ())","('Call', 2, 0)","direct_int,max,over","direct_int = max(0, direct_int - over)"
.\pdf_template_engine\placeholders.py,2120,direct_kwh,"('BoolOp', 'Or', (('Call', ('Name', '_pf'), (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'annual_direct_self_consumption_kwh'""),), ()),), ()), ('Call', ('Name', '_pf'), (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'direct_self_consumption_kwh'""),), ()),), ())))","('BoolOp', 'Or', 2)","_pf,analysis_results","direct_kwh = _pf(analysis_results.get(""direct_self_consumption_kwh"")) or _pf(analysis_results.get(""annual_direct_self_consumption_kwh""))"
.\pdf_template_engine\placeholders.py,2126,direct_kwh,"('Call', ('Name', 'max'), (('Const', '0.0'), ('Sub', ('Name', 'eigenv_total'), ('Name', 'batt_dis_tmp'))), ())","('Call', 2, 0)","batt_dis_tmp,eigenv_total,max","direct_kwh = max(0.0, eigenv_total - batt_dis_tmp)"
.\pdf_template_engine\placeholders.py,1132,direct_kwh,"('Other', 'IfExp')","('Other', 'IfExp')","float,monthly_direct_sc,sum,x",direct_kwh = sum(float(x or 0) for x in monthly_direct_sc) if monthly_direct_sc else 0.0
.\pdf_template_engine\placeholders.py,791,direct_sc_sum,"('Call', ('Name', 'min'), (('Name', 'direct_sc_sum'), ('Call', ('Name', 'max'), (('Const', '0.0'), ('Name', 'annual_prod_float')), ())), ())","('Call', 2, 0)","annual_prod_float,direct_sc_sum,max,min","direct_sc_sum = min(direct_sc_sum, max(0.0, annual_prod_float))"
.\pdf_template_engine\placeholders.py,793,direct_sc_sum,"('Call', ('Name', 'min'), (('Name', 'direct_sc_sum'), ('Call', ('Name', 'max'), (('Const', '0.0'), ('Name', 'cons_total')), ())), ())","('Call', 2, 0)","cons_total,direct_sc_sum,max,min","direct_sc_sum = min(direct_sc_sum, max(0.0, cons_total))"
.\pdf_template_engine\placeholders.py,767,direct_sc_sum,"('Call', ('Name', 'sum'), (('Other', 'GeneratorExp'),), ())","('Call', 1, 0)","float,monthly_direct_sc,sum,v",direct_sc_sum = sum(float(v or 0) for v in monthly_direct_sc)
.\calculations.py,2827,discharge_potential,"('Call', ('Name', 'min'), (('Name', 'shifted_portion'), ('Name', 'speicher_ladung_netto')), ())","('Call', 2, 0)","min,shifted_portion,speicher_ladung_netto","discharge_potential = min(shifted_portion, speicher_ladung_netto)"
.\calculations.py,2820,discharge_potential,"('Name', 'rest_verbrauch')","('Name',)",rest_verbrauch,discharge_potential = rest_verbrauch
.\pdf_template_engine\placeholders.py,776,discharge_sc_sum,"('Call', ('Name', 'float'), (('Name', 'battery_expected_annual_kwh'),), ())","('Call', 1, 0)","battery_expected_annual_kwh,float",discharge_sc_sum = float(battery_expected_annual_kwh)
.\pdf_template_engine\placeholders.py,800,discharge_sc_sum,"('Call', ('Name', 'min'), (('Name', 'discharge_sc_sum'), ('Call', ('Name', 'max'), (('Const', '0.0'), ('Sub', ('Name', 'cons_total'), ('Name', 'direct_sc_sum'))), ())), ())","('Call', 2, 0)","cons_total,direct_sc_sum,discharge_sc_sum,max,min","discharge_sc_sum = min(discharge_sc_sum, max(0.0, cons_total - direct_sc_sum))"
.\pdf_template_engine\placeholders.py,801,discharge_sc_sum,"('Call', ('Name', 'min'), (('Name', 'discharge_sc_sum'), ('Name', 'charge_sum')), ())","('Call', 2, 0)","charge_sum,discharge_sc_sum,min","discharge_sc_sum = min(discharge_sc_sum, charge_sum)"
.\pdf_template_engine\placeholders.py,769,discharge_sc_sum,"('Call', ('Name', 'sum'), (('Other', 'GeneratorExp'),), ())","('Call', 1, 0)","float,monthly_storage_discharge_sc,sum,v",discharge_sc_sum = sum(float(v or 0) for v in monthly_storage_discharge_sc)
.\multi_offer_generator_old.py,1065,discount,"('Div', ('Mult', (('Name', 'base'), ('Subscript', ('Subscript', ('Name', 'config'), ('Const', ""'custom_pricing'"")), ('Const', ""'discount_percent'"")))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Subscript',))), ('Const',))","base,config",discount = base * config['custom_pricing']['discount_percent'] / 100
.\multi_offer_generator_old.py,1144,discount,"('Div', ('Mult', (('Name', 'base_price'), ('Subscript', ('Subscript', ('Name', 'config'), ('Const', ""'custom_pricing'"")), ('Const', ""'discount_percent'"")))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Subscript',))), ('Const',))","base_price,config",discount = base_price * config['custom_pricing']['discount_percent'] / 100
.\live_preview_helpers.py,29,discount_percent,"('Call', ('Attr', 'modifications', 'get'), (('Const', ""'discount_percent'""), ('Const', '0.0')), ())","('Call', 2, 0)",modifications,"discount_percent = modifications.get('discount_percent', 0.0)"
.\analysis.py,299,discount_percent,"('Call', ('Attr', 'st', 'slider'), (('Const', ""'Rabatt (%)'""),), (('help', ('Const', ""'Prozentualer Rabatt auf den Nettobetrag'"")), ('key', ('Const', ""'pricing_modifications_discount_slider'"")), ('max_value', ('Const', '50.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '0.5')), ('value', ('Const', '0.0'))))","('Call', 1, 6)",st,discount_percent = st.slider(
.\analysis.py,5226,discount_percent,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_discount_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,discount_percent = st.session_state.get(
.\gui.py,152,discount_percent,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_discount_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,"discount_percent = st.session_state.get(""pricing_modifications_discount_slider"", 0.0)"
.\pdf_ui.py,100,discount_percent,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_discount_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,"discount_percent = st.session_state.get(""pricing_modifications_discount_slider"", 0.0)"
.\calculations.py,1320,discount_rate,"('Call', ('Attr', 'lcoe_params', 'get'), (('Const', ""'discount_rate'""), ('Const', '0.04')), ())","('Call', 2, 0)",lcoe_params,"discount_rate = lcoe_params.get(""discount_rate"", 0.04)"
.\calculations.py,1772,discount_rate,"('Call', ('Attr', 'np.random', 'normal'), (('Const', '0.04'), ('Const', '0.01')), ())","('Call', 2, 0)",np,"discount_rate = np.random.normal(0.04, 0.01)"
.\analysis.py,8827,discount_rate,"('Const', '0.04')","('Const',)",,discount_rate = 0.04  # 4%
.\crm_dashboard_ui.py,162,display_df,"('Call', ('Attr', 'df_customers[available_columns]', 'rename'), (), (('columns', ('Name', 'column_mapping')),))","('Call', 0, 1)","available_columns,column_mapping,df_customers",display_df = df_customers[available_columns].rename(columns=column_mapping)
.\crm_dashboard_ui.py,179,display_df,"('Subscript', ('Name', 'display_df'), ('Name', 'mask'))","('Subscript',)","display_df,mask",display_df = display_df[mask]
.\pdf_zu_markdown.py,21,doc,"('Call', ('Attr', 'fitz', 'open'), (('Name', 'INPUT_PDF'),), ())","('Call', 1, 0)","INPUT_PDF,fitz",doc = fitz.open(INPUT_PDF)
.\teilen.py,21,doc,"('Call', ('Attr', 'fitz', 'open'), (('Name', 'INPUT_PDF'),), ())","('Call', 1, 0)","INPUT_PDF,fitz",doc = fitz.open(INPUT_PDF)
.\utils\remove_text.py,16,doc,"('Call', ('Attr', 'fitz', 'open'), (('Name', 'pdf_in'),), ())","('Call', 1, 0)","fitz,pdf_in",doc = fitz.open(pdf_in)
.\utils\export_coords.py,14,doc,"('Call', ('Attr', 'pdfplumber', 'open'), (('Name', 'pdf_file'),), ())","('Call', 1, 0)","pdf_file,pdfplumber",doc = pdfplumber.open(pdf_file)
.\pdf_generator.py,147,doc,"('Call', ('Name', 'SimpleDocTemplate'), (('Attr', 'self', 'filename'),), (('bottomMargin', ('Mult', (('Const', '3'), ('Name', 'cm')))), ('leftMargin', ('Mult', (('Const', '2'), ('Name', 'cm')))), ('pagesize', ('Name', 'A4')), ('rightMargin', ('Mult', (('Const', '2'), ('Name', 'cm')))), ('topMargin', ('Mult', (('Const', '3'), ('Name', 'cm'))))))","('Call', 1, 5)","A4,SimpleDocTemplate,cm,self","doc = SimpleDocTemplate(self.filename, pagesize=A4,"
.\pdf_generator.py,3065,doc,"('Call', ('Name', 'SimpleDocTemplate'), (('Name', 'buffer'),), (('bottomMargin', ('Mult', (('Const', '2'), ('Name', 'cm')))), ('pagesize', ('Name', 'A4')), ('topMargin', ('Mult', (('Const', '2'), ('Name', 'cm'))))))","('Call', 1, 3)","A4,SimpleDocTemplate,buffer,cm","doc = SimpleDocTemplate(buffer, pagesize=A4, topMargin=2*cm, bottomMargin=2*cm)"
.\pdf_helpers.py,189,doc,"('Call', ('Name', 'SimpleDocTemplate'), (('Name', 'buffer'),), (('bottomMargin', ('Mult', (('Const', '3'), ('Name', 'cm')))), ('leftMargin', ('Mult', (('Const', '2'), ('Name', 'cm')))), ('pagesize', ('Name', 'A4')), ('rightMargin', ('Mult', (('Const', '2'), ('Name', 'cm')))), ('topMargin', ('Mult', (('Const', '3'), ('Name', 'cm'))))))","('Call', 1, 5)","A4,SimpleDocTemplate,buffer,cm",doc = SimpleDocTemplate(
.\tools\pv_berechnungen_50.py,198,doc,"('Call', ('Name', 'SimpleDocTemplate'), (('Name', 'filename'),), (('bottomMargin', ('Mult', (('Const', '2'), ('Name', 'cm')))), ('leftMargin', ('Mult', (('Const', '2'), ('Name', 'cm')))), ('pagesize', ('Name', 'A4')), ('rightMargin', ('Mult', (('Const', '2'), ('Name', 'cm')))), ('topMargin', ('Mult', (('Const', '2'), ('Name', 'cm'))))))","('Call', 1, 5)","A4,SimpleDocTemplate,cm,filename","doc = SimpleDocTemplate(filename, pagesize=A4,"
.\pdf_generator.py,1883,doc,"('Call', ('Name', 'SimpleDocTemplate'), (('Name', 'main_offer_buffer'),), (('author', ('Call', ('Attr', 'company_info', 'get'), (('Const', ""'name'""), ('Const', ""'SolarFirma'"")), ())), ('bottomMargin', ('Mult', (('Const', '2.5'), ('Name', 'cm')))), ('leftMargin', ('Mult', (('Const', '2'), ('Name', 'cm')))), ('pagesize', ('Attr', 'pagesizes', 'A4')), ('rightMargin', ('Mult', (('Const', '2'), ('Name', 'cm')))), ('title', ('Call', ('Attr', ""get_text(texts, 'pdf_offer_title_doc_param', 'Angebot: Photovoltaikanlage')"", 'format'), (), (('offer_number', ('Name', 'offer_number_final')),))), ('topMargin', ('Mult', (('Const', '2.5'), ('Name', 'cm'))))))","('Call', 1, 7)","SimpleDocTemplate,cm,company_info,get_text,main_offer_buffer,offer_number_final,pagesizes,texts","doc = SimpleDocTemplate(main_offer_buffer, title=get_text(texts, ""pdf_offer_title_doc_param"", ""Angebot: Photovoltaikanlage"").format(offer_number=offer_number_final),"
.\gui.py,735,doc_output_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'pdf_ui'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","doc_output_module = import_module_with_fallback(""pdf_ui"", import_errors)"
.\gui.py,89,doc_output_module,"('Const', 'None')","('Const',)",,doc_output_module: Optional[Any] = None
.\multi_offer_generator.py,1093,docs,"('BoolOp', 'Or', (('Call', ('Name', 'list_company_documents'), (('Call', ('Attr', 'company', 'get'), (('Const', ""'id'""), ('Const', '0')), ()), ('Const', 'None')), ()), ('List', ())))","('BoolOp', 'Or', 2)","company,list_company_documents","docs = list_company_documents(company.get(""id"", 0), None) or []"
.\check_companies.py,42,docs,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,docs = cursor.fetchall()
.\crm.py,488,docs,"('Call', ('Name', '_list_customer_documents_db'), (('Subscript', ('Name', 'current_customer'), ('Const', ""'id'"")),), ())","('Call', 1, 0)","_list_customer_documents_db,current_customer",docs = _list_customer_documents_db(current_customer['id'])
.\pdf_ui.py,76,docs,"('Call', ('Name', 'db_list_company_documents_func'), (('Name', 'active_company_id'), ('Const', 'None')), ())","('Call', 2, 0)","active_company_id,db_list_company_documents_func","docs = db_list_company_documents_func(active_company_id, None)"
.\crm.py,486,docs,"('List', ())","('List', 0)",,"docs: List[Dict[str, Any]] = []"
.\dev_tools\kakerlake_ultra_cleaner.py,551,docs,"('List', ())","('List', 0)",,docs=[]
.\dev_tools\kakerlake_ultra_cleaner.py,556,docs,"('List', ())","('List', 0)",,except Exception: docs=[]
.\mnt\data\kakerlake_ultra_cleaner.py,551,docs,"('List', ())","('List', 0)",,docs=[]
.\mnt\data\kakerlake_ultra_cleaner.py,556,docs,"('List', ())","('List', 0)",,except Exception: docs=[]
.\tools\kakerlake_ultra_cleaner.py,552,docs,"('List', ())","('List', 0)",,docs=[]
.\tools\kakerlake_ultra_cleaner.py,557,docs,"('List', ())","('List', 0)",,except Exception: docs=[]
.\admin_product_attributes_ui.py,65,dord,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Reihenfolge'""),), (('step', ('Const', '1')), ('value', ('Const', '0'))))","('Call', 1, 2)",st,"dord = st.number_input(""Reihenfolge"", value=0, step=1)"
.\product_attributes.py,256,dord,"('Call', ('Name', 'int'), (('BoolOp', 'Or', (('Call', ('Attr', 'row', 'get'), (('Const', ""'display_order'""),), ()), ('Const', '0'))),), ())","('Call', 1, 0)","int,row",dord = int(row.get('display_order') or 0)
.\product_attributes.py,258,dord,"('Const', '0')","('Const',)",,dord = 0
.\pdf_generator.py,1224,draw_function,"('Call', ('Attr', 'MODULE_MAP', 'get'), (('Name', 'module_id'),), ())","('Call', 1, 0)","MODULE_MAP,module_id",draw_function = MODULE_MAP.get(module_id)
.\pdf_generator.py,158,draw_function,"('Call', ('Attr', 'module_map', 'get'), (('Name', 'module_id'),), ())","('Call', 1, 0)","module_id,module_map",draw_function = module_map.get(module_id)
.\pdf_template_engine\dynamic_overlay.py,452,draw_x,"('Const', '0')","('Const',)",,draw_x = 0
.\pdf_template_engine\dynamic_overlay.py,449,draw_x,"('Name', 'x0')","('Name',)",x0,draw_x = x0
.\pdf_template_engine\dynamic_overlay.py,453,draw_y,"('Const', '0')","('Const',)",,draw_y = 0
.\pdf_template_engine\dynamic_overlay.py,450,draw_y,"('Sub', ('Name', 'page_height'), ('Name', 'y1'))","('Sub', ('Name',), ('Name',))","page_height,y1",draw_y = page_height - y1
.\pdf_template_engine\dynamic_overlay.py,553,draw_y,"('Sub', ('Name', 'page_height'), ('Name', 'y1'))","('Sub', ('Name',), ('Name',))","page_height,y1",draw_y = page_height - y1
.\notwendig oder nicht\wichtig\repo_porter_select.py,120,dst,"('Call', ('Attr', 'Path(args.out)', 'resolve'), (), ())","('Call', 0, 0)","Path,args",dst = Path(args.out).resolve()
.\tools\repo_porter_select.py,120,dst,"('Call', ('Attr', 'Path(args.out)', 'resolve'), (), ())","('Call', 0, 0)","Path,args",dst = Path(args.out).resolve()
.\admin_module_alias_mapping_ui.py,61,dst,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Kanonischer Key'""),), (('help', ('Const', ""'z. B. cell_technology, module_structure, cell_type, version, model_name, brand, capacity_w ...'"")),))","('Call', 1, 1)",st,"dst = st.text_input(""Kanonischer Key"", help=""z. B. cell_technology, module_structure, cell_type, version, model_name, brand, capacity_w ..."")"
.\notwendig oder nicht\wichtig\repo_porter.py,574,dst_lines,"('Call', ('Name', 'insert_at_line'), (('Name', 'dst_lines'), ('Add', (('List', (('Const', ""''""),)), ('Name', 'adjusted'))), ('Name', 'anchor_line')), ())","('Call', 3, 0)","adjusted,anchor_line,dst_lines,insert_at_line","dst_lines = insert_at_line(dst_lines, adjusted + [""""], anchor_line)"
.\tools\repo_porter.py,574,dst_lines,"('Call', ('Name', 'insert_at_line'), (('Name', 'dst_lines'), ('Add', (('List', (('Const', ""''""),)), ('Name', 'adjusted'))), ('Name', 'anchor_line')), ())","('Call', 3, 0)","adjusted,anchor_line,dst_lines,insert_at_line","dst_lines = insert_at_line(dst_lines, adjusted + [""""], anchor_line)"
.\notwendig oder nicht\wichtig\repo_porter.py,565,dst_lines,"('Call', ('Name', 'insert_at_line'), (('Name', 'dst_lines'), ('Add', (('List', (('Const', ""''""),)), ('Name', 'chosen'))), ('Name', 'anchor_line')), ())","('Call', 3, 0)","anchor_line,chosen,dst_lines,insert_at_line","dst_lines = insert_at_line(dst_lines, chosen + [""""], anchor_line)"
.\tools\repo_porter.py,565,dst_lines,"('Call', ('Name', 'insert_at_line'), (('Name', 'dst_lines'), ('Add', (('List', (('Const', ""''""),)), ('Name', 'chosen'))), ('Name', 'anchor_line')), ())","('Call', 3, 0)","anchor_line,chosen,dst_lines,insert_at_line","dst_lines = insert_at_line(dst_lines, chosen + [""""], anchor_line)"
.\notwendig oder nicht\wichtig\repo_porter.py,542,dst_lines,"('Call', ('Name', 'insert_at_line'), (('Name', 'dst_lines'), ('List', (('Other', 'Starred'), ('Const', ""''""))), ('Name', 'insert_line')), ())","('Call', 3, 0)","dst_lines,insert_at_line,insert_line,to_add","dst_lines = insert_at_line(dst_lines, [*to_add, """"], insert_line)"
.\tools\repo_porter.py,542,dst_lines,"('Call', ('Name', 'insert_at_line'), (('Name', 'dst_lines'), ('List', (('Other', 'Starred'), ('Const', ""''""))), ('Name', 'insert_line')), ())","('Call', 3, 0)","dst_lines,insert_at_line,insert_line,to_add","dst_lines = insert_at_line(dst_lines, [*to_add, """"], insert_line)"
.\notwendig oder nicht\wichtig\repo_porter.py,499,dst_lines,"('Call', ('Name', 'read_lines'), (('Name', 'dst_file'),), ())","('Call', 1, 0)","dst_file,read_lines",dst_lines = read_lines(dst_file)
.\tools\repo_porter.py,499,dst_lines,"('Call', ('Name', 'read_lines'), (('Name', 'dst_file'),), ())","('Call', 1, 0)","dst_file,read_lines",dst_lines = read_lines(dst_file)
.\notwendig oder nicht\wichtig\repo_porter.py,501,dst_lines,"('List', ())","('List', 0)",,dst_lines = []
.\tools\repo_porter.py,501,dst_lines,"('List', ())","('List', 0)",,dst_lines = []
.\pdf_erstellen_komplett.py,226,dyn,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('BoolOp', 'Or', (('Dict', ()), ('Name', 'analysis_results'))), ('BoolOp', 'Or', (('Dict', ()), ('Name', 'company_info')))), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dyn = build_dynamic_data(project_data, analysis_results or {}, company_info or {})"
.\tests\test_numbering.py,19,dyn,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dyn = build_dynamic_data(project_data, analysis_results, company_info)"
.\tests\test_overlay_footer.py,18,dyn,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dyn = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\test_numbering.py,19,dyn,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dyn = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\test_overlay_footer.py,18,dyn,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dyn = build_dynamic_data(project_data, analysis_results, company_info)"
.\analysis.py,4598,dynamic_color_list,"('Call', ('Name', 'getattr'), (('Attr', 'px.colors', 'qualitative'), ('Name', 'palette_name'), ('Const', 'None')), ())","('Call', 3, 0)","getattr,palette_name,px","dynamic_color_list = getattr(px.colors.qualitative, palette_name, None)"
.\analysis.py,4760,dynamic_color_list,"('Call', ('Name', 'getattr'), (('Attr', 'px.colors', 'qualitative'), ('Name', 'palette_name'), ('Const', 'None')), ())","('Call', 3, 0)","getattr,palette_name,px","dynamic_color_list = getattr(px.colors.qualitative, palette_name, None)"
.\analysis.py,4860,dynamic_color_list,"('Call', ('Name', 'getattr'), (('Attr', 'px.colors', 'qualitative'), ('Name', 'palette_name'), ('Const', 'None')), ())","('Call', 3, 0)","getattr,palette_name,px","dynamic_color_list = getattr(px.colors.qualitative, palette_name, None)"
.\analysis.py,5002,dynamic_color_list,"('Call', ('Name', 'getattr'), (('Attr', 'px.colors', 'qualitative'), ('Name', 'palette_name'), ('Const', 'None')), ())","('Call', 3, 0)","getattr,palette_name,px","dynamic_color_list = getattr(px.colors.qualitative, palette_name, None)"
.\analysis.py,5149,dynamic_color_list,"('Call', ('Name', 'getattr'), (('Attr', 'px.colors', 'qualitative'), ('Name', 'palette_name'), ('Const', 'None')), ())","('Call', 3, 0)","getattr,palette_name,px","dynamic_color_list = getattr(px.colors.qualitative, palette_name, None)"
.\analysis.py,4576,dynamic_color_list,"('Const', 'None')","('Const',)",,dynamic_color_list = None
.\analysis.py,4745,dynamic_color_list,"('Const', 'None')","('Const',)",,dynamic_color_list = None
.\analysis.py,4845,dynamic_color_list,"('Const', 'None')","('Const',)",,dynamic_color_list = None
.\analysis.py,4980,dynamic_color_list,"('Const', 'None')","('Const',)",,dynamic_color_list = None
.\analysis.py,5130,dynamic_color_list,"('Const', 'None')","('Const',)",,dynamic_color_list = None
.\analysis.py,5018,dynamic_color_list,"('List', (('Name', 'default_color_1'), ('Name', 'default_color_2')))","('List', 2)","default_color_1,default_color_2","dynamic_color_list = [default_color_1, default_color_2]"
.\analysis.py,5165,dynamic_color_list,"('List', (('Name', 'default_color_direct'), ('Name', 'default_color_storage'), ('Name', 'default_color_feed_in')))","('List', 3)","default_color_direct,default_color_feed_in,default_color_storage",dynamic_color_list = [
.\analysis.py,4586,dynamic_color_list,"('Other', 'IfExp')","('Other', 'IfExp')","primary,secondary",dynamic_color_list = (
.\analysis.py,4752,dynamic_color_list,"('Other', 'IfExp')","('Other', 'IfExp')",primary,dynamic_color_list = [primary] if primary else None
.\analysis.py,4852,dynamic_color_list,"('Other', 'IfExp')","('Other', 'IfExp')",primary,dynamic_color_list = [primary] if primary else None
.\analysis.py,4990,dynamic_color_list,"('Other', 'IfExp')","('Other', 'IfExp')","primary,secondary",dynamic_color_list = (
.\analysis.py,5141,dynamic_color_list,"('Other', 'ListComp')","('Other', 'ListComp')","c1,c2,c3,color","dynamic_color_list = [color for color in [c1, c2, c3] if color]"
.\notwendig oder nicht\wichtig\portings\patches\test_wirtschaftlichkeit.py.insert.py,46,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'mock_project_data'), ('Name', 'mock_analysis_results'), ('Name', 'mock_company_info')), ())","('Call', 3, 0)","build_dynamic_data,mock_analysis_results,mock_company_info,mock_project_data",dynamic_data = build_dynamic_data(
.\tests\test_wirtschaftlichkeit.py,45,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'mock_project_data'), ('Name', 'mock_analysis_results'), ('Name', 'mock_company_info')), ())","('Call', 3, 0)","build_dynamic_data,mock_analysis_results,mock_company_info,mock_project_data",dynamic_data = build_dynamic_data(
.\tools\portings\patches\test_wirtschaftlichkeit.py.insert.py,46,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'mock_project_data'), ('Name', 'mock_analysis_results'), ('Name', 'mock_company_info')), ())","('Call', 3, 0)","build_dynamic_data,mock_analysis_results,mock_company_info,mock_project_data",dynamic_data = build_dynamic_data(
.\debug_logo_pdf.py,57,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\debug_logo_rendering.py,38,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_pdf.py.insert.py,55,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_rendering.py.insert.py,36,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\notwendig oder nicht\wichtig\portings\patches\simple_logo_test.py.insert.py,54,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\notwendig oder nicht\wichtig\portings\patches\test_product_images.py.insert.py,42,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\notwendig oder nicht\wichtig\portings\patches\test_section_titles_logos.py.insert.py,57,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\pdf_erstellen_komplett.py,132,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\simple_logo_test.py,56,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\tests\test_product_images.py,43,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\tests\test_section_titles_logos.py,59,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\portings\patches\debug_logo_pdf.py.insert.py,55,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\portings\patches\debug_logo_rendering.py.insert.py,36,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\portings\patches\simple_logo_test.py.insert.py,54,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\portings\patches\test_product_images.py.insert.py,42,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\portings\patches\test_section_titles_logos.py.insert.py,57,dynamic_data,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","dynamic_data = build_dynamic_data(project_data, analysis_results, company_info)"
.\heatpump_ui.py,701,economics_data,"('Attr', 'st.session_state', 'economics_data')","('Attr',)",st,economics_data = st.session_state.economics_data
.\heatpump_ui.py,941,economics_data,"('Attr', 'st.session_state', 'economics_data')","('Attr',)",st,economics_data = st.session_state.economics_data
.\heatpump_ui.py,70,economics_data,"('Call', ('Name', 'render_economics_analysis'), (('Name', 'texts'), ('Attr', 'st.session_state', 'heatpump_data')), ())","('Call', 2, 0)","render_economics_analysis,st,texts","economics_data = render_economics_analysis(texts, st.session_state.heatpump_data)"
.\heatpump_ui.py,73,economics_data,"('Const', 'None')","('Const',)",,economics_data = None
.\heatpump_ui.py,670,economics_data,"('Dict', (('KV', ('Const', ""'annual_hp_cost'""), ('Name', 'annual_hp_cost')), ('KV', ('Const', ""'annual_old_cost'""), ('Name', 'annual_old_cost')), ('KV', ('Const', ""'annual_savings'""), ('Name', 'annual_savings')), ('KV', ('Const', ""'electricity_price'""), ('Name', 'electricity_price')), ('KV', ('Const', ""'heat_demand_kwh'""), ('Name', 'heat_demand_kwh')), ('KV', ('Const', ""'hp_electricity_consumption'""), ('Name', 'hp_electricity_consumption')), ('KV', ('Const', ""'payback_time'""), ('Name', 'payback_time')), ('KV', ('Const', ""'subsidy_amount'""), ('Name', 'subsidy_amount')), ('KV', ('Const', ""'total_investment'""), ('Name', 'total_investment'))))","('Dict', 9)","annual_hp_cost,annual_old_cost,annual_savings,electricity_price,heat_demand_kwh,hp_electricity_consumption,payback_time,subsidy_amount,total_investment",economics_data = {
.\pdf_template_engine\placeholders.py,2388,eeg_eur_per_kwh,"('Call', ('Name', 'resolve_feed_in_tariff_eur_per_kwh'), (('Name', 'anlage_kwp_val'), ('Name', 'mode_val'), ('Name', '_load_admin_func')), (('analysis_results_snapshot', ('Tuple', (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'einspeiseverguetung_eur_per_kwh'""),), ()),))),))","('Call', 3, 1)","_load_admin_func,analysis_results,anlage_kwp_val,mode_val,resolve_feed_in_tariff_eur_per_kwh",eeg_eur_per_kwh = resolve_feed_in_tariff_eur_per_kwh(
.\pdf_template_engine\placeholders.py,1112,eeg_eur_per_kwh,"('Const', '0.0786')","('Const',)",,eeg_eur_per_kwh = 0.0786
.\pdf_template_engine\placeholders.py,1093,eeg_eur_per_kwh,"('Const', 'None')","('Const',)",,eeg_eur_per_kwh = None
.\pdf_template_engine\placeholders.py,1107,eeg_eur_per_kwh,"('Div', ('BoolOp', 'Or', (('Call', ('Name', 'parse_float'), (('Call', ('Attr', 't', 'get'), (('Const', ""'ct_per_kwh'""),), ()),), ()), ('Const', '7.86'))), ('Const', '100.0'))","('Div', ('BoolOp', 'Or', 2), ('Const',))","parse_float,t","eeg_eur_per_kwh = (parse_float(t.get(""ct_per_kwh"")) or 7.86) / 100.0"
.\pdf_template_engine\placeholders.py,1096,eeg_eur_per_kwh,"('Other', 'IfExp')","('Other', 'IfExp')",_val,eeg_eur_per_kwh = _val if _val < 1 else (_val / 100.0)
.\calculations.py,1690,eff,"('Add', (('Const', '85'), ('Mult', (('Const', '1.5'), ('Name', 'load')))))","('Add', (('Const',), ('Mult', (('Const',), ('Name',)))))",load,eff = 85 + load * 1.5
.\calculations.py,1692,eff,"('Add', (('Const', '95'), ('Mult', (('Const', '0.3'), ('Sub', ('Name', 'load'), ('Const', '10'))))))","('Add', (('Const',), ('Mult', (('Const',), ('Sub', ('Name',), ('Const',))))))",load,eff = 95 + (load - 10) * 0.3
.\calculations.py,1688,eff,"('Const', '0')","('Const',)",,eff = 0
.\calculations.py,1696,eff,"('Const', '96')","('Const',)",,eff = 96
.\calculations.py,1694,eff,"('Sub', ('Const', '98'), ('Mult', (('Const', '0.025'), ('Sub', ('Name', 'load'), ('Const', '20')))))","('Sub', ('Const',), ('Mult', (('Const',), ('Sub', ('Name',), ('Const',)))))",load,eff = 98 - (load - 20) * 0.025
.\calculations.py,4189,efficiency,"('Const', '0.0')","('Const',)",,efficiency = 0.0
.\calculations.py,4187,efficiency,"('Mult', (('Const', '100'), ('Div', ('Name', 'current_power'), ('Attr', 'self', 'initial_power'))))","('Mult', (('Const',), ('Div', ('Name',), ('Attr',))))","current_power,self",efficiency = (current_power / self.initial_power) * 100
.\calculations.py,3250,einspeiseverguetung_ct_per_kwh,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'einspeiseverguetung_data_to_use[-1]', 'get'), (('Const', ""'ct_per_kwh'""), ('Const', '0.0')), ()), ('Const', '0.0'))),), ())","('Call', 1, 0)","einspeiseverguetung_data_to_use,float",einspeiseverguetung_ct_per_kwh = float(
.\calculations.py,3243,einspeiseverguetung_ct_per_kwh,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'entry', 'get'), (('Const', ""'ct_per_kwh'""), ('Const', '0.0')), ()), ('Const', '0.0'))),), ())","('Call', 1, 0)","entry,float",einspeiseverguetung_ct_per_kwh = float(
.\calculations.py,3222,einspeiseverguetung_ct_per_kwh,"('Const', '0.0')","('Const',)",,einspeiseverguetung_ct_per_kwh = 0.0
.\calculations_heatpump.py,98,electricity_price,"('Call', ('Attr', 'heatpump_data', 'get'), (('Const', ""'electricity_price'""), ('Const', '0.3')), ())","('Call', 2, 0)",heatpump_data,"electricity_price = heatpump_data.get('electricity_price', 0.30)  # €/kWh"
.\heatpump_ui.py,486,electricity_price,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Strompreis (ct/kWh)'""),), (('max_value', ('Const', '50.0')), ('min_value', ('Const', '20.0')), ('step', ('Const', '0.5')), ('value', ('Const', '32.0'))))","('Call', 1, 4)",st,electricity_price = st.number_input(
.\heatpump_ui.py,892,electricity_price,"('Const', '32.0')","('Const',)",,electricity_price = 32.0  # ct/kWh
.\heatpump_ui.py,767,electricity_price,"('Subscript', ('Name', 'economics_data'), ('Const', ""'electricity_price'""))","('Subscript',)",economics_data,electricity_price = economics_data['electricity_price']
.\analysis.py,504,electricity_price_increase,"('Call', ('Attr', 'results', 'get'), (('Const', ""'electricity_price_increase_rate_effective_percent'""), ('Const', '3.0')), ())","('Call', 2, 0)",results,"electricity_price_increase = results.get('electricity_price_increase_rate_effective_percent', 3.0)"
.\calculations.py,1084,electricity_price_increase,"('Const', '0.03')","('Const',)",,electricity_price_increase = 0.03  # 3% pro Jahr
.\pdf_template_engine\dynamic_overlay.py,330,elements,"('Call', ('Name', 'parse_coords_file'), (('Name', 'yml_path'),), ())","('Call', 1, 0)","parse_coords_file,yml_path",elements = parse_coords_file(yml_path)
.\pdf_template_engine\dynamic_overlay.py,136,elements,"('List', ())","('List', 0)",,"elements: List[Dict[str, Any]] = []"
.\pdf_template_engine\placeholders.py,490,email,"('Call', ('Attr', ""as_str(customer.get('email') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,customer","email = as_str(customer.get(""email"") or """").strip()"
.\crm.py,339,email,"('Call', ('Attr', 'st', 'text_input'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'email_label'""), ('Const', ""'E-Mail'"")), ()),), (('value', ('Call', ('Attr', 'customer_to_edit', 'get'), (('Const', ""'email'""), ('Const', ""''"")), ())),))","('Call', 1, 1)","customer_to_edit,get_text_crm,st,texts","email = st.text_input(get_text_crm(texts, ""email_label"", ""E-Mail""), value=customer_to_edit.get('email', ''))"
.\crm_pipeline_ui.py,225,email,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'E-Mail'""),), (('placeholder', ('Const', ""'max@mustermann.de'"")),))","('Call', 1, 1)",st,"email = st.text_input(""E-Mail"", placeholder=""max@mustermann.de"")"
.\pdf_ui.py,1222,email_val,"('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'email'""), ('Const', ""''"")), ())","('Call', 2, 0)",project_data,"email_val = project_data.get('customer_data', {}).get('email', '')"
.\multi_offer_generator.py,665,email_val,"('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'email'""), ('Const', ""''"")), ())","('Call', 2, 0)",customer_data,"email_val = customer_data.get('email', '')"
.\doc_output.py,1649,enable_dragdrop,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""' Drag & Drop Bearbeitung aktivieren'""),), (('key', ('Const', ""'pdf_enable_dragdrop'"")), ('value', ('Const', 'True'))))","('Call', 1, 2)",st,"enable_dragdrop = st.checkbox("" Drag & Drop Bearbeitung aktivieren"", value=True, key=""pdf_enable_dragdrop"")"
.\doc_output.py,1799,enable_dragdrop,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""' PDF Drag & Drop aktivieren'""),), (('value', ('Const', 'True')),))","('Call', 1, 1)",st,"enable_dragdrop = st.checkbox("" PDF Drag & Drop aktivieren"", value=True)"
.\admin_panel.py,1321,enabled,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""'Cheat aktivieren'""),), (('key', ('Other', 'JoinedStr')), ('value', ('Call', ('Name', 'bool'), (('Call', ('Attr', 'cheat_current', 'get'), (('Const', ""'enabled'""), ('Const', 'False')), ()),), ()))))","('Call', 1, 2)","WIDGET_KEY_SUFFIX,bool,cheat_current,st","enabled = st.checkbox(""Cheat aktivieren"", value=bool(cheat_current.get(""enabled"", False)), key=f""cheat_enabled{WIDGET_KEY_SUFFIX}"")"
.\pdf_template_engine\dynamic_overlay.py,93,enabled,"('Call', ('Name', '_to_bool'), (('Call', ('Name', 'load_admin_setting'), (('Const', ""'pdf_global_watermark_enabled'""), ('Const', 'False')), ()), ('Const', 'False')), ())","('Call', 2, 0)","_to_bool,load_admin_setting","enabled = _to_bool(load_admin_setting(""pdf_global_watermark_enabled"", False), False)"
.\notwendig oder nicht\wichtig\repo_porter.py,331,end,"('Attr', 'di', 'end_lineno')","('Attr',)",di,end = di.end_lineno
.\tools\repo_porter.py,331,end,"('Attr', 'di', 'end_lineno')","('Attr',)",di,end = di.end_lineno
.\dev_tools\kakerlake_ultra_cleaner.py,145,end,"('Call', ('Name', 'getattr'), (('Name', 'node'), ('Const', ""'end_lineno'""), ('Name', 'start')), ())","('Call', 3, 0)","getattr,node,start","start=node.lineno; end=getattr(node,'end_lineno',start); body_src=""\n"".join(lines[start-1:end])"
.\mnt\data\kakerlake_ultra_cleaner.py,145,end,"('Call', ('Name', 'getattr'), (('Name', 'node'), ('Const', ""'end_lineno'""), ('Name', 'start')), ())","('Call', 3, 0)","getattr,node,start","start=node.lineno; end=getattr(node,'end_lineno',start); body_src=""\n"".join(lines[start-1:end])"
.\tools\kakerlake_ultra_cleaner.py,146,end,"('Call', ('Name', 'getattr'), (('Name', 'node'), ('Const', ""'end_lineno'""), ('Name', 'start')), ())","('Call', 3, 0)","getattr,node,start","start=node.lineno; end=getattr(node,'end_lineno',start); body_src=""\n"".join(lines[start-1:end])"
.\pdf_styles.py,528,end,"('Subscript', ('Subscript', ('Name', 'components'), ('Name', 'target')), ('Const', ""'pos'""))","('Subscript',)","components,target",end = components[target]['pos']
.\crm_calendar_ui.py,379,end_date,"('Call', ('Name', 'datetime'), (('Add', (('Const', '1'), ('Name', 'year'))), ('Const', '1'), ('Const', '1')), ())","('Call', 3, 0)","datetime,year","end_date = datetime(year + 1, 1, 1)"
.\crm_calendar_ui.py,381,end_date,"('Call', ('Name', 'datetime'), (('Name', 'year'), ('Add', (('Const', '1'), ('Name', 'month'))), ('Const', '1')), ())","('Call', 3, 0)","datetime,month,year","end_date = datetime(year, month + 1, 1)"
.\crm_calendar_ui.py,463,end_of_month,"('Call', ('Attr', 'start_of_month', 'replace'), (), (('month', ('Add', (('Attr', 'now', 'month'), ('Const', '1')))),))","('Call', 0, 1)","now,start_of_month",end_of_month = start_of_month.replace(month=now.month + 1)
.\crm_calendar_ui.py,461,end_of_month,"('Call', ('Attr', 'start_of_month', 'replace'), (), (('month', ('Const', '1')), ('year', ('Add', (('Attr', 'now', 'year'), ('Const', '1'))))))","('Call', 0, 2)","now,start_of_month","end_of_month = start_of_month.replace(year=now.year + 1, month=1)"
.\analysis.py,5825,energy_loss_kwh,"('Call', ('Attr', 'shading_analysis', 'get'), (('Const', ""'energy_loss_kwh'""), ('Const', '0.0')), ())","('Call', 2, 0)",shading_analysis,"energy_loss_kwh = shading_analysis.get(""energy_loss_kwh"", 0.0)"
.\calculations.py,1610,energy_loss_kwh,"('Div', ('Mult', (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'annual_production'""), ('Const', '10000')), ()), ('Name', 'annual_loss'))), ('Const', '100'))","('Div', ('Mult', (('Call', 2, 0), ('Name',))), ('Const',))","annual_loss,project_data",energy_loss_kwh = (
.\calculations.py,1123,energy_loss_kwh,"('Mult', (('Div', ('Name', 'shading_loss_percent'), ('Const', '100')), ('Name', 'annual_production')))","('Mult', (('Div', ('Name',), ('Const',)), ('Name',)))","annual_production,shading_loss_percent",energy_loss_kwh = annual_production * (shading_loss_percent / 100)
.\excel_eval.py,149,eng,"('Call', ('Name', 'ExcelEngineHeadless'), (('Name', 'path'),), ())","('Call', 1, 0)","ExcelEngineHeadless,path",eng = ExcelEngineHeadless(path)
.\excel_eval.py,153,eng,"('Call', ('Name', 'ExcelEngineHeadless'), (('Name', 'path'),), ())","('Call', 1, 0)","ExcelEngineHeadless,path",eng = ExcelEngineHeadless(path)
.\excel_eval.py,173,eng,"('Call', ('Name', 'ExcelEngineHeadless'), (('Name', 'path'),), ())","('Call', 1, 0)","ExcelEngineHeadless,path",eng = ExcelEngineHeadless(path)
.\excel_eval.py,144,eng,"('Call', ('Name', 'ExcelEngineXlwings'), (('Name', 'path'),), ())","('Call', 1, 0)","ExcelEngineXlwings,path",eng = ExcelEngineXlwings(path)
.\excel_eval.py,157,eng,"('Call', ('Name', 'ExcelEngineXlwings'), (('Name', 'path'),), ())","('Call', 1, 0)","ExcelEngineXlwings,path",eng = ExcelEngineXlwings(path)
.\excel_eval.py,170,eng,"('Call', ('Name', 'ExcelEngineXlwings'), (('Name', 'path'),), ())","('Call', 1, 0)","ExcelEngineXlwings,path",eng = ExcelEngineXlwings(path)
.\excel_eval.py,174,engine_name,"('Const', ""'headless'"")","('Const',)",,"engine_name = ""headless"""
.\excel_eval.py,171,engine_name,"('Const', ""'xlwings'"")","('Const',)",,"engine_name = ""xlwings"""
.\locales.py,33,error_msg,"('Call', ('Attr', ""default_texts['language_file_not_found']"", 'format'), (), (('filepath', ('Name', 'file_path')),))","('Call', 0, 1)","default_texts,file_path","error_msg = default_texts[""language_file_not_found""].format(filepath=file_path)"
.\locales.py,46,error_msg,"('Call', ('Attr', ""default_texts['language_file_not_found']"", 'format'), (), (('filepath', ('Name', 'file_path')),))","('Call', 0, 1)","default_texts,file_path","error_msg = default_texts[""language_file_not_found""].format(filepath=file_path)"
.\central_pdf_system.py,280,error_msg,"('Call', ('Name', 'str'), (('Name', 'parse_error'),), ())","('Call', 1, 0)","parse_error,str",error_msg = str(parse_error)
.\locales.py,52,error_msg,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","e_json,file_path","error_msg = f""JSON-Dekodierungsfehler in {file_path}: {e_json}"""
.\locales.py,58,error_msg,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","e,file_path","error_msg = f""Allgemeiner Fehler beim Laden von {file_path}: {e}"""
.\calculations.py,2308,error_msg_pvgis,"('Add', (('BoolOp', 'Or', (('Call', ('Attr', 'texts', 'get'), (('Const', ""'pvgis_connection_error'""), ('Const', ""'PVGIS API Verbindungsfehler. Ist das Internet verfügbar und die API erreichbar?'"")), ()), ('Const', ""''""))), ('Other', 'JoinedStr')))","('Add', (('BoolOp', 'Or', 2), ('Other', 'JoinedStr')))","e_conn,texts",error_msg_pvgis = (
.\calculations.py,2285,error_msg_pvgis,"('Add', (('BoolOp', 'Or', (('Call', ('Attr', 'texts', 'get'), (('Const', ""'pvgis_http_error'""), ('Const', ""'PVGIS API HTTP-Fehler'"")), ()), ('Const', ""''""))), ('Other', 'JoinedStr')))","('Add', (('BoolOp', 'Or', 2), ('Other', 'JoinedStr')))","status_code_val,texts",error_msg_pvgis = (
.\calculations.py,2318,error_msg_pvgis,"('Add', (('BoolOp', 'Or', (('Call', ('Attr', 'texts', 'get'), (('Const', ""'pvgis_request_error'""), ('Const', ""'PVGIS API Allgemeiner Anfragefehler.'"")), ()), ('Const', ""''""))), ('Other', 'JoinedStr')))","('Add', (('BoolOp', 'Or', 2), ('Other', 'JoinedStr')))","e_req,texts",error_msg_pvgis = (
.\calculations.py,2331,error_msg_pvgis,"('Add', (('BoolOp', 'Or', (('Call', ('Attr', 'texts', 'get'), (('Const', ""'pvgis_unknown_error'""), ('Const', ""'PVGIS API: Unbekannter Fehler.'"")), ()), ('Const', ""''""))), ('Other', 'JoinedStr')))","('Add', (('BoolOp', 'Or', 2), ('Other', 'JoinedStr')))","e_pvgis_unknown,texts",error_msg_pvgis = (
.\calculations.py,2261,error_msg_pvgis,"('BoolOp', 'Or', (('Call', ('Attr', 'texts', 'get'), (('Const', ""'pvgis_incomplete_data'""), ('Const', ""'PVGIS: Antwort erhalten, aber Daten scheinen unvollständig oder null.'"")), ()), ('Const', ""''"")))","('BoolOp', 'Or', 2)",texts,error_msg_pvgis = (
.\calculations.py,2323,error_msg_pvgis,"('BoolOp', 'Or', (('Call', ('Attr', 'texts', 'get'), (('Const', ""'pvgis_json_decode_error'""), ('Const', ""'PVGIS API: Fehler beim Lesen der JSON-Antwort. Möglicherweise temporäres API-Problem.'"")), ()), ('Const', ""''"")))","('BoolOp', 'Or', 2)",texts,error_msg_pvgis = (
.\calculations.py,2300,error_msg_pvgis,"('BoolOp', 'Or', (('Call', ('Attr', 'texts', 'get'), (('Const', ""'pvgis_timeout_error'""), ('Const', ""'PVGIS API Zeitüberschreitung (Timeout nach 25s). Bitte Netzwerkverbindung prüfen.'"")), ()), ('Const', ""''"")))","('BoolOp', 'Or', 2)",texts,error_msg_pvgis = (
.\calculations.py,2225,error_msg_pvgis,"('Const', ""''"")","('Const',)",,"error_msg_pvgis = """"  # Initialisiere Fehlermeldung"
.\notwendig oder nicht\calculations_cli.py,47,errors_list,"('Call', ('Attr', 'data', 'get'), (('Const', ""'errors_list'""), ('List', ())), ())","('Call', 2, 0)",data,"errors_list: List[str] = data.get(""errors_list"", [])"
.\notwendig oder nicht\keine ahnung\calculations_cli.py,47,errors_list,"('Call', ('Attr', 'data', 'get'), (('Const', ""'errors_list'""), ('List', ())), ())","('Call', 2, 0)",data,"errors_list: List[str] = data.get(""errors_list"", [])"
.\notwendig oder nicht\need or not\calculations_cli.py,47,errors_list,"('Call', ('Attr', 'data', 'get'), (('Const', ""'errors_list'""), ('List', ())), ())","('Call', 2, 0)",data,"errors_list: List[str] = data.get(""errors_list"", [])"
.\multi_offer_generator_old.py,855,errors_list,"('List', ())","('List', 0)",,errors_list = []
.\calculations.py,2813,evening_fraction,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'global_constants', 'get'), (('Const', ""'evening_shift_fraction'""), ('Const', '0.5')), ()), ('Const', '0.5'))),), ())","('Call', 1, 0)","float,global_constants","evening_fraction = float(global_constants.get(""evening_shift_fraction"", 0.5) or 0.5)"
.\calculations.py,2815,evening_fraction,"('Const', '0.1')","('Const',)",,evening_fraction = 0.1
.\calculations.py,2817,evening_fraction,"('Const', '0.9')","('Const',)",,evening_fraction = 0.9
.\tools\xlsx_validator.py,86,excel_row,"('Add', (('Const', '2'), ('Name', 'idx')))","('Add', (('Const',), ('Name',)))",idx,excel_row = idx + 2
.\tools\xlsx_validator.py,104,excel_row,"('Add', (('Const', '2'), ('Name', 'idx')))","('Add', (('Const',), ('Name',)))",idx,excel_row = idx + 2
.\tools\xlsx_validator.py,57,excel_row,"('Add', (('Const', '2'), ('Name', 'row_idx')))","('Add', (('Const',), ('Name',)))",row_idx,excel_row = row_idx + 2  # +2 wegen Header und 0-basiertem Index
.\tools\xlsx_validator.py,68,excel_row,"('Add', (('Const', '2'), ('Name', 'row_idx')))","('Add', (('Const',), ('Name',)))",row_idx,excel_row = row_idx + 2
.\excel_eval.py,300,excel_rows,"('Call', ('Name', '_evaluate_many'), (('Name', 'path'), ('Name', 'refs')), (('engine', ('Const', ""'xlwings'"")),))","('Call', 2, 1)","_evaluate_many,path,refs","excel_rows = _evaluate_many(path, refs, engine=""xlwings"")"
.\tools\xlsx_validator.py,95,excel_rows,"('Other', 'ListComp')","('Other', 'ListComp')","duplicate_rows,idx",excel_rows = [idx + 2 for idx in duplicate_rows]
.\brand_logo_db.py,63,existing,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,existing = cursor.fetchone()
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,58,existing,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,existing = cursor.fetchone()
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,66,existing,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,existing = cursor.fetchone()
.\tools\out_selected\patches\brand_logo_db.py.insert.py,58,existing,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,existing = cursor.fetchone()
.\tools\portings\patches\brand_logo_db.py.insert.py,66,existing,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,existing = cursor.fetchone()
.\tools\import_module_attributes_generic.py,186,existing,"('Call', ('Name', 'list_products'), (('Name', 'category'),), ())","('Call', 1, 0)","category,list_products",existing = list_products(category)
.\tools\import_module_attributes_generic.py,188,existing,"('List', ())","('List', 0)",,existing = []
.\tools\import_module_attributes_generic.py,190,existing,"('List', ())","('List', 0)",,existing = []
.\product_db.py,73,existing_columns,"('Call', ('Name', 'list'), (('Call', ('Attr', 'existing_columns_info', 'keys'), (), ()),), ())","('Call', 1, 0)","existing_columns_info,list",existing_columns = list(existing_columns_info.keys())
.\crm.py,212,existing_columns,"('Other', 'ListComp')","('Other', 'ListComp')","info,table_info_cursor",existing_columns = [info[1] for info in table_info_cursor]
.\database.py,934,existing_columns,"('Other', 'ListComp')","('Other', 'ListComp')","cursor,row",existing_columns = [row[1] for row in cursor.fetchall()]
.\migrate_logo_database.py,25,existing_columns,"('Other', 'ListComp')","('Other', 'ListComp')","cursor,row",existing_columns = [row[1] for row in cursor.fetchall()]
.\notwendig oder nicht\wichtig\out_selected\patches\migrate_logo_database.py.insert.py,24,existing_columns,"('Other', 'ListComp')","('Other', 'ListComp')","cursor,row",existing_columns = [row[1] for row in cursor.fetchall()]
.\notwendig oder nicht\wichtig\portings\patches\migrate_logo_database.py.insert.py,25,existing_columns,"('Other', 'ListComp')","('Other', 'ListComp')","cursor,row",existing_columns = [row[1] for row in cursor.fetchall()]
.\tools\out_selected\patches\migrate_logo_database.py.insert.py,24,existing_columns,"('Other', 'ListComp')","('Other', 'ListComp')","cursor,row",existing_columns = [row[1] for row in cursor.fetchall()]
.\tools\portings\patches\migrate_logo_database.py.insert.py,25,existing_columns,"('Other', 'ListComp')","('Other', 'ListComp')","cursor,row",existing_columns = [row[1] for row in cursor.fetchall()]
.\dev_tools\kakerlake_ultra_cleaner.py,516,ext,"('Call', ('Attr', 'os.path.splitext(fn)[1]', 'lower'), (), ())","('Call', 0, 0)","fn,os","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,402,ext,"('Call', ('Attr', 'os.path.splitext(fn)[1]', 'lower'), (), ())","('Call', 0, 0)","fn,os","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\mnt\data\kakerlake_ultra_cleaner.py,516,ext,"('Call', ('Attr', 'os.path.splitext(fn)[1]', 'lower'), (), ())","('Call', 0, 0)","fn,os","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,402,ext,"('Call', ('Attr', 'os.path.splitext(fn)[1]', 'lower'), (), ())","('Call', 0, 0)","fn,os","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\tools\kakerlake_ultra_cleaner.py,517,ext,"('Call', ('Attr', 'os.path.splitext(fn)[1]', 'lower'), (), ())","('Call', 0, 0)","fn,os","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\notwendig oder nicht\wichtig\repo_to_json.py,176,ext,"('Call', ('Attr', 'path.suffix', 'lower'), (), ())","('Call', 0, 0)",path,ext = path.suffix.lower()
.\tools\repo_to_json.py,176,ext,"('Call', ('Attr', 'path.suffix', 'lower'), (), ())","('Call', 0, 0)",path,ext = path.suffix.lower()
.\analysis.py,7467,extended_summary,"('Call', ('Attr', 'pdf_data', 'get'), (('Const', ""'extended_summary'""), ('Dict', ())), ())","('Call', 2, 0)",pdf_data,"extended_summary = pdf_data.get(""extended_summary"", {})"
.\analysis.py,8686,extended_summary,"('Dict', (('KV', ('Const', ""'co2_amortisationszeit_jahre'""), ('Call', ('Attr', ""pdf_export_data.get('co2_analysis', {})"", 'get'), (('Const', ""'carbon_payback_time'""), ('Const', '0')), ())), ('KV', ('Const', ""'co2_gesamteinsparung_tonnen'""), ('Call', ('Attr', ""pdf_export_data.get('co2_analysis', {})"", 'get'), (('Const', ""'total_co2_savings'""), ('Const', '0')), ())), ('KV', ('Const', ""'irr_internal_rate_of_return'""), ('Call', ('Attr', ""pdf_export_data.get('irr_analysis', {})"", 'get'), (('Const', ""'irr'""), ('Const', '0')), ())), ('KV', ('Const', ""'lcoe_stromgestehungskosten'""), ('Call', ('Attr', ""pdf_export_data.get('lcoe_analysis', {})"", 'get'), (('Const', ""'lcoe_discounted'""), ('Const', '0')), ())), ('KV', ('Const', ""'materialwert_euro'""), ('Call', ('Attr', ""pdf_export_data.get('recycling_analysis', {})"", 'get'), (('Const', ""'material_value'""), ('Const', '0')), ())), ('KV', ('Const', ""'recycling_quote_prozent'""), ('Call', ('Attr', ""pdf_export_data.get('recycling_analysis', {})"", 'get'), (('Const', ""'recycling_rate'""), ('Const', '0')), ())), ('KV', ('Const', ""'temperaturverlust_prozent'""), ('Call', ('Attr', ""pdf_export_data.get('temperature_effects', {})"", 'get'), (('Const', ""'avg_temp_loss'""), ('Const', '0')), ())), ('KV', ('Const', ""'top_optimierung_nutzen'""), ('Other', 'IfExp')), ('KV', ('Const', ""'verschattungsverlust_prozent'""), ('Call', ('Attr', ""pdf_export_data.get('shading_analysis', {})"", 'get'), (('Const', ""'annual_shading_loss'""), ('Const', '0')), ())), ('KV', ('Const', ""'wechselrichter_wirkungsgrad'""), ('Call', ('Attr', ""pdf_export_data.get('inverter_efficiency', {})"", 'get'), (('Const', ""'euro_efficiency'""), ('Const', '0')), ()))))","('Dict', 10)",pdf_export_data,extended_summary = {
.\pdf_template_engine\dynamic_overlay.py,895,extra_bg_page,"('Const', 'None')","('Const',)",,extra_bg_page = None
.\pdf_template_engine\dynamic_overlay.py,903,extra_bg_page,"('Const', 'None')","('Const',)",,extra_bg_page = None
.\pdf_template_engine\dynamic_overlay.py,909,extra_bg_page,"('Const', 'None')","('Const',)",,extra_bg_page = None  # bereits als Basis gesetzt
.\pdf_template_engine\dynamic_overlay.py,901,extra_bg_page,"('Subscript', ('Attr', 'haus_reader', 'pages'), ('Const', '0'))","('Subscript',)",haus_reader,extra_bg_page = haus_reader.pages[0]
.\notwendig oder nicht\wichtig\repo_to_json.py,231,f,"('Call', ('Attr', 'gzip', 'open'), (('Name', 'out_path'), ('Const', ""'wb'"")), ())","('Call', 2, 0)","gzip,out_path","f = gzip.open(out_path, ""wb"")"
.\tools\repo_to_json.py,231,f,"('Call', ('Attr', 'gzip', 'open'), (('Name', 'out_path'), ('Const', ""'wb'"")), ())","('Call', 2, 0)","gzip,out_path","f = gzip.open(out_path, ""wb"")"
.\dev_tools\kakerlake_ultra_cleaner.py,283,f,"('Call', ('Name', 'Finder'), (), ())","('Call', 0, 0)",Finder,f=Finder(); mod.visit(f)
.\dev_tools\kakerlake_ultra_cleaner_v2.py,55,f,"('Call', ('Name', 'Finder'), (), ())","('Call', 0, 0)",Finder,f=Finder(); mod.visit(f)
.\dev_tools\kakerlake_ultra_cleaner_v3.py,68,f,"('Call', ('Name', 'Finder'), (), ())","('Call', 0, 0)",Finder,f=Finder(); mod.visit(f)
.\mnt\data\kakerlake_ultra_cleaner.py,283,f,"('Call', ('Name', 'Finder'), (), ())","('Call', 0, 0)",Finder,f=Finder(); mod.visit(f)
.\mnt\data\kakerlake_ultra_cleaner_v2.py,55,f,"('Call', ('Name', 'Finder'), (), ())","('Call', 0, 0)",Finder,f=Finder(); mod.visit(f)
.\tools\kakerlake_ultra_cleaner.py,284,f,"('Call', ('Name', 'Finder'), (), ())","('Call', 0, 0)",Finder,f=Finder(); mod.visit(f)
.\tools\import_module_attributes_generic.py,137,f,"('Call', ('Name', '_to_number'), (('Name', 'prod'),), ())","('Call', 1, 0)","_to_number,prod",f = _to_number(prod)
.\notwendig oder nicht\wichtig\repo_to_json.py,234,f,"('Call', ('Name', 'open'), (('Name', 'out_path'), ('Const', ""'wb'"")), ())","('Call', 2, 0)","open,out_path","f = open(out_path, ""wb"")"
.\tools\repo_to_json.py,234,f,"('Call', ('Name', 'open'), (('Name', 'out_path'), ('Const', ""'wb'"")), ())","('Call', 2, 0)","open,out_path","f = open(out_path, ""wb"")"
.\calculations_heatpump.py,39,factor,"('Call', ('Attr', 'insulation_factor', 'get'), (('Name', 'insulation_quality'), ('Const', '1.0')), ())","('Call', 2, 0)","insulation_factor,insulation_quality","factor = insulation_factor.get(insulation_quality, 1.0)"
.\calculations.py,1012,factor,"('Const', '0.6')","('Const',)",,factor = 0.6
.\calculations.py,1020,factor,"('Const', '0.8')","('Const',)",,factor = 0.8
.\calculations.py,1016,factor,"('Const', '0.9')","('Const',)",,factor = 0.9
.\calculations.py,1014,factor,"('Const', '1.2')","('Const',)",,factor = 1.2
.\calculations.py,1018,factor,"('Const', '1.4')","('Const',)",,factor = 1.4
.\excel_eval.py,20,factor,"('Pow', ('Const', '10'), ('Name', 'digits'))","('Pow', ('Const',), ('Name',))",digits,factor = 10 ** digits
.\excel_eval.py,18,factor,"('Pow', ('Const', '10'), ('USub', ('Name', 'digits')))","('Pow', ('Const',), ('USub', ('Name',)))",digits,factor = 10 ** (-digits)
.\multi_offer_generator.py,392,factors,"('Call', ('Attr', 'json', 'loads'), (('Call', ('Attr', 'settings', 'get'), (('Const', ""'custom_price_factors'""), ('Const', ""'[1.0]'"")), ()),), ())","('Call', 1, 0)","json,settings","factors = json.loads(settings.get(""custom_price_factors"", ""[1.0]""))"
.\analysis.py,2323,factors,"('List', (('Const', '0.8'), ('Const', '1.0'), ('Const', '1.2')))","('List', 3)",,"factors = [0.8, 1.0, 1.2]"
.\central_pdf_system.py,253,fallback_systems,"('List', (('Tuple', (('Const', ""'Standard PDF Generator'""), ('Attr', 'self', '_try_standard_pdf_generator'))), ('Tuple', (('Const', ""'Business Sections PDF'""), ('Attr', 'self', '_try_business_sections_pdf'))), ('Tuple', (('Const', ""'TOM-90 Exact Renderer'""), ('Attr', 'self', '_try_tom90_exact_renderer'))), ('Tuple', (('Const', ""'Emergency Fallback'""), ('Attr', 'self', '_try_emergency_fallback')))))","('List', 4)",self,fallback_systems = [
.\central_pdf_system.py,228,fallback_systems,"('List', (('Tuple', (('Const', ""'TOM-90 Exact Renderer'""), ('Attr', 'self', '_try_tom90_exact_renderer'))), ('Tuple', (('Const', ""'Business Sections PDF'""), ('Attr', 'self', '_try_business_sections_pdf'))), ('Tuple', (('Const', ""'Standard PDF Generator'""), ('Attr', 'self', '_try_standard_pdf_generator'))), ('Tuple', (('Const', ""'Emergency Fallback'""), ('Attr', 'self', '_try_emergency_fallback')))))","('List', 4)",self,fallback_systems = [
.\pv_visuals.py,30,fallback_text,"('Add', (('Call', ('Attr', ""key.replace('_', ' ')"", 'title'), (), ()), ('Const', ""' (PV Viz Text fehlt)'"")))","('Add', (('Call', 0, 0), ('Const',)))",key,"fallback_text = key.replace(""_"", "" "").title() + "" (PV Viz Text fehlt)"""
.\analysis.py,210,fallback_text,"('Add', (('Call', ('Attr', ""key.replace('_', ' ')"", 'title'), (), ()), ('Const', ""' (Text-Key fehlt)'"")))","('Add', (('Call', 0, 0), ('Const',)))",key,"fallback_text = key.replace(""_"", "" "").title() + "" (Text-Key fehlt)"""
.\analysis_utils.py,30,fallback_text,"('Add', (('Call', ('Attr', ""key.replace('_', ' ')"", 'title'), (), ()), ('Const', ""' (Text-Key fehlt)'"")))","('Add', (('Call', 0, 0), ('Const',)))",key,"fallback_text = key.replace(""_"", "" "").title() + "" (Text-Key fehlt)"""
.\data_input.py,26,fallback_text_value,"('Add', (('Call', ('Attr', ""key.replace('_', ' ')"", 'title'), (), ()), ('Const', ""' (DI Text fehlt)'"")))","('Add', (('Call', 0, 0), ('Const',)))",key,"fallback_text_value = key.replace(""_"", "" "").title() + "" (DI Text fehlt)"""
.\pdf_generator.py,738,fallback_text_value,"('Add', (('Call', ('Attr', ""key.replace('_', ' ')"", 'title'), (), ()), ('Const', ""' (PDF-Text fehlt)'"")))","('Add', (('Call', 0, 0), ('Const',)))",key,"if fallback_text_value is None: fallback_text_value = key.replace(""_"", "" "").title() + "" (PDF-Text fehlt)"""
.\pdf_template_engine\placeholders.py,2018,feed_in_kwh_val,"('Call', ('Name', 'float'), (('Call', ('Attr', ""re.sub('[^0-9,\\\\.]', '', str(grid_feedin_raw))"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ()),), ())","('Call', 1, 0)","float,grid_feedin_raw,re,str","feed_in_kwh_val = float(re.sub(r""[^0-9,\.]"", """", str(grid_feedin_raw)).replace(',', '.'))"
.\pdf_template_engine\placeholders.py,2012,feed_in_kwh_val,"('Const', 'None')","('Const',)",,feed_in_kwh_val = None
.\pdf_template_engine\placeholders.py,2020,feed_in_kwh_val,"('Const', 'None')","('Const',)",,feed_in_kwh_val = None
.\pdf_template_engine\placeholders.py,2015,feed_in_kwh_val,"('Other', 'IfExp')","('Other', 'IfExp')","float,grid_feedin_raw,str","feed_in_kwh_val = float(str(grid_feedin_raw).split()[0].replace('.', '').replace(',', '.')) if ' ' in str(grid_feedin_raw) else float(str(grid_feedin_raw).replace('.', '').replace(',', '.'))"
.\calculations.py,3269,feed_in_ratio,"('Const', '0.0')","('Const',)",,feed_in_ratio = 0.0
.\calculations.py,3266,feed_in_ratio,"('Div', ('Name', 'netzeinspeisung_kwh'), ('Name', 'annual_pv_production_kwh'))","('Div', ('Name',), ('Name',))","annual_pv_production_kwh,netzeinspeisung_kwh",feed_in_ratio = netzeinspeisung_kwh / annual_pv_production_kwh
.\analysis.py,8803,feed_in_revenue,"('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_revenue_feed_in_eur'""), ('Const', '0.0')), ())","('Call', 2, 0)",results,"feed_in_revenue = results.get('annual_revenue_feed_in_eur', 0.0)"
.\calculations.py,72,feed_in_revenue,"('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_revenue_feed_in_eur'""), ('Const', '0.0')), ())","('Call', 2, 0)",results,"feed_in_revenue = results.get('annual_revenue_feed_in_eur', 0.0)"
.\tools\kakerlake_ultra_cleaner.py,219,feed_in_revenue,"('Call', ('Attr', 'results', 'get'), (('Const', ""'annual_revenue_feed_in_eur'""), ('Const', '0.0')), ())","('Call', 2, 0)",results,"feed_in_revenue = results.get('annual_revenue_feed_in_eur', 0.0)"
.\calculations.py,4139,feed_in_revenue,"('Mult', (('Attr', 'self', 'feed_in_rate'), ('Sub', ('Attr', 'self', 'pv_production'), ('Attr', 'self', 'self_consumption'))))","('Mult', (('Attr',), ('Sub', ('Attr',), ('Attr',))))",self,feed_in_revenue = (
.\calculations.py,3441,feed_in_tariff_sim,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'global_constants', 'get'), (('Const', ""'marktwert_strom_eur_per_kwh_after_eeg'""), ('Const', '0.03')), ()), ('Const', '0.03'))),), ())","('Call', 1, 0)","float,global_constants",feed_in_tariff_sim = float(
.\calculations.py,3435,feed_in_tariff_sim,"('Subscript', ('Name', 'results'), ('Const', ""'einspeiseverguetung_eur_per_kwh'""))","('Subscript',)",results,feed_in_tariff_sim = results[
.\pdf_template_engine\placeholders.py,787,feed_in_val,"('Call', ('Name', 'to_float_or_none'), (('Name', 'feed_in_kwh'),), ())","('Call', 1, 0)","feed_in_kwh,to_float_or_none",feed_in_val = to_float_or_none(feed_in_kwh)
.\pdf_template_engine\placeholders.py,806,feed_in_val,"('Name', 'feed_in_calc')","('Name',)",feed_in_calc,feed_in_val = feed_in_calc
.\pdf_template_engine\placeholders.py,1133,feedin_kwh,"('BoolOp', 'Or', (('Call', ('Name', 'parse_float'), (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'netzeinspeisung_kwh'""),), ()),), ()), ('Other', 'IfExp')))","('BoolOp', 'Or', 2)","analysis_results,float,monthly_feed_in,parse_float,sum,x","feedin_kwh = parse_float(analysis_results.get(""netzeinspeisung_kwh"")) or (sum(float(x or 0) for x in monthly_feed_in) if monthly_feed_in else 0.0)"
.\pdf_template_engine\placeholders.py,2183,feedin_kwh,"('Call', ('Name', '_to_float'), (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'netzeinspeisung_kwh'""),), ()),), ())","('Call', 1, 0)","_to_float,analysis_results","feedin_kwh   = _to_float(analysis_results.get(""netzeinspeisung_kwh""))"
.\crm.py,180,fields,"('Call', ('Attr', ""', '"", 'join'), (('Call', ('Attr', 'data_to_save', 'keys'), (), ()),), ())","('Call', 1, 0)",data_to_save,"fields = ', '.join(data_to_save.keys())"
.\crm.py,225,fields,"('Call', ('Attr', ""', '"", 'join'), (('Call', ('Attr', 'insert_data', 'keys'), (), ()),), ())","('Call', 1, 0)",insert_data,"fields = ', '.join(insert_data.keys())"
.\product_db.py,170,fields,"('Call', ('Attr', ""', '"", 'join'), (('Call', ('Attr', 'insert_data', 'keys'), (), ()),), ())","('Call', 1, 0)",insert_data,"fields = ', '.join(insert_data.keys()); placeholders = ', '.join(['?'] * len(insert_data))"
.\database.py,1268,fields,"('List', (('Const', ""'name'""), ('Const', ""'logo_base64'""), ('Const', ""'street'""), ('Const', ""'zip_code'""), ('Const', ""'city'""), ('Const', ""'phone'""), ('Const', ""'email'""), ('Const', ""'website'""), ('Const', ""'tax_id'""), ('Const', ""'commercial_register'""), ('Const', ""'bank_details'""), ('Const', ""'pdf_footer_text'""), ('Const', ""'is_default'""), ('Const', ""'created_at'""), ('Const', ""'updated_at'"")))","('List', 15)",,"fields = [""name"", ""logo_base64"", ""street"", ""zip_code"", ""city"", ""phone"", ""email"", ""website"","
.\crm.py,173,fields,"('Other', 'ListComp')","('Other', 'ListComp')","data_to_save,k","fields = [f""{k}=?"" for k in data_to_save if k != 'id']"
.\crm.py,218,fields,"('Other', 'ListComp')","('Other', 'ListComp')","insert_data,k","fields = [f""{k}=?"" for k in insert_data if k != 'id']"
.\crm_dashboard_ui.py,258,fig,"('Call', ('Attr', 'go', 'Figure'), (('Call', ('Attr', 'go', 'Funnel'), (), (('textinfo', ('Const', ""'value+percent initial'"")), ('x', ('Subscript', ('Name', 'df_pipeline'), ('Const', ""'Anzahl'""))), ('y', ('Subscript', ('Name', 'df_pipeline'), ('Const', ""'Phase'""))))),), ())","('Call', 1, 0)","df_pipeline,go",fig = go.Figure(go.Funnel(
.\analysis.py,5791,fig,"('Call', ('Attr', 'go', 'Figure'), (), (('data', ('Call', ('Attr', 'go', 'Heatmap'), (), (('colorscale', ('Const', ""'RdYlGn_r'"")), ('hovertemplate', ('Const', ""'Monat: %{y}<br>Stunde: %{x}:00<br>Verschattung: %{z:.2f}%<extra></extra>'"")), ('text', ('Name', 'shading_matrix')), ('textfont', ('Dict', (('KV', ('Const', ""'size'""), ('Const', '10')),))), ('texttemplate', ('Const', ""'%{text:.2f}%'"")), ('x', ('Name', 'hours')), ('y', ('Name', 'months')), ('z', ('Name', 'shading_matrix'))))),))","('Call', 0, 1)","go,hours,months,shading_matrix",fig = go.Figure(
.\analysis.py,5597,fig,"('Call', ('Attr', 'go', 'Figure'), (), (('data', ('List', (('Call', ('Attr', 'go', 'Sankey'), (), (('link', ('Call', ('Name', 'dict'), (), (('color', ('Subscript', ('Name', 'energy_flows'), ('Const', ""'colors'""))), ('source', ('Subscript', ('Name', 'energy_flows'), ('Const', ""'sources'""))), ('target', ('Subscript', ('Name', 'energy_flows'), ('Const', ""'targets'""))), ('value', ('Subscript', ('Name', 'energy_flows'), ('Const', ""'values'"")))))), ('node', ('Call', ('Name', 'dict'), (), (('color', ('List', (('Const', ""'#F59E0B'""), ('Const', ""'#10B981'""), ('Const', ""'#3B82F6'""), ('Const', ""'#6366F1'""), ('Const', ""'#8B5CF6'""), ('Const', ""'#EF4444'""), ('Const', ""'#6B7280'""), ('Const', ""'#DC2626'"")))), ('label', ('List', (('Const', ""'Photovoltaik-Erzeugung'""), ('Const', ""'Direktverbrauch'""), ('Const', ""'Batterieladung'""), ('Const', ""'Netzeinspeisung'""), ('Const', ""'Batterieentladung'""), ('Const', ""'Netzbezug'""), ('Const', ""'Hausverbrauch'""), ('Const', ""'Verluste'"")))), ('line', ('Call', ('Name', 'dict'), (), (('color', ('Const', ""'black'"")), ('width', ('Const', '0.5'))))), ('pad', ('Const', '15')), ('thickness', ('Const', '20'))))))),))),))","('Call', 0, 1)","dict,energy_flows,go",fig = go.Figure(
.\analysis.py,3200,fig,"('Call', ('Attr', 'go', 'Figure'), (), (('data', ('List', (('Call', ('Attr', 'go', 'Sankey'), (), (('link', ('Call', ('Name', 'dict'), (), (('source', ('List', (('Const', '0'), ('Const', '0'), ('Const', '3'), ('Const', '1')))), ('target', ('List', (('Const', '1'), ('Const', '2'), ('Const', '4'), ('Const', '4')))), ('value', ('List', (('Subscript', ('Name', 'system_data'), ('Const', ""'self_consumption_kwh'"")), ('Subscript', ('Name', 'grid_results'), ('Const', ""'grid_feed_in_kwh'"")), ('Subscript', ('Name', 'grid_results'), ('Const', ""'grid_purchase_kwh'"")), ('Subscript', ('Name', 'system_data'), ('Const', ""'self_consumption_kwh'"")))))))), ('node', ('Call', ('Name', 'dict'), (), (('color', ('List', (('Const', ""'#F59E0B'""), ('Const', ""'#10B981'""), ('Const', ""'#3B82F6'""), ('Const', ""'#EF4444'""), ('Const', ""'#6B7280'"")))), ('label', ('List', (('Const', ""'Photovoltaik-Erzeugung'""), ('Const', ""'Eigenverbrauch'""), ('Const', ""'Netzeinspeisung'""), ('Const', ""'Netzbezug'""), ('Const', ""'Gesamtverbrauch'"")))), ('line', ('Call', ('Name', 'dict'), (), (('color', ('Const', ""'black'"")), ('width', ('Const', '0.5'))))), ('pad', ('Const', '15')), ('thickness', ('Const', '20'))))))),))),))","('Call', 0, 1)","dict,go,grid_results,system_data",fig = go.Figure(
.\analysis.py,1114,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,1270,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,1345,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,1356,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,1524,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,1568,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,2064,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,2637,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,2655,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,3142,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,3279,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,3365,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,3427,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,3478,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,4601,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,4608,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,4642,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,5470,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,5513,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,5672,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,5946,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,6067,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,6171,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,6258,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,8846,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,8941,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,9025,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,9174,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\crm_dashboard_ui.py,299,fig,"('Call', ('Attr', 'go', 'Figure'), (), ())","('Call', 0, 0)",go,fig = go.Figure()
.\analysis.py,4865,fig,"('Call', ('Attr', 'px', 'area'), (('Name', 'df_cf'),), (('markers', ('Const', 'True')), ('title', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'chart_title_cumulative_cashflow'""), ('Const', ""'Kumulierter Cashflow über die Laufzeit (2D)'"")), ())), ('x', ('Const', ""'Jahr'"")), ('y', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'cumulative_cashflow_label'""), ('Const', ""'Kumulierter Cashflow (€)'"")), ()))))","('Call', 1, 4)","df_cf,get_text,px,texts_local",fig = px.area(
.\analysis.py,4907,fig,"('Call', ('Attr', 'px', 'area'), (('Name', 'df_cf'),), (('markers', ('Const', 'True')), ('title', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'chart_title_cumulative_cashflow'""), ('Const', ""'Kumulierter Cashflow über die Laufzeit (2D)'"")), ())), ('x', ('Const', ""'Jahr'"")), ('y', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'cumulative_cashflow_label'""), ('Const', ""'Kumulierter Cashflow (€)'"")), ()))))","('Call', 1, 4)","df_cf,get_text,px,texts_local",fig = px.area(
.\analysis.py,1231,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'data'),), (('color_discrete_sequence', ('Name', 'colors')), ('orientation', ('Const', ""'h'"")), ('title', ('Name', 'title')), ('x', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '1'))), ('y', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '0')))))","('Call', 1, 5)","colors,data,px,title",fig = px.bar(
.\analysis.py,1491,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'data'),), (('color_discrete_sequence', ('Name', 'colors')), ('orientation', ('Const', ""'h'"")), ('title', ('Name', 'title')), ('x', ('Subscript', ('Attr', 'data', 'columns'), ('Other', 'Slice'))), ('y', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '0')))))","('Call', 1, 5)","colors,data,px,title",fig = px.bar(
.\analysis.py,1240,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'data'),), (('color_discrete_sequence', ('Name', 'colors')), ('title', ('Name', 'title')), ('x', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '0'))), ('y', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '1')))))","('Call', 1, 4)","colors,data,px,title",fig = px.bar(
.\analysis.py,1482,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'data'),), (('color_discrete_sequence', ('Name', 'colors')), ('title', ('Name', 'title')), ('x', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '0'))), ('y', ('Subscript', ('Attr', 'data', 'columns'), ('Other', 'Slice')))))","('Call', 1, 4)","colors,data,px,title",fig = px.bar(
.\analysis.py,1190,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('labels', ('Dict', (('KV', ('Const', ""'labels'""), ('Name', 'x_label')), ('KV', ('Const', ""'values'""), ('Name', 'y_label'))))), ('orientation', ('Const', ""'h'"")), ('title', ('Name', 'title')), ('x', ('Const', ""'values'"")), ('y', ('Const', ""'labels'""))))","('Call', 1, 6)","colors,df,px,title,x_label,y_label",fig = px.bar(
.\analysis.py,1200,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('labels', ('Dict', (('KV', ('Const', ""'labels'""), ('Name', 'x_label')), ('KV', ('Const', ""'values'""), ('Name', 'y_label'))))), ('title', ('Name', 'title')), ('x', ('Const', ""'labels'"")), ('y', ('Const', ""'values'""))))","('Call', 1, 5)","colors,df,px,title,x_label,y_label",fig = px.bar(
.\analysis.py,1444,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('labels', ('Dict', (('KV', ('Const', ""'value'""), ('Name', 'y_label')), ('KV', ('Const', ""'variable'""), ('Const', ""'Datenreihe'""))))), ('orientation', ('Const', ""'h'"")), ('title', ('Name', 'title')), ('x', ('Subscript', ('Attr', 'df', 'columns'), ('Other', 'Slice'))), ('y', ('Const', ""'Kategorie'""))))","('Call', 1, 6)","colors,df,px,title,y_label",fig = px.bar(
.\analysis.py,1434,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('labels', ('Dict', (('KV', ('Const', ""'value'""), ('Name', 'y_label')), ('KV', ('Const', ""'variable'""), ('Const', ""'Datenreihe'""))))), ('title', ('Name', 'title')), ('x', ('Const', ""'Kategorie'"")), ('y', ('Subscript', ('Attr', 'df', 'columns'), ('Other', 'Slice')))))","('Call', 1, 5)","colors,df,px,title,y_label",fig = px.bar(
.\analysis.py,1157,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('labels', ('Dict', (('KV', ('Const', ""'x'""), ('Name', 'x_label')), ('KV', ('Const', ""'y'""), ('Name', 'y_label'))))), ('title', ('Name', 'title')), ('x', ('Const', ""'x'"")), ('y', ('Const', ""'y'""))))","('Call', 1, 5)","colors,df,px,title,x_label,y_label",fig = px.bar(
.\analysis.py,1147,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('labels', ('Dict', (('KV', ('Const', ""'x'""), ('Name', 'y_label')), ('KV', ('Const', ""'y'""), ('Name', 'x_label'))))), ('orientation', ('Const', ""'h'"")), ('title', ('Name', 'title')), ('x', ('Const', ""'y'"")), ('y', ('Const', ""'x'""))))","('Call', 1, 6)","colors,df,px,title,x_label,y_label",fig = px.bar(
.\analysis.py,1339,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('labels', ('Dict', (('KV', ('Const', ""'labels'""), ('Name', 'x_label')), ('KV', ('Const', ""'values'""), ('Name', 'y_label'))))), ('orientation', ('Const', ""'h'"")), ('title', ('Name', 'title')), ('x', ('Const', ""'values'"")), ('y', ('Const', ""'labels'""))))","('Call', 1, 5)","df,px,title,x_label,y_label","fig = px.bar(df, x=""values"", y=""labels"", orientation=""h"", title=title, labels={""values"": y_label, ""labels"": x_label})"
.\analysis.py,1337,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('labels', ('Dict', (('KV', ('Const', ""'labels'""), ('Name', 'x_label')), ('KV', ('Const', ""'values'""), ('Name', 'y_label'))))), ('title', ('Name', 'title')), ('x', ('Const', ""'labels'"")), ('y', ('Const', ""'values'""))))","('Call', 1, 4)","df,px,title,x_label,y_label","fig = px.bar(df, x=""labels"", y=""values"", title=title, labels={""labels"": x_label, ""values"": y_label})"
.\analysis.py,1328,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('labels', ('Dict', (('KV', ('Const', ""'x'""), ('Name', 'x_label')), ('KV', ('Const', ""'y'""), ('Name', 'y_label'))))), ('title', ('Name', 'title')), ('x', ('Const', ""'x'"")), ('y', ('Const', ""'y'""))))","('Call', 1, 4)","df,px,title,x_label,y_label","fig = px.bar(df, x=""x"", y=""y"", title=title, labels={""x"": x_label, ""y"": y_label})"
.\analysis.py,1330,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df'),), (('labels', ('Dict', (('KV', ('Const', ""'x'""), ('Name', 'y_label')), ('KV', ('Const', ""'y'""), ('Name', 'x_label'))))), ('orientation', ('Const', ""'h'"")), ('title', ('Name', 'title')), ('x', ('Const', ""'y'"")), ('y', ('Const', ""'x'""))))","('Call', 1, 5)","df,px,title,x_label,y_label","fig = px.bar(df, x=""y"", y=""x"", orientation=""h"", title=title, labels={""y"": x_label, ""x"": y_label})"
.\analysis.py,4893,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df_cf'),), (('text_auto', ('Const', 'True')), ('title', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'chart_title_cumulative_cashflow'""), ('Const', ""'Kumulierter Cashflow über die Laufzeit (2D)'"")), ())), ('x', ('Const', ""'Jahr'"")), ('y', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'cumulative_cashflow_label'""), ('Const', ""'Kumulierter Cashflow (€)'"")), ()))))","('Call', 1, 4)","df_cf,get_text,px,texts_local",fig = px.bar(
.\analysis.py,2692,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df_comparison'),), (('barmode', ('Const', ""'group'"")), ('color_discrete_sequence', ('Name', 'colors')), ('orientation', ('Const', ""'h'"")), ('title', ('Const', ""'Verbrauch vs. Produktion (Jahr 1)'"")), ('x', ('List', (('Const', ""'Verbrauch (kWh)'""), ('Const', ""'Produktion (kWh)'"")))), ('y', ('Const', ""'Monat'""))))","('Call', 1, 6)","colors,df_comparison,px",fig = px.bar(
.\analysis.py,2675,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df_comparison'),), (('barmode', ('Const', ""'group'"")), ('color_discrete_sequence', ('Name', 'colors')), ('title', ('Const', ""'Verbrauch vs. Produktion (Jahr 1)'"")), ('x', ('Const', ""'Monat'"")), ('y', ('List', (('Const', ""'Verbrauch (kWh)'""), ('Const', ""'Produktion (kWh)'""))))))","('Call', 1, 5)","colors,df_comparison,px",fig = px.bar(
.\analysis.py,4629,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df_monthly'),), (('barmode', ('Const', ""'group'"")), ('labels', ('Dict', (('KV', ('Const', ""'Monat'""), ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'month_axis_label_chart'""), ('Const', ""'Monat'"")), ())),))), ('title', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'chart_title_monthly_comparison'""), ('Const', ""'Monatlicher Vergleich: Produktion vs. Verbrauch (Jahr 1)'"")), ())), ('x', ('Const', ""'Monat'"")), ('y', ('List', (('Name', 'prod_label_fig'), ('Name', 'cons_label_fig'))))))","('Call', 1, 5)","cons_label_fig,df_monthly,get_text,prod_label_fig,px,texts_local",fig = px.bar(
.\analysis.py,4777,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'df_proj'),), (('text_auto', ('Const', 'True')), ('title', ('Name', 'title_text_proj')), ('x', ('Const', ""'Jahr'"")), ('y', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'projected_annual_cost_label'""), ('Const', ""'Jährliche Stromkosten ohne Photovoltaik (€)'"")), ()))))","('Call', 1, 4)","df_proj,get_text,px,texts_local,title_text_proj",fig = px.bar(
.\analysis.py,6144,fig,"('Call', ('Attr', 'px', 'bar'), (('Name', 'sensitivity_df'),), (('color', ('Const', ""'impact'"")), ('color_continuous_scale', ('Const', ""'RdBu_r'"")), ('orientation', ('Const', ""'h'"")), ('title', ('Const', ""'Einfluss der Parameter auf NPV'"")), ('x', ('Const', ""'impact'"")), ('y', ('Const', ""'parameter'""))))","('Call', 1, 6)","px,sensitivity_df",fig = px.bar(
.\analysis.py,1248,fig,"('Call', ('Attr', 'px', 'line'), (('Name', 'data'),), (('color_discrete_sequence', ('Name', 'colors')), ('title', ('Name', 'title')), ('x', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '0'))), ('y', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '1')))))","('Call', 1, 4)","colors,data,px,title",fig = px.line(
.\analysis.py,1501,fig,"('Call', ('Attr', 'px', 'line'), (('Name', 'data'),), (('color_discrete_sequence', ('Name', 'colors')), ('title', ('Name', 'title')), ('x', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '0'))), ('y', ('Subscript', ('Attr', 'data', 'columns'), ('Other', 'Slice')))))","('Call', 1, 4)","colors,data,px,title",fig = px.line(
.\analysis.py,1209,fig,"('Call', ('Attr', 'px', 'line'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('labels', ('Dict', (('KV', ('Const', ""'labels'""), ('Name', 'x_label')), ('KV', ('Const', ""'values'""), ('Name', 'y_label'))))), ('title', ('Name', 'title')), ('x', ('Const', ""'labels'"")), ('y', ('Const', ""'values'""))))","('Call', 1, 5)","colors,df,px,title,x_label,y_label",fig = px.line(
.\analysis.py,1455,fig,"('Call', ('Attr', 'px', 'line'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('labels', ('Dict', (('KV', ('Const', ""'value'""), ('Name', 'y_label')), ('KV', ('Const', ""'variable'""), ('Const', ""'Datenreihe'""))))), ('title', ('Name', 'title')), ('x', ('Const', ""'Kategorie'"")), ('y', ('Subscript', ('Attr', 'df', 'columns'), ('Other', 'Slice')))))","('Call', 1, 5)","colors,df,px,title,y_label",fig = px.line(
.\analysis.py,1166,fig,"('Call', ('Attr', 'px', 'line'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('labels', ('Dict', (('KV', ('Const', ""'x'""), ('Name', 'x_label')), ('KV', ('Const', ""'y'""), ('Name', 'y_label'))))), ('title', ('Name', 'title')), ('x', ('Const', ""'x'"")), ('y', ('Const', ""'y'""))))","('Call', 1, 5)","colors,df,px,title,x_label,y_label",fig = px.line(
.\analysis.py,4879,fig,"('Call', ('Attr', 'px', 'line'), (('Name', 'df_cf'),), (('markers', ('Const', 'True')), ('title', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'chart_title_cumulative_cashflow'""), ('Const', ""'Kumulierter Cashflow über die Laufzeit (2D)'"")), ())), ('x', ('Const', ""'Jahr'"")), ('y', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'cumulative_cashflow_label'""), ('Const', ""'Kumulierter Cashflow (€)'"")), ()))))","('Call', 1, 4)","df_cf,get_text,px,texts_local",fig = px.line(
.\analysis.py,2684,fig,"('Call', ('Attr', 'px', 'line'), (('Name', 'df_comparison'),), (('color_discrete_sequence', ('Name', 'colors')), ('title', ('Const', ""'Verbrauch vs. Produktion (Jahr 1)'"")), ('x', ('Const', ""'Monat'"")), ('y', ('List', (('Const', ""'Verbrauch (kWh)'""), ('Const', ""'Produktion (kWh)'""))))))","('Call', 1, 4)","colors,df_comparison,px",fig = px.line(
.\analysis.py,4765,fig,"('Call', ('Attr', 'px', 'line'), (('Name', 'df_proj'),), (('markers', ('Const', 'True')), ('title', ('Name', 'title_text_proj')), ('x', ('Const', ""'Jahr'"")), ('y', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'projected_annual_cost_label'""), ('Const', ""'Jährliche Stromkosten ohne Photovoltaik (€)'"")), ()))))","('Call', 1, 4)","df_proj,get_text,px,texts_local,title_text_proj",fig = px.line(
.\analysis.py,4789,fig,"('Call', ('Attr', 'px', 'line'), (('Name', 'df_proj'),), (('markers', ('Const', 'True')), ('title', ('Name', 'title_text_proj')), ('x', ('Const', ""'Jahr'"")), ('y', ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'projected_annual_cost_label'""), ('Const', ""'Jährliche Stromkosten ohne Photovoltaik (€)'"")), ()))))","('Call', 1, 4)","df_proj,get_text,px,texts_local,title_text_proj",fig = px.line(
.\analysis.py,1257,fig,"('Call', ('Attr', 'px', 'pie'), (('Name', 'data'),), (('color_discrete_sequence', ('Name', 'colors')), ('hole', ('Name', 'hole')), ('names', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '0'))), ('title', ('Name', 'title')), ('values', ('Subscript', ('Attr', 'data', 'columns'), ('Const', '1')))))","('Call', 1, 5)","colors,data,hole,px,title",fig = px.pie(
.\analysis.py,1219,fig,"('Call', ('Attr', 'px', 'pie'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('hole', ('Name', 'hole')), ('names', ('Const', ""'labels'"")), ('title', ('Name', 'title')), ('values', ('Const', ""'values'""))))","('Call', 1, 5)","colors,df,hole,px,title",fig = px.pie(
.\analysis.py,1176,fig,"('Call', ('Attr', 'px', 'pie'), (('Name', 'df'),), (('color_discrete_sequence', ('Name', 'colors')), ('hole', ('Name', 'hole')), ('names', ('Const', ""'x'"")), ('title', ('Name', 'title')), ('values', ('Const', ""'y'""))))","('Call', 1, 5)","colors,df,hole,px,title",fig = px.pie(
.\analysis.py,1342,fig,"('Call', ('Attr', 'px', 'pie'), (('Name', 'df'),), (('hole', ('Name', 'hole')), ('names', ('Const', ""'labels'"")), ('title', ('Name', 'title')), ('values', ('Const', ""'values'""))))","('Call', 1, 4)","df,hole,px,title","fig = px.pie(df, names=""labels"", values=""values"", title=title, hole=hole)"
.\analysis.py,1333,fig,"('Call', ('Attr', 'px', 'pie'), (('Name', 'df'),), (('hole', ('Name', 'hole')), ('names', ('Const', ""'x'"")), ('title', ('Name', 'title')), ('values', ('Const', ""'y'""))))","('Call', 1, 4)","df,hole,px,title","fig = px.pie(df, names=""x"", values=""y"", title=title, hole=hole)"
.\analysis.py,6367,fig,"('Call', ('Attr', 'px', 'pie'), (('Name', 'materials_df'),), (('color_discrete_map', ('Dict', (('KV', ('Const', ""'Aluminium'""), ('Const', ""'#6B7280'"")), ('KV', ('Const', ""'Glas'""), ('Const', ""'#10B981'"")), ('KV', ('Const', ""'Kunststoff'""), ('Const', ""'#EF4444'"")), ('KV', ('Const', ""'Kupfer'""), ('Const', ""'#F59E0B'"")), ('KV', ('Const', ""'Silizium'""), ('Const', ""'#3B82F6'"")), ('KV', ('Const', ""'Sonstiges'""), ('Const', ""'#8B5CF6'""))))), ('names', ('Const', ""'material'"")), ('title', ('Const', ""'Materialzusammensetzung der Photovoltaik-Anlage'"")), ('values', ('Const', ""'weight_kg'""))))","('Call', 1, 4)","materials_df,px",fig = px.pie(
.\analysis.py,1470,fig,"('Call', ('Attr', 'px', 'pie'), (('Name', 'pie_df'),), (('color_discrete_sequence', ('Name', 'colors')), ('hole', ('Name', 'hole')), ('names', ('Const', ""'Reihe'"")), ('title', ('Name', 'title')), ('values', ('Const', ""'Wert'""))))","('Call', 1, 5)","colors,hole,pie_df,px,title",fig = px.pie(
.\analysis.py,1512,fig,"('Call', ('Attr', 'px', 'pie'), (('Name', 'pie_df'),), (('color_discrete_sequence', ('Name', 'colors')), ('hole', ('Name', 'hole')), ('names', ('Const', ""'Reihe'"")), ('title', ('Name', 'title')), ('values', ('Const', ""'Wert'""))))","('Call', 1, 5)","colors,hole,pie_df,px,title",fig = px.pie(
.\analysis.py,3246,fig,"('Call', ('Attr', 'px', 'pie'), (), (('color_discrete_map', ('Dict', (('KV', ('Const', ""'Bewölkt'""), ('Const', ""'#9CA3AF'"")), ('KV', ('Const', ""'Regnerisch'""), ('Const', ""'#6B7280'"")), ('KV', ('Const', ""'Sonnig'""), ('Const', ""'#F59E0B'"")), ('KV', ('Const', ""'Teilweise bewölkt'""), ('Const', ""'#FCD34D'""))))), ('names', ('Call', ('Name', 'list'), (('Call', ('Attr', 'weather_data', 'keys'), (), ()),), ())), ('title', ('Const', ""'Jahresertrag nach Wetterlage'"")), ('values', ('Call', ('Name', 'list'), (('Call', ('Attr', 'weather_data', 'values'), (), ()),), ()))))","('Call', 0, 4)","list,px,weather_data",fig = px.pie(
.\analysis.py,2078,fig,"('Call', ('Attr', 'px', 'pie'), (), (('hole', ('Name', 'hole')), ('names', ('Other', 'ListComp')), ('title', ('Name', 'title')), ('values', ('Name', 'shares'))))","('Call', 0, 4)","h,hole,hours,px,shares,title",fig = px.pie(
.\analysis.py,6436,fig,"('Call', ('Attr', 'px', 'scatter'), (('Name', 'potentials_df'),), (('color', ('Const', ""'category'"")), ('hover_data', ('List', (('Const', ""'description'""), ('Const', ""'cost_estimate'"")))), ('labels', ('Dict', (('KV', ('Const', ""'benefit_potential'""), ('Const', ""'Nutzenpotenzial (€/Jahr)'"")), ('KV', ('Const', ""'implementation_effort'""), ('Const', ""'Implementierungsaufwand'"")), ('KV', ('Const', ""'roi_improvement'""), ('Const', ""'ROI-Verbesserung (%)'""))))), ('size', ('Const', ""'roi_improvement'"")), ('title', ('Const', ""'Optimierungsmatrix'"")), ('x', ('Const', ""'implementation_effort'"")), ('y', ('Const', ""'benefit_potential'""))))","('Call', 1, 7)","potentials_df,px",fig = px.scatter(
.\analysis.py,1104,fig,"('Call', ('Name', '_create_chart_by_type'), (('Name', 'data'), ('Name', 'chart_type'), ('Name', 'colors'), ('Name', 'title'), ('Name', 'x_label'), ('Name', 'y_label')), ())","('Call', 6, 0)","_create_chart_by_type,chart_type,colors,data,title,x_label,y_label","fig = _create_chart_by_type(data, chart_type, colors, title, x_label, y_label)"
.\analysis.py,5045,fig,"('Call', ('Name', 'create_four_type_chart'), (('Name', 'chart_data'),), (('chart_key', ('Other', 'JoinedStr')), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Kategorie'"")), ('y_label', ('Const', ""'Anteil (%)'""))))","('Call', 1, 4)","chart_data,chart_key_prefix,create_four_type_chart,title",fig = create_four_type_chart(
.\analysis.py,5195,fig,"('Call', ('Name', 'create_four_type_chart'), (('Name', 'chart_data'),), (('chart_key', ('Other', 'JoinedStr')), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Nutzungsart'"")), ('y_label', ('Const', ""'Anteil (%)'""))))","('Call', 1, 4)","chart_data,chart_key_prefix,create_four_type_chart,title",fig = create_four_type_chart(
.\analysis.py,4045,fig,"('Call', ('Name', 'create_multi_series_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'analysis_cost_growth_switcher_key_v6_final'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Simulationsjahr'"")), ('y_label', ('Const', ""'Strompreis (€/kWh)'""))))","('Call', 1, 4)","chart_data,create_multi_series_2d_chart,title",fig = create_multi_series_2d_chart(
.\analysis.py,3971,fig,"('Call', ('Name', 'create_multi_series_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'analysis_selfuse_stack_switcher_key_v6_final'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Simulationsjahr'"")), ('y_label', ('Const', ""'Energie (kWh)'""))))","('Call', 1, 4)","chart_data,create_multi_series_2d_chart,title",fig = create_multi_series_2d_chart(
.\analysis.py,2768,fig,"('Call', ('Name', 'create_multi_series_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'analysis_tariff_cube_switcher_key_v6_final'"")), ('title', ('Name', 'title')), ('x_label', ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'provider_label_switcher'""), ('Const', ""'Anbieter'"")), ())), ('y_label', ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'costs_label_switcher'""), ('Const', ""'Kosten (€)'"")), ()))))","('Call', 1, 4)","chart_data,create_multi_series_2d_chart,get_text,texts,title",fig = create_multi_series_2d_chart(
.\analysis.py,4306,fig,"('Call', ('Name', 'create_multi_series_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'scenario_comparison_modern_2d_chart'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Szenario'"")), ('y_label', ('Const', ""'Betrag (€)'""))))","('Call', 1, 4)","chart_data,create_multi_series_2d_chart,title",fig = create_multi_series_2d_chart(
.\analysis.py,4416,fig,"('Call', ('Name', 'create_multi_series_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'tariff_comparison_modern_2d_chart'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Monat'"")), ('y_label', ('Const', ""'Stromkosten (€)'""))))","('Call', 1, 4)","chart_data,create_multi_series_2d_chart,title",fig = create_multi_series_2d_chart(
.\analysis.py,2910,fig,"('Call', ('Name', 'create_universal_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'analysis_co2_savings_value_switcher_key_v6_final'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Jahr'"")), ('y_label', ('Const', ""'Werte'""))))","('Call', 1, 4)","chart_data,create_universal_2d_chart,title",fig = create_universal_2d_chart(
.\analysis.py,2800,fig,"('Call', ('Name', 'create_universal_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'analysis_tariff_cube_switcher_key_v6_final'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Anbieter'"")), ('y_label', ('Const', ""'Gesamtkosten €/Jahr'""))))","('Call', 1, 4)","chart_data,create_universal_2d_chart,title",fig = create_universal_2d_chart(
.\analysis.py,3622,fig,"('Call', ('Name', 'create_universal_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'co2_savings_modern_2d_chart'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Jahr'"")), ('y_label', ('Const', ""'Werte'""))))","('Call', 1, 4)","chart_data,create_universal_2d_chart,title",fig = create_universal_2d_chart(
.\analysis.py,4487,fig,"('Call', ('Name', 'create_universal_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'income_projection_modern_2d_chart'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Simulationsjahr'"")), ('y_label', ('Const', ""'Kumulierte Vorteile (€)'""))))","('Call', 1, 4)","chart_data,create_universal_2d_chart,title",fig = create_universal_2d_chart(
.\analysis.py,3765,fig,"('Call', ('Name', 'create_universal_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'investment_value_modern_2d_chart'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Maßnahme'"")), ('y_label', ('Const', ""'Gesamtrendite (%)'""))))","('Call', 1, 4)","chart_data,create_universal_2d_chart,title",fig = create_universal_2d_chart(
.\analysis.py,4224,fig,"('Call', ('Name', 'create_universal_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'roi_comparison_modern_2d_chart'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Projekt'"")), ('y_label', ('Const', ""'Jährlicher ROI (%)'""))))","('Call', 1, 4)","chart_data,create_universal_2d_chart,title",fig = create_universal_2d_chart(
.\analysis.py,4150,fig,"('Call', ('Name', 'create_universal_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'selfuse_ratio_modern_2d_chart'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Monat'"")), ('y_label', ('Const', ""'Eigenversorgungsgrad (%)'""))))","('Call', 1, 4)","chart_data,create_universal_2d_chart,title",fig = create_universal_2d_chart(
.\analysis.py,3867,fig,"('Call', ('Name', 'create_universal_2d_chart'), (('Name', 'chart_data'),), (('chart_key', ('Const', ""'storage_effect_modern_2d_chart'"")), ('title', ('Name', 'title')), ('x_label', ('Const', ""'Speicherkapazität (kWh)'"")), ('y_label', ('Const', ""'Jährl. Einsparpotenzial (€)'""))))","('Call', 1, 4)","chart_data,create_universal_2d_chart,title",fig = create_universal_2d_chart(
.\analysis.py,2126,fig,"('Call', ('Name', 'create_universal_2d_chart'), (), (('chart_key', ('Const', ""'daily_production'"")), ('data', ('Name', 'chart_data')), ('default_chart_type', ('Const', ""'Säulen'"")), ('title', ('Name', 'daily_title')), ('x_label', ('Const', ""'Stunde'"")), ('y_label', ('Const', ""'Leistung (kWh)'""))))","('Call', 0, 6)","chart_data,create_universal_2d_chart,daily_title",fig = create_universal_2d_chart(
.\analysis.py,2470,fig,"('Call', ('Name', 'create_universal_2d_chart'), (), (('chart_key', ('Const', ""'feed_in_revenue'"")), ('data', ('Name', 'chart_data')), ('default_chart_type', ('Const', ""'Säulen'"")), ('title', ('Name', 'feedin_title')), ('x_label', ('Const', ""'Monat'"")), ('y_label', ('Const', ""'Einnahmen (€)'""))))","('Call', 0, 6)","chart_data,create_universal_2d_chart,feedin_title",fig = create_universal_2d_chart(
.\analysis.py,2353,fig,"('Call', ('Name', 'create_universal_2d_chart'), (), (('chart_key', ('Const', ""'project_roi_matrix'"")), ('data', ('Name', 'chart_data')), ('default_chart_type', ('Const', ""'Säulen'"")), ('title', ('Name', 'proj_title')), ('x_label', ('Const', ""'Szenario'"")), ('y_label', ('Const', ""'ROI (%)'""))))","('Call', 0, 6)","chart_data,create_universal_2d_chart,proj_title",fig = create_universal_2d_chart(
.\analysis.py,2178,fig,"('Call', ('Name', 'create_universal_2d_chart'), (), (('chart_key', ('Const', ""'weekly_production'"")), ('data', ('Name', 'chart_data')), ('default_chart_type', ('Const', ""'Säulen'"")), ('title', ('Name', 'weekly_title')), ('x_label', ('Const', ""'Wochentag'"")), ('y_label', ('Const', ""'Produktion (kWh)'""))))","('Call', 0, 6)","chart_data,create_universal_2d_chart,weekly_title",fig = create_universal_2d_chart(
.\analysis.py,2278,fig,"('Call', ('Name', 'create_universal_2d_chart'), (), (('chart_key', ('Const', ""'yearly_production'"")), ('data', ('Name', 'chart_data')), ('default_chart_type', ('Const', ""'Säulen'"")), ('title', ('Name', 'yearly_title')), ('x_label', ('Const', ""'Monat'"")), ('y_label', ('Const', ""'Produktion (kWh)'""))))","('Call', 0, 6)","chart_data,create_universal_2d_chart,yearly_title",fig = create_universal_2d_chart(
.\analysis.py,5858,fig,"('Call', ('Name', 'make_subplots'), (), (('cols', ('Const', '1')), ('rows', ('Const', '2')), ('subplot_titles', ('Tuple', (('Const', ""'Modultemperatur'""), ('Const', ""'Leistungsverlust durch Temperatur'"")))), ('vertical_spacing', ('Const', '0.1'))))","('Call', 0, 4)",make_subplots,fig = make_subplots(
.\analysis.py,7260,fig_cost_projection,"('Call', ('Name', '_create_electricity_cost_projection_chart'), (('Name', 'results_for_display'), ('Name', 'texts'), ('Name', 'viz_settings'), ('Const', ""'cost_projection'"")), ())","('Call', 4, 0)","_create_electricity_cost_projection_chart,results_for_display,texts,viz_settings",fig_cost_projection = _create_electricity_cost_projection_chart(
.\analysis.py,7266,fig_cost_projection,"('Call', ('Name', 'apply_modern_style_to_figure'), (('Name', 'fig_cost_projection'), ('Const', ""'Stromkostenentwicklung über Zeit'"")), ())","('Call', 2, 0)","apply_modern_style_to_figure,fig_cost_projection","fig_cost_projection = apply_modern_style_to_figure(fig_cost_projection, ""Stromkostenentwicklung über Zeit"")"
.\analysis.py,7352,fig_cum_cf,"('Call', ('Name', '_create_cumulative_cashflow_chart'), (('Name', 'results_for_display'), ('Name', 'texts'), ('Name', 'viz_settings'), ('Const', ""'cum_cashflow'"")), ())","('Call', 4, 0)","_create_cumulative_cashflow_chart,results_for_display,texts,viz_settings",fig_cum_cf = _create_cumulative_cashflow_chart(
.\analysis.py,7357,fig_cum_cf,"('Call', ('Name', 'apply_modern_style_to_figure'), (('Name', 'fig_cum_cf'), ('Const', ""'Kumulativer Cashflow'"")), ())","('Call', 2, 0)","apply_modern_style_to_figure,fig_cum_cf","fig_cum_cf = apply_modern_style_to_figure(fig_cum_cf, ""Kumulativer Cashflow"")"
.\analysis.py,7228,fig_monthly_comp,"('Call', ('Name', '_create_monthly_production_consumption_chart'), (('Name', 'results_for_display'), ('Name', 'texts'), ('Name', 'viz_settings'), ('Const', ""'monthly_compare'"")), ())","('Call', 4, 0)","_create_monthly_production_consumption_chart,results_for_display,texts,viz_settings",fig_monthly_comp = _create_monthly_production_consumption_chart(
.\analysis.py,7234,fig_monthly_comp,"('Call', ('Name', 'apply_modern_style_to_figure'), (('Name', 'fig_monthly_comp'), ('Const', ""'Monatliche Energie-Bilanz'"")), ())","('Call', 2, 0)","apply_modern_style_to_figure,fig_monthly_comp","fig_monthly_comp = apply_modern_style_to_figure(fig_monthly_comp, ""Monatliche Energie-Bilanz"")"
.\crm.py,475,file_bytes,"('Call', ('Attr', 'up', 'read'), (), ())","('Call', 0, 0)",up,file_bytes = up.read()
.\admin_logo_management_ui.py,75,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\admin_logo_management_ui.py,159,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,59,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,149,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,80,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,190,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,59,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,149,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,80,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,190,file_bytes,"('Call', ('Attr', 'uploaded_file', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_file,file_bytes = uploaded_file.getvalue()
.\admin_panel.py,1155,file_deleted_fs_val,"('Const', 'False')","('Const',)",,file_deleted_fs_val = False
.\admin_panel.py,1162,file_deleted_fs_val,"('Const', 'True')","('Const',)",,file_deleted_fs_val = True
.\admin_panel.py,1167,file_deleted_fs_val,"('Const', 'True')","('Const',)",,file_deleted_fs_val = True
.\admin_logo_management_ui.py,65,file_extension,"('Call', ('Attr', ""uploaded_file.name.split('.')[-1]"", 'lower'), (), ())","('Call', 0, 0)",uploaded_file,file_extension = uploaded_file.name.split('.')[-1].lower()
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,46,file_extension,"('Call', ('Attr', ""uploaded_file.name.split('.')[-1]"", 'lower'), (), ())","('Call', 0, 0)",uploaded_file,file_extension = uploaded_file.name.split('.')[-1].lower()
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,57,file_extension,"('Call', ('Attr', ""uploaded_file.name.split('.')[-1]"", 'lower'), (), ())","('Call', 0, 0)",uploaded_file,file_extension = uploaded_file.name.split('.')[-1].lower()
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,46,file_extension,"('Call', ('Attr', ""uploaded_file.name.split('.')[-1]"", 'lower'), (), ())","('Call', 0, 0)",uploaded_file,file_extension = uploaded_file.name.split('.')[-1].lower()
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,57,file_extension,"('Call', ('Attr', ""uploaded_file.name.split('.')[-1]"", 'lower'), (), ())","('Call', 0, 0)",uploaded_file,file_extension = uploaded_file.name.split('.')[-1].lower()
.\database.py,1518,file_extension,"('Const', ""'.png'"")","('Const',)",,"file_extension = "".png""  # Default"
.\database.py,1452,file_extension,"('Subscript', ('Call', ('Attr', 'os.path', 'splitext'), (('Name', 'original_filename'),), ()), ('Const', '1'))","('Subscript',)","original_filename,os",file_extension = os.path.splitext(original_filename)[1]
.\database.py,1515,file_extension,"('Subscript', ('Call', ('Attr', 'os.path', 'splitext'), (('Name', 'original_filename'),), ()), ('Const', '1'))","('Subscript',)","original_filename,os",file_extension = os.path.splitext(original_filename)[1]
.\admin_logo_management_ui.py,77,file_format,"('Call', ('Attr', ""uploaded_file.name.split('.')[-1]"", 'upper'), (), ())","('Call', 0, 0)",uploaded_file,file_format = uploaded_file.name.split('.')[-1].upper()
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,61,file_format,"('Call', ('Attr', ""uploaded_file.name.split('.')[-1]"", 'upper'), (), ())","('Call', 0, 0)",uploaded_file,file_format = uploaded_file.name.split('.')[-1].upper()
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,82,file_format,"('Call', ('Attr', ""uploaded_file.name.split('.')[-1]"", 'upper'), (), ())","('Call', 0, 0)",uploaded_file,file_format = uploaded_file.name.split('.')[-1].upper()
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,61,file_format,"('Call', ('Attr', ""uploaded_file.name.split('.')[-1]"", 'upper'), (), ())","('Call', 0, 0)",uploaded_file,file_format = uploaded_file.name.split('.')[-1].upper()
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,82,file_format,"('Call', ('Attr', ""uploaded_file.name.split('.')[-1]"", 'upper'), (), ())","('Call', 0, 0)",uploaded_file,file_format = uploaded_file.name.split('.')[-1].upper()
.\tools\import_module_attributes_generic.py,399,file_format,"('Const', ""'csv'"")","('Const',)",,"file_format = ""csv"""
.\tools\import_module_attributes_generic.py,402,file_format,"('Const', ""'csv'"")","('Const',)",,"file_format = ""csv"""
.\tools\import_module_attributes_generic.py,357,file_format,"('Const', ""'xlsx'"")","('Const',)",,"file_format = ""xlsx"""
.\doc_output.py,2367,file_name,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","customer_name_for_file,str,timestamp_file","file_name = f""Angebot_{str(customer_name_for_file).replace(' ', '_')}_{timestamp_file}.pdf"""
.\pdf_ui.py,1178,file_name,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","file_name_customer_part,timestamp_file","file_name = f""Angebot_{file_name_customer_part}_{timestamp_file}.pdf"""
.\pdf_ui.py,1183,file_name,"('Subscript', ('Name', 'meta'), ('Const', ""'file_name'""))","('Subscript',)",meta,file_name = meta['file_name']
.\database.py,1620,file_path,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'COMPANY_DOCS_BASE_DIR'), ('Subscript', ('Name', 'row'), ('Const', ""'file_path'""))), ())","('Call', 2, 0)","COMPANY_DOCS_BASE_DIR,os,row","file_path = os.path.join(COMPANY_DOCS_BASE_DIR, row['file_path'])"
.\database.py,1659,file_path,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'COMPANY_DOCS_BASE_DIR'), ('Subscript', ('Name', 'row'), ('Const', ""'file_path'""))), ())","('Call', 2, 0)","COMPANY_DOCS_BASE_DIR,os,row","file_path = os.path.join(COMPANY_DOCS_BASE_DIR, row['file_path'])"
.\locales.py,22,file_path,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'current_dir'), ('Other', 'JoinedStr')), ())","('Call', 2, 0)","current_dir,lang_code,os","file_path = os.path.join(current_dir, f""{lang_code}.json"")"
.\tools\xlsx_validator.py,174,file_path,"('Subscript', ('Attr', 'sys', 'argv'), ('Const', '1'))","('Subscript',)",sys,file_path = sys.argv[1]
.\debug_logo_pdf.py,92,file_size,"('Call', ('Attr', 'os.path', 'getsize'), (('Name', 'temp_output'),), ())","('Call', 1, 0)","os,temp_output",file_size = os.path.getsize(temp_output)
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_pdf.py.insert.py,90,file_size,"('Call', ('Attr', 'os.path', 'getsize'), (('Name', 'temp_output'),), ())","('Call', 1, 0)","os,temp_output",file_size = os.path.getsize(temp_output)
.\tools\portings\patches\debug_logo_pdf.py.insert.py,90,file_size,"('Call', ('Attr', 'os.path', 'getsize'), (('Name', 'temp_output'),), ())","('Call', 1, 0)","os,temp_output",file_size = os.path.getsize(temp_output)
.\notwendig oder nicht\wichtig\portings\patches\test_pdf_logos.py.insert.py,91,file_size,"('Call', ('Attr', 'os.path', 'getsize'), (('Name', 'temp_pdf_path'),), ())","('Call', 1, 0)","os,temp_pdf_path",file_size = os.path.getsize(temp_pdf_path)
.\tests\test_pdf_logos.py,93,file_size,"('Call', ('Attr', 'os.path', 'getsize'), (('Name', 'temp_pdf_path'),), ())","('Call', 1, 0)","os,temp_pdf_path",file_size = os.path.getsize(temp_pdf_path)
.\tools\portings\patches\test_pdf_logos.py.insert.py,91,file_size,"('Call', ('Attr', 'os.path', 'getsize'), (('Name', 'temp_pdf_path'),), ())","('Call', 1, 0)","os,temp_pdf_path",file_size = os.path.getsize(temp_pdf_path)
.\notwendig oder nicht\wichtig\portings\patches\test_final_pdf_logos.py.insert.py,87,file_size,"('Call', ('Name', 'len'), (('Name', 'pdf_bytes'),), ())","('Call', 1, 0)","len,pdf_bytes",file_size = len(pdf_bytes)
.\tests\test_final_pdf_logos.py,89,file_size,"('Call', ('Name', 'len'), (('Name', 'pdf_bytes'),), ())","('Call', 1, 0)","len,pdf_bytes",file_size = len(pdf_bytes)
.\tools\portings\patches\test_final_pdf_logos.py.insert.py,87,file_size,"('Call', ('Name', 'len'), (('Name', 'pdf_bytes'),), ())","('Call', 1, 0)","len,pdf_bytes",file_size = len(pdf_bytes)
.\multi_offer_generator.py,720,filename,"('BoolOp', 'Or', (('Call', ('Attr', 'item', 'get'), (('Const', ""'filename'""),), ()), ('Other', 'JoinedStr')))","('BoolOp', 'Or', 2)","datetime,item","filename = item.get('filename') or f""Angebot_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf"""
.\central_pdf_system.py,2058,filename,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","customer_name,selected_layout,timestamp","filename = f""Angebot_{customer_name}_{selected_layout}_{timestamp}.pdf"""
.\gui.py,504,filename,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","customer_name,datetime","filename = f""Angebot_{customer_name}_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf"""
.\multi_offer_generator_old.py,625,filename,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","current_date,offer_id,safe_customer_name","filename = f""Angebot_{current_date}_{offer_id}_{safe_customer_name}.pdf"""
.\multi_offer_generator_old.py,1247,filename,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","datetime,safe_company_name,safe_customer_name","filename = f""Angebot_{safe_customer_name}_{safe_company_name}_{datetime.now().strftime('%Y%m%d')}.pdf"""
.\pdf_erstellen_komplett.py,247,filename,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","base_dir,os,project_data,str","filename = f""Angebot_{project_data.get('customer_data',{}).get('last_name','Unbekannt')}_{os.path.basename(str(base_dir))}.pdf"""
.\tools\import_module_attributes_generic.py,529,files,"('Call', ('Name', 'sorted'), (('Other', 'ListComp'),), ())","('Call', 1, 0)","p,sorted,str,x",files = sorted([str(x) for x in p.rglob('*') if x.is_file()])
.\tools\import_module_attributes_generic.py,531,files,"('List', (('Call', ('Name', 'str'), (('Name', 'p'),), ()),))","('List', 1)","p,str",files = [str(p)]
.\analysis.py,1664,final_colorway,"('Const', 'None')","('Const',)",,final_colorway = None
.\analysis.py,1683,final_colorway,"('Name', 'color_discrete_sequence')","('Name',)",color_discrete_sequence,final_colorway = color_discrete_sequence
.\analysis.py,1670,final_colorway,"('Name', 'dynamic_colors')","('Name',)",dynamic_colors,final_colorway = dynamic_colors
.\analysis.py,1694,final_colorway,"('Name', 'px_color_sequence')","('Name',)",px_color_sequence,final_colorway = px_color_sequence
.\database.py,936,final_column_definition_for_alter,"('Name', 'column_type_for_alter')","('Name',)",column_type_for_alter,final_column_definition_for_alter = column_type_for_alter
.\database.py,939,final_column_definition_for_alter,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","default_value_for_alter,simple_type","final_column_definition_for_alter = f""{simple_type} DEFAULT {default_value_for_alter}"""
.\live_preview_helpers.py,38,final_price,"('Add', (('Name', 'additional_costs'), ('Sub', ('Name', 'final_price'), ('Name', 'special_discount'))))","('Add', (('Name',), ('Sub', ('Name',), ('Name',))))","additional_costs,final_price,special_discount",final_price = final_price - special_discount + additional_costs
.\gui.py,165,final_price,"('Add', (('Name', 'price_after_discounts'), ('Name', 'total_aufpreise_zuschlaege')))","('Add', (('Name',), ('Name',)))","price_after_discounts,total_aufpreise_zuschlaege",final_price = price_after_discounts + total_aufpreise_zuschlaege
.\pdf_ui.py,111,final_price,"('Add', (('Name', 'price_after_discounts'), ('Name', 'total_aufpreise_zuschlaege')))","('Add', (('Name',), ('Name',)))","price_after_discounts,total_aufpreise_zuschlaege",final_price = price_after_discounts + total_aufpreise_zuschlaege
.\live_preview_helpers.py,32,final_price,"('Mult', (('Add', (('Const', '1'), ('Div', ('Name', 'surcharge_percent'), ('Const', '100')))), ('Name', 'final_price'), ('Sub', ('Const', '1'), ('Div', ('Name', 'discount_percent'), ('Const', '100')))))","('Mult', (('Add', (('Const',), ('Div', ('Name',), ('Const',)))), ('Name',), ('Sub', ('Const',), ('Div', ('Name',), ('Const',)))))","discount_percent,final_price,surcharge_percent",final_price = final_price * (1 - discount_percent/100) * (1 + surcharge_percent/100)
.\live_preview_helpers.py,26,final_price,"('Name', 'base_price')","('Name',)",base_price,final_price = base_price
.\pdf_generator.py,1782,final_price_val,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'final_price'""),), ())","('Call', 1, 0)",analysis_results,final_price_val = analysis_results.get('final_price')
.\pdf_generator.py,1801,final_price_val,"('Call', ('Name', 'next'), (('Other', 'GeneratorExp'), ('Const', 'None')), ())","('Call', 2, 0)","float,int,isinstance,next,totals_candidates,v","final_price_val = next((v for v in totals_candidates if isinstance(v, (int, float)) and v > 0), None)"
.\pdf_generator.py,1789,final_price_val,"('Name', 'fp')","('Name',)",fp,final_price_val = fp
.\analysis.py,132,final_title,"('BoolOp', 'Or', (('Const', ""'Diagramm'""), ('Name', 'title_override')))","('BoolOp', 'Or', 2)",title_override,"final_title = title_override or ""Diagramm"""
.\analysis.py,128,final_title,"('Call', ('Attr', 't', 'strip'), (), ())","('Call', 0, 0)",t,final_title = t.strip()
.\analysis.py,122,final_title,"('Const', 'None')","('Const',)",,final_title = None
.\admin_panel.py,1456,final_valid_full_form,"('Const', 'False')","('Const',)",,"if item_tariff_f.get(""kwp_min"", 0.0) >= item_tariff_f.get(""kwp_max"", 0.0): final_valid_full_form = False; break"
.\admin_panel.py,1454,final_valid_full_form,"('Const', 'True')","('Const',)",,final_processed_tariffs_full = rendered_tariffs_full_ui; final_valid_full_form = True
.\admin_panel.py,1440,final_valid_parts_form,"('Const', 'False')","('Const',)",,"if item_tariff.get(""kwp_min"", 0.0) >= item_tariff.get(""kwp_max"", 0.0): final_valid_parts_form = False; break"
.\admin_panel.py,1438,final_valid_parts_form,"('Const', 'True')","('Const',)",,final_processed_tariffs_parts = rendered_tariffs_parts_ui; final_valid_parts_form = True
.\heatpump_pricing.py,231,financing,"('BoolOp', 'Or', (('Call', ('Attr', 'offer', 'get'), (('Const', ""'financing'""),), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",offer,"financing = offer.get(""financing"") or {}"
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,179,financing,"('BoolOp', 'Or', (('Call', ('Attr', 'offer', 'get'), (('Const', ""'financing'""),), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",offer,"financing = offer.get(""financing"") or {}"
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,179,financing,"('BoolOp', 'Or', (('Call', ('Attr', 'offer', 'get'), (('Const', ""'financing'""),), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",offer,"financing = offer.get(""financing"") or {}"
.\pdf_template_engine\placeholders.py,2522,financing,"('Call', ('Attr', 'hp_offer', 'get'), (('Const', ""'financing'""), ('Dict', ())), ())","('Call', 2, 0)",hp_offer,"financing = hp_offer.get('financing', {})"
.\analysis.py,7769,financing_amount,"('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'desired_financing_amount'""), ('Const', '0')), ())","('Call', 2, 0)",customer_data,"financing_amount = customer_data.get(""desired_financing_amount"", 0)"
.\analysis.py,7857,financing_amount,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Finanzierungsbetrag (€)'""),), (('key', ('Const', ""'financing_amount_analysis'"")), ('max_value', ('Name', 'total_investment')), ('min_value', ('Const', '1000.0')), ('step', ('Const', '500.0')), ('value', ('Call', ('Name', 'min'), (('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'desired_financing_amount'""), ('Mult', (('Const', '0.8'), ('Name', 'total_investment')))), ()), ('Name', 'total_investment')), ()))))","('Call', 1, 5)","customer_data,min,st,total_investment",financing_amount = st.number_input(
.\analysis.py,6684,financing_amount,"('Subscript', ('Name', 'financing_summary'), ('Const', ""'financing_amount'""))","('Subscript',)",financing_summary,"financing_amount = financing_summary[""financing_amount""]"
.\pdf_generator.py,1877,financing_config,"('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'financing_config'""), ('Dict', ())), ())","('Call', 2, 0)",inclusion_options,"financing_config = inclusion_options.get(""financing_config"", {})"
.\doc_output.py,2255,financing_config,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'financing_config'""), ('Dict', ())), ())","('Call', 2, 0)",st,"financing_config = st.session_state.get('financing_config', {})"
.\pdf_ui.py,488,financing_config,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'financing_config'""), ('Dict', ())), ())","('Call', 2, 0)",st,"financing_config = st.session_state.get('financing_config', {})"
.\doc_output.py,511,financing_config,"('Dict', (('KV', ('Const', ""'annual_price_increase'""), ('Name', 'annual_price_increase')), ('KV', ('Const', ""'chart_style'""), ('Name', 'chart_style')), ('KV', ('Const', ""'down_payment'""), ('Name', 'down_payment')), ('KV', ('Const', ""'include_charts'""), ('Name', 'include_charts')), ('KV', ('Const', ""'insurance_costs'""), ('Name', 'insurance_costs')), ('KV', ('Const', ""'interest_rate'""), ('Name', 'interest_rate')), ('KV', ('Const', ""'loan_duration'""), ('Name', 'loan_duration')), ('KV', ('Const', ""'maintenance_costs'""), ('Name', 'maintenance_costs')), ('KV', ('Const', ""'show_cash_flow'""), ('Name', 'show_cash_flow')), ('KV', ('Const', ""'show_comparison_table'""), ('Name', 'show_comparison_table')), ('KV', ('Const', ""'show_financing_scenarios'""), ('Name', 'show_financing_scenarios')), ('KV', ('Const', ""'show_inflation_impact'""), ('Name', 'show_inflation_impact')), ('KV', ('Const', ""'show_payback_period'""), ('Name', 'show_payback_period')), ('KV', ('Const', ""'show_roi_analysis'""), ('Name', 'show_roi_analysis')), ('KV', ('Const', ""'show_sensitivity'""), ('Name', 'show_sensitivity')), ('KV', ('Const', ""'show_tax_benefits'""), ('Name', 'show_tax_benefits')), ('KV', ('Const', ""'table_style'""), ('Name', 'table_style'))))","('Dict', 17)","annual_price_increase,chart_style,down_payment,include_charts,insurance_costs,interest_rate,loan_duration,maintenance_costs,show_cash_flow,show_comparison_table,show_financing_scenarios,show_inflation_impact,show_payback_period,show_roi_analysis,show_sensitivity,show_tax_benefits,table_style",financing_config = {
.\analysis.py,6743,financing_data,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'financing_pdf_export_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"financing_data = st.session_state.get(""financing_pdf_export_data"", {})"
.\doc_output.py,1736,financing_data,"('Call', ('Name', 'prepare_financing_data_for_pdf_export'), (('Name', 'analysis_results'), ('Name', 'texts')), ())","('Call', 2, 0)","analysis_results,prepare_financing_data_for_pdf_export,texts","financing_data = prepare_financing_data_for_pdf_export(analysis_results, texts)"
.\analysis.py,7754,financing_data,"('Subscript', ('Attr', 'st', 'session_state'), ('Const', ""'financing_pdf_export_data'""))","('Subscript',)",st,"financing_data = st.session_state[""financing_pdf_export_data""]"
.\analysis.py,7741,financing_pdf_data,"('Call', ('Name', 'prepare_financing_data_for_pdf_export'), (('Name', 'results_for_display'), ('Name', 'texts')), ())","('Call', 2, 0)","prepare_financing_data_for_pdf_export,results_for_display,texts",financing_pdf_data = prepare_financing_data_for_pdf_export(
.\analysis.py,6644,financing_pdf_data,"('Dict', ())","('Dict', 0)",,financing_pdf_data = {}
.\pdf_template_engine\placeholders.py,2330,financing_requested,"('BoolOp', 'Or', (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'financing_leasing_required'""),), ()), ('Call', ('Attr', 'project_data', 'get'), (('Const', ""'financing_needed'""),), ()), ('Call', ('Attr', 'project_data', 'get'), (('Const', ""'financing_requested'""),), ()), ('Call', ('Attr', 'project_data', 'get'), (('Const', ""'finanzierung_leasing_gewuenscht'""),), ()), ('Call', ('Attr', ""project_data.get('customer_data') or {}"", 'get'), (('Const', ""'financing_requested'""),), ()), ('Call', ('Attr', 'project_details', 'get'), (('Const', ""'financing_leasing_required'""),), ()), ('Call', ('Attr', 'project_details', 'get'), (('Const', ""'financing_needed'""),), ()), ('Call', ('Attr', ""project_details.get('customer_data') or {}"", 'get'), (('Const', ""'financing_requested'""),), ())))","('BoolOp', 'Or', 8)","project_data,project_details",financing_requested = (
.\analysis.py,7834,financing_requested,"('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'financing_requested'""), ('Const', 'False')), ())","('Call', 2, 0)",customer_data,"financing_requested = customer_data.get(""financing_requested"", False)"
.\analysis.py,7830,financing_requested,"('Const', 'False')","('Const',)",,financing_requested = False
.\heatpump_pricing.py,209,financing_result,"('Call', ('Name', 'calculate_annuity_loan'), (('Name', 'principal'), ('Call', ('Attr', 'financing', 'get'), (('Const', ""'interest_pct'""), ('Const', '3.0')), ()), ('Call', ('Name', 'int'), (('Call', ('Attr', 'financing', 'get'), (('Const', ""'years'""), ('Const', '15')), ()),), ())), ())","('Call', 3, 0)","calculate_annuity_loan,financing,int,principal","financing_result = calculate_annuity_loan(principal, financing.get(""interest_pct"", 3.0), int(financing.get(""years"", 15)))"
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,156,financing_result,"('Call', ('Name', 'calculate_annuity_loan'), (('Name', 'principal'), ('Call', ('Attr', 'financing', 'get'), (('Const', ""'interest_pct'""), ('Const', '3.0')), ()), ('Call', ('Name', 'int'), (('Call', ('Attr', 'financing', 'get'), (('Const', ""'years'""), ('Const', '15')), ()),), ())), ())","('Call', 3, 0)","calculate_annuity_loan,financing,int,principal","financing_result = calculate_annuity_loan(principal, financing.get(""interest_pct"", 3.0), int(financing.get(""years"", 15)))"
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,156,financing_result,"('Call', ('Name', 'calculate_annuity_loan'), (('Name', 'principal'), ('Call', ('Attr', 'financing', 'get'), (('Const', ""'interest_pct'""), ('Const', '3.0')), ()), ('Call', ('Name', 'int'), (('Call', ('Attr', 'financing', 'get'), (('Const', ""'years'""), ('Const', '15')), ()),), ())), ())","('Call', 3, 0)","calculate_annuity_loan,financing,int,principal","financing_result = calculate_annuity_loan(principal, financing.get(""interest_pct"", 3.0), int(financing.get(""years"", 15)))"
.\heatpump_pricing.py,204,financing_result,"('Const', 'None')","('Const',)",,financing_result = None
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,151,financing_result,"('Const', 'None')","('Const',)",,financing_result = None
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,151,financing_result,"('Const', 'None')","('Const',)",,financing_result = None
.\analysis.py,6760,financing_summary,"('Call', ('Attr', 'financing_data', 'get'), (('Const', ""'financing_summary'""), ('Dict', ())), ())","('Call', 2, 0)",financing_data,"financing_summary = financing_data.get(""financing_summary"", {})"
.\doc_output.py,1737,financing_summary,"('Call', ('Name', 'get_financing_data_summary'), (), ())","('Call', 0, 0)",get_financing_data_summary,financing_summary = get_financing_data_summary()
.\analysis.py,6671,financing_summary,"('Dict', (('KV', ('Const', ""'financing_amount'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'desired_financing_amount'""), ('Const', '0')), ())), ('KV', ('Const', ""'financing_requested'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'financing_requested'""), ('Const', 'False')), ())), ('KV', ('Const', ""'financing_type'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'financing_type'""), ('Const', ""'Nicht spezifiziert'"")), ())), ('KV', ('Const', ""'interest_rate'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'interest_rate_percent'""), ('Const', '0')), ())), ('KV', ('Const', ""'leasing_factor'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'leasing_factor_percent'""), ('Const', '0')), ())), ('KV', ('Const', ""'leasing_term'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'leasing_term_months'""), ('Const', '0')), ())), ('KV', ('Const', ""'loan_term'""), ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'loan_term_years'""), ('Const', '0')), ()))))","('Dict', 7)",customer_data,financing_summary = {
.\pdf_template_engine\placeholders.py,2342,financing_type,"('BoolOp', 'Or', (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'financing_type'""),), ()), ('Call', ('Attr', ""project_data.get('customer_data') or {}"", 'get'), (('Const', ""'financing_type'""),), ()), ('Call', ('Attr', 'project_details', 'get'), (('Const', ""'financing_type'""),), ()), ('Call', ('Attr', ""project_details.get('customer_data') or {}"", 'get'), (('Const', ""'financing_type'""),), ())))","('BoolOp', 'Or', 4)","project_data,project_details",financing_type = (
.\analysis.py,7847,financing_type,"('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'financing_type'""), ('Const', ""'Bankkredit (Annuität)'"")), ())","('Call', 2, 0)",customer_data,"financing_type = customer_data.get(""financing_type"", ""Bankkredit (Annuität)"")"
.\analysis.py,7768,financing_type,"('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'financing_type'""), ('Const', ""'Nicht spezifiziert'"")), ())","('Call', 2, 0)",customer_data,"financing_type = customer_data.get(""financing_type"", ""Nicht spezifiziert"")"
.\data_input.py,506,financing_type,"('Call', ('Attr', 'st', 'radio'), (('Const', ""'Art der Finanzierung'""),), (('horizontal', ('Const', 'True')), ('index', ('Const', '0')), ('key', ('Const', ""'financing_type_radio'"")), ('options', ('List', (('Const', ""'Bankkredit (Annuität)'""), ('Const', ""'Leasing'""), ('Const', ""'Contracting'""))))))","('Call', 1, 4)",st,financing_type = st.radio(
.\pdf_template_engine\placeholders.py,439,first,"('Call', ('Attr', ""as_str(customer.get('first_name') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,customer","first = as_str(customer.get(""first_name"") or """").strip()"
.\pdf_template_engine\placeholders.py,474,first,"('Call', ('Attr', ""as_str(customer.get('first_name') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,customer","first = as_str(customer.get(""first_name"") or """").strip()"
.\pdf_generator.py,689,first,"('Call', ('Attr', ""str(cust.get('first_name') or '')"", 'strip'), (), ())","('Call', 0, 0)","cust,str",first = str(cust.get('first_name') or '').strip()
.\notwendig oder nicht\wichtig\repo_to_json.py,252,first,"('Const', 'False')","('Const',)",,first = False
.\tools\repo_to_json.py,252,first,"('Const', 'False')","('Const',)",,first = False
.\notwendig oder nicht\wichtig\repo_to_json.py,247,first,"('Const', 'True')","('Const',)",,first = True
.\tools\repo_to_json.py,247,first,"('Const', 'True')","('Const',)",,first = True
.\dev_tools\kakerlake_ultra_cleaner_v2.py,222,first,"('Other', 'IfExp')","('Other', 'IfExp')",call,first = call.args[0].value if call.args else None
.\mnt\data\kakerlake_ultra_cleaner_v2.py,222,first,"('Other', 'IfExp')","('Other', 'IfExp')",call,first = call.args[0].value if call.args else None
.\notwendig oder nicht\wichtig\repo_porter.py,592,first,"('Subscript', ('Name', 'block'), ('Const', '0'))","('Subscript',)",block,first = block[0]
.\tools\repo_porter.py,592,first,"('Subscript', ('Name', 'block'), ('Const', '0'))","('Subscript',)",block,first = block[0]
.\pdf_ui.py,1220,first_name,"('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'first_name'""), ('Const', ""''"")), ())","('Call', 2, 0)",project_data,"first_name = project_data.get('customer_data', {}).get('first_name', '')"
.\multi_offer_generator.py,663,first_name,"('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'first_name'""), ('Const', ""''"")), ())","('Call', 2, 0)",customer_data,"first_name = customer_data.get('first_name', '')"
.\pdf_generator.py,1397,first_name,"('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'first_name'""), ('Const', ""''"")), ())","('Call', 2, 0)",customer_data,"first_name = customer_data.get(""first_name"", """")"
.\crm.py,328,first_name,"('Call', ('Attr', 'st', 'text_input'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'first_name_label'""), ('Const', ""'Vorname'"")), ()),), (('value', ('Call', ('Attr', 'customer_to_edit', 'get'), (('Const', ""'first_name'""), ('Const', ""''"")), ())),))","('Call', 1, 1)","customer_to_edit,get_text_crm,st,texts","first_name = st.text_input(get_text_crm(texts, ""first_name_label"", ""Vorname""), value=customer_to_edit.get('first_name', ''))"
.\crm.py,156,fn,"('BoolOp', 'Or', (('Call', ('Attr', ""customer_data.get('first_name') or ''"", 'strip'), (), ()), ('Const', ""'Interessent'"")))","('BoolOp', 'Or', 2)",customer_data,fn = (customer_data.get('first_name') or '').strip() or 'Interessent'
.\analysis.py,147,fn,"('Call', ('Name', 'getattr'), (('Name', 'st'), ('Const', ""'plotly_chart'""), ('Const', 'None')), ())","('Call', 3, 0)","getattr,st","fn = getattr(st, ""plotly_chart"", None)"
.\create_png_test_images.py,31,font,"('Call', ('Attr', 'ImageFont', 'load_default'), (), ())","('Call', 0, 0)",ImageFont,font = ImageFont.load_default()
.\notwendig oder nicht\wichtig\portings\patches\create_png_test_images.py.insert.py,31,font,"('Call', ('Attr', 'ImageFont', 'load_default'), (), ())","('Call', 0, 0)",ImageFont,font = ImageFont.load_default()
.\notwendig oder nicht\wichtig\portings\patches\test_brand_logos.py.insert.py,27,font,"('Call', ('Attr', 'ImageFont', 'load_default'), (), ())","('Call', 0, 0)",ImageFont,font = ImageFont.load_default()
.\tests\test_brand_logos.py,24,font,"('Call', ('Attr', 'ImageFont', 'load_default'), (), ())","('Call', 0, 0)",ImageFont,font = ImageFont.load_default()
.\tools\portings\patches\create_png_test_images.py.insert.py,31,font,"('Call', ('Attr', 'ImageFont', 'load_default'), (), ())","('Call', 0, 0)",ImageFont,font = ImageFont.load_default()
.\tools\portings\patches\test_brand_logos.py.insert.py,27,font,"('Call', ('Attr', 'ImageFont', 'load_default'), (), ())","('Call', 0, 0)",ImageFont,font = ImageFont.load_default()
.\notwendig oder nicht\wichtig\portings\patches\test_brand_logos.py.insert.py,25,font,"('Call', ('Attr', 'ImageFont', 'truetype'), (('Const', ""'C:/Windows/Fonts/arial.ttf'""), ('Const', '16')), ())","('Call', 2, 0)",ImageFont,"font = ImageFont.truetype(""C:/Windows/Fonts/arial.ttf"", 16)"
.\tests\test_brand_logos.py,22,font,"('Call', ('Attr', 'ImageFont', 'truetype'), (('Const', ""'C:/Windows/Fonts/arial.ttf'""), ('Const', '16')), ())","('Call', 2, 0)",ImageFont,"font = ImageFont.truetype(""C:/Windows/Fonts/arial.ttf"", 16)"
.\tools\portings\patches\test_brand_logos.py.insert.py,25,font,"('Call', ('Attr', 'ImageFont', 'truetype'), (('Const', ""'C:/Windows/Fonts/arial.ttf'""), ('Const', '16')), ())","('Call', 2, 0)",ImageFont,"font = ImageFont.truetype(""C:/Windows/Fonts/arial.ttf"", 16)"
.\create_png_test_images.py,28,font,"('Call', ('Attr', 'ImageFont', 'truetype'), (('Const', ""'arial.ttf'""), ('Const', '14')), ())","('Call', 2, 0)",ImageFont,"font = ImageFont.truetype(""arial.ttf"", 14)"
.\notwendig oder nicht\wichtig\portings\patches\create_png_test_images.py.insert.py,28,font,"('Call', ('Attr', 'ImageFont', 'truetype'), (('Const', ""'arial.ttf'""), ('Const', '14')), ())","('Call', 2, 0)",ImageFont,"font = ImageFont.truetype(""arial.ttf"", 14)"
.\tools\portings\patches\create_png_test_images.py.insert.py,28,font,"('Call', ('Attr', 'ImageFont', 'truetype'), (('Const', ""'arial.ttf'""), ('Const', '14')), ())","('Call', 2, 0)",ImageFont,"font = ImageFont.truetype(""arial.ttf"", 14)"
.\notwendig oder nicht\wichtig\portings\patches\test_brand_logos.py.insert.py,22,font,"('Call', ('Attr', 'ImageFont', 'truetype'), (('Const', ""'arial.ttf'""), ('Const', '16')), ())","('Call', 2, 0)",ImageFont,"font = ImageFont.truetype(""arial.ttf"", 16)"
.\tests\test_brand_logos.py,19,font,"('Call', ('Attr', 'ImageFont', 'truetype'), (('Const', ""'arial.ttf'""), ('Const', '16')), ())","('Call', 2, 0)",ImageFont,"font = ImageFont.truetype(""arial.ttf"", 16)"
.\tools\portings\patches\test_brand_logos.py.insert.py,22,font,"('Call', ('Attr', 'ImageFont', 'truetype'), (('Const', ""'arial.ttf'""), ('Const', '16')), ())","('Call', 2, 0)",ImageFont,"font = ImageFont.truetype(""arial.ttf"", 16)"
.\analysis.py,1621,font_family,"('Call', ('Attr', 'specific_settings', 'get'), (('Const', ""'chart_font_family'""), ('Call', ('Name', '_safe_viz_get'), (('Name', 'viz_settings'), ('Const', ""'chart_font_family'""), ('Const', ""'Arial, sans-serif'"")), ())), ())","('Call', 2, 0)","_safe_viz_get,specific_settings,viz_settings",font_family = specific_settings.get(
.\doc_output.py,1316,font_family,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""' Schriftart:'""), ('List', (('Const', ""'Arial'""), ('Const', ""'Helvetica'""), ('Const', ""'Times New Roman'""), ('Const', ""'Calibri'""), ('Const', ""'Georgia'""), ('Const', ""'Verdana'""), ('Const', ""'Roboto'""), ('Const', ""'Open Sans'"")))), ())","('Call', 2, 0)",st,font_family = st.selectbox(
.\doc_output.py,1635,font_family,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Schriftart'""),), (('key', ('Const', ""'pdf_font_family'"")), ('options', ('List', (('Const', ""'ARIAL'""), ('Const', ""'HELVETICA'""), ('Const', ""'TIMES'""), ('Const', ""'CALIBRI'""), ('Const', ""'CUSTOM'""))))))","('Call', 1, 2)",st,font_family = st.selectbox(
.\admin_panel.py,1479,font_family,"('Call', ('Attr', 'st', 'text_input'), (('Call', ('Name', 'get_text_local'), (('Const', ""'admin_viz_font_family_label'""), ('Const', ""'Schriftfamilie...'"")), ()),), (('key', ('Other', 'JoinedStr')), ('value', ('Call', ('Attr', 'viz_settings', 'get'), (('Const', ""'chart_font_family'""), ('Call', ('Attr', 'default_viz_settings_fallback', 'get'), (('Const', ""'chart_font_family'""),), ())), ()))))","('Call', 1, 2)","WIDGET_KEY_SUFFIX,default_viz_settings_fallback,get_text_local,st,viz_settings","font_family = st.text_input(get_text_local(""admin_viz_font_family_label"", ""Schriftfamilie...""), value=viz_settings.get(""chart_font_family"", default_viz_settings_fallback.get(""chart_font_family"")), key=f""viz_font_family_input{WIDGET_KEY_SUFFIX}"")"
.\pdf_template_engine\dynamic_overlay.py,454,font_name,"('Call', ('Attr', 'elem', 'get'), (('Const', ""'font'""), ('Const', ""'Helvetica'"")), ())","('Call', 2, 0)",elem,"font_name = elem.get(""font"", ""Helvetica"")"
.\pdf_template_engine\dynamic_overlay.py,555,font_name,"('Call', ('Attr', 'meta', 'get'), (('Const', ""'font'""), ('Const', ""'Helvetica-Bold'"")), ())","('Call', 2, 0)",meta,"font_name = meta.get(""font"", ""Helvetica-Bold"")"
.\pdf_generator.py,626,font_name,"('Const', ""'Helvetica-Bold'"")","('Const',)",,"font_name = ""Helvetica-Bold""; font_size = 9"
.\pdf_template_engine\dynamic_overlay.py,455,font_size,"('Call', ('Name', 'float'), (('Call', ('Attr', 'elem', 'get'), (('Const', ""'font_size'""), ('Const', '10.0')), ()),), ())","('Call', 1, 0)","elem,float","font_size = float(elem.get(""font_size"", 10.0))"
.\pdf_template_engine\dynamic_overlay.py,556,font_size,"('Call', ('Name', 'float'), (('Call', ('Attr', 'meta', 'get'), (('Const', ""'font_size'""), ('Const', '10.49')), ()),), ())","('Call', 1, 0)","float,meta","font_size = float(meta.get(""font_size"", 10.49))"
.\pdf_generator.py,626,font_size,"('Const', '9')","('Const',)",,"font_name = ""Helvetica-Bold""; font_size = 9"
.\admin_panel.py,1481,font_size_title,"('Call', ('Attr', 'c1f', 'number_input'), (('Call', ('Name', 'get_text_local'), (('Const', ""'admin_viz_font_size_title_label'""), ('Const', ""'Schriftgröße Titel'"")), ()),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '30')), ('min_value', ('Const', '8')), ('value', ('Call', ('Name', 'int'), (('Call', ('Attr', 'viz_settings', 'get'), (('Const', ""'chart_font_size_title'""), ('Call', ('Attr', 'default_viz_settings_fallback', 'get'), (('Const', ""'chart_font_size_title'""),), ())), ()),), ()))))","('Call', 1, 4)","WIDGET_KEY_SUFFIX,c1f,default_viz_settings_fallback,get_text_local,int,viz_settings","font_size_title = c1f.number_input(get_text_local(""admin_viz_font_size_title_label"", ""Schriftgröße Titel""), min_value=8, max_value=30, value=int(viz_settings.get(""chart_font_size_title"", default_viz_settings_fallback.get(""chart_font_size_title""))), key=f""viz_font_size_title_num{WIDGET_KEY_SUFFIX}"")"
.\analysis.py,1625,font_size_title,"('Call', ('Name', 'int'), (('Call', ('Attr', 'specific_settings', 'get'), (('Const', ""'chart_font_size_title'""), ('Call', ('Name', '_safe_viz_get'), (('Name', 'viz_settings'), ('Const', ""'chart_font_size_title'""), ('Const', '16')), ())), ()),), ())","('Call', 1, 0)","_safe_viz_get,int,specific_settings,viz_settings",font_size_title = int(
.\pdf_generator.py,618,footer_hex,"('Name', '_hex')","('Name',)",_hex,footer_hex = _hex
.\pdf_generator.py,616,footer_hex,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","b,g,r","footer_hex = f""#{r:02X}{g:02X}{b:02X}"""
.\pdf_generator.py,694,footer_left,"('Call', ('Attr', ""' '"", 'join'), (('Name', 'name_parts'),), ())","('Call', 1, 0)",name_parts,footer_left = ' '.join(name_parts)
.\pdf_generator.py,696,footer_left,"('Const', 'None')","('Const',)",,footer_left = None
.\admin_panel.py,897,form_manual_title,"('Call', ('Name', 'get_text_local'), (('Const', ""'admin_add_new_product_header_manual'""), ('Const', ""'Neues Produkt manuell anlegen / Bearbeiten'"")), ())","('Call', 2, 0)",get_text_local,"form_manual_title = get_text_local(""admin_add_new_product_header_manual"", ""Neues Produkt manuell anlegen / Bearbeiten"")"
.\admin_panel.py,903,form_manual_title,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","product_data_for_manual_form,st","form_manual_title = f""Produkt bearbeiten: {product_data_for_manual_form.get('model_name', '')} (ID: {st.session_state.product_to_edit_id_manual})"""
.\admin_panel.py,245,form_title,"('Add', (('Call', ('Name', 'get_text_local'), (('Const', ""'admin_edit_company_header'""), ('Const', ""'Firma bearbeiten:'"")), ()), ('Other', 'JoinedStr')))","('Add', (('Call', 2, 0), ('Other', 'JoinedStr')))","company_data_for_form,get_text_local","form_title = get_text_local(""admin_edit_company_header"", ""Firma bearbeiten:"") + f"" {company_data_for_form.get('name', '')}"""
.\admin_panel.py,238,form_title,"('Call', ('Name', 'get_text_local'), (('Const', ""'admin_add_new_company_header'""), ('Const', ""'Neue Firma anlegen'"")), ())","('Call', 2, 0)",get_text_local,"form_title = get_text_local(""admin_add_new_company_header"", ""Neue Firma anlegen"")"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,114,formatted,"('Call', ('Attr', ""f'{num:,.0f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)",num,"formatted = f""{num:,.0f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,150,formatted,"('Call', ('Attr', ""f'{num:,.0f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)",num,"formatted = f""{num:,.0f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\pdf_template_engine\placeholders.py,401,formatted,"('Call', ('Attr', ""f'{num:,.0f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)",num,"formatted = f""{num:,.0f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,114,formatted,"('Call', ('Attr', ""f'{num:,.0f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)",num,"formatted = f""{num:,.0f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,150,formatted,"('Call', ('Attr', ""f'{num:,.0f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)",num,"formatted = f""{num:,.0f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,116,formatted,"('Call', ('Attr', ""f'{num:,.{decimal_places}f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)","decimal_places,num","formatted = f""{num:,.{decimal_places}f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,152,formatted,"('Call', ('Attr', ""f'{num:,.{decimal_places}f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)","decimal_places,num","formatted = f""{num:,.{decimal_places}f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\pdf_template_engine\placeholders.py,403,formatted,"('Call', ('Attr', ""f'{num:,.{decimal_places}f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)","decimal_places,num","formatted = f""{num:,.{decimal_places}f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,116,formatted,"('Call', ('Attr', ""f'{num:,.{decimal_places}f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)","decimal_places,num","formatted = f""{num:,.{decimal_places}f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,152,formatted,"('Call', ('Attr', ""f'{num:,.{decimal_places}f}'.replace(',', '#').replace('.', ',')"", 'replace'), (('Const', ""'#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)","decimal_places,num","formatted = f""{num:,.{decimal_places}f}"".replace(',', '#').replace('.', ',').replace('#', '.')"
.\german_formatting.py,22,formatted,"('Call', ('Attr', ""f'{num_value:,.0f}'.replace(',', 'X').replace('.', ',')"", 'replace'), (('Const', ""'X'""), ('Const', ""'.'"")), ())","('Call', 2, 0)",num_value,"formatted = f""{num_value:,.0f}"".replace("","", ""X"").replace(""."", "","").replace(""X"", ""."")"
.\german_formatting.py,24,formatted,"('Call', ('Attr', ""f'{num_value:,.{decimals}f}'.replace(',', 'X').replace('.', ',')"", 'replace'), (('Const', ""'X'""), ('Const', ""'.'"")), ())","('Call', 2, 0)","decimals,num_value","formatted = f""{num_value:,.{decimals}f}"".replace("","", ""X"").replace(""."", "","").replace(""X"", ""."")"
.\analysis_utils.py,54,formatted,"('Call', ('Attr', ""f'{value:,.0f}'"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",value,"formatted = f""{value:,.0f}"".replace(',', '.')"
.\live_preview_helpers.py,88,formatted,"('Call', ('Attr', ""f'{value:,.0f}'"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",value,"formatted = f""{value:,.0f}"".replace(',', '.')"
.\analysis_utils.py,91,formatted,"('Call', ('Attr', ""f'{value:,.{decimal_places}f}'"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)","decimal_places,value","formatted = f""{value:,.{decimal_places}f}"".replace(',', '.')"
.\analysis_utils.py,58,formatted,"('Call', ('Attr', ""formatted.replace(',', 'TEMP').replace('.', ',')"", 'replace'), (('Const', ""'TEMP'""), ('Const', ""'.'"")), ())","('Call', 2, 0)",formatted,"formatted = formatted.replace(',', 'TEMP').replace('.', ',').replace('TEMP', '.')"
.\live_preview_helpers.py,91,formatted,"('Call', ('Attr', ""formatted.replace(',', 'TEMP').replace('.', ',')"", 'replace'), (('Const', ""'TEMP'""), ('Const', ""'.'"")), ())","('Call', 2, 0)",formatted,"formatted = formatted.replace(',', 'TEMP').replace('.', ',').replace('TEMP', '.')"
.\pdf_generator.py,822,formatted,"('Call', ('Name', 'format_kpi_value'), (('Name', 'value'),), (('na_text_key', ('Name', 'na_key')), ('precision', ('Name', 'precision')), ('texts_dict', ('Name', 'texts')), ('unit', ('Name', 'unit'))))","('Call', 1, 4)","format_kpi_value,na_key,precision,texts,unit,value","formatted = format_kpi_value(value, unit=unit, precision=precision, texts_dict=texts, na_text_key=na_key)"
.\analysis_utils.py,56,formatted,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","decimal_places,value","formatted = f""{value:,.{decimal_places}f}"""
.\analysis_utils.py,60,formatted,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","decimal_places,value","formatted = f""{value:,.{decimal_places}f}"""
.\live_preview_helpers.py,90,formatted,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","decimal_places,value","formatted = f""{value:,.{decimal_places}f}"""
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,119,formatted,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","decimal_places,num","formatted = f""{num:.{decimal_places}f}"""
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,155,formatted,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","decimal_places,num","formatted = f""{num:.{decimal_places}f}"""
.\pdf_template_engine\placeholders.py,406,formatted,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","decimal_places,num","formatted = f""{num:.{decimal_places}f}"""
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,119,formatted,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","decimal_places,num","formatted = f""{num:.{decimal_places}f}"""
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,155,formatted,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","decimal_places,num","formatted = f""{num:.{decimal_places}f}"""
.\calculations.py,2117,formatted_num_de,"('Call', ('Attr', ""formatted_num_en.replace(',', '#TEMP#').replace('.', ',')"", 'replace'), (('Const', ""'#TEMP#'""), ('Const', ""','"")), ())","('Call', 2, 0)",formatted_num_en,formatted_num_de = (
.\pdf_generator.py,762,formatted_num_de,"('Call', ('Attr', ""formatted_num_en.replace(',', '#TEMP#').replace('.', ',')"", 'replace'), (('Const', ""'#TEMP#'""), ('Const', ""'.'"")), ())","('Call', 2, 0)",formatted_num_en,"formatted_num_de = formatted_num_en.replace("","", ""#TEMP#"").replace(""."", "","").replace(""#TEMP#"", ""."")"
.\analysis.py,246,formatted_num_str,"('Add', (('Call', ('Attr', 'ganzzahl_teil', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ()), ('Const', ""','""), ('Name', 'dezi_teil')))","('Add', (('Call', 2, 0), ('Const',), ('Name',)))","dezi_teil,ganzzahl_teil","formatted_num_str = ganzzahl_teil.replace("","", ""."") + "","" + dezi_teil"
.\analysis.py,248,formatted_num_str,"('Call', ('Attr', 'formatted_num_str', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",formatted_num_str,"formatted_num_str = formatted_num_str.replace("","", ""."")"
.\analysis.py,250,formatted_num_str,"('Call', ('Attr', 'formatted_num_str', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",formatted_num_str,"formatted_num_str = formatted_num_str.replace("","", ""."")"
.\analysis.py,241,formatted_num_str,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","precision,value","formatted_num_str = f""{value:,.{precision}f}"""
.\pdf_generator.py,511,fp_val,"('Call', ('Attr', 'live', 'get'), (('Const', ""'final_price'""),), ())","('Call', 1, 0)",live,fp_val = live.get('final_price')
.\pdf_generator.py,505,fp_val,"('Call', ('Attr', 'safe_analysis_results', 'get'), (('Const', ""'final_price'""),), ())","('Call', 1, 0)",safe_analysis_results,fp_val = safe_analysis_results.get('final_price')
.\pdf_generator.py,520,fp_val,"('Call', ('Name', 'next'), (('Other', 'GeneratorExp'), ('Const', 'None')), ())","('Call', 2, 0)","candidates,float,int,isinstance,next,v","fp_val = next((v for v in candidates if isinstance(v, (int, float)) and v > 0), None)"
.\crm.py,541,free_roof_area_sqm,"('Call', ('Attr', 'col_roof_area', 'number_input'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'free_roof_area_label'""), ('Const', ""'Freie Dachfläche (m²)'"")), ()),), (('min_value', ('Const', '0.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'project_data_form', 'get'), (('Const', ""'free_roof_area_sqm'""), ('Const', '0.0')), ()),), ()))))","('Call', 1, 2)","col_roof_area,float,get_text_crm,project_data_form,texts","free_roof_area_sqm = col_roof_area.number_input(get_text_crm(texts, ""free_roof_area_label"", ""Freie Dachfläche (m²)""), min_value=0.0, value=float(project_data_form.get('free_roof_area_sqm', 0.0)))"
.\calculations.py,2906,free_roof_area_sqm,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'free_roof_area_sqm'""), ('Const', '0.0')), ()), ('Const', '0.0'))),), ())","('Call', 1, 0)","float,project_details","free_roof_area_sqm = float(project_details.get(""free_roof_area_sqm"", 0.0) or 0.0)"
.\pdf_template_engine\placeholders.py,481,full_name,"('Call', ('Attr', ""' '"", 'join'), (('Name', 'name_parts'),), ())","('Call', 1, 0)",name_parts,"full_name = "" "".join(name_parts)"
.\pdf_template_engine\placeholders.py,441,full_name,"('Call', ('Attr', ""f'{first} {last}'"", 'strip'), (), ())","('Call', 0, 0)","first,last","full_name = f""{first} {last}"".strip()"
.\pdf_ui.py,1455,full_path,"('Call', ('Attr', 'os.path', 'join'), (('Call', ('Attr', 'os', 'getcwd'), (), ()), ('Const', ""'data'""), ('Const', ""'product_datasheets'""), ('Name', 'datasheet_path')), ())","('Call', 4, 0)","datasheet_path,os","full_path = os.path.join(os.getcwd(), ""data"", ""product_datasheets"", datasheet_path)"
.\database.py,683,full_path,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'root'), ('Name', 'file')), ())","('Call', 2, 0)","file,os,root","full_path = os.path.join(root, file)"
.\pdf_migration.py,40,full_path,"('Call', ('Name', 'Path'), (('Name', 'file_path'),), ())","('Call', 1, 0)","Path,file_path",full_path = Path(file_path)
.\pdf_generator.py,1597,full_product_name,"('Name', 'brand')","('Name',)",brand,full_product_name = brand
.\pdf_generator.py,1601,full_product_name,"('Name', 'component_name_text')","('Name',)",component_name_text,full_product_name = component_name_text
.\pdf_generator.py,1599,full_product_name,"('Name', 'model')","('Name',)",model,full_product_name = model
.\pdf_generator.py,1595,full_product_name,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","brand,model","full_product_name = f""{brand} {model}"""
.\pdf_generator.py,2494,future_aspects_text,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'pdf_no_future_aspects_selected'""), ('Const', ""'Keine spezifischen Zukunftsaspekte für dieses Angebot ausgewählt.'"")), ())","('Call', 3, 0)","get_text,texts","if not future_aspects_text: future_aspects_text = get_text(texts, ""pdf_no_future_aspects_selected"", ""Keine spezifischen Zukunftsaspekte für dieses Angebot ausgewählt."")"
.\pdf_generator.py,2489,future_aspects_text,"('Const', ""''"")","('Const',)",,"future_aspects_text = """""
.\pdf_styles.py,653,g,"('Call', ('Name', 'int'), (('Mult', (('Const', '245'), ('Sub', ('Const', '1'), ('Mult', (('Div', ('Name', 'y'), ('Name', 'height')), ('Name', 'opacity')))))),), ())","('Call', 1, 0)","height,int,opacity,y",g = int(245 * (1 - y / height * opacity))
.\pdf_generator.py,614,g,"('Call', ('Name', 'int'), (('Subscript', ('Name', '_hex'), ('Other', 'Slice')), ('Const', '16')), ())","('Call', 2, 0)","_hex,int","r = int(_hex[1:3], 16); g = int(_hex[3:5], 16); b = int(_hex[5:7], 16)"
.\pdf_template_engine\dynamic_overlay.py,183,g,"('Div', ('BitAnd', ('RShift', ('Name', 'value'), ('Const', '8')), ('Const', '255')), ('Const', '255.0'))","('Div', ('BitAnd', ('RShift', ('Name',), ('Const',)), ('Const',)), ('Const',))",value,g = ((value >> 8) & 0xFF) / 255.0
.\heatpump_ui.py,183,gas_kwh,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Erdgas (kWh/Jahr)'""),), (('min_value', ('Const', '0.0')), ('step', ('Const', '100.0')), ('value', ('Const', '0.0'))))","('Call', 1, 3)",st,"gas_kwh = st.number_input(""Erdgas (kWh/Jahr)"", min_value=0.0, value=0.0, step=100.0)"
.\calculations_heatpump.py,223,gas_kwh,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'consumption', 'get'), (('Const', ""'gas_kwh'""), ('Const', '0')), ()), ('Const', '0'))),), ())","('Call', 1, 0)","consumption,float","gas_kwh = float(consumption.get('gas_kwh', 0) or 0)"
.\heatpump_ui.py,494,gas_price,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Gaspreis (ct/kWh)'""),), (('max_value', ('Const', '20.0')), ('min_value', ('Const', '5.0')), ('step', ('Const', '0.5')), ('value', ('Const', '12.0'))))","('Call', 1, 4)",st,gas_price = st.number_input(
.\heatpump_ui.py,893,gas_price,"('Const', '12.0')","('Const',)",,gas_price = 12.0          # ct/kWh
.\multi_offer_generator.py,1202,generator,"('Attr', 'st.session_state', 'mog_generator')","('Attr',)",st,generator = st.session_state.mog_generator
.\multi_offer_generator_old.py,366,generator,"('Attr', 'st.session_state', 'mog_generator')","('Attr',)",st,generator = st.session_state.mog_generator
.\multi_offer_generator_old.py,1265,generator,"('Call', ('Name', 'EnhancedMultiOfferGenerator'), (), ())","('Call', 0, 0)",EnhancedMultiOfferGenerator,generator = EnhancedMultiOfferGenerator()
.\multi_offer_generator.py,1251,generator,"('Call', ('Name', 'MultiCompanyOfferGenerator'), (), ())","('Call', 0, 0)",MultiCompanyOfferGenerator,generator = MultiCompanyOfferGenerator()
.\multi_offer_generator_new.py,448,generator,"('Call', ('Name', 'MultiCompanyOfferGenerator'), (), ())","('Call', 0, 0)",MultiCompanyOfferGenerator,generator = MultiCompanyOfferGenerator()
.\data_input.py,41,get_db_connection_safe,"('Name', 'Dummy_get_db_connection_input')","('Name',)",Dummy_get_db_connection_input,get_db_connection_safe = Dummy_get_db_connection_input
.\data_input.py,50,get_db_connection_safe,"('Name', 'real_get_db_connection')","('Name',)",real_get_db_connection,get_db_connection_safe = real_get_db_connection
.\crm.py,791,get_db_connection_safe_crm,"('Attr', 'mock_db', 'get_db_connection')","('Attr',)",mock_db,get_db_connection_safe_crm = mock_db.get_db_connection
.\crm.py,27,get_db_connection_safe_crm,"('Name', '_dummy_get_db_connection_ex')","('Name',)",_dummy_get_db_connection_ex,get_db_connection_safe_crm = _dummy_get_db_connection_ex
.\crm.py,21,get_db_connection_safe_crm,"('Name', '_dummy_get_db_connection_ie')","('Name',)",_dummy_get_db_connection_ie,get_db_connection_safe_crm = _dummy_get_db_connection_ie
.\crm.py,16,get_db_connection_safe_crm,"('Name', 'real_get_db_connection')","('Name',)",real_get_db_connection,get_db_connection_safe_crm = real_get_db_connection
.\product_db.py,15,get_db_connection_safe_pd,"('Const', 'None')","('Const',)",,get_db_connection_safe_pd = None
.\product_db.py,33,get_db_connection_safe_pd,"('Name', '_dummy_get_db_connection_ex')","('Name',)",_dummy_get_db_connection_ex,get_db_connection_safe_pd = _dummy_get_db_connection_ex
.\product_db.py,27,get_db_connection_safe_pd,"('Name', '_dummy_get_db_connection_ie')","('Name',)",_dummy_get_db_connection_ie,get_db_connection_safe_pd = _dummy_get_db_connection_ie
.\product_db.py,21,get_db_connection_safe_pd,"('Name', 'get_db_connection')","('Name',)",get_db_connection,get_db_connection_safe_pd = get_db_connection
.\data_input.py,45,get_product_by_id_safe,"('Name', 'Dummy_get_product_by_id_input')","('Name',)",Dummy_get_product_by_id_input,get_product_by_id_safe = Dummy_get_product_by_id_input
.\data_input.py,54,get_product_by_id_safe,"('Name', 'real_get_product_by_id')","('Name',)",real_get_product_by_id,get_product_by_id_safe = real_get_product_by_id
.\pdf_template_engine\placeholders.py,1179,get_product_by_model_name,"('Const', 'None')","('Const',)",,get_product_by_model_name = None
.\pdf_template_engine\placeholders.py,1184,get_product_by_model_name,"('Const', 'None')","('Const',)",,get_product_by_model_name = None
.\tools\import_module_attributes_generic.py,25,get_product_by_model_name,"('Const', 'None')","('Const',)",,get_product_by_model_name = None  # type: ignore
.\pdf_template_engine\placeholders.py,1182,get_product_by_model_name,"('Name', '_get_prod')","('Name',)",_get_prod,get_product_by_model_name = _get_prod  # type: ignore
.\crm.py,794,get_product_by_model_name_safe,"('Attr', 'MockProductDB()', 'get_product_by_model_name')","('Attr',)",MockProductDB,get_product_by_model_name_safe = MockProductDB().get_product_by_model_name
.\crm.py,783,get_product_by_model_name_safe,"('Const', 'None')","('Const',)",,get_product_by_model_name_safe = None
.\data_input.py,44,get_product_by_model_name_safe,"('Name', 'Dummy_get_product_by_model_name_input')","('Name',)",Dummy_get_product_by_model_name_input,get_product_by_model_name_safe = Dummy_get_product_by_model_name_input
.\solar_calculator.py,25,get_product_by_model_name_safe,"('Name', '_dummy_get_product_by_model_name')","('Name',)",_dummy_get_product_by_model_name,get_product_by_model_name_safe = _dummy_get_product_by_model_name  # type: ignore
.\data_input.py,53,get_product_by_model_name_safe,"('Name', 'real_get_product_by_model_name')","('Name',)",real_get_product_by_model_name,get_product_by_model_name_safe = real_get_product_by_model_name
.\calculations.py,2361,global_constants,"('Call', ('Name', 'Dummy_load_admin_setting_calc'), (('Const', ""'global_constants'""),), ())","('Call', 1, 0)",Dummy_load_admin_setting_calc,"global_constants = Dummy_load_admin_setting_calc(""global_constants"")"
.\calculations.py,2359,global_constants,"('Call', ('Name', 'real_load_admin_setting'), (('Const', ""'global_constants'""),), ())","('Call', 1, 0)",real_load_admin_setting,"global_constants = real_load_admin_setting(""global_constants"")"
.\pdf_template_engine\placeholders.py,733,grid_bezug_kwh,"('BoolOp', 'Or', (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'grid_bezug_kwh'""),), ()), ('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'grid_purchase_kwh'""),), ())))","('BoolOp', 'Or', 2)",analysis_results,"grid_bezug_kwh = analysis_results.get(""grid_bezug_kwh"") or analysis_results.get(""grid_purchase_kwh"")"
.\calculations.py,2882,grid_bezug_kwh,"('Call', ('Name', 'sum'), (('Name', 'monthly_grid_bezug_kwh'),), ())","('Call', 1, 0)","monthly_grid_bezug_kwh,sum",grid_bezug_kwh = sum(monthly_grid_bezug_kwh)  # Netzbezug (kWh)
.\pdf_template_engine\placeholders.py,786,grid_bezug_val,"('Call', ('Name', 'to_float_or_none'), (('Name', 'grid_bezug_kwh'),), ())","('Call', 1, 0)","grid_bezug_kwh,to_float_or_none",grid_bezug_val = to_float_or_none(grid_bezug_kwh)
.\pdf_template_engine\placeholders.py,811,grid_bezug_val,"('Name', 'grid_bezug_calc')","('Name',)",grid_bezug_calc,grid_bezug_val = grid_bezug_calc
.\calculations.py,1431,grid_feed_in,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'annual_feed_in_kwh'""), ('Const', '5500')), ())","('Call', 2, 0)",calc_results,"grid_feed_in = calc_results.get(""annual_feed_in_kwh"", 5500)"
.\calculations.py,718,grid_feed_in,"('List', ())","('List', 0)",,grid_feed_in = []
.\calculations.py,1432,grid_purchase,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'annual_grid_purchase_kwh'""), ('Const', '1000')), ())","('Call', 2, 0)",calc_results,"grid_purchase = calc_results.get(""annual_grid_purchase_kwh"", 1000)"
.\calculations.py,719,grid_purchase,"('List', ())","('List', 0)",,grid_purchase = []
.\utils\export_coords.py,16,h,"('Attr', 'page', 'height')","('Attr',)",page,h = page.height
.\pdf_atomizer.py,264,h,"('Attr', 'page.rect', 'height')","('Attr',)",page,h = page.rect.height
.\notwendig oder nicht\wichtig\repo_to_json.py,108,h,"('Call', ('Attr', 'hashlib', 'sha256'), (), ())","('Call', 0, 0)",hashlib,h = hashlib.sha256()
.\tools\repo_to_json.py,108,h,"('Call', ('Attr', 'hashlib', 'sha256'), (), ())","('Call', 0, 0)",hashlib,h = hashlib.sha256()
.\pdf_template_engine\placeholders.py,1657,has_storage,"('Call', ('Name', 'bool'), (('BoolOp', 'Or', (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'battery_capacity_kwh'""),), ()), ('Call', ('Attr', 'project_details', 'get'), (('Const', ""'battery_capacity_kwh'""),), ()), ('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_storage_name'""),), ()))),), ())","('Call', 1, 0)","analysis_results,bool,project_details","has_storage = bool(project_details.get(""selected_storage_name"") or project_details.get(""battery_capacity_kwh"") or analysis_results.get(""battery_capacity_kwh""))"
.\pdf_template_engine\placeholders.py,1659,has_storage,"('Const', 'False')","('Const',)",,has_storage = False
.\notwendig oder nicht\wichtig\repo_porter.py,413,header,"('List', ())","('List', 0)",,header = []
.\tools\repo_porter.py,413,header,"('List', ())","('List', 0)",,header = []
.\notwendig oder nicht\wichtig\repo_porter.py,555,header,"('Subscript', ('Name', 'b'), ('Const', '0'))","('Subscript',)",b,header = b[0]
.\tools\repo_porter.py,555,header,"('Subscript', ('Name', 'b'), ('Const', '0'))","('Subscript',)",b,header = b[0]
.\admin_panel.py,625,headers,"('BoolOp', 'Or', (('Call', ('Attr', 'd', 'get'), (('Const', ""'headers'""),), ()), ('List', ())))","('BoolOp', 'Or', 2)",d,"headers = d.get(""headers"") or []"
.\pdf_generator.py,2742,headers,"('Call', ('Attr', 'item', 'get'), (('Const', ""'headers'""), ('List', ())), ())","('Call', 2, 0)",item,"headers = item.get('headers', [])"
.\ai_companion.py,70,headers,"('Dict', (('KV', ('Const', ""'Authorization'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'Content-Type'""), ('Const', ""'application/json'""))))","('Dict', 2)",self,headers = {
.\heatpump_ui.py,324,heat_load,"('Call', ('Attr', 'building_data', 'get'), (('Const', ""'heat_load_kw'""), ('Const', '0')), ())","('Call', 2, 0)",building_data,"heat_load = building_data.get('heat_load_kw', 0)"
.\heatpump_ui.py,231,heat_load,"('Call', ('Name', 'calculate_building_heat_load'), (), (('building_type', ('Name', 'building_type')), ('insulation_quality', ('Name', 'insulation_quality')), ('living_area_m2', ('Name', 'building_area'))))","('Call', 0, 3)","building_area,building_type,calculate_building_heat_load,insulation_quality",heat_load = calculate_building_heat_load(
.\heatpump_ui.py,857,heat_load,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'building_data', 'get'), (('Const', ""'heat_load_kw'""), ('Const', '0')), ()), ('Const', '0'))),), ())","('Call', 1, 0)","building_data,float","heat_load = float(building_data.get('heat_load_kw', 0) or 0)"
.\heatpump_ui.py,247,heat_load,"('Name', 'heat_load_from_cons')","('Name',)",heat_load_from_cons,heat_load = heat_load_from_cons
.\calculations_heatpump.py,164,heating_hours,"('Call', ('Attr', 'building_data', 'get'), (('Const', ""'heating_hours'""), ('Const', '1800')), ())","('Call', 2, 0)",building_data,"heating_hours = building_data.get('heating_hours', 1800)"
.\heatpump_ui.py,192,heating_hours,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Volllaststunden/Jahr (Schätzung)'""),), (('max_value', ('Const', '2600')), ('min_value', ('Const', '1200')), ('step', ('Const', '100')), ('value', ('Const', '1800'))))","('Call', 1, 4)",st,"heating_hours = st.number_input(""Volllaststunden/Jahr (Schätzung)"", min_value=1200, max_value=2600, value=1800, step=100)"
.\heatpump_ui.py,899,heating_hours,"('Call', ('Name', 'int'), (('BoolOp', 'Or', (('Call', ('Attr', ""building_data.get('consumption_inputs', {})"", 'get'), (('Const', ""'heating_hours'""), ('Const', '1800')), ()), ('Const', '1800'))),), ())","('Call', 1, 0)","building_data,int","heating_hours = int(building_data.get('consumption_inputs', {}).get('heating_hours', 1800) or 1800)"
.\heatpump_ui.py,543,heating_hours,"('Const', '1800')","('Const',)",,heating_hours = 1800
.\heatpump_ui.py,890,heatpump,"('Subscript', ('Attr', 'st.session_state', 'heatpump_data'), ('Const', ""'selected_heatpump'""))","('Subscript',)",st,heatpump = st.session_state.heatpump_data['selected_heatpump']
.\heatpump_ui.py,477,heatpump,"('Subscript', ('Name', 'heatpump_data'), ('Const', ""'selected_heatpump'""))","('Subscript',)",heatpump_data,heatpump = heatpump_data['selected_heatpump']
.\heatpump_ui.py,963,heatpump,"('Subscript', ('Name', 'heatpump_data'), ('Const', ""'selected_heatpump'""))","('Subscript',)",heatpump_data,heatpump = heatpump_data['selected_heatpump']
.\heatpump_ui.py,700,heatpump_data,"('Attr', 'st.session_state', 'heatpump_data')","('Attr',)",st,heatpump_data = st.session_state.heatpump_data
.\heatpump_ui.py,940,heatpump_data,"('Attr', 'st.session_state', 'heatpump_data')","('Attr',)",st,heatpump_data = st.session_state.heatpump_data
.\heatpump_ui.py,63,heatpump_data,"('Call', ('Name', 'render_heatpump_selection'), (('Name', 'texts'), ('Attr', 'st.session_state', 'building_data')), ())","('Call', 2, 0)","render_heatpump_selection,st,texts","heatpump_data = render_heatpump_selection(texts, st.session_state.building_data)"
.\heatpump_ui.py,66,heatpump_data,"('Const', 'None')","('Const',)",,heatpump_data = None
.\heatpump_ui.py,450,heatpump_data,"('Dict', (('KV', ('Const', ""'alternatives'""), ('Subscript', ('Name', 'recommended_list'), ('Other', 'Slice'))), ('KV', ('Const', ""'backup_heating'""), ('Name', 'backup_heating')), ('KV', ('Const', ""'building_data'""), ('Name', 'building_data')), ('KV', ('Const', ""'hot_water_storage'""), ('Name', 'hot_water_storage')), ('KV', ('Const', ""'selected_heatpump'""), ('Name', 'top_heatpump')), ('KV', ('Const', ""'sizing_factor'""), ('Name', 'sizing_factor')), ('KV', ('Const', ""'smart_control'""), ('Name', 'smart_control'))))","('Dict', 7)","backup_heating,building_data,hot_water_storage,recommended_list,sizing_factor,smart_control,top_heatpump",heatpump_data = {
.\gui.py,746,heatpump_ui_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'heatpump_ui'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","heatpump_ui_module = import_module_with_fallback(""heatpump_ui"", import_errors)"
.\gui.py,97,heatpump_ui_module,"('Const', 'None')","('Const',)",,heatpump_ui_module: Optional[Any] = None
.\pdf_styles.py,798,height,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Höhe (px)'""),), (('max_value', ('Const', '2000')), ('min_value', ('Const', '100')), ('value', ('Const', '600'))))","('Call', 1, 3)",st,"height = st.number_input(""Höhe (px)"", value=600, min_value=100, max_value=2000)"
.\admin_logo_positions_ui.py,110,height,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Höhe:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '100.0')), ('min_value', ('Const', '10.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'height'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'height'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",height = st.number_input(
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_positions_ui.py.insert.py,85,height,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Höhe:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '100.0')), ('min_value', ('Const', '10.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'height'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'height'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",height = st.number_input(
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_positions_ui.py.insert.py,86,height,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Höhe:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '100.0')), ('min_value', ('Const', '10.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'height'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'height'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",height = st.number_input(
.\tools\out_selected\patches\admin_logo_positions_ui.py.insert.py,85,height,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Höhe:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '100.0')), ('min_value', ('Const', '10.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'height'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'height'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",height = st.number_input(
.\tools\portings\patches\admin_logo_positions_ui.py.insert.py,86,height,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Höhe:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '100.0')), ('min_value', ('Const', '10.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'height'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'height'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",height = st.number_input(
.\components\progress_settings.py,93,height,"('Call', ('Attr', 'st', 'slider'), (('Const', ""'Höhe des Ladebalkens'""),), (('help', ('Const', ""'Höhe in Pixeln'"")), ('max_value', ('Const', '20')), ('min_value', ('Const', '4')), ('value', ('Attr', 'current_config', 'height'))))","('Call', 1, 4)","current_config,st",height = st.slider(
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_settings.py.insert.py,95,height,"('Call', ('Attr', 'st', 'slider'), (('Const', ""'Höhe des Ladebalkens'""),), (('help', ('Const', ""'Höhe in Pixeln'"")), ('max_value', ('Const', '20')), ('min_value', ('Const', '4')), ('value', ('Attr', 'current_config', 'height'))))","('Call', 1, 4)","current_config,st",height = st.slider(
.\notwendig oder nicht\wichtig\portings\patches\components\progress_settings.py.insert.py,96,height,"('Call', ('Attr', 'st', 'slider'), (('Const', ""'Höhe des Ladebalkens'""),), (('help', ('Const', ""'Höhe in Pixeln'"")), ('max_value', ('Const', '20')), ('min_value', ('Const', '4')), ('value', ('Attr', 'current_config', 'height'))))","('Call', 1, 4)","current_config,st",height = st.slider(
.\tools\out_selected\patches\components\progress_settings.py.insert.py,95,height,"('Call', ('Attr', 'st', 'slider'), (('Const', ""'Höhe des Ladebalkens'""),), (('help', ('Const', ""'Höhe in Pixeln'"")), ('max_value', ('Const', '20')), ('min_value', ('Const', '4')), ('value', ('Attr', 'current_config', 'height'))))","('Call', 1, 4)","current_config,st",height = st.slider(
.\tools\portings\patches\components\progress_settings.py.insert.py,96,height,"('Call', ('Attr', 'st', 'slider'), (('Const', ""'Höhe des Ladebalkens'""),), (('help', ('Const', ""'Höhe in Pixeln'"")), ('max_value', ('Const', '20')), ('min_value', ('Const', '4')), ('value', ('Attr', 'current_config', 'height'))))","('Call', 1, 4)","current_config,st",height = st.slider(
.\pdf_preview.py,305,height,"('Call', ('Name', 'int'), (('Div', ('Mult', (('Attr', 'current_img', 'height'), ('Name', 'preview_zoom'))), ('Const', '100')),), ())","('Call', 1, 0)","current_img,int,preview_zoom",height = int(current_img.height * preview_zoom / 100)
.\pdf_preview.py,249,height,"('Call', ('Name', 'int'), (('Div', ('Mult', (('Attr', 'img', 'height'), ('Name', 'preview_zoom'))), ('Const', '100')),), ())","('Call', 1, 0)","img,int,preview_zoom",height = int(img.height * preview_zoom / 100)
.\components\progress_manager.py,31,height,"('Const', '8')","('Const',)",,height: int = 8
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,85,height,"('Const', '8')","('Const',)",,height: int = 8
.\tools\out_selected\patches\components\progress_manager.py.insert.py,85,height,"('Const', '8')","('Const',)",,height: int = 8
.\pdf_styles.py,1123,hex_color,"('Call', ('Attr', ""'#{:02x}{:02x}{:02x}'"", 'format'), (('Call', ('Name', 'int'), (('Mult', (('Const', '255'), ('Subscript', ('Name', 'new_rgb'), ('Const', '0')))),), ()), ('Call', ('Name', 'int'), (('Mult', (('Const', '255'), ('Subscript', ('Name', 'new_rgb'), ('Const', '1')))),), ()), ('Call', ('Name', 'int'), (('Mult', (('Const', '255'), ('Subscript', ('Name', 'new_rgb'), ('Const', '2')))),), ())), ())","('Call', 3, 0)","int,new_rgb",hex_color = '#{:02x}{:02x}{:02x}'.format(
.\pdf_styles.py,1110,hex_color,"('Call', ('Attr', 'base_color', 'lstrip'), (('Const', ""'#'""),), ())","('Call', 1, 0)",base_color,hex_color = base_color.lstrip('#')
.\analysis.py,1866,hh,"('BoolOp', 'Or', (('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'stromkosten_haushalt_euro_monat'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","_parse_float,project_data","hh = _parse_float(project_data.get(""stromkosten_haushalt_euro_monat"")) or 0.0"
.\analysis.py,1884,hh,"('BoolOp', 'Or', (('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'stromkosten_haushalt_euro_monat'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","_parse_float,project_details","hh = _parse_float(project_details.get(""stromkosten_haushalt_euro_monat"")) or 0.0"
.\pdf_template_engine\placeholders.py,976,hh,"('BoolOp', 'Or', (('Call', ('Name', 'parse_float'), (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'stromkosten_haushalt_euro_monat'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","parse_float,project_data","hh = parse_float(project_data.get(""stromkosten_haushalt_euro_monat"")) or 0.0"
.\pdf_template_engine\placeholders.py,984,hh,"('BoolOp', 'Or', (('Call', ('Name', 'parse_float'), (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'stromkosten_haushalt_euro_monat'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","parse_float,project_details","hh = parse_float(project_details.get(""stromkosten_haushalt_euro_monat"")) or 0.0"
.\pdf_template_engine\dynamic_overlay.py,929,hh,"('Call', ('Name', 'float'), (('Attr', 'extra_bg_page.mediabox', 'height'),), ())","('Call', 1, 0)","extra_bg_page,float",hh = float(extra_bg_page.mediabox.height)
.\pdf_template_engine\dynamic_overlay.py,956,hh,"('Call', ('Name', 'float'), (('Attr', 'extra_bg_page.mediabox', 'height'),), ())","('Call', 1, 0)","extra_bg_page,float",hh = float(extra_bg_page.mediabox.height)
.\notwendig oder nicht\python_function_recipes.py,38,hits,"('Subscript', ('Name', 'key_row'), ('Compare', ('Name', 'key_row'), ('Eq',), (('Name', 'lookup_value'),)))","('Subscript',)","key_row,lookup_value",hits = key_row[key_row == lookup_value]
.\notwendig oder nicht\python_function_recipes.py,79,hits,"('Subscript', ('Name', 's'), ('Compare', ('Name', 's'), ('Eq',), (('Name', 'lookup_value'),)))","('Subscript',)","lookup_value,s",hits = s[s == lookup_value]
.\notwendig oder nicht\python_function_recipes.py,243,hits,"('Subscript', ('Name', 'table'), ('Compare', ('Name', 'key_col'), ('Eq',), (('Name', 'lookup_value'),)))","('Subscript',)","key_col,lookup_value,table",hits = table[key_col == lookup_value]
.\analysis.py,2033,hours,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '24'),), ()),), ())","('Call', 1, 0)","list,range",hours = list(range(24))
.\analysis.py,2107,hours,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '24'),), ()),), ())","('Call', 1, 0)","list,range",hours = list(range(24))
.\analysis.py,5670,hours,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '24'),), ()),), ())","('Call', 1, 0)","list,range",hours = list(range(24))
.\calculations.py,943,hours,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '24'),), ()),), ())","('Call', 1, 0)","list,range",hours = list(range(24))
.\calculations.py,1005,hours,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '24'),), ()),), ())","('Call', 1, 0)","list,range",hours = list(range(24))
.\heatpump_ui.py,793,hours,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '24'),), ()),), ())","('Call', 1, 0)","list,range",hours = list(range(24))
.\analysis.py,5784,hours,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '6'), ('Const', '19')), ()),), ())","('Call', 1, 0)","list,range","hours = list(range(6, 19))  # 6:00 bis 18:00"
.\heatpump_ui.py,799,hp_demand_smart,"('List', (('Const', '20'), ('Const', '15'), ('Const', '15'), ('Const', '15'), ('Const', '20'), ('Const', '25'), ('Const', '30'), ('Const', '40'), ('Const', '60'), ('Const', '80'), ('Const', '90'), ('Const', '95'), ('Const', '95'), ('Const', '90'), ('Const', '80'), ('Const', '60'), ('Const', '40'), ('Const', '35'), ('Const', '30'), ('Const', '25'), ('Const', '25'), ('Const', '20'), ('Const', '20'), ('Const', '20')))","('List', 24)",,"hp_demand_smart = [20, 15, 15, 15, 20, 25, 30, 40, 60, 80, 90, 95, 95, 90, 80, 60, 40, 35, 30, 25, 25, 20, 20, 20]"
.\heatpump_ui.py,801,hp_demand_smart,"('Name', 'hp_demand_normal')","('Name',)",hp_demand_normal,hp_demand_smart = hp_demand_normal
.\heatpump_ui.py,901,hp_electricity_consumption,"('Div', ('Name', 'heat_demand_kwh'), ('Call', ('Name', 'max'), (('Call', ('Attr', 'heatpump', 'get'), (('Const', ""'scop'""), ('Const', '3.5')), ()), ('Const', '0.1')), ()))","('Div', ('Name',), ('Call', 2, 0))","heat_demand_kwh,heatpump,max","hp_electricity_consumption = heat_demand_kwh / max(heatpump.get('scop', 3.5), 0.1)"
.\heatpump_ui.py,547,hp_electricity_consumption,"('Div', ('Name', 'heat_demand_kwh'), ('Subscript', ('Name', 'heatpump'), ('Const', ""'scop'"")))","('Div', ('Name',), ('Subscript',))","heat_demand_kwh,heatpump",hp_electricity_consumption = heat_demand_kwh / heatpump['scop']
.\pdf_template_engine\placeholders.py,2485,hp_offer,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'heatpump_offer'""),), ())","('Call', 1, 0)",project_data,"hp_offer = project_data.get(""heatpump_offer"")"
.\pdf_ui.py,219,hp_offer,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'heatpump_offer'""),), ())","('Call', 1, 0)",st,hp_offer = st.session_state.get('heatpump_offer')
.\pdf_ui.py,242,hp_offer,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'heatpump_offer'""),), ())","('Call', 1, 0)",st,hp_offer = st.session_state.get('heatpump_offer')
.\pdf_template_engine\placeholders.py,2490,hp_offer,"('Call', ('Name', 'build_full_heatpump_offer'), (), ())","('Call', 0, 0)",build_full_heatpump_offer,hp_offer = build_full_heatpump_offer()
.\pdf_template_engine\placeholders.py,2483,hp_offer,"('Const', 'None')","('Const',)",,hp_offer = None
.\analysis.py,7033,hp_offer,"('Subscript', ('Attr', 'st', 'session_state'), ('Const', ""'heatpump_offer'""))","('Subscript',)",st,hp_offer = st.session_state['heatpump_offer']
.\analysis.py,7056,hp_offer,"('Subscript', ('Attr', 'st', 'session_state'), ('Const', ""'heatpump_offer'""))","('Subscript',)",st,hp_offer = st.session_state['heatpump_offer']
.\pdf_template_engine\placeholders.py,2491,hp_ph,"('Call', ('Name', 'extract_placeholders_from_offer'), (('Name', 'hp_offer'),), ())","('Call', 1, 0)","extract_placeholders_from_offer,hp_offer",hp_ph = extract_placeholders_from_offer(hp_offer)
.\pdf_template_engine\placeholders.py,2496,hp_ph,"('Call', ('Name', 'extract_placeholders_from_offer'), (('Name', 'hp_offer'),), ())","('Call', 1, 0)","extract_placeholders_from_offer,hp_offer",hp_ph = extract_placeholders_from_offer(hp_offer)
.\pdf_template_engine\placeholders.py,2493,hp_ph,"('Dict', ())","('Dict', 0)",,hp_ph = {}
.\analysis.py,1867,hz,"('BoolOp', 'Or', (('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'stromkosten_heizung_euro_monat'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","_parse_float,project_data","hz = _parse_float(project_data.get(""stromkosten_heizung_euro_monat"")) or 0.0"
.\analysis.py,1885,hz,"('BoolOp', 'Or', (('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'stromkosten_heizung_euro_monat'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","_parse_float,project_details","hz = _parse_float(project_details.get(""stromkosten_heizung_euro_monat"")) or 0.0"
.\pdf_template_engine\placeholders.py,977,hz,"('BoolOp', 'Or', (('Call', ('Name', 'parse_float'), (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'stromkosten_heizung_euro_monat'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","parse_float,project_data","hz = parse_float(project_data.get(""stromkosten_heizung_euro_monat"")) or 0.0"
.\pdf_template_engine\placeholders.py,985,hz,"('BoolOp', 'Or', (('Call', ('Name', 'parse_float'), (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'stromkosten_heizung_euro_monat'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","parse_float,project_details","hz = parse_float(project_details.get(""stromkosten_heizung_euro_monat"")) or 0.0"
.\pdf_erstellen_komplett.py,266,i,"('Call', ('Attr', 'args', 'index'), (('Name', 'flag'),), ())","('Call', 1, 0)","args,flag",i = args.index(flag)
.\admin_module_alias_mapping_ui.py,45,i,"('Const', '0')","('Const',)",,i = 0
.\solar_calculator.py,270,idx,"('Call', ('Attr', 'opts', 'index'), (('Name', 'current_val'),), ())","('Call', 1, 0)","current_val,opts",idx = opts.index(current_val)
.\notwendig oder nicht\wichtig\repo_porter.py,462,idx,"('Call', ('Name', 'max'), (('Const', '0'), ('Call', ('Name', 'min'), (('Call', ('Name', 'len'), (('Name', 'original'),), ()), ('Name', 'after_line')), ())), ())","('Call', 2, 0)","after_line,len,max,min,original","idx = max(0, min(len(original), after_line))"
.\tools\repo_porter.py,462,idx,"('Call', ('Name', 'max'), (('Const', '0'), ('Call', ('Name', 'min'), (('Call', ('Name', 'len'), (('Name', 'original'),), ()), ('Name', 'after_line')), ())), ())","('Call', 2, 0)","after_line,len,max,min,original","idx = max(0, min(len(original), after_line))"
.\solar_calculator.py,272,idx,"('Const', '0')","('Const',)",,idx = 0
.\notwendig oder nicht\python_function_recipes.py,69,idx,"('Subscript', ('Attr', 'lv', 'index'), ('Name', 'pos'))","('Subscript',)","lv,pos",idx = lv.index[pos]
.\doc_output.py,1949,idx_cover_letter,"('Call', ('Attr', 'cover_letter_keys', 'index'), (('Attr', 'st.session_state', 'selected_cover_letter_name_doc_output'),), ())","('Call', 1, 0)","cover_letter_keys,st",idx_cover_letter = cover_letter_keys.index(st.session_state.selected_cover_letter_name_doc_output)
.\doc_output.py,1947,idx_cover_letter,"('Const', '0')","('Const',)",,idx_cover_letter = 0
.\pdf_ui.py,984,idx_cover_letter,"('Other', 'IfExp')","('Other', 'IfExp')","cover_letter_keys,st",cover_letter_keys = list(cover_letter_options.keys()); idx_cover_letter = cover_letter_keys.index(st.session_state.selected_cover_letter_name_doc_output) if st.session_state.selected_cover_letter_name_doc_output in cover_letter_keys else 0
.\solar_calculator.py,140,idx_inv,"('Call', ('Attr', 'inv_options', 'index'), (('Name', 'current_inv'),), ())","('Call', 1, 0)","current_inv,inv_options",idx_inv = inv_options.index(current_inv)
.\solar_calculator.py,142,idx_inv,"('Const', '0')","('Const',)",,idx_inv = 0
.\solar_calculator.py,104,idx_mod,"('Call', ('Attr', 'module_options', 'index'), (('Name', 'current_module'),), ())","('Call', 1, 0)","current_module,module_options",idx_mod = module_options.index(current_module)
.\solar_calculator.py,106,idx_mod,"('Const', '0')","('Const',)",,idx_mod = 0
.\doc_output.py,1931,idx_offer_title,"('Call', ('Attr', 'offer_title_keys', 'index'), (('Attr', 'st.session_state', 'selected_offer_title_name_doc_output'),), ())","('Call', 1, 0)","offer_title_keys,st",idx_offer_title = offer_title_keys.index(st.session_state.selected_offer_title_name_doc_output)
.\doc_output.py,1929,idx_offer_title,"('Const', '0')","('Const',)",,idx_offer_title = 0
.\pdf_ui.py,979,idx_offer_title,"('Other', 'IfExp')","('Other', 'IfExp')","offer_title_keys,st",offer_title_keys = list(offer_title_options.keys()); idx_offer_title = offer_title_keys.index(st.session_state.selected_offer_title_name_doc_output) if st.session_state.selected_offer_title_name_doc_output in offer_title_keys else 0
.\solar_calculator.py,203,idx_st,"('Call', ('Attr', 'st_options', 'index'), (('Name', 'current_storage'),), ())","('Call', 1, 0)","current_storage,st_options",idx_st = st_options.index(current_storage)
.\solar_calculator.py,205,idx_st,"('Const', '0')","('Const',)",,idx_st = 0
.\doc_output.py,1913,idx_title_img,"('Call', ('Attr', 'title_image_keys', 'index'), (('Attr', 'st.session_state', 'selected_title_image_name_doc_output'),), ())","('Call', 1, 0)","st,title_image_keys",idx_title_img = title_image_keys.index(st.session_state.selected_title_image_name_doc_output)
.\doc_output.py,1911,idx_title_img,"('Const', '0')","('Const',)",,idx_title_img = 0
.\pdf_ui.py,974,idx_title_img,"('Other', 'IfExp')","('Other', 'IfExp')","st,title_image_keys",title_image_keys = list(title_image_options.keys()); idx_title_img = title_image_keys.index(st.session_state.selected_title_image_name_doc_output) if st.session_state.selected_title_image_name_doc_output in title_image_keys else 0
.\admin_logo_management_ui.py,103,image,"('Call', ('Attr', 'Image', 'open'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'logo_bytes'),), ()),), ())","('Call', 1, 0)","Image,io,logo_bytes",image = Image.open(io.BytesIO(logo_bytes))
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,90,image,"('Call', ('Attr', 'Image', 'open'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'logo_bytes'),), ()),), ())","('Call', 1, 0)","Image,io,logo_bytes",image = Image.open(io.BytesIO(logo_bytes))
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,121,image,"('Call', ('Attr', 'Image', 'open'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'logo_bytes'),), ()),), ())","('Call', 1, 0)","Image,io,logo_bytes",image = Image.open(io.BytesIO(logo_bytes))
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,90,image,"('Call', ('Attr', 'Image', 'open'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'logo_bytes'),), ()),), ())","('Call', 1, 0)","Image,io,logo_bytes",image = Image.open(io.BytesIO(logo_bytes))
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,121,image,"('Call', ('Attr', 'Image', 'open'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'logo_bytes'),), ()),), ())","('Call', 1, 0)","Image,io,logo_bytes",image = Image.open(io.BytesIO(logo_bytes))
.\admin_logo_management_ui.py,169,image,"('Call', ('Attr', 'Image', 'open'), (('Name', 'uploaded_file'),), ())","('Call', 1, 0)","Image,uploaded_file",image = Image.open(uploaded_file)
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,159,image,"('Call', ('Attr', 'Image', 'open'), (('Name', 'uploaded_file'),), ())","('Call', 1, 0)","Image,uploaded_file",image = Image.open(uploaded_file)
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,200,image,"('Call', ('Attr', 'Image', 'open'), (('Name', 'uploaded_file'),), ())","('Call', 1, 0)","Image,uploaded_file",image = Image.open(uploaded_file)
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,159,image,"('Call', ('Attr', 'Image', 'open'), (('Name', 'uploaded_file'),), ())","('Call', 1, 0)","Image,uploaded_file",image = Image.open(uploaded_file)
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,200,image,"('Call', ('Attr', 'Image', 'open'), (('Name', 'uploaded_file'),), ())","('Call', 1, 0)","Image,uploaded_file",image = Image.open(uploaded_file)
.\admin_panel.py,2024,image_bytes,"('Call', ('Attr', 'uploaded_image', 'getvalue'), (), ())","('Call', 0, 0)",uploaded_image,image_bytes = uploaded_image.getvalue()
.\pdf_ui.py,733,image_bytes,"('Call', ('Attr', 'uploaded_image', 'read'), (), ())","('Call', 0, 0)",uploaded_image,image_bytes = uploaded_image.read()
.\pdf_zu_markdown.py,47,image_bytes,"('Subscript', ('Name', 'base_image'), ('Const', ""'image'""))","('Subscript',)",base_image,"image_bytes = base_image[""image""]"
.\teilen.py,47,image_bytes,"('Subscript', ('Name', 'base_image'), ('Const', ""'image'""))","('Subscript',)",base_image,"image_bytes = base_image[""image""]"
.\pdf_generator.py,2710,image_data,"('Call', ('Attr', 'base64', 'b64decode'), (('Subscript', ('Name', 'item'), ('Const', ""'content'"")),), ())","('Call', 1, 0)","base64,item",image_data = base64.b64decode(item['content'])
.\central_pdf_system.py,1283,image_data,"('Call', ('Attr', 'base64.b64encode(uploaded_image.read())', 'decode'), (), ())","('Call', 0, 0)","base64,uploaded_image",image_data = base64.b64encode(uploaded_image.read()).decode()
.\add_test_product_images.py,78,image_data,"('Call', ('Attr', 'product', 'get'), (('Const', ""'image_base64'""), ('Const', ""''"")), ())","('Call', 2, 0)",product,"image_data = product.get('image_base64', '')"
.\notwendig oder nicht\wichtig\portings\patches\add_test_product_images.py.insert.py,105,image_data,"('Call', ('Attr', 'product', 'get'), (('Const', ""'image_base64'""), ('Const', ""''"")), ())","('Call', 2, 0)",product,"image_data = product.get('image_base64', '')"
.\tools\portings\patches\add_test_product_images.py.insert.py,105,image_data,"('Call', ('Attr', 'product', 'get'), (('Const', ""'image_base64'""), ('Const', ""''"")), ())","('Call', 2, 0)",product,"image_data = product.get('image_base64', '')"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_upload.py.insert.py,39,image_data,"('Call', ('Attr', 'retrieved', 'get'), (('Const', ""'image_base64'""), ('Const', ""''"")), ())","('Call', 2, 0)",retrieved,"image_data = retrieved.get('image_base64', '')"
.\tests\test_admin_upload.py,39,image_data,"('Call', ('Attr', 'retrieved', 'get'), (('Const', ""'image_base64'""), ('Const', ""''"")), ())","('Call', 2, 0)",retrieved,"image_data = retrieved.get('image_base64', '')"
.\tools\portings\patches\test_admin_upload.py.insert.py,39,image_data,"('Call', ('Attr', 'retrieved', 'get'), (('Const', ""'image_base64'""), ('Const', ""''"")), ())","('Call', 2, 0)",retrieved,"image_data = retrieved.get('image_base64', '')"
.\admin_panel.py,2062,image_data,"('Call', ('Name', 'get_company_image_template_data'), (('Subscript', ('Name', 'template'), ('Const', ""'id'"")),), ())","('Call', 1, 0)","get_company_image_template_data,template",image_data = get_company_image_template_data(template['id'])
.\pdf_generator.py,2715,image_width,"('Mult', (('Const', '0.4'), ('Name', 'available_width_content')))","('Mult', (('Const',), ('Name',)))",available_width_content,image_width = available_width_content * 0.4
.\pdf_generator.py,2721,image_width,"('Mult', (('Const', '0.6'), ('Name', 'available_width_content')))","('Mult', (('Const',), ('Name',)))",available_width_content,image_width = available_width_content * 0.6
.\pdf_generator.py,2717,image_width,"('Mult', (('Const', '0.8'), ('Name', 'available_width_content')))","('Mult', (('Const',), ('Name',)))",available_width_content,image_width = available_width_content * 0.8
.\pdf_generator.py,2719,image_width,"('Name', 'available_width_content')","('Name',)",available_width_content,image_width = available_width_content
.\pdf_preview.py,269,images,"('Call', ('Attr', 'engine', 'pdf_to_images'), (('Name', 'pdf_bytes'),), (('max_pages', ('Const', '20')),))","('Call', 1, 1)","engine,pdf_bytes","images = engine.pdf_to_images(pdf_bytes, max_pages=20)"
.\pdf_preview.py,241,images,"('Call', ('Attr', 'engine', 'pdf_to_images'), (('Name', 'pdf_bytes'),), (('max_pages', ('Const', '3')),))","('Call', 1, 1)","engine,pdf_bytes","images = engine.pdf_to_images(pdf_bytes, max_pages=3)"
.\pdf_template_engine\dynamic_overlay.py,787,images,"('List', (('Tuple', (('Call', ('Attr', 'dynamic_data', 'get'), (('Const', ""'module_image_b64'""),), ()), ('Dict', (('KV', ('Const', ""'max_h'""), ('Const', '90.0')), ('KV', ('Const', ""'max_w'""), ('Const', '140.0')), ('KV', ('Const', ""'x'""), ('Const', '50.0')), ('KV', ('Const', ""'y_top'""), ('Sub', ('Name', 'page_height'), ('Const', '250.0'))))))), ('Tuple', (('Call', ('Attr', 'dynamic_data', 'get'), (('Const', ""'inverter_image_b64'""),), ()), ('Dict', (('KV', ('Const', ""'max_h'""), ('Const', '90.0')), ('KV', ('Const', ""'max_w'""), ('Const', '140.0')), ('KV', ('Const', ""'x'""), ('Const', '50.0')), ('KV', ('Const', ""'y_top'""), ('Sub', ('Name', 'page_height'), ('Const', '440.0'))))))), ('Tuple', (('Call', ('Attr', 'dynamic_data', 'get'), (('Const', ""'storage_image_b64'""),), ()), ('Dict', (('KV', ('Const', ""'max_h'""), ('Const', '90.0')), ('KV', ('Const', ""'max_w'""), ('Const', '140.0')), ('KV', ('Const', ""'x'""), ('Const', '50.0')), ('KV', ('Const', ""'y_top'""), ('Sub', ('Name', 'page_height'), ('Const', '630.0')))))))))","('List', 3)","dynamic_data,page_height",images = [
.\pdf_atomizer.py,233,images,"('List', ())","('List', 0)",,images = []
.\pdf_preview.py,94,images,"('List', ())","('List', 0)",,images = []
.\create_png_test_images.py,19,img,"('Call', ('Attr', 'Image', 'new'), (('Const', ""'RGB'""), ('Tuple', (('Const', '200'), ('Const', '150')))), (('color', ('Const', ""'#E3F2FD'"")),))","('Call', 2, 1)",Image,"img = Image.new('RGB', (200, 150), color='#E3F2FD')"
.\notwendig oder nicht\wichtig\portings\patches\create_png_test_images.py.insert.py,19,img,"('Call', ('Attr', 'Image', 'new'), (('Const', ""'RGB'""), ('Tuple', (('Const', '200'), ('Const', '150')))), (('color', ('Const', ""'#E3F2FD'"")),))","('Call', 2, 1)",Image,"img = Image.new('RGB', (200, 150), color='#E3F2FD')"
.\tools\portings\patches\create_png_test_images.py.insert.py,19,img,"('Call', ('Attr', 'Image', 'new'), (('Const', ""'RGB'""), ('Tuple', (('Const', '200'), ('Const', '150')))), (('color', ('Const', ""'#E3F2FD'"")),))","('Call', 2, 1)",Image,"img = Image.new('RGB', (200, 150), color='#E3F2FD')"
.\notwendig oder nicht\wichtig\portings\patches\test_brand_logos.py.insert.py,17,img,"('Call', ('Attr', 'Image', 'new'), (('Const', ""'RGB'""), ('Tuple', (('Name', 'width'), ('Name', 'height')))), (('color', ('Const', ""'white'"")),))","('Call', 2, 1)","Image,height,width","img = Image.new('RGB', (width, height), color='white')"
.\tests\test_brand_logos.py,14,img,"('Call', ('Attr', 'Image', 'new'), (('Const', ""'RGB'""), ('Tuple', (('Name', 'width'), ('Name', 'height')))), (('color', ('Const', ""'white'"")),))","('Call', 2, 1)","Image,height,width","img = Image.new('RGB', (width, height), color='white')"
.\tools\portings\patches\test_brand_logos.py.insert.py,17,img,"('Call', ('Attr', 'Image', 'new'), (('Const', ""'RGB'""), ('Tuple', (('Name', 'width'), ('Name', 'height')))), (('color', ('Const', ""'white'"")),))","('Call', 2, 1)","Image,height,width","img = Image.new('RGB', (width, height), color='white')"
.\pdf_styles.py,646,img,"('Call', ('Attr', 'Image', 'new'), (('Const', ""'RGBA'""), ('Tuple', (('Name', 'width'), ('Name', 'height'))), ('Tuple', (('Const', '255'), ('Const', '255'), ('Const', '255'), ('Const', '255')))), ())","('Call', 3, 0)","Image,height,width","img = Image.new('RGBA', (width, height), (255, 255, 255, 255))"
.\pdf_preview.py,101,img,"('Call', ('Attr', 'Image', 'open'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'img_data'),), ()),), ())","('Call', 1, 0)","Image,img_data,io",img = Image.open(io.BytesIO(img_data))
.\pdf_preview.py,346,img,"('Call', ('Attr', 'Image', 'open'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'img_data'),), ()),), ())","('Call', 1, 0)","Image,img_data,io",img = Image.open(io.BytesIO(img_data))
.\analysis.py,1719,img,"('Call', ('Attr', 'fig', 'to_image'), (), (('format', ('Const', ""'png'"")), ('height', ('Const', '480')), ('scale', ('Const', '1.5')), ('width', ('Const', '800'))))","('Call', 0, 4)",fig,"img = fig.to_image(format=""png"", scale=1.5, width=800, height=480)"
.\pdf_generator.py,1120,img,"('Call', ('Name', 'Image'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'img_data_bytes'),), ()),), (('height', ('Name', 'img_h_final')), ('width', ('Name', 'img_w_final'))))","('Call', 1, 2)","Image,img_data_bytes,img_h_final,img_w_final,io","img = Image(io.BytesIO(img_data_bytes), width=img_w_final, height=img_h_final)"
.\pdf_generator.py,633,img,"('Call', ('Name', 'ImageReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'img_bytes'),), ()),), ())","('Call', 1, 0)","ImageReader,img_bytes,io",img = ImageReader(io.BytesIO(img_bytes))
.\pdf_template_engine\dynamic_overlay.py,195,img,"('Call', ('Name', 'ImageReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'img_bytes'),), ()),), ())","('Call', 1, 0)","ImageReader,img_bytes,io",img = ImageReader(io.BytesIO(img_bytes))
.\pdf_template_engine\dynamic_overlay.py,799,img,"('Call', ('Name', '_as_image_reader'), (('Name', 'img_b64'),), ())","('Call', 1, 0)","_as_image_reader,img_b64",img = _as_image_reader(img_b64)
.\pdf_template_engine\dynamic_overlay.py,418,img,"('Call', ('Name', '_as_image_reader'), (('Name', 'logo_b64'),), ())","('Call', 1, 0)","_as_image_reader,logo_b64",img = _as_image_reader(logo_b64)
.\pdf_template_engine\prepare_backgrounds.py,12,img,"('Subscript', ('Call', ('Name', 'convert_from_path'), (('Name', 'pdf_in'),), (('dpi', ('Const', '300')),)), ('Const', '0'))","('Subscript',)","convert_from_path,pdf_in","img = convert_from_path(pdf_in, dpi=300)[0]"
.\pdf_template_engine\placeholders.py,1767,img_b64,"('Call', ('Attr', ""as_str(inverter_details.get('image_base64') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,inverter_details","img_b64 = as_str(inverter_details.get(""image_base64"") or """").strip()"
.\pdf_template_engine\placeholders.py,1530,img_b64,"('Call', ('Attr', ""as_str(module_details.get('image_base64') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,module_details","img_b64 = as_str(module_details.get(""image_base64"") or """").strip()"
.\pdf_template_engine\placeholders.py,1890,img_b64,"('Call', ('Attr', ""as_str(storage_details.get('image_base64') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,storage_details","img_b64 = as_str(storage_details.get(""image_base64"") or """").strip()"
.\central_pdf_system.py,1721,img_b64,"('Call', ('Attr', 'base64.b64encode(img.read())', 'decode'), (), ())","('Call', 0, 0)","base64,img",img_b64 = base64.b64encode(img.read()).decode()
.\pdf_template_engine\dynamic_overlay.py,194,img_bytes,"('Call', ('Attr', 'base64', 'b64decode'), (('Name', 'b64'),), ())","('Call', 1, 0)","b64,base64",img_bytes = base64.b64decode(b64)
.\pdf_generator.py,632,img_bytes,"('Call', ('Attr', 'base64', 'b64decode'), (('Name', 'logo_b64'),), ())","('Call', 1, 0)","base64,logo_b64",img_bytes = base64.b64decode(logo_b64)
.\pv_visuals.py,49,img_bytes,"('Call', ('Attr', 'fig', 'to_image'), (), (('format', ('Const', ""'png'"")), ('height', ('Const', '550')), ('scale', ('Const', '2')), ('width', ('Const', '900'))))","('Call', 0, 4)",fig,"img_bytes = fig.to_image(format=""png"", scale=2, width=900, height=550)"
.\check_product_image_details.py,17,img_data,"('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'result'), ('Const', '2'))))","('BoolOp', 'Or', 2)",result,"img_data = result[2] or """""
.\notwendig oder nicht\wichtig\portings\patches\check_product_image_details.py.insert.py,22,img_data,"('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'result'), ('Const', '2'))))","('BoolOp', 'Or', 2)",result,"img_data = result[2] or """""
.\tools\portings\patches\check_product_image_details.py.insert.py,22,img_data,"('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'result'), ('Const', '2'))))","('BoolOp', 'Or', 2)",result,"img_data = result[2] or """""
.\pdf_preview.py,100,img_data,"('Call', ('Attr', 'pix', 'tobytes'), (('Const', ""'png'""),), ())","('Call', 1, 0)",pix,"img_data = pix.tobytes(""png"")"
.\pdf_preview.py,343,img_data,"('Call', ('Attr', 'pix', 'tobytes'), (('Const', ""'png'""),), ())","('Call', 1, 0)",pix,"img_data = pix.tobytes(""png"")"
.\pdf_generator.py,1101,img_data_bytes,"('Call', ('Attr', 'base64', 'b64decode'), (('Name', 'image_data_input'),), ())","('Call', 1, 0)","base64,image_data_input",img_data_bytes = base64.b64decode(image_data_input)
.\pdf_generator.py,1096,img_data_bytes,"('Const', 'None')","('Const',)",,img_data_bytes: Optional[bytes] = None
.\pdf_generator.py,1102,img_data_bytes,"('Const', 'None')","('Const',)",,except Exception: img_data_bytes = None
.\pdf_generator.py,1103,img_data_bytes,"('Name', 'image_data_input')","('Name',)",image_data_input,"elif isinstance(image_data_input, bytes): img_data_bytes = image_data_input"
.\pdf_preview.py,306,img_resized,"('Call', ('Attr', 'current_img', 'resize'), (('Tuple', (('Name', 'width'), ('Name', 'height'))),), ())","('Call', 1, 0)","current_img,height,width","img_resized = current_img.resize((width, height))"
.\pdf_preview.py,250,img_resized,"('Call', ('Attr', 'img', 'resize'), (('Tuple', (('Name', 'width'), ('Name', 'height'))),), ())","('Call', 1, 0)","height,img,width","img_resized = img.resize((width, height))"
.\notwendig oder nicht\wichtig\repo_porter.py,527,in_imp,"('Const', 'False')","('Const',)",,in_imp = False
.\notwendig oder nicht\wichtig\repo_porter_select.py,98,in_imp,"('Const', 'False')","('Const',)",,in_imp = False
.\tools\repo_porter.py,527,in_imp,"('Const', 'False')","('Const',)",,in_imp = False
.\tools\repo_porter_select.py,98,in_imp,"('Const', 'False')","('Const',)",,in_imp = False
.\notwendig oder nicht\wichtig\repo_porter.py,530,in_imp,"('Const', 'True')","('Const',)",,in_imp = True
.\notwendig oder nicht\wichtig\repo_porter_select.py,102,in_imp,"('Const', 'True')","('Const',)",,in_imp = True
.\tools\repo_porter.py,530,in_imp,"('Const', 'True')","('Const',)",,in_imp = True
.\tools\repo_porter_select.py,102,in_imp,"('Const', 'True')","('Const',)",,in_imp = True
.\pdf_template_engine\placeholders.py,2100,inc_pct,"('BoolOp', 'Or', (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'electricity_price_increase_annual_percent'""),), ()), ('Call', ('Attr', 'project_data', 'get'), (('Const', ""'electricity_price_increase_annual_percent'""),), ())))","('BoolOp', 'Or', 2)","analysis_results,project_data","inc_pct = analysis_results.get(""electricity_price_increase_annual_percent"") or project_data.get(""electricity_price_increase_annual_percent"")"
.\pdf_template_engine\placeholders.py,1026,inc_pct,"('Call', ('Name', '_get_price_increase_percent_pa'), (), ())","('Call', 0, 0)",_get_price_increase_percent_pa,inc_pct = _get_price_increase_percent_pa()  # z. B. 5.0 für 5% p.a.
.\analysis.py,6966,inc_pct,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'current_results', 'get'), (('Const', ""'electricity_price_increase_rate_effective_percent'""), ('Name', 'current_price_increase_for_ui')), ()), ('Name', 'current_price_increase_for_ui'))),), ())","('Call', 1, 0)","current_price_increase_for_ui,current_results,float",inc_pct = float(
.\analysis.py,601,inc_pct,"('Call', ('Name', 'float'), (('Name', 'electricity_price_increase'),), ())","('Call', 1, 0)","electricity_price_increase,float",inc_pct = float(electricity_price_increase)
.\doc_output.py,430,include_financing,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""' Erweiterte Finanzierungsanalyse einschließen'""),), (('key', ('Const', ""'pdf_include_financing'"")), ('value', ('Const', 'False'))))","('Call', 1, 2)",st,"include_financing = st.checkbox("" Erweiterte Finanzierungsanalyse einschließen"", value=False, key=""pdf_include_financing"")"
.\doc_output.py,1711,include_financing,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""' Finanzierungsanalyse einbinden'""),), (('value', ('Const', 'True')),))","('Call', 1, 1)",st,"include_financing = st.checkbox("" Finanzierungsanalyse einbinden"", value=True)"
.\doc_output.py,1790,include_pvgis,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""' PV GIS Daten einbinden'""),), (('key', ('Const', ""'pdf_include_pvgis'"")), ('value', ('Const', 'True'))))","('Call', 1, 2)",st,"include_pvgis = st.checkbox("" PV GIS Daten einbinden"", value=True, key=""pdf_include_pvgis"")"
.\doc_output.py,572,include_pvgis,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""' PV GIS Daten einschließen'""),), (('key', ('Const', ""'pdf_include_pvgis'"")), ('value', ('Const', 'False'))))","('Call', 1, 2)",st,"include_pvgis = st.checkbox("" PV GIS Daten einschließen"", value=False, key=""pdf_include_pvgis"")"
.\calculations.py,2756,include_storage,"('Call', ('Attr', 'project_details', 'get'), (('Const', ""'include_storage'""), ('Const', 'False')), ())","('Call', 2, 0)",project_details,"include_storage = project_details.get(""include_storage"", False)"
.\crm.py,579,include_storage,"('Call', ('Attr', 'st', 'checkbox'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'include_storage_label'""), ('Const', ""'Batteriespeicher einplanen'"")), ()),), (('value', ('Call', ('Name', 'bool'), (('Call', ('Attr', 'project_data_form', 'get'), (('Const', ""'include_storage'""), ('Const', 'False')), ()),), ())),))","('Call', 1, 1)","bool,get_text_crm,project_data_form,st,texts","include_storage = st.checkbox(get_text_crm(texts, ""include_storage_label"", ""Batteriespeicher einplanen""), value=bool(project_data_form.get('include_storage', False)))"
.\pdf_generator.py,790,inclusion_options,"('BoolOp', 'Or', (('Dict', ()), ('Name', 'inclusion_options')))","('BoolOp', 'Or', 2)",inclusion_options,inclusion_options = inclusion_options or {}
.\central_pdf_system.py,352,inclusion_options,"('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'inclusion_options'""), ('Dict', ())), ())","('Call', 2, 0)",kwargs,"inclusion_options = kwargs.get('inclusion_options', {})"
.\central_pdf_system.py,2006,inclusion_options,"('Call', ('Attr', 'self', 'render_content_options'), (('Name', 'texts'), ('Name', 'analysis_results'), ('Name', 'active_company_id'), ('Name', 'db_list_company_documents_func')), ())","('Call', 4, 0)","active_company_id,analysis_results,db_list_company_documents_func,self,texts",inclusion_options = self.render_content_options(
.\pdf_preview.py,198,inclusion_options,"('Dict', (('KV', ('Const', ""'include_all_documents'""), ('Const', 'False')), ('KV', ('Const', ""'include_charts'""), ('Const', 'True')), ('KV', ('Const', ""'include_company_logo'""), ('Const', 'True')), ('KV', ('Const', ""'include_optional_component_details'""), ('Const', 'True')), ('KV', ('Const', ""'selected_charts_for_pdf'""), ('List', (('Const', ""'monthly_generation_chart'""), ('Const', ""'deckungsgrad_chart'""))))))","('Dict', 5)",,inclusion_options = {
.\tests\test_main_pdf.py,84,inclusion_options,"('Dict', (('KV', ('Const', ""'include_all_documents'""), ('Const', 'False')), ('KV', ('Const', ""'include_company_logo'""), ('Const', 'True')), ('KV', ('Const', ""'include_product_images'""), ('Const', 'False'))))","('Dict', 3)",,inclusion_options = {
.\tools\test_main_pdf.py,84,inclusion_options,"('Dict', (('KV', ('Const', ""'include_all_documents'""), ('Const', 'False')), ('KV', ('Const', ""'include_company_logo'""), ('Const', 'True')), ('KV', ('Const', ""'include_product_images'""), ('Const', 'False'))))","('Dict', 3)",,inclusion_options = {
.\pdf_erstellen_komplett.py,72,inclusion_options,"('Dict', (('KV', ('Const', ""'include_all_documents'""), ('Const', 'True')), ('KV', ('Const', ""'include_company_logo'""), ('Const', 'True')), ('KV', ('Const', ""'include_optional_component_details'""), ('Const', 'True')), ('KV', ('Const', ""'include_product_images'""), ('Const', 'True')), ('KV', ('Const', ""'skip_cover_and_letter'""), ('Const', 'False'))))","('Dict', 5)",,inclusion_options = {
.\crm.py,342,income_tax_rate_percent,"('Call', ('Attr', 'st', 'number_input'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'income_tax_rate_label'""), ('Const', ""'Einkommenssteuersatz (%)'"")), ()),), (('max_value', ('Const', '100.0')), ('min_value', ('Const', '0.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'customer_to_edit', 'get'), (('Const', ""'income_tax_rate_percent'""), ('Const', '0.0')), ()),), ()))))","('Call', 1, 3)","customer_to_edit,float,get_text_crm,st,texts","income_tax_rate_percent = st.number_input(get_text_crm(texts, ""income_tax_rate_label"", ""Einkommenssteuersatz (%)""), min_value=0.0, max_value=100.0, value=float(customer_to_edit.get('income_tax_rate_percent', 0.0)))"
.\calculations.py,3285,income_tax_rate_percent,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'income_tax_rate_percent'""), ('Const', '0.0')), ()), ('Const', '0.0'))),), ())","('Call', 1, 0)","customer_data,float",income_tax_rate_percent = float(
.\info_platform.py,16,info_platform_dependencies_available,"('Const', 'False')","('Const',)",,info_platform_dependencies_available = False
.\info_platform.py,13,info_platform_dependencies_available,"('Const', 'True')","('Const',)",,info_platform_dependencies_available = True
.\gui.py,737,info_platform_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'info_platform'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","info_platform_module = import_module_with_fallback(""info_platform"", import_errors)"
.\gui.py,91,info_platform_module,"('Const', 'None')","('Const',)",,info_platform_module: Optional[Any] = None
.\analysis.py,8368,initial_investment,"('Const', '0')","('Const',)",,initial_investment = 0  # Kein Eigenkapital bei Leasing
.\analysis.py,8351,initial_investment,"('Name', 'total_investment')","('Name',)",total_investment,initial_investment = total_investment
.\analysis.py,8355,initial_investment,"('Sub', ('Name', 'total_investment'), ('Name', 'financing_amount'))","('Sub', ('Name',), ('Name',))","financing_amount,total_investment",initial_investment = total_investment - financing_amount  # Eigenkapital
.\product_db.py,157,insert_data,"('Dict', ())","('Dict', 0)",,"insert_data: Dict[str, Any] = {}"
.\crm.py,214,insert_data,"('Other', 'DictComp')","('Other', 'DictComp')","existing_columns,k,project_data,v","insert_data = {k: v for k, v in project_data.items() if k in existing_columns}"
.\dev_tools\kakerlake_ultra_cleaner.py,289,insert_idx,"('Add', (('Const', '1'), ('Name', 'i')))","('Add', (('Const',), ('Name',)))",i,insert_idx=i+1
.\dev_tools\kakerlake_ultra_cleaner.py,308,insert_idx,"('Add', (('Const', '1'), ('Name', 'i')))","('Add', (('Const',), ('Name',)))",i,insert_idx=i+1
.\dev_tools\kakerlake_ultra_cleaner_v2.py,61,insert_idx,"('Add', (('Const', '1'), ('Name', 'i')))","('Add', (('Const',), ('Name',)))",i,insert_idx=i+1
.\dev_tools\kakerlake_ultra_cleaner_v2.py,80,insert_idx,"('Add', (('Const', '1'), ('Name', 'i')))","('Add', (('Const',), ('Name',)))",i,insert_idx=i+1
.\dev_tools\kakerlake_ultra_cleaner_v3.py,74,insert_idx,"('Add', (('Const', '1'), ('Name', 'i')))","('Add', (('Const',), ('Name',)))",i,insert_idx=i+1
.\dev_tools\kakerlake_ultra_cleaner_v3.py,93,insert_idx,"('Add', (('Const', '1'), ('Name', 'i')))","('Add', (('Const',), ('Name',)))",i,insert_idx=i+1
.\mnt\data\kakerlake_ultra_cleaner.py,289,insert_idx,"('Add', (('Const', '1'), ('Name', 'i')))","('Add', (('Const',), ('Name',)))",i,insert_idx=i+1
.\mnt\data\kakerlake_ultra_cleaner.py,308,insert_idx,"('Add', (('Const', '1'), ('Name', 'i')))","('Add', (('Const',), ('Name',)))",i,insert_idx=i+1
.\mnt\data\kakerlake_ultra_cleaner_v2.py,61,insert_idx,"('Add', (('Const', '1'), ('Name', 'i')))","('Add', (('Const',), ('Name',)))",i,insert_idx=i+1
.\mnt\data\kakerlake_ultra_cleaner_v2.py,80,insert_idx,"('Add', (('Const', '1'), ('Name', 'i')))","('Add', (('Const',), ('Name',)))",i,insert_idx=i+1
.\tools\kakerlake_ultra_cleaner.py,290,insert_idx,"('Add', (('Const', '1'), ('Name', 'i')))","('Add', (('Const',), ('Name',)))",i,insert_idx=i+1
.\tools\kakerlake_ultra_cleaner.py,309,insert_idx,"('Add', (('Const', '1'), ('Name', 'i')))","('Add', (('Const',), ('Name',)))",i,insert_idx=i+1
.\dev_tools\kakerlake_ultra_cleaner.py,286,insert_idx,"('Const', '0')","('Const',)",,body=list(mod.body); insert_idx=0
.\dev_tools\kakerlake_ultra_cleaner.py,305,insert_idx,"('Const', '0')","('Const',)",,body=list(module.body); insert_idx=0
.\dev_tools\kakerlake_ultra_cleaner_v2.py,58,insert_idx,"('Const', '0')","('Const',)",,body=list(mod.body); insert_idx=0
.\dev_tools\kakerlake_ultra_cleaner_v2.py,77,insert_idx,"('Const', '0')","('Const',)",,body=list(module.body); insert_idx=0
.\dev_tools\kakerlake_ultra_cleaner_v3.py,71,insert_idx,"('Const', '0')","('Const',)",,body=list(mod.body); insert_idx=0
.\dev_tools\kakerlake_ultra_cleaner_v3.py,90,insert_idx,"('Const', '0')","('Const',)",,body=list(module.body); insert_idx=0
.\mnt\data\kakerlake_ultra_cleaner.py,286,insert_idx,"('Const', '0')","('Const',)",,body=list(mod.body); insert_idx=0
.\mnt\data\kakerlake_ultra_cleaner.py,305,insert_idx,"('Const', '0')","('Const',)",,body=list(module.body); insert_idx=0
.\mnt\data\kakerlake_ultra_cleaner_v2.py,58,insert_idx,"('Const', '0')","('Const',)",,body=list(mod.body); insert_idx=0
.\mnt\data\kakerlake_ultra_cleaner_v2.py,77,insert_idx,"('Const', '0')","('Const',)",,body=list(module.body); insert_idx=0
.\tools\kakerlake_ultra_cleaner.py,287,insert_idx,"('Const', '0')","('Const',)",,body=list(mod.body); insert_idx=0
.\tools\kakerlake_ultra_cleaner.py,306,insert_idx,"('Const', '0')","('Const',)",,body=list(module.body); insert_idx=0
.\heatpump_ui.py,522,installation_cost,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Installationskosten (€)'""),), (('max_value', ('Const', '15000')), ('min_value', ('Const', '3000')), ('step', ('Const', '500')), ('value', ('Const', '6000'))))","('Call', 1, 4)",st,installation_cost = st.number_input(
.\heatpump_ui.py,896,installation_cost,"('Const', '6000')","('Const',)",,installation_cost = 6000
.\calculations_heatpump.py,151,insulation_quality,"('Call', ('Attr', 'building_data', 'get'), (('Const', ""'insulation_quality'""), ('Const', ""'Mittel'"")), ())","('Call', 2, 0)",building_data,"insulation_quality = building_data.get('insulation_quality', 'Mittel')"
.\heatpump_ui.py,153,insulation_quality,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Dämmqualität'""),), (('options', ('List', (('Const', ""'Sehr gut'""), ('Const', ""'Gut'""), ('Const', ""'Mittel'""), ('Const', ""'Schlecht'""), ('Const', ""'Sehr schlecht'"")))),))","('Call', 1, 1)",st,insulation_quality = st.selectbox(
.\heatpump_ui.py,942,integration_data,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'integration_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"integration_data = st.session_state.get('integration_data', {})"
.\heatpump_ui.py,835,integration_data,"('Dict', (('KV', ('Const', ""'annual_pv_savings_hp'""), ('Name', 'annual_pv_savings_hp')), ('KV', ('Const', ""'pv_coverage_hp'""), ('Name', 'pv_coverage_hp')), ('KV', ('Const', ""'smart_control_enabled'""), ('Name', 'smart_control_enabled')), ('KV', ('Const', ""'thermal_storage_size'""), ('Name', 'thermal_storage_size')), ('KV', ('Const', ""'total_annual_savings'""), ('Name', 'total_annual_savings'))))","('Dict', 5)","annual_pv_savings_hp,pv_coverage_hp,smart_control_enabled,thermal_storage_size,total_annual_savings",integration_data = {
.\analysis.py,5289,integrator,"('Attr', 'st.session_state', 'calculations_integrator')","('Attr',)",st,integrator = st.session_state.calculations_integrator
.\analysis.py,8604,integrator,"('Attr', 'st.session_state', 'calculations_integrator')","('Attr',)",st,integrator = st.session_state.calculations_integrator
.\analysis.py,7387,integrator,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'calculations_integrator'""),), ())","('Call', 1, 0)",st,"integrator = st.session_state.get(""calculations_integrator"")"
.\heatpump_ui.py,1184,interest,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Zins % p.a.'""),), (('max_value', ('Const', '15.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '0.1')), ('value', ('Const', '3.0'))))","('Call', 1, 4)",st,"interest = st.number_input(""Zins % p.a."", min_value=0.0, max_value=15.0, value=3.0, step=0.1)"
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_ui.py.insert.py,108,interest,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Zins % p.a.'""),), (('max_value', ('Const', '15.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '0.1')), ('value', ('Const', '3.0'))))","('Call', 1, 4)",st,"interest = st.number_input(""Zins % p.a."", min_value=0.0, max_value=15.0, value=3.0, step=0.1)"
.\notwendig oder nicht\wichtig\portings\patches\heatpump_ui.py.insert.py,109,interest,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Zins % p.a.'""),), (('max_value', ('Const', '15.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '0.1')), ('value', ('Const', '3.0'))))","('Call', 1, 4)",st,"interest = st.number_input(""Zins % p.a."", min_value=0.0, max_value=15.0, value=3.0, step=0.1)"
.\tools\out_selected\patches\heatpump_ui.py.insert.py,108,interest,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Zins % p.a.'""),), (('max_value', ('Const', '15.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '0.1')), ('value', ('Const', '3.0'))))","('Call', 1, 4)",st,"interest = st.number_input(""Zins % p.a."", min_value=0.0, max_value=15.0, value=3.0, step=0.1)"
.\tools\portings\patches\heatpump_ui.py.insert.py,109,interest,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Zins % p.a.'""),), (('max_value', ('Const', '15.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '0.1')), ('value', ('Const', '3.0'))))","('Call', 1, 4)",st,"interest = st.number_input(""Zins % p.a."", min_value=0.0, max_value=15.0, value=3.0, step=0.1)"
.\heatpump_pricing.py,172,interest,"('Mult', (('Name', 'r'), ('Name', 'remaining')))","('Mult', (('Name',), ('Name',)))","r,remaining",interest = remaining * r
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,118,interest,"('Mult', (('Name', 'r'), ('Name', 'remaining')))","('Mult', (('Name',), ('Name',)))","r,remaining",interest = remaining * r
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,118,interest,"('Mult', (('Name', 'r'), ('Name', 'remaining')))","('Mult', (('Name',), ('Name',)))","r,remaining",interest = remaining * r
.\financial_tools.py,46,interest_payment,"('Const', '0')","('Const',)",,interest_payment = 0
.\financial_tools.py,49,interest_payment,"('Mult', (('Name', 'monthly_rate'), ('Name', 'remaining_principal')))","('Mult', (('Name',), ('Name',)))","monthly_rate,remaining_principal",interest_payment = remaining_principal * monthly_rate
.\doc_output.py,447,interest_rate,"('Call', ('Attr', 'st', 'slider'), (('Const', ""' Zinssatz (%)'""), ('Const', '1.0'), ('Const', '8.0'), ('Const', '3.5'), ('Const', '0.1')), (('key', ('Const', ""'pdf_interest_rate'"")),))","('Call', 5, 1)",st,"interest_rate = st.slider("" Zinssatz (%)"", 1.0, 8.0, 3.5, 0.1, key=""pdf_interest_rate"")"
.\analysis.py,7871,interest_rate,"('Call', ('Attr', 'st', 'slider'), (('Const', ""'Zinssatz (% p.a.)'""),), (('key', ('Const', ""'interest_rate_analysis'"")), ('max_value', ('Const', '12.0')), ('min_value', ('Const', '1.0')), ('step', ('Const', '0.1')), ('value', ('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'interest_rate_percent'""), ('Const', '4.5')), ()))))","('Call', 1, 5)","customer_data,st",interest_rate = st.slider(
.\pdf_template_engine\placeholders.py,1715,inv_id,"('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_inverter_id'""),), ())","('Call', 1, 0)",project_details,"inv_id = project_details.get(""selected_inverter_id"")"
.\pdf_template_engine\placeholders.py,1718,inv_id,"('Call', ('Name', '_get_pid_inv'), (('Name', 'inverter_name'),), ())","('Call', 1, 0)","_get_pid_inv,inverter_name",inv_id = _get_pid_inv(inverter_name)
.\pdf_template_engine\placeholders.py,1720,inv_id,"('Const', 'None')","('Const',)",,inv_id = None
.\pdf_template_engine\placeholders.py,681,inv_qty,"('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_inverter_quantity'""), ('Const', '1')), ())","('Call', 2, 0)",project_details,"inv_qty = project_details.get(""selected_inverter_quantity"", 1)"
.\pdf_template_engine\placeholders.py,1583,inv_qty,"('Call', ('Name', 'int'), (('BoolOp', 'Or', (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_inverter_quantity'""), ('Const', '1')), ()), ('Const', '1'))),), ())","('Call', 1, 0)","int,project_details","inv_qty = int(project_details.get(""selected_inverter_quantity"", 1) or 1)"
.\solar_calculator.py,175,inv_qty,"('Call', ('Name', 'max'), (('Const', '1'), ('Call', ('Name', 'int'), (('BoolOp', 'Or', (('Call', ('Attr', 'details', 'get'), (('Const', ""'selected_inverter_quantity'""), ('Const', '1')), ()), ('Const', '1'))),), ())), ())","('Call', 2, 0)","details,int,max","inv_qty = max(1, int(details.get('selected_inverter_quantity', 1) or 1))"
.\pdf_template_engine\placeholders.py,1585,inv_qty,"('Const', '1')","('Const',)",,inv_qty = 1
.\pdf_template_engine\placeholders.py,675,inv_total_kw,"('BoolOp', 'Or', (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'inverter_power_kw'""),), ()), ('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_inverter_power_kw'""),), ())))","('BoolOp', 'Or', 2)",project_details,inv_total_kw = (
.\pdf_template_engine\placeholders.py,1634,inv_total_kw,"('BoolOp', 'Or', (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'inverter_power_kw'""),), ()), ('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_inverter_power_kw'""),), ()), ('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_inverter_power_kw_single'""),), ())))","('BoolOp', 'Or', 3)",project_details,inv_total_kw = (
.\pdf_template_engine\placeholders.py,689,inv_total_kw,"('Div', ('Call', ('Name', 'float'), (('Name', 'inv_total_kw'),), ()), ('Const', '1000'))","('Div', ('Call', 1, 0), ('Const',))","float,inv_total_kw",inv_total_kw = float(inv_total_kw) / 1000
.\pdf_template_engine\placeholders.py,683,inv_total_kw,"('Mult', (('Call', ('Name', 'float'), (('Name', 'inv_qty'),), ()), ('Call', ('Name', 'float'), (('Name', 'inv_single'),), ())))","('Mult', (('Call', 1, 0), ('Call', 1, 0)))","float,inv_qty,inv_single",inv_total_kw = float(inv_single) * float(inv_qty)
.\crm.py,574,inverter_options,"('Add', (('List', (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'please_select_option'""), ('Const', ""'--- Bitte wählen ---'"")), ()),)), ('Other', 'ListComp')))","('Add', (('List', 1), ('Other', 'ListComp')))","get_text_crm,inverter_products,p,texts","inverter_options = [get_text_crm(texts, ""please_select_option"", ""--- Bitte wählen ---"")] + [p['model_name'] for p in inverter_products if p.get('model_name')]"
.\multi_offer_generator.py,441,inverter_options,"('Other', 'DictComp')","('Other', 'DictComp')","p,products","inverter_options = {p[""model_name""]: p[""id""] for p in products[""inverter""]}"
.\multi_offer_generator_new.py,238,inverter_options,"('Other', 'DictComp')","('Other', 'DictComp')","p,products","inverter_options = {p[""model_name""]: p[""id""] for p in products[""inverter""]}"
.\multi_offer_generator_old.py,177,inverter_options,"('Other', 'DictComp')","('Other', 'DictComp')","p,products","inverter_options = {p[""model_name""]: p[""id""] for p in products[""inverter""]}"
.\multi_offer_generator_old.py,530,inverter_options,"('Other', 'DictComp')","('Other', 'DictComp')","p,products","inverter_options = {p[""model_name""]: p[""id""] for p in products[""inverter""]}"
.\crm.py,573,inverter_products,"('Call', ('Attr', 'st.session_state.product_db_module', 'list_products'), (), (('category', ('Const', ""'Wechselrichter'"")),))","('Call', 0, 1)",st,inverter_products = st.session_state.product_db_module.list_products(category='Wechselrichter')
.\crm.py,571,inverter_products,"('List', ())","('List', 0)",,inverter_products = []
.\pdf_generator.py,2123,inverter_qty_suffix,"('Const', ""''"")","('Const',)",,"inverter_qty_suffix = """""
.\pdf_generator.py,2129,inverter_qty_suffix,"('Const', ""''"")","('Const',)",,"inverter_qty_suffix = """""
.\pdf_generator.py,2127,inverter_qty_suffix,"('Other', 'JoinedStr')","('Other', 'JoinedStr')",inv_qty_val,"inverter_qty_suffix = f"" ({inv_qty_val}x)"""
.\analysis.py,4276,invest_opts,"('List', (('Name', 'base_invest'), ('Mult', (('Const', '0.9'), ('Name', 'base_invest'))), ('Mult', (('Const', '1.1'), ('Name', 'base_invest')))))","('List', 3)",base_invest,"invest_opts = [base_invest, base_invest * 0.9, base_invest * 1.1]"
.\analysis.py,4195,invest_opts,"('List', (('Name', 'curr_invest'), ('Mult', (('Const', '0.8'), ('Name', 'curr_invest'))), ('Mult', (('Const', '1.3'), ('Name', 'curr_invest')))))","('List', 3)",curr_invest,"invest_opts = [curr_invest, curr_invest * 0.8, curr_invest * 1.3]"
.\analysis.py,8784,investment,"('BoolOp', 'Or', (('Call', ('Attr', 'results', 'get'), (('Const', ""'investment_total'""), ('Const', '0.0')), ()), ('Call', ('Attr', 'results', 'get'), (('Const', ""'total_investment_brutto'""), ('Const', '0.0')), ()), ('Call', ('Attr', 'results', 'get'), (('Const', ""'total_investment_netto'""), ('Const', '0.0')), ()), ('Const', '25000.0')))","('BoolOp', 'Or', 4)",results,investment = (
.\analysis.py,9123,investment,"('BoolOp', 'Or', (('Call', ('Attr', 'results', 'get'), (('Const', ""'total_investment_brutto'""), ('Const', '0.0')), ()), ('Call', ('Attr', 'results', 'get'), (('Const', ""'total_investment_netto'""), ('Const', '0.0')), ()), ('Const', '25000.0')))","('BoolOp', 'Or', 3)",results,investment = (
.\calculations.py,1374,investment,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'total_investment_netto'""), ('Const', '20000')), ())","('Call', 2, 0)",calc_results,"investment = calc_results.get(""total_investment_netto"", 20000)"
.\calculations.py,1388,investment,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'total_investment_netto'""), ('Const', '20000')), ())","('Call', 2, 0)",calc_results,"investment = calc_results.get(""total_investment_netto"", 20000)"
.\pdf_styles.py,445,investment,"('Call', ('Attr', 'data', 'get'), (('Const', ""'investment'""), ('Const', '0')), ())","('Call', 2, 0)",data,"investment = data.get('investment', 0)"
.\calculations.py,1317,investment,"('Call', ('Attr', 'lcoe_params', 'get'), (('Const', ""'investment'""), ('Const', '20000')), ())","('Call', 2, 0)",lcoe_params,"investment = lcoe_params.get(""investment"", 20000)"
.\calculations.py,1768,investment,"('Call', ('Attr', 'np.random', 'normal'), (('Name', 'base_investment'), ('Mult', (('Const', '0.1'), ('Name', 'base_investment')))), ())","('Call', 2, 0)","base_investment,np","investment = np.random.normal(base_investment, base_investment * 0.1)"
.\calculations_extended.py,403,investment,"('Call', ('Attr', 'offer_data', 'get'), (('Const', ""'total_investment'""), ('Const', '0')), ())","('Call', 2, 0)",offer_data,"investment = offer_data.get(""total_investment"", 0)"
.\analysis.py,6517,investment,"('Call', ('Attr', 'rec', 'get'), (('Const', ""'investment'""), ('Const', '0')), ())","('Call', 2, 0)",rec,"investment = rec.get(""investment"", 0)"
.\pdf_template_engine\placeholders.py,967,irr,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'irr_percent'""),), ())","('Call', 1, 0)",analysis_results,"irr = analysis_results.get(""irr_percent"")"
.\calculations.py,1396,irr,"('Const', '0.0')","('Const',)",,irr = 0.0
.\calculations.py,1405,irr,"('Const', '0.05')","('Const',)",,irr = 0.05  # Fallback
.\calculations.py,1402,irr,"('Name', 'rate')","('Name',)",rate,irr = rate
.\pdf_template_engine\dynamic_overlay.py,504,is_footer_num,"('BoolOp', 'And', (('Call', ('Attr', 'raw', 'isdigit'), (), ()), ('Compare', ('Call', ('Name', 'int'), (('Name', 'raw'),), ()), ('Eq',), (('Name', 'i'),)), ('Compare', ('Call', ('Name', 'len'), (('Name', 'pos'),), ()), ('Eq',), (('Const', '4'),)), ('Compare', ('Name', 'color_int'), ('Eq',), (('Const', '16777215'),)), ('Compare', ('Subscript', ('Name', 'pos'), ('Const', '0')), ('GtE',), (('Const', '520.0'),)), ('Compare', ('Subscript', ('Name', 'pos'), ('Const', '3')), ('GtE',), (('Const', '780.0'),)), ('Not', ('Name', 'key'))))","('BoolOp', 'And', 7)","color_int,i,int,key,len,pos,raw",is_footer_num = (
.\pdf_template_engine\dynamic_overlay.py,511,is_footer_num,"('Const', 'False')","('Const',)",,is_footer_num = False
.\pdf_generator.py,207,items,"('Call', ('Attr', 'self.offer_data', 'get'), (('Const', ""'items'""), ('List', ())), ())","('Call', 2, 0)",self,"items = self.offer_data.get(""items"", [])"
.\dev_tools\kakerlake_ultra_cleaner.py,79,items,"('List', ())","('List', 0)",,items=[];
.\heatpump_pricing.py,252,items,"('List', ())","('List', 0)",,items: List[str] = []
.\mnt\data\kakerlake_ultra_cleaner.py,79,items,"('List', ())","('List', 0)",,items=[];
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,200,items,"('List', ())","('List', 0)",,items: List[str] = []
.\tools\import_module_attributes_generic.py,453,items,"('List', ())","('List', 0)",,"items: List[Tuple[str, Any]] = []"
.\tools\kakerlake_ultra_cleaner.py,80,items,"('List', ())","('List', 0)",,items=[];
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,200,items,"('List', ())","('List', 0)",,items: List[str] = []
.\analysis.py,4453,jahre_axis,"('Call', ('Attr', 'np', 'arange'), (('Const', '0'), ('Add', (('Const', '1'), ('Name', 'years_effective')))), ())","('Call', 2, 0)","np,years_effective","jahre_axis = np.arange(0, years_effective + 1)"
.\analysis.py,2841,jahre_axis,"('Call', ('Attr', 'np', 'arange'), (('Const', '1'), ('Add', (('Const', '1'), ('Name', 'years_effective')))), ())","('Call', 2, 0)","np,years_effective","jahre_axis = np.arange(1, years_effective + 1)"
.\analysis.py,3556,jahre_axis,"('Call', ('Attr', 'np', 'arange'), (('Const', '1'), ('Add', (('Const', '1'), ('Name', 'years_effective')))), ())","('Call', 2, 0)","np,years_effective","jahre_axis = np.arange(1, years_effective + 1)"
.\analysis.py,4007,jahre_axis,"('Call', ('Attr', 'np', 'arange'), (('Const', '1'), ('Add', (('Const', '1'), ('Name', 'years_effective')))), ())","('Call', 2, 0)","np,years_effective","jahre_axis = np.arange(1, years_effective + 1)"
.\analysis.py,2745,jahresverbrauch,"('Call', ('Name', 'float'), (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'total_consumption_kwh_yr'""), ('Const', '3500.0')), ()),), ())","('Call', 1, 0)","analysis_results,float","jahresverbrauch = float(analysis_results.get(""total_consumption_kwh_yr"", 3500.0))"
.\analysis.py,2747,jahresverbrauch,"('Const', '3500.0')","('Const',)",,jahresverbrauch = 3500.0
.\pdf_template_engine\dynamic_overlay.py,410,key,"('Call', ('Attr', 'PLACEHOLDER_MAPPING', 'get'), (('Name', 'text'),), ())","('Call', 1, 0)","PLACEHOLDER_MAPPING,text",key = PLACEHOLDER_MAPPING.get(text)
.\dev_tools\kakerlake_ultra_cleaner.py,355,key,"('Call', ('Attr', 'call.args[0].value.value', 'strip'), (('Const', '\'\\\'""\''),), ())","('Call', 1, 0)",call,"key=call.args[0].value.value.strip('\'""')"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,237,key,"('Call', ('Attr', 'call.args[0].value.value', 'strip'), (('Const', '\'\\\'""\''),), ())","('Call', 1, 0)",call,"key = call.args[0].value.value.strip('\'""')"
.\mnt\data\kakerlake_ultra_cleaner.py,355,key,"('Call', ('Attr', 'call.args[0].value.value', 'strip'), (('Const', '\'\\\'""\''),), ())","('Call', 1, 0)",call,"key=call.args[0].value.value.strip('\'""')"
.\tools\kakerlake_ultra_cleaner.py,356,key,"('Call', ('Attr', 'call.args[0].value.value', 'strip'), (('Const', '\'\\\'""\''),), ())","('Call', 1, 0)",call,"key=call.args[0].value.value.strip('\'""')"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,224,key,"('Call', ('Attr', 'first.value', 'strip'), (('Const', '\'\\\'""\''),), ())","('Call', 1, 0)",first,"key = first.value.strip('\'""')"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,224,key,"('Call', ('Attr', 'first.value', 'strip'), (('Const', '\'\\\'""\''),), ())","('Call', 1, 0)",first,"key = first.value.strip('\'""')"
.\dev_tools\kakerlake_ultra_cleaner.py,366,key,"('Call', ('Attr', 'sub.slice.value.value', 'strip'), (('Const', '\'\\\'""\''),), ())","('Call', 1, 0)",sub,"key=sub.slice.value.value.strip('\'""')"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,235,key,"('Call', ('Attr', 'sub.slice.value.value', 'strip'), (('Const', '\'\\\'""\''),), ())","('Call', 1, 0)",sub,"key = sub.slice.value.value.strip('\'""')"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,249,key,"('Call', ('Attr', 'sub.slice.value.value', 'strip'), (('Const', '\'\\\'""\''),), ())","('Call', 1, 0)",sub,"key = sub.slice.value.value.strip('\'""')"
.\mnt\data\kakerlake_ultra_cleaner.py,366,key,"('Call', ('Attr', 'sub.slice.value.value', 'strip'), (('Const', '\'\\\'""\''),), ())","('Call', 1, 0)",sub,"key=sub.slice.value.value.strip('\'""')"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,235,key,"('Call', ('Attr', 'sub.slice.value.value', 'strip'), (('Const', '\'\\\'""\''),), ())","('Call', 1, 0)",sub,"key = sub.slice.value.value.strip('\'""')"
.\tools\kakerlake_ultra_cleaner.py,367,key,"('Call', ('Attr', 'sub.slice.value.value', 'strip'), (('Const', '\'\\\'""\''),), ())","('Call', 1, 0)",sub,"key=sub.slice.value.value.strip('\'""')"
.\pdf_atomizer.py,354,key,"('Call', ('Name', '_norm_key'), (('Name', 'k'),), ())","('Call', 1, 0)","_norm_key,k",key = _norm_key(k)
.\utils\export_coords.py,20,key,"('Call', ('Name', 'round'), (('Subscript', ('Name', 'w'), ('Const', ""'top'"")), ('Const', '1')), ())","('Call', 2, 0)","round,w","key = round(w[""top""], 1)          # Zeilenhöhe als Gruppenschlüssel"
.\database.py,409,key,"('Other', 'JoinedStr')","('Other', 'JoinedStr')",normalized_brand,"key = f""brand_logo_{normalized_brand}"""
.\database.py,329,key,"('Subscript', ('Name', 'row'), ('Const', ""'key'""))","('Subscript',)",row,key = row['key']
.\pdf_template_engine\placeholders.py,1074,keys,"('List', (('Const', ""'axis_tick_1_top'""), ('Const', ""'axis_tick_2'""), ('Const', ""'axis_tick_3'""), ('Const', ""'axis_tick_4'""), ('Const', ""'axis_tick_5'""), ('Const', ""'axis_tick_6_bottom'"")))","('List', 6)",,keys = [
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,100,keys,"('List', (('Const', ""'module_brand_logo_b64'""), ('Const', ""'inverter_brand_logo_b64'""), ('Const', ""'storage_brand_logo_b64'"")))","('List', 3)",,"keys = [""module_brand_logo_b64"", ""inverter_brand_logo_b64"", ""storage_brand_logo_b64""]"
.\tests\test_logo_integration.py,94,keys,"('List', (('Const', ""'module_brand_logo_b64'""), ('Const', ""'inverter_brand_logo_b64'""), ('Const', ""'storage_brand_logo_b64'"")))","('List', 3)",,"keys = [""module_brand_logo_b64"", ""inverter_brand_logo_b64"", ""storage_brand_logo_b64""]"
.\tools\portings\patches\test_logo_integration.py.insert.py,100,keys,"('List', (('Const', ""'module_brand_logo_b64'""), ('Const', ""'inverter_brand_logo_b64'""), ('Const', ""'storage_brand_logo_b64'"")))","('List', 3)",,"keys = [""module_brand_logo_b64"", ""inverter_brand_logo_b64"", ""storage_brand_logo_b64""]"
.\tests\test_build_dynamic_data.py,17,keys,"('List', (('Const', ""'module_manufacturer'""), ('Const', ""'module_model'""), ('Const', ""'module_power_per_panel_watt'""), ('Const', ""'module_cell_technology'""), ('Const', ""'module_structure'""), ('Const', ""'module_cell_type'""), ('Const', ""'module_version'""), ('Const', ""'module_guarantee_combined'""), ('Const', ""'inverter_manufacturer'""), ('Const', ""'inverter_model'""), ('Const', ""'inverter_power_watt'""), ('Const', ""'inverter_type'""), ('Const', ""'inverter_phases'""), ('Const', ""'inverter_shading_management'""), ('Const', ""'inverter_backup_capable'""), ('Const', ""'inverter_smart_home_integration'""), ('Const', ""'inverter_guarantee_text'""), ('Const', ""'storage_manufacturer'""), ('Const', ""'storage_model'""), ('Const', ""'storage_capacity_kwh'""), ('Const', ""'storage_cell_technology'""), ('Const', ""'storage_extension_module_size_kwh'""), ('Const', ""'storage_max_size_kwh'""), ('Const', ""'storage_outdoor_capability'""), ('Const', ""'storage_warranty_text'"")))","('List', 25)",,keys = [
.\tools\test_build_dynamic_data.py,17,keys,"('List', (('Const', ""'module_manufacturer'""), ('Const', ""'module_model'""), ('Const', ""'module_power_per_panel_watt'""), ('Const', ""'module_cell_technology'""), ('Const', ""'module_structure'""), ('Const', ""'module_cell_type'""), ('Const', ""'module_version'""), ('Const', ""'module_guarantee_combined'""), ('Const', ""'inverter_manufacturer'""), ('Const', ""'inverter_model'""), ('Const', ""'inverter_power_watt'""), ('Const', ""'inverter_type'""), ('Const', ""'inverter_phases'""), ('Const', ""'inverter_shading_management'""), ('Const', ""'inverter_backup_capable'""), ('Const', ""'inverter_smart_home_integration'""), ('Const', ""'inverter_guarantee_text'""), ('Const', ""'storage_manufacturer'""), ('Const', ""'storage_model'""), ('Const', ""'storage_capacity_kwh'""), ('Const', ""'storage_cell_technology'""), ('Const', ""'storage_extension_module_size_kwh'""), ('Const', ""'storage_max_size_kwh'""), ('Const', ""'storage_outdoor_capability'""), ('Const', ""'storage_warranty_text'"")))","('List', 25)",,keys = [
.\debug_page3_check.py,58,keys,"('List', (('Tuple', (('Const', ""'direct_grid_feed_in_eur'""), ('Const', ""'Einnahmen aus Einspeisevergütung'""))), ('Tuple', (('Const', ""'battery_usage_savings_eur'""), ('Const', ""'Einsparung durch Speichernutzung'""))), ('Tuple', (('Const', ""'battery_surplus_feed_in_eur'""), ('Const', ""'Einnahmen aus Batterieüberschuss'""))), ('Tuple', (('Const', ""'calc_grid_feed_in_kwh_page3'""), ('Const', ""'Einspeisung kWh (Seite 3)'""))), ('Tuple', (('Const', ""'calc_battery_discharge_kwh_page3'""), ('Const', ""'Speichernutzung kWh (Seite 3)'""))), ('Tuple', (('Const', ""'calc_battery_surplus_kwh_page3'""), ('Const', ""'Speicher-Überschuss kWh (Seite 3)'""))), ('Tuple', (('Const', ""'total_annual_savings_eur'""), ('Const', ""'Erträge pro Jahr (gesamt)'"")))))","('List', 7)",,keys = [
.\notwendig oder nicht\wichtig\portings\patches\debug_page3_check.py.insert.py,35,keys,"('List', (('Tuple', (('Const', ""'direct_grid_feed_in_eur'""), ('Const', ""'Einnahmen aus Einspeisevergütung'""))), ('Tuple', (('Const', ""'battery_usage_savings_eur'""), ('Const', ""'Einsparung durch Speichernutzung'""))), ('Tuple', (('Const', ""'battery_surplus_feed_in_eur'""), ('Const', ""'Einnahmen aus Batterieüberschuss'""))), ('Tuple', (('Const', ""'calc_grid_feed_in_kwh_page3'""), ('Const', ""'Einspeisung kWh (Seite 3)'""))), ('Tuple', (('Const', ""'calc_battery_discharge_kwh_page3'""), ('Const', ""'Speichernutzung kWh (Seite 3)'""))), ('Tuple', (('Const', ""'calc_battery_surplus_kwh_page3'""), ('Const', ""'Speicher-Überschuss kWh (Seite 3)'""))), ('Tuple', (('Const', ""'total_annual_savings_eur'""), ('Const', ""'Erträge pro Jahr (gesamt)'"")))))","('List', 7)",,keys = [
.\tools\portings\patches\debug_page3_check.py.insert.py,35,keys,"('List', (('Tuple', (('Const', ""'direct_grid_feed_in_eur'""), ('Const', ""'Einnahmen aus Einspeisevergütung'""))), ('Tuple', (('Const', ""'battery_usage_savings_eur'""), ('Const', ""'Einsparung durch Speichernutzung'""))), ('Tuple', (('Const', ""'battery_surplus_feed_in_eur'""), ('Const', ""'Einnahmen aus Batterieüberschuss'""))), ('Tuple', (('Const', ""'calc_grid_feed_in_kwh_page3'""), ('Const', ""'Einspeisung kWh (Seite 3)'""))), ('Tuple', (('Const', ""'calc_battery_discharge_kwh_page3'""), ('Const', ""'Speichernutzung kWh (Seite 3)'""))), ('Tuple', (('Const', ""'calc_battery_surplus_kwh_page3'""), ('Const', ""'Speicher-Überschuss kWh (Seite 3)'""))), ('Tuple', (('Const', ""'total_annual_savings_eur'""), ('Const', ""'Erträge pro Jahr (gesamt)'"")))))","('List', 7)",,keys = [
.\calculations.py,36,kk,"('Call', ('Attr', ""kk.strip().replace('\\\\u200b', '').replace('\\\\n', ' ')"", 'strip'), (), ())","('Call', 0, 0)",kk,"kk = kk.strip().replace(""\\u200b"","""").replace(""\\n"","" "").strip()"
.\tools\kakerlake_ultra_cleaner.py,261,kk,"('Call', ('Attr', ""kk.strip().replace('\\\\u200b', '').replace('\\\\n', ' ')"", 'strip'), (), ())","('Call', 0, 0)",kk,"kk = kk.strip().replace(""\\u200b"","""").replace(""\\n"","" "").strip()"
.\calculations.py,33,kk,"('Name', 'k')","('Name',)",k,kk = k
.\tools\kakerlake_ultra_cleaner.py,258,kk,"('Name', 'k')","('Name',)",k,kk = k
.\calculations.py,37,kk,"('Subscript', ('Name', 'keymap'), ('Name', 'kk'))","('Subscript',)","keymap,kk",if keymap and kk in keymap: kk = keymap[kk]
.\tools\kakerlake_ultra_cleaner.py,262,kk,"('Subscript', ('Name', 'keymap'), ('Name', 'kk'))","('Subscript',)","keymap,kk",if keymap and kk in keymap: kk = keymap[kk]
.\pdf_generator.py,1837,kwp,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'anlage_kwp'""),), ())","('Call', 1, 0)",analysis_results,kwp = analysis_results.get('anlage_kwp')
.\pdf_generator.py,1832,kwp,"('Const', 'None')","('Const',)",,kwp = None
.\pdf_generator.py,1830,kwp,"('Other', 'IfExp')","('Other', 'IfExp')","mod_qty,mod_wp",kwp = (mod_qty * mod_wp) / 1000.0 if mod_qty > 0 and mod_wp > 0 else None
.\dev_tools\kakerlake_ultra_cleaner.py,408,l,"('Attr', 'node', 'left')","('Attr',)",node,l=node.left; r=node.right
.\dev_tools\kakerlake_ultra_cleaner_v2.py,276,l,"('Attr', 'node', 'left')","('Attr',)",node,l=node.left; r=node.right
.\dev_tools\kakerlake_ultra_cleaner_v3.py,294,l,"('Attr', 'node', 'left')","('Attr',)",node,l=node.left; r=node.right
.\mnt\data\kakerlake_ultra_cleaner.py,408,l,"('Attr', 'node', 'left')","('Attr',)",node,l=node.left; r=node.right
.\mnt\data\kakerlake_ultra_cleaner_v2.py,276,l,"('Attr', 'node', 'left')","('Attr',)",node,l=node.left; r=node.right
.\tools\kakerlake_ultra_cleaner.py,409,l,"('Attr', 'node', 'left')","('Attr',)",node,l=node.left; r=node.right
.\dev_tools\kakerlake_ultra_cleaner.py,374,l,"('Attr', 'orig.value', 'left')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\dev_tools\kakerlake_ultra_cleaner.py,392,l,"('Attr', 'orig.value', 'left')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\mnt\data\kakerlake_ultra_cleaner.py,374,l,"('Attr', 'orig.value', 'left')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\mnt\data\kakerlake_ultra_cleaner.py,392,l,"('Attr', 'orig.value', 'left')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\tools\kakerlake_ultra_cleaner.py,375,l,"('Attr', 'orig.value', 'left')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\tools\kakerlake_ultra_cleaner.py,393,l,"('Attr', 'orig.value', 'left')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\dev_tools\kakerlake_ultra_cleaner_v2.py,244,l,"('Attr', 'rhs', 'left')","('Attr',)",rhs,l=rhs.left; r=rhs.right
.\dev_tools\kakerlake_ultra_cleaner_v2.py,262,l,"('Attr', 'rhs', 'left')","('Attr',)",rhs,l=rhs.left; r=rhs.right
.\dev_tools\kakerlake_ultra_cleaner_v2.py,290,l,"('Attr', 'rhs', 'left')","('Attr',)",rhs,l=rhs.left; r=rhs.right
.\dev_tools\kakerlake_ultra_cleaner_v3.py,259,l,"('Attr', 'rhs', 'left')","('Attr',)",rhs,l=rhs.left; r=rhs.right
.\dev_tools\kakerlake_ultra_cleaner_v3.py,279,l,"('Attr', 'rhs', 'left')","('Attr',)",rhs,l=rhs.left; r=rhs.right
.\dev_tools\kakerlake_ultra_cleaner_v3.py,308,l,"('Attr', 'rhs', 'left')","('Attr',)",rhs,l=rhs.left; r=rhs.right
.\mnt\data\kakerlake_ultra_cleaner_v2.py,244,l,"('Attr', 'rhs', 'left')","('Attr',)",rhs,l=rhs.left; r=rhs.right
.\mnt\data\kakerlake_ultra_cleaner_v2.py,262,l,"('Attr', 'rhs', 'left')","('Attr',)",rhs,l=rhs.left; r=rhs.right
.\mnt\data\kakerlake_ultra_cleaner_v2.py,290,l,"('Attr', 'rhs', 'left')","('Attr',)",rhs,l=rhs.left; r=rhs.right
.\dev_tools\kakerlake_ultra_cleaner.py,421,l,"('Attr', 'val', 'left')","('Attr',)",val,l=val.left; r=val.right
.\mnt\data\kakerlake_ultra_cleaner.py,421,l,"('Attr', 'val', 'left')","('Attr',)",val,l=val.left; r=val.right
.\tools\kakerlake_ultra_cleaner.py,422,l,"('Attr', 'val', 'left')","('Attr',)",val,l=val.left; r=val.right
.\pdf_template_engine\placeholders.py,1696,l,"('Call', ('Attr', 's', 'lower'), (), ())","('Call', 0, 0)",s,l = s.lower()
.\notwendig oder nicht\wichtig\repo_porter_select.py,77,label,"('Call', ('Attr', ""ls[len('# --- DEF BLOCK START:'):]"", 'strip'), (), ())","('Call', 0, 0)","len,ls","label = ls[len(""# --- DEF BLOCK START:""):].strip()"
.\tools\repo_porter_select.py,77,label,"('Call', ('Attr', ""ls[len('# --- DEF BLOCK START:'):]"", 'strip'), (), ())","('Call', 0, 0)","len,ls","label = ls[len(""# --- DEF BLOCK START:""):].strip()"
.\notwendig oder nicht\wichtig\repo_porter_select.py,78,label,"('Other', 'IfExp')","('Other', 'IfExp')",label,"label = label[:-3].strip() if label.endswith(""---"") else label"
.\tools\repo_porter_select.py,78,label,"('Other', 'IfExp')","('Other', 'IfExp')",label,"label = label[:-3].strip() if label.endswith(""---"") else label"
.\multi_offer_generator.py,272,label,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","cid,cinfo","label = f""{cinfo.get('name', f'Firma {cid}')}"""
.\multi_offer_generator.py,274,label,"('Other', 'JoinedStr')","('Other', 'JoinedStr')",cid,"label = f""Firma {cid}"""
.\pdf_widgets.py,133,label,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","section,section_key","label = f""{section.get('name', section_key)} [{section_key}]"""
.\analysis.py,4271,labels,"('List', (('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'scenario_base_switcher'""), ('Const', ""'Basis'"")), ()), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'scenario_optimistic_switcher'""), ('Const', ""'Optimistisch'"")), ()), ('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'scenario_pessimistic_switcher'""), ('Const', ""'Pessimistisch'"")), ())))","('List', 3)","get_text,texts",labels = [
.\analysis.py,5173,labels,"('List', (('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'direct_consumption_pie_label'""), ('Const', ""'Direktverbrauch'"")), ()), ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'storage_usage_pie_label'""), ('Const', ""'Speichernutzung'"")), ()), ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'feed_in_pie_label'""), ('Const', ""'Einspeisung'"")), ())))","('List', 3)","get_text,texts_local",labels = [
.\analysis.py,5021,labels,"('List', (('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'self_supply_rate_pie_label'""), ('Const', ""'Eigenversorgung'"")), ()), ('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'grid_consumption_rate_pie_label'""), ('Const', ""'Netzbezug'"")), ())))","('List', 2)","get_text,texts_local",labels = [
.\analysis.py,4194,labels,"('List', (('Name', 'curr_proj_name'), ('Const', ""'Alternativ A (Günstiger)'""), ('Const', ""'Alternativ B (Premium)'"")))","('List', 3)",curr_proj_name,"labels = [curr_proj_name, ""Alternativ A (Günstiger)"", ""Alternativ B (Premium)""]"
.\pdf_widgets.py,129,labels,"('List', ())","('List', 0)",,labels: List[str] = []
.\notwendig oder nicht\wichtig\repo_porter.py,312,last,"('Attr', 'cls', 'lineno')","('Attr',)",cls,last = cls.lineno
.\tools\repo_porter.py,312,last,"('Attr', 'cls', 'lineno')","('Attr',)",cls,last = cls.lineno
.\notwendig oder nicht\wichtig\repo_porter.py,304,last,"('Attr', 'di', 'end_lineno')","('Attr',)",di,last = di.end_lineno
.\notwendig oder nicht\wichtig\repo_porter.py,315,last,"('Attr', 'di', 'end_lineno')","('Attr',)",di,last = di.end_lineno
.\tools\repo_porter.py,304,last,"('Attr', 'di', 'end_lineno')","('Attr',)",di,last = di.end_lineno
.\tools\repo_porter.py,315,last,"('Attr', 'di', 'end_lineno')","('Attr',)",di,last = di.end_lineno
.\pdf_template_engine\placeholders.py,440,last,"('Call', ('Attr', ""as_str(customer.get('last_name') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,customer","last = as_str(customer.get(""last_name"") or """").strip()"
.\pdf_template_engine\placeholders.py,475,last,"('Call', ('Attr', ""as_str(customer.get('last_name') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,customer","last = as_str(customer.get(""last_name"") or """").strip()"
.\pdf_generator.py,690,last,"('Call', ('Attr', ""str(cust.get('last_name') or '')"", 'strip'), (), ())","('Call', 0, 0)","cust,str",last = str(cust.get('last_name') or '').strip()
.\notwendig oder nicht\wichtig\repo_porter.py,301,last,"('Const', '0')","('Const',)",,last = 0
.\tools\repo_porter.py,301,last,"('Const', '0')","('Const',)",,last = 0
.\calculations.py,4239,last_maintenance,"('Attr', 'self', 'installation_date')","('Attr',)",self,last_maintenance = self.installation_date
.\calculations.py,4235,last_maintenance,"('Call', ('Attr', 'component', 'get'), (('Const', ""'last_maintenance_date'""),), ())","('Call', 1, 0)",component,"last_maintenance = component.get(""last_maintenance_date"")"
.\calculations.py,4237,last_maintenance,"('Call', ('Attr', 'datetime', 'strptime'), (('Name', 'last_maintenance'), ('Const', ""'%Y-%m-%d'"")), ())","('Call', 2, 0)","datetime,last_maintenance","last_maintenance = datetime.strptime(last_maintenance, ""%Y-%m-%d"")"
.\pdf_ui.py,1221,last_name,"('Call', ('Attr', ""project_data.get('customer_data', {})"", 'get'), (('Const', ""'last_name'""), ('Const', ""''"")), ())","('Call', 2, 0)",project_data,"last_name = project_data.get('customer_data', {}).get('last_name', '')"
.\multi_offer_generator.py,664,last_name,"('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'last_name'""), ('Const', ""''"")), ())","('Call', 2, 0)",customer_data,"last_name = customer_data.get('last_name', '')"
.\pdf_generator.py,1398,last_name,"('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'last_name'""), ('Const', ""''"")), ())","('Call', 2, 0)",customer_data,"last_name = customer_data.get(""last_name"", """")"
.\crm.py,329,last_name,"('Call', ('Attr', 'st', 'text_input'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'last_name_label'""), ('Const', ""'Nachname'"")), ()),), (('value', ('Call', ('Attr', 'customer_to_edit', 'get'), (('Const', ""'last_name'""), ('Const', ""''"")), ())),))","('Call', 1, 1)","customer_to_edit,get_text_crm,st,texts","last_name = st.text_input(get_text_crm(texts, ""last_name_label"", ""Nachname""), value=customer_to_edit.get('last_name', ''))"
.\crm_pipeline_ui.py,593,lead,"('Dict', (('KV', ('Const', ""'address'""), ('Subscript', ('Name', 'row'), ('Const', '5'))), ('KV', ('Const', ""'company_name'""), ('Subscript', ('Name', 'row'), ('Const', '1'))), ('KV', ('Const', ""'contact_person'""), ('Subscript', ('Name', 'row'), ('Const', '2'))), ('KV', ('Const', ""'created_at'""), ('Subscript', ('Name', 'row'), ('Const', '13'))), ('KV', ('Const', ""'email'""), ('Subscript', ('Name', 'row'), ('Const', '3'))), ('KV', ('Const', ""'estimated_value'""), ('Subscript', ('Name', 'row'), ('Const', '7'))), ('KV', ('Const', ""'expected_close_date'""), ('Subscript', ('Name', 'row'), ('Const', '9'))), ('KV', ('Const', ""'id'""), ('Subscript', ('Name', 'row'), ('Const', '0'))), ('KV', ('Const', ""'lead_source'""), ('Subscript', ('Name', 'row'), ('Const', '6'))), ('KV', ('Const', ""'notes'""), ('Subscript', ('Name', 'row'), ('Const', '12'))), ('KV', ('Const', ""'phone'""), ('Subscript', ('Name', 'row'), ('Const', '4'))), ('KV', ('Const', ""'probability'""), ('Subscript', ('Name', 'row'), ('Const', '8'))), ('KV', ('Const', ""'stage'""), ('Subscript', ('Name', 'row'), ('Const', '10'))), ('KV', ('Const', ""'stage_changed_at'""), ('Subscript', ('Name', 'row'), ('Const', '11'))), ('KV', ('Const', ""'updated_at'""), ('Subscript', ('Name', 'row'), ('Const', '14')))))","('Dict', 15)",row,lead = {
.\crm_pipeline_ui.py,682,lead,"('Dict', (('KV', ('Const', ""'address'""), ('Subscript', ('Name', 'row'), ('Const', '5'))), ('KV', ('Const', ""'company_name'""), ('Subscript', ('Name', 'row'), ('Const', '1'))), ('KV', ('Const', ""'contact_person'""), ('Subscript', ('Name', 'row'), ('Const', '2'))), ('KV', ('Const', ""'created_at'""), ('Subscript', ('Name', 'row'), ('Const', '13'))), ('KV', ('Const', ""'email'""), ('Subscript', ('Name', 'row'), ('Const', '3'))), ('KV', ('Const', ""'estimated_value'""), ('Subscript', ('Name', 'row'), ('Const', '7'))), ('KV', ('Const', ""'expected_close_date'""), ('Subscript', ('Name', 'row'), ('Const', '9'))), ('KV', ('Const', ""'id'""), ('Subscript', ('Name', 'row'), ('Const', '0'))), ('KV', ('Const', ""'lead_source'""), ('Subscript', ('Name', 'row'), ('Const', '6'))), ('KV', ('Const', ""'notes'""), ('Subscript', ('Name', 'row'), ('Const', '12'))), ('KV', ('Const', ""'phone'""), ('Subscript', ('Name', 'row'), ('Const', '4'))), ('KV', ('Const', ""'probability'""), ('Subscript', ('Name', 'row'), ('Const', '8'))), ('KV', ('Const', ""'stage'""), ('Subscript', ('Name', 'row'), ('Const', '10'))), ('KV', ('Const', ""'stage_changed_at'""), ('Subscript', ('Name', 'row'), ('Const', '11'))), ('KV', ('Const', ""'updated_at'""), ('Subscript', ('Name', 'row'), ('Const', '14')))))","('Dict', 15)",row,lead = {
.\crm_pipeline_ui.py,635,lead,"('Dict', (('KV', ('Const', ""'company_name'""), ('Subscript', ('Name', 'row'), ('Const', '1'))), ('KV', ('Const', ""'contact_person'""), ('Subscript', ('Name', 'row'), ('Const', '2'))), ('KV', ('Const', ""'estimated_value'""), ('Subscript', ('Name', 'row'), ('Const', '7'))), ('KV', ('Const', ""'id'""), ('Subscript', ('Name', 'row'), ('Const', '0'))), ('KV', ('Const', ""'stage_changed_at'""), ('Subscript', ('Name', 'row'), ('Const', '11')))))","('Dict', 5)",row,lead = {
.\notwendig oder nicht\wichtig\repo_porter.py,593,lead,"('Sub', ('Call', ('Name', 'len'), (('Name', 'first'),), ()), ('Call', ('Name', 'len'), (('Call', ('Attr', 'first', 'lstrip'), (('Const', ""' '""),), ()),), ()))","('Sub', ('Call', 1, 0), ('Call', 1, 0))","first,len","lead = len(first) - len(first.lstrip("" ""))"
.\tools\repo_porter.py,593,lead,"('Sub', ('Call', ('Name', 'len'), (('Name', 'first'),), ()), ('Call', ('Name', 'len'), (('Call', ('Attr', 'first', 'lstrip'), (('Const', ""' '""),), ()),), ()))","('Sub', ('Call', 1, 0), ('Call', 1, 0))","first,len","lead = len(first) - len(first.lstrip("" ""))"
.\crm_pipeline_ui.py,322,leads,"('Call', ('Attr', 'self', '_get_filtered_leads'), (('Name', 'stage_filter'), ('Name', 'source_filter'), ('Name', 'sort_by')), ())","('Call', 3, 0)","self,sort_by,source_filter,stage_filter","leads = self._get_filtered_leads(stage_filter, source_filter, sort_by)"
.\crm_pipeline_ui.py,591,leads,"('List', ())","('List', 0)",,leads = []
.\crm_pipeline_ui.py,633,leads,"('List', ())","('List', 0)",,leads = []
.\crm_pipeline_ui.py,680,leads,"('List', ())","('List', 0)",,leads = []
.\analysis.py,8081,leasing_result,"('Call', ('Name', 'calculate_leasing_costs'), (('Name', 'financing_amount'), ('Name', 'leasing_factor'), ('Name', 'leasing_term')), ())","('Call', 3, 0)","calculate_leasing_costs,financing_amount,leasing_factor,leasing_term",leasing_result = calculate_leasing_costs(
.\analysis.py,6711,leasing_result,"('Call', ('Name', 'calculate_leasing_costs'), (('Name', 'financing_amount'), ('Subscript', ('Name', 'financing_summary'), ('Const', ""'leasing_factor'"")), ('Subscript', ('Name', 'financing_summary'), ('Const', ""'leasing_term'""))), ())","('Call', 3, 0)","calculate_leasing_costs,financing_amount,financing_summary",leasing_result = calculate_leasing_costs(
.\financial_tools.py,160,leasing_result,"('Call', ('Name', 'calculate_leasing_costs'), (('Name', 'investment'), ('Name', 'leasing_factor'), ('Mult', (('Const', '12'), ('Name', 'duration_years')))), ())","('Call', 3, 0)","calculate_leasing_costs,duration_years,investment,leasing_factor","leasing_result = calculate_leasing_costs(investment, leasing_factor, duration_years * 12)"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,244,legend_texts,"('List', (('Const', ""''""), ('Const', ""''"")))","('List', 2)",,"legend_texts = ["""", """"]"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,262,legend_texts,"('List', (('Const', ""''""), ('Const', ""''"")))","('List', 2)",,"legend_texts = ["""", """"]"
.\pdf_template_engine\dynamic_overlay.py,757,legend_texts,"('List', (('Const', ""''""), ('Const', ""''"")))","('List', 2)",,"legend_texts = ["""", """"]"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,244,legend_texts,"('List', (('Const', ""''""), ('Const', ""''"")))","('List', 2)",,"legend_texts = ["""", """"]"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,262,legend_texts,"('List', (('Const', ""''""), ('Const', ""''"")))","('List', 2)",,"legend_texts = ["""", """"]"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,225,legend_texts,"('List', ())","('List', 0)",,legend_texts: list[str] = []
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,243,legend_texts,"('List', ())","('List', 0)",,legend_texts: list[str] = []
.\pdf_template_engine\dynamic_overlay.py,738,legend_texts,"('List', ())","('List', 0)",,legend_texts: list[str] = []
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,225,legend_texts,"('List', ())","('List', 0)",,legend_texts: list[str] = []
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,243,legend_texts,"('List', ())","('List', 0)",,legend_texts: list[str] = []
.\pdf_atomizer.py,157,length,"('Call', ('Name', 'int'), (('Call', ('Attr', 'obj', 'get'), (('Const', ""'/Length'""), ('Const', '0')), ()),), ())","('Call', 1, 0)","int,obj","length = int(obj.get(""/Length"", 0))"
.\pdf_atomizer.py,155,length,"('Const', 'None')","('Const',)",,length = None
.\pdf_atomizer.py,159,length,"('Const', 'None')","('Const',)",,length = None
.\central_pdf_system.py,1819,letter_templates,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'pdf_cover_letter_templates'""), ('List', ())), ())","('Call', 2, 0)",load_admin_setting_func,"letter_templates = load_admin_setting_func('pdf_cover_letter_templates', [])"
.\central_pdf_system.py,1821,letter_templates,"('List', ())","('List', 0)",,title_templates = offer_templates = letter_templates = []
.\dev_tools\kakerlake_ultra_cleaner.py,134,lhs,"('Attr', 't', 'id')","('Attr',)",t,"if isinstance(t, ast.Name): lhs=t.id"
.\mnt\data\kakerlake_ultra_cleaner.py,134,lhs,"('Attr', 't', 'id')","('Attr',)",t,"if isinstance(t, ast.Name): lhs=t.id"
.\tools\kakerlake_ultra_cleaner.py,135,lhs,"('Attr', 't', 'id')","('Attr',)",t,"if isinstance(t, ast.Name): lhs=t.id"
.\dev_tools\kakerlake_ultra_cleaner.py,136,lhs,"('Call', ('Attr', 'ast', 'unparse'), (('Name', 't'),), ())","('Call', 1, 0)","ast,t",try: lhs=ast.unparse(t)
.\mnt\data\kakerlake_ultra_cleaner.py,136,lhs,"('Call', ('Attr', 'ast', 'unparse'), (('Name', 't'),), ())","('Call', 1, 0)","ast,t",try: lhs=ast.unparse(t)
.\tools\kakerlake_ultra_cleaner.py,137,lhs,"('Call', ('Attr', 'ast', 'unparse'), (('Name', 't'),), ())","('Call', 1, 0)","ast,t",try: lhs=ast.unparse(t)
.\dev_tools\kakerlake_ultra_cleaner.py,133,lhs,"('Const', 'None')","('Const',)",,lhs=None
.\dev_tools\kakerlake_ultra_cleaner.py,137,lhs,"('Const', 'None')","('Const',)",,except Exception: lhs=None
.\mnt\data\kakerlake_ultra_cleaner.py,133,lhs,"('Const', 'None')","('Const',)",,lhs=None
.\mnt\data\kakerlake_ultra_cleaner.py,137,lhs,"('Const', 'None')","('Const',)",,except Exception: lhs=None
.\tools\kakerlake_ultra_cleaner.py,134,lhs,"('Const', 'None')","('Const',)",,lhs=None
.\tools\kakerlake_ultra_cleaner.py,138,lhs,"('Const', 'None')","('Const',)",,except Exception: lhs=None
.\pdf_template_engine\placeholders.py,2096,lifetime,"('BoolOp', 'Or', (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'simulation_period_years'""),), ()), ('Call', ('Attr', 'project_data', 'get'), (('Const', ""'simulation_period_years'""),), ())))","('BoolOp', 'Or', 2)","analysis_results,project_data","lifetime = analysis_results.get(""simulation_period_years"") or project_data.get(""simulation_period_years"")"
.\calculations.py,1319,lifetime,"('Call', ('Attr', 'lcoe_params', 'get'), (('Const', ""'lifetime'""), ('Const', '25')), ())","('Call', 2, 0)",lcoe_params,"lifetime = lcoe_params.get(""lifetime"", 25)"
.\calculations.py,1376,lifetime,"('Const', '25')","('Const',)",,lifetime = 25
.\calculations.py,1390,lifetime,"('Const', '25')","('Const',)",,lifetime = 25
.\calculations.py,1762,lifetime,"('Const', '25')","('Const',)",,lifetime = 25
.\debug_logo_rendering.py,57,lines,"('Call', ('Attr', 'coords_content', 'split'), (('Const', ""'\\n'""),), ())","('Call', 1, 0)",coords_content,lines = coords_content.split('\n')
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_rendering.py.insert.py,55,lines,"('Call', ('Attr', 'coords_content', 'split'), (('Const', ""'\\n'""),), ())","('Call', 1, 0)",coords_content,lines = coords_content.split('\n')
.\tools\portings\patches\debug_logo_rendering.py.insert.py,55,lines,"('Call', ('Attr', 'coords_content', 'split'), (('Const', ""'\\n'""),), ())","('Call', 1, 0)",coords_content,lines = coords_content.split('\n')
.\notwendig oder nicht\wichtig\repo_porter_select.py,63,lines,"('Call', ('Attr', 'patch_text', 'splitlines'), (), ())","('Call', 0, 0)",patch_text,lines = patch_text.splitlines()
.\notwendig oder nicht\wichtig\repo_porter_select.py,96,lines,"('Call', ('Attr', 'patch_text', 'splitlines'), (), ())","('Call', 0, 0)",patch_text,lines = patch_text.splitlines()
.\tools\repo_porter_select.py,63,lines,"('Call', ('Attr', 'patch_text', 'splitlines'), (), ())","('Call', 0, 0)",patch_text,lines = patch_text.splitlines()
.\tools\repo_porter_select.py,96,lines,"('Call', ('Attr', 'patch_text', 'splitlines'), (), ())","('Call', 0, 0)",patch_text,lines = patch_text.splitlines()
.\dev_tools\kakerlake_ultra_cleaner.py,124,lines,"('Call', ('Attr', 'src', 'splitlines'), (), ())","('Call', 0, 0)",src,"src=read_text(p); tree=ast.parse(src, filename=p); lines=src.splitlines()"
.\mnt\data\kakerlake_ultra_cleaner.py,124,lines,"('Call', ('Attr', 'src', 'splitlines'), (), ())","('Call', 0, 0)",src,"src=read_text(p); tree=ast.parse(src, filename=p); lines=src.splitlines()"
.\tools\kakerlake_ultra_cleaner.py,125,lines,"('Call', ('Attr', 'src', 'splitlines'), (), ())","('Call', 0, 0)",src,"src=read_text(p); tree=ast.parse(src, filename=p); lines=src.splitlines()"
.\notwendig oder nicht\wichtig\repo_porter.py,158,lines,"('Call', ('Name', 'read_lines'), (('Name', 'f'),), ())","('Call', 1, 0)","f,read_lines",lines = read_lines(f)
.\tools\repo_porter.py,158,lines,"('Call', ('Name', 'read_lines'), (('Name', 'f'),), ())","('Call', 1, 0)","f,read_lines",lines = read_lines(f)
.\utils\export_coords.py,18,lines,"('Dict', ())","('Dict', 0)",,lines = {}
.\dev_tools\kakerlake_ultra_cleaner.py,526,lines,"('List', ())","('List', 0)",,lines=[]; root_path=Path(root_dir)
.\mnt\data\kakerlake_ultra_cleaner.py,526,lines,"('List', ())","('List', 0)",,lines=[]; root_path=Path(root_dir)
.\notwendig oder nicht\wichtig\repo_porter.py,141,lines,"('List', ())","('List', 0)",,lines = []
.\tools\kakerlake_ultra_cleaner.py,527,lines,"('List', ())","('List', 0)",,lines=[]; root_path=Path(root_dir)
.\tools\repo_porter.py,141,lines,"('List', ())","('List', 0)",,lines = []
.\dev_tools\kakerlake_ultra_cleaner.py,519,lines,"('Other', 'IfExp')","('Other', 'IfExp')",text,"lines=text.count(""\n"")+1 if text else 0"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,405,lines,"('Other', 'IfExp')","('Other', 'IfExp')",text,"lines=text.count(""\n"")+1 if text else 0"
.\mnt\data\kakerlake_ultra_cleaner.py,519,lines,"('Other', 'IfExp')","('Other', 'IfExp')",text,"lines=text.count(""\n"")+1 if text else 0"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,405,lines,"('Other', 'IfExp')","('Other', 'IfExp')",text,"lines=text.count(""\n"")+1 if text else 0"
.\tools\kakerlake_ultra_cleaner.py,520,lines,"('Other', 'IfExp')","('Other', 'IfExp')",text,"lines=text.count(""\n"")+1 if text else 0"
.\crm.py,793,list_products_safe,"('Attr', 'MockProductDB()', 'list_products')","('Attr',)",MockProductDB,list_products_safe = MockProductDB().list_products
.\crm.py,787,list_products_safe,"('Const', 'None')","('Const',)",,list_products_safe = None
.\data_input.py,43,list_products_safe,"('Name', 'Dummy_list_products_input')","('Name',)",Dummy_list_products_input,list_products_safe = Dummy_list_products_input
.\solar_calculator.py,24,list_products_safe,"('Name', '_dummy_list_products')","('Name',)",_dummy_list_products,list_products_safe = _dummy_list_products  # type: ignore
.\data_input.py,52,list_products_safe,"('Name', 'real_list_products')","('Name',)",real_list_products,list_products_safe = real_list_products
.\crm.py,792,load_admin_setting_safe,"('Attr', 'MockAdminSettings()', 'load_admin_setting')","('Attr',)",MockAdminSettings,load_admin_setting_safe = MockAdminSettings().load_admin_setting
.\crm.py,785,load_admin_setting_safe,"('Const', 'None')","('Const',)",,load_admin_setting_safe = None
.\data_input.py,42,load_admin_setting_safe,"('Name', 'Dummy_load_admin_setting_input')","('Name',)",Dummy_load_admin_setting_input,load_admin_setting_safe = Dummy_load_admin_setting_input
.\data_input.py,51,load_admin_setting_safe,"('Name', 'real_load_admin_setting')","('Name',)",real_load_admin_setting,load_admin_setting_safe = real_load_admin_setting
.\gui.py,205,loaded_translations,"('Call', ('Attr', 'locales_module', 'load_translations'), (('Const', ""'de'""),), ())","('Call', 1, 0)",locales_module,loaded_translations = locales_module.load_translations('de')
.\gui.py,201,loaded_translations,"('Const', 'None')","('Const',)",,loaded_translations: Any = None
.\gui.py,209,loaded_translations,"('Const', 'None')","('Const',)",,loaded_translations = None
.\dev_tools\kakerlake_ultra_cleaner.py,546,loader,"('Const', 'False')","('Const',)",,except Exception: yaml=None; loader=False
.\dev_tools\kakerlake_ultra_cleaner_v2.py,415,loader,"('Const', 'False')","('Const',)",,except Exception: yaml=None; loader=False
.\mnt\data\kakerlake_ultra_cleaner.py,546,loader,"('Const', 'False')","('Const',)",,except Exception: yaml=None; loader=False
.\mnt\data\kakerlake_ultra_cleaner_v2.py,415,loader,"('Const', 'False')","('Const',)",,except Exception: yaml=None; loader=False
.\tools\kakerlake_ultra_cleaner.py,547,loader,"('Const', 'False')","('Const',)",,except Exception: yaml=None; loader=False
.\dev_tools\kakerlake_ultra_cleaner.py,545,loader,"('Const', 'True')","('Const',)",,try: import yaml; loader=True
.\dev_tools\kakerlake_ultra_cleaner_v2.py,414,loader,"('Const', 'True')","('Const',)",,try: import yaml; loader=True
.\mnt\data\kakerlake_ultra_cleaner.py,545,loader,"('Const', 'True')","('Const',)",,try: import yaml; loader=True
.\mnt\data\kakerlake_ultra_cleaner_v2.py,414,loader,"('Const', 'True')","('Const',)",,try: import yaml; loader=True
.\tools\kakerlake_ultra_cleaner.py,546,loader,"('Const', 'True')","('Const',)",,try: import yaml; loader=True
.\analysis.py,7910,loan_result,"('Call', ('Name', 'calculate_annuity'), (('Name', 'financing_amount'), ('Name', 'interest_rate'), ('Name', 'loan_term')), ())","('Call', 3, 0)","calculate_annuity,financing_amount,interest_rate,loan_term","loan_result = calculate_annuity(financing_amount, interest_rate, loan_term)"
.\analysis.py,6691,loan_result,"('Call', ('Name', 'calculate_annuity'), (('Name', 'financing_amount'), ('Subscript', ('Name', 'financing_summary'), ('Const', ""'interest_rate'"")), ('Subscript', ('Name', 'financing_summary'), ('Const', ""'loan_term'""))), ())","('Call', 3, 0)","calculate_annuity,financing_amount,financing_summary",loan_result = calculate_annuity(
.\pdf_template_engine\placeholders.py,2033,local_tariff,"('Const', '0.068')","('Const',)",,"local_tariff = 0.068  # Fallback 6,8 ct"
.\pdf_template_engine\placeholders.py,2035,local_tariff,"('Const', '0.068')","('Const',)",,local_tariff = 0.068
.\pdf_template_engine\placeholders.py,2027,local_tariff,"('Const', 'None')","('Const',)",,local_tariff = None
.\pdf_template_engine\placeholders.py,2030,local_tariff,"('Div', ('BoolOp', 'Or', (('Call', ('Attr', 'trf', 'get'), (('Const', ""'ct_per_kwh'""), ('Const', '7.86')), ()), ('Const', '7.86'))), ('Const', '100.0'))","('Div', ('BoolOp', 'Or', 2), ('Const',))",trf,"local_tariff = (trf.get(""ct_per_kwh"", 7.86) or 7.86) / 100.0"
.\admin_panel.py,1500,locale_json_string,"('Call', ('Attr', 'json', 'dumps'), (('Name', 'current_locale_data'),), (('ensure_ascii', ('Const', 'False')), ('indent', ('Const', '2'))))","('Call', 1, 2)","current_locale_data,json","try: locale_json_string = json.dumps(current_locale_data, indent=2, ensure_ascii=False)"
.\admin_panel.py,1498,locale_json_string,"('Const', ""'{}'"")","('Const',)",,"current_locale_data = load_admin_setting_func('de_locale_data', {}); locale_json_string = ""{}"""
.\gui.py,727,locales_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'locales'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","locales_module = import_module_with_fallback(""locales"", import_errors)"
.\gui.py,81,locales_module,"('Const', 'None')","('Const',)",,locales_module: Optional[Any] = None
.\data_input.py,118,location,"('Call', ('Attr', ""data['results'][0].get('geometry', {})"", 'get'), (('Const', ""'location'""), ('Dict', ())), ())","('Call', 2, 0)",data,"location = data[""results""][0].get(""geometry"", {}).get(""location"", {})"
.\crm_calendar_ui.py,216,location,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Ort'""),), (('placeholder', ('Const', ""'z.B. Büro, Kundenadresse'"")),))","('Call', 1, 1)",st,"location = st.text_input(""Ort"", placeholder=""z.B. Büro, Kundenadresse"")"
.\pdf_generator.py,683,logo_b64,"('BoolOp', 'Or', (('Name', 'company_logo_base64'), ('Other', 'IfExp')))","('BoolOp', 'Or', 2)","company_info,company_logo_base64,dict,isinstance","logo_b64 = company_logo_base64 or (company_info.get('logo_base64') if isinstance(company_info, dict) else None)"
.\notwendig oder nicht\wichtig\portings\patches\test_brand_logos.py.insert.py,82,logo_b64,"('Call', ('Name', 'create_test_logo_png'), (('Name', 'brand'),), ())","('Call', 1, 0)","brand,create_test_logo_png",logo_b64 = create_test_logo_png(brand)
.\tests\test_brand_logos.py,71,logo_b64,"('Call', ('Name', 'create_test_logo_png'), (('Name', 'brand'),), ())","('Call', 1, 0)","brand,create_test_logo_png",logo_b64 = create_test_logo_png(brand)
.\tools\portings\patches\test_brand_logos.py.insert.py,82,logo_b64,"('Call', ('Name', 'create_test_logo_png'), (('Name', 'brand'),), ())","('Call', 1, 0)","brand,create_test_logo_png",logo_b64 = create_test_logo_png(brand)
.\pdf_generator.py,681,logo_b64,"('Const', 'None')","('Const',)",,logo_b64 = None
.\pdf_generator.py,685,logo_b64,"('Name', 'company_logo_base64')","('Name',)",company_logo_base64,logo_b64 = company_logo_base64
.\pdf_template_engine\dynamic_overlay.py,415,logo_b64,"('Other', 'IfExp')","('Other', 'IfExp')","dynamic_data,key","logo_b64 = dynamic_data.get(key, """") if key else """""
.\database.py,431,logo_data,"('Call', ('Name', 'brand_db_get_logo'), (('Name', 'normalized_brand'),), ())","('Call', 1, 0)","brand_db_get_logo,normalized_brand",logo_data = brand_db_get_logo(normalized_brand)
.\notwendig oder nicht\wichtig\portings\patches\test_brand_logos.py.insert.py,99,logo_data,"('Call', ('Name', 'get_brand_logo'), (('Name', 'brand'),), ())","('Call', 1, 0)","brand,get_brand_logo",logo_data = get_brand_logo(brand)
.\tests\test_brand_logos.py,88,logo_data,"('Call', ('Name', 'get_brand_logo'), (('Name', 'brand'),), ())","('Call', 1, 0)","brand,get_brand_logo",logo_data = get_brand_logo(brand)
.\tools\portings\patches\test_brand_logos.py.insert.py,99,logo_data,"('Call', ('Name', 'get_brand_logo'), (('Name', 'brand'),), ())","('Call', 1, 0)","brand,get_brand_logo",logo_data = get_brand_logo(brand)
.\admin_logo_management_ui.py,250,logo_data,"('Call', ('Name', 'get_brand_logo'), (('Subscript', ('Name', 'selected_logo'), ('Const', ""'brand_name'"")),), ())","('Call', 1, 0)","get_brand_logo,selected_logo",logo_data = get_brand_logo(selected_logo['brand_name'])
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,243,logo_data,"('Call', ('Name', 'get_brand_logo'), (('Subscript', ('Name', 'selected_logo'), ('Const', ""'brand_name'"")),), ())","('Call', 1, 0)","get_brand_logo,selected_logo",logo_data = get_brand_logo(selected_logo['brand_name'])
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,294,logo_data,"('Call', ('Name', 'get_brand_logo'), (('Subscript', ('Name', 'selected_logo'), ('Const', ""'brand_name'"")),), ())","('Call', 1, 0)","get_brand_logo,selected_logo",logo_data = get_brand_logo(selected_logo['brand_name'])
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,243,logo_data,"('Call', ('Name', 'get_brand_logo'), (('Subscript', ('Name', 'selected_logo'), ('Const', ""'brand_name'"")),), ())","('Call', 1, 0)","get_brand_logo,selected_logo",logo_data = get_brand_logo(selected_logo['brand_name'])
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,294,logo_data,"('Call', ('Name', 'get_brand_logo'), (('Subscript', ('Name', 'selected_logo'), ('Const', ""'brand_name'"")),), ())","('Call', 1, 0)","get_brand_logo,selected_logo",logo_data = get_brand_logo(selected_logo['brand_name'])
.\notwendig oder nicht\wichtig\portings\patches\simple_logo_test.py.insert.py,97,logo_data,"('Subscript', ('Name', 'logos'), ('Name', 'brand'))","('Subscript',)","brand,logos",logo_data = logos[brand]
.\simple_logo_test.py,89,logo_data,"('Subscript', ('Name', 'logos'), ('Name', 'brand'))","('Subscript',)","brand,logos",logo_data = logos[brand]
.\tools\portings\patches\simple_logo_test.py.insert.py,97,logo_data,"('Subscript', ('Name', 'logos'), ('Name', 'brand'))","('Subscript',)","brand,logos",logo_data = logos[brand]
.\pdf_template_engine\placeholders.py,2464,logo_data,"('Subscript', ('Name', 'logos_data'), ('Name', 'brand_name'))","('Subscript',)","brand_name,logos_data",logo_data = logos_data[brand_name]
.\brand_logo_db.py,229,logo_format,"('Const', ""'JPEG'"")","('Const',)",,logo_format = 'JPEG'
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,236,logo_format,"('Const', ""'JPEG'"")","('Const',)",,logo_format = 'JPEG'
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,272,logo_format,"('Const', ""'JPEG'"")","('Const',)",,logo_format = 'JPEG'
.\tools\out_selected\patches\brand_logo_db.py.insert.py,236,logo_format,"('Const', ""'JPEG'"")","('Const',)",,logo_format = 'JPEG'
.\tools\portings\patches\brand_logo_db.py.insert.py,272,logo_format,"('Const', ""'JPEG'"")","('Const',)",,logo_format = 'JPEG'
.\brand_logo_db.py,227,logo_format,"('Const', ""'PNG'"")","('Const',)",,logo_format = 'PNG'
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,234,logo_format,"('Const', ""'PNG'"")","('Const',)",,logo_format = 'PNG'
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,270,logo_format,"('Const', ""'PNG'"")","('Const',)",,logo_format = 'PNG'
.\tools\out_selected\patches\brand_logo_db.py.insert.py,234,logo_format,"('Const', ""'PNG'"")","('Const',)",,logo_format = 'PNG'
.\tools\portings\patches\brand_logo_db.py.insert.py,270,logo_format,"('Const', ""'PNG'"")","('Const',)",,logo_format = 'PNG'
.\debug_logo_rendering.py,99,logo_key,"('Call', ('Attr', 'logo_key_map', 'get'), (('Name', 'logo_name'),), ())","('Call', 1, 0)","logo_key_map,logo_name",logo_key = logo_key_map.get(logo_name)
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_rendering.py.insert.py,97,logo_key,"('Call', ('Attr', 'logo_key_map', 'get'), (('Name', 'logo_name'),), ())","('Call', 1, 0)","logo_key_map,logo_name",logo_key = logo_key_map.get(logo_name)
.\tools\portings\patches\debug_logo_rendering.py.insert.py,97,logo_key,"('Call', ('Attr', 'logo_key_map', 'get'), (('Name', 'logo_name'),), ())","('Call', 1, 0)","logo_key_map,logo_name",logo_key = logo_key_map.get(logo_name)
.\pdf_template_engine\placeholders.py,2465,logo_key,"('Call', ('Attr', 'logo_mapping', 'get'), (('Name', 'category'),), ())","('Call', 1, 0)","category,logo_mapping",logo_key = logo_mapping.get(category)
.\debug_logo_pdf.py,60,logo_keys,"('List', (('Const', ""'module_brand_logo_b64'""), ('Const', ""'inverter_brand_logo_b64'""), ('Const', ""'storage_brand_logo_b64'"")))","('List', 3)",,"logo_keys = [""module_brand_logo_b64"", ""inverter_brand_logo_b64"", ""storage_brand_logo_b64""]"
.\debug_logo_rendering.py,41,logo_keys,"('List', (('Const', ""'module_brand_logo_b64'""), ('Const', ""'inverter_brand_logo_b64'""), ('Const', ""'storage_brand_logo_b64'"")))","('List', 3)",,"logo_keys = [""module_brand_logo_b64"", ""inverter_brand_logo_b64"", ""storage_brand_logo_b64""]"
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_pdf.py.insert.py,58,logo_keys,"('List', (('Const', ""'module_brand_logo_b64'""), ('Const', ""'inverter_brand_logo_b64'""), ('Const', ""'storage_brand_logo_b64'"")))","('List', 3)",,"logo_keys = [""module_brand_logo_b64"", ""inverter_brand_logo_b64"", ""storage_brand_logo_b64""]"
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_rendering.py.insert.py,39,logo_keys,"('List', (('Const', ""'module_brand_logo_b64'""), ('Const', ""'inverter_brand_logo_b64'""), ('Const', ""'storage_brand_logo_b64'"")))","('List', 3)",,"logo_keys = [""module_brand_logo_b64"", ""inverter_brand_logo_b64"", ""storage_brand_logo_b64""]"
.\tools\portings\patches\debug_logo_pdf.py.insert.py,58,logo_keys,"('List', (('Const', ""'module_brand_logo_b64'""), ('Const', ""'inverter_brand_logo_b64'""), ('Const', ""'storage_brand_logo_b64'"")))","('List', 3)",,"logo_keys = [""module_brand_logo_b64"", ""inverter_brand_logo_b64"", ""storage_brand_logo_b64""]"
.\tools\portings\patches\debug_logo_rendering.py.insert.py,39,logo_keys,"('List', (('Const', ""'module_brand_logo_b64'""), ('Const', ""'inverter_brand_logo_b64'""), ('Const', ""'storage_brand_logo_b64'"")))","('List', 3)",,"logo_keys = [""module_brand_logo_b64"", ""inverter_brand_logo_b64"", ""storage_brand_logo_b64""]"
.\notwendig oder nicht\wichtig\portings\patches\test_section_titles_logos.py.insert.py,74,logo_keys,"('List', (('Tuple', (('Const', ""'module_brand_logo_b64'""), ('Const', ""'PV-Module'""))), ('Tuple', (('Const', ""'inverter_brand_logo_b64'""), ('Const', ""'Wechselrichter'""))), ('Tuple', (('Const', ""'storage_brand_logo_b64'""), ('Const', ""'Batteriespeicher'"")))))","('List', 3)",,logo_keys = [
.\tests\test_section_titles_logos.py,76,logo_keys,"('List', (('Tuple', (('Const', ""'module_brand_logo_b64'""), ('Const', ""'PV-Module'""))), ('Tuple', (('Const', ""'inverter_brand_logo_b64'""), ('Const', ""'Wechselrichter'""))), ('Tuple', (('Const', ""'storage_brand_logo_b64'""), ('Const', ""'Batteriespeicher'"")))))","('List', 3)",,logo_keys = [
.\tools\portings\patches\test_section_titles_logos.py.insert.py,74,logo_keys,"('List', (('Tuple', (('Const', ""'module_brand_logo_b64'""), ('Const', ""'PV-Module'""))), ('Tuple', (('Const', ""'inverter_brand_logo_b64'""), ('Const', ""'Wechselrichter'""))), ('Tuple', (('Const', ""'storage_brand_logo_b64'""), ('Const', ""'Batteriespeicher'"")))))","('List', 3)",,logo_keys = [
.\notwendig oder nicht\wichtig\portings\patches\simple_logo_test.py.insert.py,57,logo_keys,"('Other', 'ListComp')","('Other', 'ListComp')","dynamic_data,k",logo_keys = [k for k in dynamic_data.keys() if 'logo' in k.lower()]
.\simple_logo_test.py,59,logo_keys,"('Other', 'ListComp')","('Other', 'ListComp')","dynamic_data,k",logo_keys = [k for k in dynamic_data.keys() if 'logo' in k.lower()]
.\tools\portings\patches\simple_logo_test.py.insert.py,57,logo_keys,"('Other', 'ListComp')","('Other', 'ListComp')","dynamic_data,k",logo_keys = [k for k in dynamic_data.keys() if 'logo' in k.lower()]
.\notwendig oder nicht\wichtig\portings\patches\simple_logo_test.py.insert.py,93,logos,"('Call', ('Name', 'get_logos_for_brands'), (('Name', 'brands'),), ())","('Call', 1, 0)","brands,get_logos_for_brands",logos = get_logos_for_brands(brands)
.\simple_logo_test.py,85,logos,"('Call', ('Name', 'get_logos_for_brands'), (('Name', 'brands'),), ())","('Call', 1, 0)","brands,get_logos_for_brands",logos = get_logos_for_brands(brands)
.\tools\portings\patches\simple_logo_test.py.insert.py,93,logos,"('Call', ('Name', 'get_logos_for_brands'), (('Name', 'brands'),), ())","('Call', 1, 0)","brands,get_logos_for_brands",logos = get_logos_for_brands(brands)
.\admin_logo_management_ui.py,214,logos,"('Call', ('Name', 'list_all_brand_logos'), (), ())","('Call', 0, 0)",list_all_brand_logos,logos = list_all_brand_logos()
.\admin_logo_management_ui.py,364,logos,"('Call', ('Name', 'list_all_brand_logos'), (), ())","('Call', 0, 0)",list_all_brand_logos,logos = list_all_brand_logos()
.\brand_logo_db.py,384,logos,"('Call', ('Name', 'list_all_brand_logos'), (), ())","('Call', 0, 0)",list_all_brand_logos,logos = list_all_brand_logos()
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,207,logos,"('Call', ('Name', 'list_all_brand_logos'), (), ())","('Call', 0, 0)",list_all_brand_logos,logos = list_all_brand_logos()
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,369,logos,"('Call', ('Name', 'list_all_brand_logos'), (), ())","('Call', 0, 0)",list_all_brand_logos,logos = list_all_brand_logos()
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,258,logos,"('Call', ('Name', 'list_all_brand_logos'), (), ())","('Call', 0, 0)",list_all_brand_logos,logos = list_all_brand_logos()
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,460,logos,"('Call', ('Name', 'list_all_brand_logos'), (), ())","('Call', 0, 0)",list_all_brand_logos,logos = list_all_brand_logos()
.\notwendig oder nicht\wichtig\portings\patches\test_brand_logos.py.insert.py,92,logos,"('Call', ('Name', 'list_all_brand_logos'), (), ())","('Call', 0, 0)",list_all_brand_logos,logos = list_all_brand_logos()
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,57,logos,"('Call', ('Name', 'list_all_brand_logos'), (), ())","('Call', 0, 0)",list_all_brand_logos,logos = list_all_brand_logos()
.\tests\test_brand_logos.py,81,logos,"('Call', ('Name', 'list_all_brand_logos'), (), ())","('Call', 0, 0)",list_all_brand_logos,logos = list_all_brand_logos()
.\tests\test_logo_integration.py,58,logos,"('Call', ('Name', 'list_all_brand_logos'), (), ())","('Call', 0, 0)",list_all_brand_logos,logos = list_all_brand_logos()
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,207,logos,"('Call', ('Name', 'list_all_brand_logos'), (), ())","('Call', 0, 0)",list_all_brand_logos,logos = list_all_brand_logos()
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,369,logos,"('Call', ('Name', 'list_all_brand_logos'), (), ())","('Call', 0, 0)",list_all_brand_logos,logos = list_all_brand_logos()
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,258,logos,"('Call', ('Name', 'list_all_brand_logos'), (), ())","('Call', 0, 0)",list_all_brand_logos,logos = list_all_brand_logos()
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,460,logos,"('Call', ('Name', 'list_all_brand_logos'), (), ())","('Call', 0, 0)",list_all_brand_logos,logos = list_all_brand_logos()
.\tools\portings\patches\test_brand_logos.py.insert.py,92,logos,"('Call', ('Name', 'list_all_brand_logos'), (), ())","('Call', 0, 0)",list_all_brand_logos,logos = list_all_brand_logos()
.\tools\portings\patches\test_logo_integration.py.insert.py,57,logos,"('Call', ('Name', 'list_all_brand_logos'), (), ())","('Call', 0, 0)",list_all_brand_logos,logos = list_all_brand_logos()
.\database.py,415,logos,"('Call', ('Name', 'load_admin_setting'), (('Const', ""'brand_logos'""), ('Dict', ())), ())","('Call', 2, 0)",load_admin_setting,"logos = load_admin_setting(""brand_logos"", {})"
.\brand_logo_db.py,167,logos,"('List', ())","('List', 0)",,logos = []
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,168,logos,"('List', ())","('List', 0)",,logos = []
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,190,logos,"('List', ())","('List', 0)",,logos = []
.\tools\out_selected\patches\brand_logo_db.py.insert.py,168,logos,"('List', ())","('List', 0)",,logos = []
.\tools\portings\patches\brand_logo_db.py.insert.py,190,logos,"('List', ())","('List', 0)",,logos = []
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,61,logos_dict,"('Call', ('Name', 'get_logos_for_brands'), (('List', (('Const', ""'TestHersteller'""),)),), ())","('Call', 1, 0)",get_logos_for_brands,"logos_dict = get_logos_for_brands([""TestHersteller""])"
.\tests\test_logo_integration.py,62,logos_dict,"('Call', ('Name', 'get_logos_for_brands'), (('List', (('Const', ""'TestHersteller'""),)),), ())","('Call', 1, 0)",get_logos_for_brands,"logos_dict = get_logos_for_brands([""TestHersteller""])"
.\tools\portings\patches\test_logo_integration.py.insert.py,61,logos_dict,"('Call', ('Name', 'get_logos_for_brands'), (('List', (('Const', ""'TestHersteller'""),)),), ())","('Call', 1, 0)",get_logos_for_brands,"logos_dict = get_logos_for_brands([""TestHersteller""])"
.\brand_logo_db.py,317,logos_dict,"('Dict', ())","('Dict', 0)",,logos_dict = {}
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,330,logos_dict,"('Dict', ())","('Dict', 0)",,logos_dict = {}
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,380,logos_dict,"('Dict', ())","('Dict', 0)",,logos_dict = {}
.\tools\out_selected\patches\brand_logo_db.py.insert.py,330,logos_dict,"('Dict', ())","('Dict', 0)",,logos_dict = {}
.\tools\portings\patches\brand_logo_db.py.insert.py,380,logos_dict,"('Dict', ())","('Dict', 0)",,logos_dict = {}
.\tools\import_module_attributes_generic.py,233,low,"('Call', ('Attr', ""' '"", 'join'), (('Call', ('Attr', 'low', 'split'), (), ()),), ())","('Call', 1, 0)",low,"low = "" "".join(low.split())"
.\tools\import_module_attributes_generic.py,237,low,"('Call', ('Attr', ""_re.sub('[:：]+$', '', low)"", 'strip'), (), ())","('Call', 0, 0)","_re,low","low = _re.sub(r""[:：]+$"", """", low).strip()"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,33,low,"('Call', ('Attr', 'p', 'lower'), (), ())","('Call', 0, 0)",p,low=p.lower()
.\tools\import_module_attributes_generic.py,232,low,"('Call', ('Attr', 'str(k).strip()', 'lower'), (), ())","('Call', 0, 0)","k,str",low = str(k).strip().lower()
.\dev_tools\kakerlake_ultra_cleaner.py,560,low,"('Other', 'DictComp')","('Other', 'DictComp')","k,o,str",low={str(k).lower():k for k in o.keys()}
.\mnt\data\kakerlake_ultra_cleaner.py,560,low,"('Other', 'DictComp')","('Other', 'DictComp')","k,o,str",low={str(k).lower():k for k in o.keys()}
.\tools\kakerlake_ultra_cleaner.py,561,low,"('Other', 'DictComp')","('Other', 'DictComp')","k,o,str",low={str(k).lower():k for k in o.keys()}
.\pdf_template_engine\placeholders.py,944,lower_autarky,"('Add', (('Name', 'battery_cover_pct'), ('Name', 'direct_cover_pct')))","('Add', (('Name',), ('Name',)))","battery_cover_pct,direct_cover_pct",lower_autarky = battery_cover_pct + direct_cover_pct
.\pdf_template_engine\placeholders.py,947,lower_autarky,"('Call', ('Name', 'max'), (('Const', '0.0'), ('Call', ('Name', 'min'), (('Const', '100.0'), ('Name', 'lower_autarky')), ())), ())","('Call', 2, 0)","lower_autarky,max,min","lower_autarky = max(0.0, min(100.0, lower_autarky))"
.\pdf_template_engine\placeholders.py,946,lower_autarky,"('Sub', ('Const', '100.0'), ('Name', 'grid_pct'))","('Sub', ('Const',), ('Name',))",grid_pct,lower_autarky = 100.0 - grid_pct
.\tools\schema_extractor.py,62,m,"('Call', ('Attr', 're', 'search'), (('Const', ""'DEFAULT\\\\s+([^\\\\s,]+)'""), ('Name', 's')), ())","('Call', 2, 0)","re,s","m = re.search(r'DEFAULT\s+([^\s,]+)', s)"
.\notwendig oder nicht\python_function_recipes.py,195,m,"('Compare', ('Name', 'as_num'), ('Gt',), (('Call', ('Name', 'float'), (('Name', 'rhs'),), ()),))","('Compare', ('Gt',), 1)","as_num,float,rhs",m = (as_num > float(rhs))
.\notwendig oder nicht\python_function_recipes.py,197,m,"('Compare', ('Name', 'as_num'), ('GtE',), (('Call', ('Name', 'float'), (('Name', 'rhs'),), ()),))","('Compare', ('GtE',), 1)","as_num,float,rhs",m = (as_num >= float(rhs))
.\notwendig oder nicht\python_function_recipes.py,199,m,"('Compare', ('Name', 'as_num'), ('Lt',), (('Call', ('Name', 'float'), (('Name', 'rhs'),), ()),))","('Compare', ('Lt',), 1)","as_num,float,rhs",m = (as_num < float(rhs))
.\notwendig oder nicht\python_function_recipes.py,201,m,"('Compare', ('Name', 'as_num'), ('LtE',), (('Call', ('Name', 'float'), (('Name', 'rhs'),), ()),))","('Compare', ('LtE',), 1)","as_num,float,rhs",m = (as_num <= float(rhs))
.\notwendig oder nicht\python_function_recipes.py,191,m,"('Other', 'IfExp')","('Other', 'IfExp')","as_num,float,rhs,rng,str","m = (rng.astype(str) == rhs) if not rhs.replace('.','',1).isdigit() else (as_num == float(rhs))"
.\notwendig oder nicht\python_function_recipes.py,193,m,"('Other', 'IfExp')","('Other', 'IfExp')","as_num,float,rhs,rng,str","m = (rng.astype(str) != rhs) if not rhs.replace('.','',1).isdigit() else (as_num != float(rhs))"
.\pdf_generator.py,2796,main_pdf_bytes,"('Call', ('Attr', 'main_offer_buffer', 'getvalue'), (), ())","('Call', 0, 0)",main_offer_buffer,main_pdf_bytes = main_offer_buffer.getvalue()
.\pdf_generator.py,2782,main_pdf_bytes,"('Const', 'None')","('Const',)",,main_pdf_bytes: Optional[bytes] = None
.\heatpump_ui.py,530,maintenance_cost_annual,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Jährliche Wartungskosten (€)'""),), (('max_value', ('Const', '1000')), ('min_value', ('Const', '200')), ('step', ('Const', '50')), ('value', ('Const', '300'))))","('Call', 1, 4)",st,maintenance_cost_annual = st.number_input(
.\heatpump_ui.py,897,maintenance_cost_annual,"('Const', '300')","('Const',)",,maintenance_cost_annual = 300
.\pdf_widgets.py,343,manager,"('Attr', 'st.session_state', 'pdf_section_manager')","('Attr',)",st,manager = st.session_state.pdf_section_manager
.\pdf_styles.py,1179,manager,"('Attr', 'st.session_state', 'pdf_theme_manager')","('Attr',)",st,manager = st.session_state.pdf_theme_manager
.\admin_panel.py,629,mapping,"('BoolOp', 'Or', (('Call', ('Attr', 'd', 'get'), (('Const', ""'mapping'""),), ()), ('List', ())))","('BoolOp', 'Or', 2)",d,"mapping = d.get(""mapping"") or []"
.\calculations.py,2134,mapping,"('Dict', (('KV', ('Const', ""'flachdach (o-w)'""), ('USub', ('Const', '90'))), ('KV', ('Const', ""'flachdach (ost-west)'""), ('USub', ('Const', '90'))), ('KV', ('Const', ""'flachdach'""), ('Const', '0')), ('KV', ('Const', ""'n'""), ('Const', '180')), ('KV', ('Const', ""'no'""), ('USub', ('Const', '135'))), ('KV', ('Const', ""'nord'""), ('Const', '180')), ('KV', ('Const', ""'nord-ost'""), ('USub', ('Const', '135'))), ('KV', ('Const', ""'nord-west'""), ('Const', '135')), ('KV', ('Const', ""'nordost'""), ('USub', ('Const', '135'))), ('KV', ('Const', ""'nordwest'""), ('Const', '135')), ('KV', ('Const', ""'nw'""), ('Const', '135')), ('KV', ('Const', ""'o'""), ('USub', ('Const', '90'))), ('KV', ('Const', ""'ost'""), ('USub', ('Const', '90'))), ('KV', ('Const', ""'s'""), ('Const', '0')), ('KV', ('Const', ""'so'""), ('USub', ('Const', '45'))), ('KV', ('Const', ""'sw'""), ('Const', '45')), ('KV', ('Const', ""'süd'""), ('Const', '0')), ('KV', ('Const', ""'süd-ost'""), ('USub', ('Const', '45'))), ('KV', ('Const', ""'süd-west'""), ('Const', '45')), ('KV', ('Const', ""'südost'""), ('USub', ('Const', '45'))), ('KV', ('Const', ""'südwest'""), ('Const', '45')), ('KV', ('Const', ""'w'""), ('Const', '90')), ('KV', ('Const', ""'west'""), ('Const', '90'))))","('Dict', 23)",,mapping = {
.\crm_dashboard_ui.py,178,mask,"('Call', ('Attr', 'display_df.astype(str).apply(lambda x: x.str.contains(search_term, case=False, na=False))', 'any'), (), (('axis', ('Const', '1')),))","('Call', 0, 1)","display_df,search_term,str,x","mask = display_df.astype(str).apply(lambda x: x.str.contains(search_term, case=False, na=False)).any(axis=1)"
.\notwendig oder nicht\python_function_recipes.py,182,mask,"('Call', ('Attr', 'pd', 'Series'), (('Mult', (('Call', ('Name', 'len'), (('Name', 'sr'),), ()), ('List', (('Const', 'True'),)))),), ())","('Call', 1, 0)","len,pd,sr",mask = pd.Series([True]*len(sr))
.\notwendig oder nicht\python_function_recipes.py,170,mask,"('Compare', ('Name', 'as_num'), ('Gt',), (('Call', ('Name', 'float'), (('Name', 'rhs'),), ()),))","('Compare', ('Gt',), 1)","as_num,float,rhs",mask = (as_num > float(rhs))
.\notwendig oder nicht\python_function_recipes.py,172,mask,"('Compare', ('Name', 'as_num'), ('GtE',), (('Call', ('Name', 'float'), (('Name', 'rhs'),), ()),))","('Compare', ('GtE',), 1)","as_num,float,rhs",mask = (as_num >= float(rhs))
.\notwendig oder nicht\python_function_recipes.py,174,mask,"('Compare', ('Name', 'as_num'), ('Lt',), (('Call', ('Name', 'float'), (('Name', 'rhs'),), ()),))","('Compare', ('Lt',), 1)","as_num,float,rhs",mask = (as_num < float(rhs))
.\notwendig oder nicht\python_function_recipes.py,176,mask,"('Compare', ('Name', 'as_num'), ('LtE',), (('Call', ('Name', 'float'), (('Name', 'rhs'),), ()),))","('Compare', ('LtE',), 1)","as_num,float,rhs",mask = (as_num <= float(rhs))
.\notwendig oder nicht\python_function_recipes.py,166,mask,"('Other', 'IfExp')","('Other', 'IfExp')","as_num,float,rhs,rv,str","mask = (rv.astype(str) == rhs) if not rhs.replace('.','',1).isdigit() else (as_num == float(rhs))"
.\notwendig oder nicht\python_function_recipes.py,168,mask,"('Other', 'IfExp')","('Other', 'IfExp')","as_num,float,rhs,rv,str","mask = (rv.astype(str) != rhs) if not rhs.replace('.','',1).isdigit() else (as_num != float(rhs))"
.\analysis_utils.py,326,matches,"('Call', ('Attr', 're', 'findall'), (('Name', 'pattern'), ('Name', 'text')), ())","('Call', 2, 0)","pattern,re,text","matches = re.findall(pattern, text)"
.\clean_unicode_emojis.py,84,matches,"('Call', ('Name', 'len'), (('Call', ('Attr', 're', 'findall'), (('Name', 'pattern'), ('Name', 'old_content')), ()),), ())","('Call', 1, 0)","len,old_content,pattern,re","matches = len(re.findall(pattern, old_content))"
.\calculations.py,2998,matrix_column_used_for_price,"('Name', 'original_no_storage_column_name')","('Name',)",original_no_storage_column_name,"matrix_column_used_for_price = original_no_storage_column_name  # Speichere ""Ohne Speicher"" als verwendeten Spaltennamen"
.\calculations.py,2981,matrix_column_used_for_price,"('Name', 'original_price_col_key_for_df_access')","('Name',)",original_price_col_key_for_df_access,matrix_column_used_for_price = original_price_col_key_for_df_access  # Speichere den verwendeten Spaltennamen
.\pdf_template_engine\placeholders.py,1051,max_val,"('Call', ('Name', 'max'), (('Name', 'cost10_no_inc'), ('Name', 'cost10_with_inc')), ())","('Call', 2, 0)","cost10_no_inc,cost10_with_inc,max","max_val = max(cost10_no_inc, cost10_with_inc)"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,136,max_val,"('Call', ('Name', 'max'), (('Name', 'v_no_inc_total'), ('Name', 'v_with_inc_total'), ('Const', '0.0')), ())","('Call', 3, 0)","max,v_no_inc_total,v_with_inc_total","max_val = max(v_no_inc_total, v_with_inc_total, 0.0)"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,154,max_val,"('Call', ('Name', 'max'), (('Name', 'v_no_inc_total'), ('Name', 'v_with_inc_total'), ('Const', '0.0')), ())","('Call', 3, 0)","max,v_no_inc_total,v_with_inc_total","max_val = max(v_no_inc_total, v_with_inc_total, 0.0)"
.\pdf_template_engine\dynamic_overlay.py,649,max_val,"('Call', ('Name', 'max'), (('Name', 'v_no_inc_total'), ('Name', 'v_with_inc_total'), ('Const', '0.0')), ())","('Call', 3, 0)","max,v_no_inc_total,v_with_inc_total","max_val = max(v_no_inc_total, v_with_inc_total, 0.0)"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,136,max_val,"('Call', ('Name', 'max'), (('Name', 'v_no_inc_total'), ('Name', 'v_with_inc_total'), ('Const', '0.0')), ())","('Call', 3, 0)","max,v_no_inc_total,v_with_inc_total","max_val = max(v_no_inc_total, v_with_inc_total, 0.0)"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,154,max_val,"('Call', ('Name', 'max'), (('Name', 'v_no_inc_total'), ('Name', 'v_with_inc_total'), ('Const', '0.0')), ())","('Call', 3, 0)","max,v_no_inc_total,v_with_inc_total","max_val = max(v_no_inc_total, v_with_inc_total, 0.0)"
.\analysis.py,6057,mc_results,"('Call', ('Attr', 'integrator', 'run_monte_carlo_simulation'), (('Name', 'calc_results'), ('Name', 'n_simulations'), ('Name', 'confidence_level')), ())","('Call', 3, 0)","calc_results,confidence_level,integrator,n_simulations",mc_results = integrator.run_monte_carlo_simulation(
.\analysis.py,6064,mc_results,"('Subscript', ('Attr', 'st', 'session_state'), ('Const', ""'mc_results'""))","('Subscript',)",st,"mc_results = st.session_state[""mc_results""]"
.\pdf_template_engine\placeholders.py,1280,md,"('BoolOp', 'Or', (('Call', ('Name', '_get_prod_by_id'), (('Call', ('Name', 'int'), (('Name', 'best_id'),), ()),), ()), ('Dict', ())))","('BoolOp', 'Or', 2)","_get_prod_by_id,best_id,int",md = _get_prod_by_id(int(best_id)) or {}
.\pdf_template_engine\placeholders.py,1223,md,"('Call', ('Name', '_get_prod_by_id'), (('Call', ('Name', 'int'), (('Name', 'module_id'),), ()),), ())","('Call', 1, 0)","_get_prod_by_id,int,module_id",md = _get_prod_by_id(int(module_id))
.\solar_calculator.py,115,md,"('Call', ('Name', 'get_product_by_model_name_safe'), (('Subscript', ('Name', 'details'), ('Const', ""'selected_module_name'"")),), ())","('Call', 1, 0)","details,get_product_by_model_name_safe",md = get_product_by_model_name_safe(details['selected_module_name'])
.\pdf_atomizer.py,368,meta,"('BoolOp', 'Or', (('Call', ('Attr', 'self.atoms', 'get'), (('Const', ""'meta'""),), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",self,"meta = self.atoms.get(""meta"") or {}"
.\pdf_ui.py,1173,meta,"('BoolOp', 'Or', (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'generated_pdf_meta'""),), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",st,meta = st.session_state.get('generated_pdf_meta') or {}
.\notwendig oder nicht\wichtig\repo_to_json.py,183,meta,"('Call', ('Name', 'FileMeta'), (), (('encoding', ('Other', 'IfExp')), ('is_text', ('Name', 'is_text')), ('mtime_iso', ('Call', ('Name', 'human'), (('Name', 'mtime'),), ())), ('relpath', ('Name', 'rel')), ('sha256', ('Name', 'sha')), ('size', ('Name', 'size')), ('stored_bytes', ('Name', 'read_bytes')), ('truncated', ('Name', 'truncated'))))","('Call', 0, 8)","FileMeta,enc,human,is_text,mtime,read_bytes,rel,sha,size,truncated",meta = FileMeta(
.\tools\repo_to_json.py,183,meta,"('Call', ('Name', 'FileMeta'), (), (('encoding', ('Other', 'IfExp')), ('is_text', ('Name', 'is_text')), ('mtime_iso', ('Call', ('Name', 'human'), (('Name', 'mtime'),), ())), ('relpath', ('Name', 'rel')), ('sha256', ('Name', 'sha')), ('size', ('Name', 'size')), ('stored_bytes', ('Name', 'read_bytes')), ('truncated', ('Name', 'truncated'))))","('Call', 0, 8)","FileMeta,enc,human,is_text,mtime,read_bytes,rel,sha,size,truncated",meta = FileMeta(
.\pdf_ui.py,1179,meta,"('Dict', (('KV', ('Const', ""'file_name'""), ('Name', 'file_name')), ('KV', ('Const', ""'timestamp'""), ('Name', 'timestamp_file'))))","('Dict', 2)","file_name,timestamp_file","meta = {'timestamp': timestamp_file, 'file_name': file_name}"
.\notwendig oder nicht\wichtig\repo_porter.py,203,mi,"('Call', ('Name', 'DefInfo'), (), (('decorators', ('Call', ('Name', 'collect_decorator_lines'), (('Name', 'b'),), ())), ('depends_on_local', ('Call', ('Name', 'collect_name_reads'), (('Name', 'b'),), ())), ('end_lineno', ('Other', 'IfExp')), ('import_lines', ('Name', 'imports')), ('kind', ('Const', ""'method'"")), ('lineno', ('Attr', 'b', 'lineno')), ('module_rel', ('Name', 'mod_rel')), ('name', ('Attr', 'b', 'name')), ('parent_class', ('Attr', 'n', 'name')), ('qualname', ('Other', 'JoinedStr')), ('signature_hint', ('Call', ('Name', 'node_signature'), (('Name', 'b'),), ()))))","('Call', 0, 11)","DefInfo,b,collect_decorator_lines,collect_name_reads,hasattr,imports,mod_rel,n,node_signature",mi = DefInfo(
.\tools\repo_porter.py,203,mi,"('Call', ('Name', 'DefInfo'), (), (('decorators', ('Call', ('Name', 'collect_decorator_lines'), (('Name', 'b'),), ())), ('depends_on_local', ('Call', ('Name', 'collect_name_reads'), (('Name', 'b'),), ())), ('end_lineno', ('Other', 'IfExp')), ('import_lines', ('Name', 'imports')), ('kind', ('Const', ""'method'"")), ('lineno', ('Attr', 'b', 'lineno')), ('module_rel', ('Name', 'mod_rel')), ('name', ('Attr', 'b', 'name')), ('parent_class', ('Attr', 'n', 'name')), ('qualname', ('Other', 'JoinedStr')), ('signature_hint', ('Call', ('Name', 'node_signature'), (('Name', 'b'),), ()))))","('Call', 0, 11)","DefInfo,b,collect_decorator_lines,collect_name_reads,hasattr,imports,mod_rel,n,node_signature",mi = DefInfo(
.\notwendig oder nicht\wichtig\repo_porter.py,385,mi,"('Subscript', ('Name', 'idx_dst'), ('Name', 'm'))","('Subscript',)","idx_dst,m",mi = idx_dst[m]
.\tools\repo_porter.py,385,mi,"('Subscript', ('Name', 'idx_dst'), ('Name', 'm'))","('Subscript',)","idx_dst,m",mi = idx_dst[m]
.\notwendig oder nicht\wichtig\repo_porter.py,373,mi,"('Subscript', ('Name', 'idx_src'), ('Name', 'm'))","('Subscript',)","idx_src,m",mi = idx_src[m]
.\tools\repo_porter.py,373,mi,"('Subscript', ('Name', 'idx_src'), ('Name', 'm'))","('Subscript',)","idx_src,m",mi = idx_src[m]
.\pdf_template_engine\dynamic_overlay.py,523,mid_x,"('Div', ('Add', (('Name', 'x0'), ('Name', 'x1'))), ('Const', '2.0'))","('Div', ('Add', (('Name',), ('Name',))), ('Const',))","x0,x1",mid_x = (x0 + x1) / 2.0
.\pdf_styles.py,537,mid_x,"('Div', ('Add', (('Subscript', ('Name', 'end'), ('Const', '0')), ('Subscript', ('Name', 'start'), ('Const', '0')))), ('Const', '2'))","('Div', ('Add', (('Subscript',), ('Subscript',))), ('Const',))","end,start",mid_x = (start[0] + end[0]) / 2
.\calculations.py,2833,min_usage_share,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'global_constants', 'get'), (('Const', ""'storage_min_usage_share_of_charge'""), ('Const', '0.25')), ()), ('Const', '0.25'))),), ())","('Call', 1, 0)","float,global_constants","min_usage_share = float(global_constants.get(""storage_min_usage_share_of_charge"", 0.25) or 0.25)"
.\calculations.py,2835,min_usage_share,"('Const', '0.05')","('Const',)",,min_usage_share = 0.05
.\calculations.py,2837,min_usage_share,"('Const', '0.9')","('Const',)",,min_usage_share = 0.9
.\pdf_ui.py,216,minimal_data_ok,"('Const', 'False')","('Const',)",,minimal_data_ok = False
.\pdf_ui.py,221,minimal_data_ok,"('Const', 'False')","('Const',)",,minimal_data_ok = False
.\pdf_ui.py,244,minimal_data_ok,"('Const', 'False')","('Const',)",,minimal_data_ok = False
.\pdf_ui.py,207,minimal_data_ok,"('Const', 'True')","('Const',)",,minimal_data_ok = True
.\analysis.py,330,miscellaneous_eur,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Sonstiges (€)'""),), (('help', ('Const', ""'Sonstige Kosten oder Anpassungen'"")), ('key', ('Const', ""'pricing_modifications_miscellaneous_slider'"")), ('max_value', ('Const', '50000.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '50.0')), ('value', ('Const', '0.0'))))","('Call', 1, 6)",st,miscellaneous_eur = st.number_input(
.\analysis.py,5236,miscellaneous_eur,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_miscellaneous_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,miscellaneous_eur = st.session_state.get(
.\gui.py,156,miscellaneous_eur,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_miscellaneous_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,"miscellaneous_eur = st.session_state.get(""pricing_modifications_miscellaneous_slider"", 0.0)"
.\pdf_ui.py,104,miscellaneous_eur,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_miscellaneous_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,"miscellaneous_eur = st.session_state.get(""pricing_modifications_miscellaneous_slider"", 0.0)"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,52,mod,"('Call', ('Attr', 'cst', 'Module'), (('List', ()),), ())","('Call', 1, 0)",cst,mod = cst.Module([])
.\dev_tools\kakerlake_ultra_cleaner.py,277,mod,"('Call', ('Attr', 'cst', 'parse_module'), (('Name', 'code'),), ())","('Call', 1, 0)","code,cst",try: mod = cst.parse_module(code)
.\dev_tools\kakerlake_ultra_cleaner.py,333,mod,"('Call', ('Attr', 'cst', 'parse_module'), (('Name', 'code'),), ())","('Call', 1, 0)","code,cst",try: mod=cst.parse_module(code)
.\dev_tools\kakerlake_ultra_cleaner.py,459,mod,"('Call', ('Attr', 'cst', 'parse_module'), (('Name', 'code'),), ())","('Call', 1, 0)","code,cst",try: mod=cst.parse_module(code)
.\dev_tools\kakerlake_ultra_cleaner_v2.py,49,mod,"('Call', ('Attr', 'cst', 'parse_module'), (('Name', 'code'),), ())","('Call', 1, 0)","code,cst",try: mod = cst.parse_module(code)
.\dev_tools\kakerlake_ultra_cleaner_v2.py,197,mod,"('Call', ('Attr', 'cst', 'parse_module'), (('Name', 'code'),), ())","('Call', 1, 0)","code,cst",mod = cst.parse_module(code)
.\dev_tools\kakerlake_ultra_cleaner_v2.py,338,mod,"('Call', ('Attr', 'cst', 'parse_module'), (('Name', 'code'),), ())","('Call', 1, 0)","code,cst",mod = cst.parse_module(code)
.\dev_tools\kakerlake_ultra_cleaner_v3.py,62,mod,"('Call', ('Attr', 'cst', 'parse_module'), (('Name', 'code'),), ())","('Call', 1, 0)","code,cst",try: mod = cst.parse_module(code)
.\dev_tools\kakerlake_ultra_cleaner_v3.py,211,mod,"('Call', ('Attr', 'cst', 'parse_module'), (('Name', 'code'),), ())","('Call', 1, 0)","code,cst",mod = cst.parse_module(code)
.\dev_tools\kakerlake_ultra_cleaner_v3.py,354,mod,"('Call', ('Attr', 'cst', 'parse_module'), (('Name', 'code'),), ())","('Call', 1, 0)","code,cst",mod = cst.parse_module(code)
.\mnt\data\kakerlake_ultra_cleaner.py,277,mod,"('Call', ('Attr', 'cst', 'parse_module'), (('Name', 'code'),), ())","('Call', 1, 0)","code,cst",try: mod = cst.parse_module(code)
.\mnt\data\kakerlake_ultra_cleaner.py,333,mod,"('Call', ('Attr', 'cst', 'parse_module'), (('Name', 'code'),), ())","('Call', 1, 0)","code,cst",try: mod=cst.parse_module(code)
.\mnt\data\kakerlake_ultra_cleaner.py,459,mod,"('Call', ('Attr', 'cst', 'parse_module'), (('Name', 'code'),), ())","('Call', 1, 0)","code,cst",try: mod=cst.parse_module(code)
.\mnt\data\kakerlake_ultra_cleaner_v2.py,49,mod,"('Call', ('Attr', 'cst', 'parse_module'), (('Name', 'code'),), ())","('Call', 1, 0)","code,cst",try: mod = cst.parse_module(code)
.\mnt\data\kakerlake_ultra_cleaner_v2.py,197,mod,"('Call', ('Attr', 'cst', 'parse_module'), (('Name', 'code'),), ())","('Call', 1, 0)","code,cst",mod = cst.parse_module(code)
.\mnt\data\kakerlake_ultra_cleaner_v2.py,338,mod,"('Call', ('Attr', 'cst', 'parse_module'), (('Name', 'code'),), ())","('Call', 1, 0)","code,cst",mod = cst.parse_module(code)
.\tools\kakerlake_ultra_cleaner.py,278,mod,"('Call', ('Attr', 'cst', 'parse_module'), (('Name', 'code'),), ())","('Call', 1, 0)","code,cst",try: mod = cst.parse_module(code)
.\tools\kakerlake_ultra_cleaner.py,334,mod,"('Call', ('Attr', 'cst', 'parse_module'), (('Name', 'code'),), ())","('Call', 1, 0)","code,cst",try: mod=cst.parse_module(code)
.\tools\kakerlake_ultra_cleaner.py,460,mod,"('Call', ('Attr', 'cst', 'parse_module'), (('Name', 'code'),), ())","('Call', 1, 0)","code,cst",try: mod=cst.parse_module(code)
.\pdf_generator.py,1828,mod_qty,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'pd', 'get'), (('Const', ""'module_quantity'""),), ()), ('Const', '0'))),), ())","('Call', 1, 0)","float,pd",mod_qty = float(pd.get('module_quantity') or 0)
.\pdf_template_engine\placeholders.py,564,mod_qty,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'module_quantity'""),), ()), ('Const', '0'))),), ())","('Call', 1, 0)","float,project_details","mod_qty = float(project_details.get(""module_quantity"") or 0)"
.\pdf_template_engine\placeholders.py,1290,mod_qty,"('Call', ('Name', 'int'), (('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'module_quantity'""),), ()), ('Const', '0'))),), ()),), ())","('Call', 1, 0)","float,int,project_details","mod_qty = int(float(project_details.get(""module_quantity"") or 0))"
.\pdf_template_engine\placeholders.py,1292,mod_qty,"('Const', '0')","('Const',)",,mod_qty = 0
.\pdf_template_engine\placeholders.py,1321,mod_wp,"('BoolOp', 'Or', (('Call', ('Attr', 'module_details', 'get'), (('Const', ""'capacity_w'""),), ()), ('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_module_capacity_w'""),), ())))","('BoolOp', 'Or', 2)","module_details,project_details","mod_wp = module_details.get(""capacity_w"") or project_details.get(""selected_module_capacity_w"")"
.\pdf_generator.py,1829,mod_wp,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'pd', 'get'), (('Const', ""'selected_module_capacity_w'""),), ()), ('Const', '0'))),), ())","('Call', 1, 0)","float,pd",mod_wp = float(pd.get('selected_module_capacity_w') or 0)
.\pdf_template_engine\placeholders.py,565,mod_wp,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_module_capacity_w'""),), ()), ('Const', '0'))),), ())","('Call', 1, 0)","float,project_details","mod_wp = float(project_details.get(""selected_module_capacity_w"") or 0)"
.\pdf_template_engine\placeholders.py,1101,mode,"('BoolOp', 'Or', (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'einspeise_art'""),), ()), ('Const', ""'parts'"")))","('BoolOp', 'Or', 2)",project_data,"mode = (project_data.get(""einspeise_art"") or ""parts"")"
.\analysis.py,386,mode,"('Call', ('Attr', 'cheat', 'get'), (('Const', ""'mode'""), ('Const', ""'fixed'"")), ())","('Call', 2, 0)",cheat,"mode = cheat.get(""mode"", ""fixed"")"
.\calculations.py,3314,mode,"('Call', ('Attr', 'cheat_settings', 'get'), (('Const', ""'mode'""), ('Const', ""'fixed'"")), ())","('Call', 2, 0)",cheat_settings,"mode = cheat_settings.get(""mode"", ""fixed"")"
.\admin_panel.py,1322,mode,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Modus'""),), (('help', ('Const', ""'fixed: feste Jahre setzen; absolute_reduction: feste Jahre abziehen; percentage_reduction: prozentuale Reduktion'"")), ('index', ('Call', ('Attr', ""['fixed', 'absolute_reduction', 'percentage_reduction']"", 'index'), (('Call', ('Attr', 'cheat_current', 'get'), (('Const', ""'mode'""), ('Const', ""'fixed'"")), ()),), ())), ('options', ('List', (('Const', ""'fixed'""), ('Const', ""'absolute_reduction'""), ('Const', ""'percentage_reduction'""))))))","('Call', 1, 3)","cheat_current,st","mode = st.selectbox(""Modus"", options=[""fixed"", ""absolute_reduction"", ""percentage_reduction""], index=[""fixed"", ""absolute_reduction"", ""percentage_reduction""].index(cheat_current.get(""mode"", ""fixed"")), help=""fixed: feste Jahre setzen; absolute_reduction: feste Jahre abziehen; percentage_reduction: prozentuale Reduktion"")"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,54,mode_l,"('Call', ('Attr', ""(mode or 'parts').strip()"", 'lower'), (), ())","('Call', 0, 0)",mode,"mode_l = (mode or ""parts"").strip().lower()"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,76,mode_l,"('Call', ('Attr', ""(mode or 'parts').strip()"", 'lower'), (), ())","('Call', 0, 0)",mode,"mode_l = (mode or ""parts"").strip().lower()"
.\pdf_template_engine\placeholders.py,93,mode_l,"('Call', ('Attr', ""(mode or 'parts').strip()"", 'lower'), (), ())","('Call', 0, 0)",mode,"mode_l = (mode or ""parts"").strip().lower()"
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,54,mode_l,"('Call', ('Attr', ""(mode or 'parts').strip()"", 'lower'), (), ())","('Call', 0, 0)",mode,"mode_l = (mode or ""parts"").strip().lower()"
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,76,mode_l,"('Call', ('Attr', ""(mode or 'parts').strip()"", 'lower'), (), ())","('Call', 0, 0)",mode,"mode_l = (mode or ""parts"").strip().lower()"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,56,mode_l,"('Const', ""'parts'"")","('Const',)",,"mode_l = ""parts"""
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,78,mode_l,"('Const', ""'parts'"")","('Const',)",,"mode_l = ""parts"""
.\pdf_template_engine\placeholders.py,95,mode_l,"('Const', ""'parts'"")","('Const',)",,"mode_l = ""parts"""
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,56,mode_l,"('Const', ""'parts'"")","('Const',)",,"mode_l = ""parts"""
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,78,mode_l,"('Const', ""'parts'"")","('Const',)",,"mode_l = ""parts"""
.\analysis.py,6896,mode_names,"('Dict', (('KV', ('Const', ""'Nur Photovoltaik'""), ('Const', ""'Photovoltaik'"")), ('KV', ('Const', ""'Nur Wärmepumpe'""), ('Const', ""'Wärmepumpe'"")), ('KV', ('Const', ""'Photovoltaik + Wärmepumpe'""), ('Const', ""'Photovoltaik & Wärmepumpe'""))))","('Dict', 3)",,mode_names = {
.\data_input.py,211,mode_names,"('Dict', (('KV', ('Const', ""'Photovoltaik_only'""), ('Const', ""'Nur Photovoltaik'"")), ('KV', ('Const', ""'pv_wp_combined'""), ('Const', ""'Photovoltaik + Wärmepumpe'"")), ('KV', ('Const', ""'wp_only'""), ('Const', ""'Nur Wärmepumpe'""))))","('Dict', 3)",,mode_names = {
.\admin_panel.py,775,model,"('BoolOp', 'Or', (('Call', ('Attr', 'p', 'get'), (('Const', ""'model_name'""),), ()), ('Const', ""''"")))","('BoolOp', 'Or', 2)",p,model = p.get('model_name') or ''
.\pdf_generator.py,1591,model,"('Call', ('Attr', ""product_details.get('model_name', '')"", 'strip'), (), ())","('Call', 0, 0)",product_details,"model = product_details.get('model_name', '').strip()"
.\product_attributes.py,242,model,"('Call', ('Attr', ""row.get(model_col) or ''"", 'strip'), (), ())","('Call', 0, 0)","model_col,row",model = (row.get(model_col) or '').strip()
.\tools\import_module_attributes_generic.py,284,model,"('Call', ('Attr', 'norm', 'get'), (('Const', ""'model_name'""),), ())","('Call', 1, 0)",norm,"model = norm.get(""model_name"")"
.\heatpump_pricing.py,77,model,"('Call', ('Attr', 'p', 'get'), (('Const', ""'model_name'""), ('Const', ""''"")), ())","('Call', 2, 0)",p,"model = p.get(""model_name"", """")"
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,28,model,"('Call', ('Attr', 'p', 'get'), (('Const', ""'model_name'""), ('Const', ""''"")), ())","('Call', 2, 0)",p,"model = p.get(""model_name"", """")"
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,28,model,"('Call', ('Attr', 'p', 'get'), (('Const', ""'model_name'""), ('Const', ""''"")), ())","('Call', 2, 0)",p,"model = p.get(""model_name"", """")"
.\doc_output.py,1990,modern_design_config,"('Call', ('Name', 'render_modern_pdf_ui_enhancement'), (('Name', 'texts'), ('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'load_admin_setting_func'), ('Name', 'save_admin_setting_func'), ('Name', 'list_products_func'), ('Name', 'get_product_by_id_func'), ('Name', 'get_active_company_details_func'), ('Name', 'db_list_company_documents_func')), ())","('Call', 9, 0)","analysis_results,db_list_company_documents_func,get_active_company_details_func,get_product_by_id_func,list_products_func,load_admin_setting_func,project_data,render_modern_pdf_ui_enhancement,save_admin_setting_func,texts",modern_design_config = render_modern_pdf_ui_enhancement(
.\doc_output.py,1987,modern_design_config,"('Const', 'None')","('Const',)",,modern_design_config = None
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,293,modified,"('Const', 'False')","('Const',)",,modified = False
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,327,modified,"('Const', 'False')","('Const',)",,modified = False
.\pdf_template_engine\dynamic_overlay.py,847,modified,"('Const', 'False')","('Const',)",,modified = False
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,293,modified,"('Const', 'False')","('Const',)",,modified = False
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,327,modified,"('Const', 'False')","('Const',)",,modified = False
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,308,modified,"('Const', 'True')","('Const',)",,modified = True
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,342,modified,"('Const', 'True')","('Const',)",,modified = True
.\pdf_template_engine\dynamic_overlay.py,862,modified,"('Const', 'True')","('Const',)",,modified = True
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,308,modified,"('Const', 'True')","('Const',)",,modified = True
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,342,modified,"('Const', 'True')","('Const',)",,modified = True
.\heatpump_pricing.py,229,mods,"('Call', ('Attr', 'offer', 'get'), (('Const', ""'pricing_modifiers'""), ('Dict', ())), ())","('Call', 2, 0)",offer,"mods = offer.get(""pricing_modifiers"", {})"
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,177,mods,"('Call', ('Attr', 'offer', 'get'), (('Const', ""'pricing_modifiers'""), ('Dict', ())), ())","('Call', 2, 0)",offer,"mods = offer.get(""pricing_modifiers"", {})"
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,177,mods,"('Call', ('Attr', 'offer', 'get'), (('Const', ""'pricing_modifiers'""), ('Dict', ())), ())","('Call', 2, 0)",offer,"mods = offer.get(""pricing_modifiers"", {})"
.\heatpump_pricing.py,198,mods,"('Call', ('Name', 'apply_discounts_and_surcharges'), (('Subscript', ('Name', 'base'), ('Const', ""'base_total_net'"")), ('Name', 'rabatt_pct'), ('Name', 'rabatt_abs'), ('Name', 'zuschlag_pct'), ('Name', 'zuschlag_abs')), ())","('Call', 5, 0)","apply_discounts_and_surcharges,base,rabatt_abs,rabatt_pct,zuschlag_abs,zuschlag_pct","mods = apply_discounts_and_surcharges(base[""base_total_net""], rabatt_pct, rabatt_abs, zuschlag_pct, zuschlag_abs)"
.\heatpump_ui.py,1157,mods,"('Call', ('Name', 'apply_discounts_and_surcharges'), (('Subscript', ('Name', 'base'), ('Const', ""'base_total_net'"")), ('Name', 'rabatt_pct'), ('Name', 'rabatt_abs'), ('Name', 'zuschlag_pct'), ('Name', 'zuschlag_abs')), ())","('Call', 5, 0)","apply_discounts_and_surcharges,base,rabatt_abs,rabatt_pct,zuschlag_abs,zuschlag_pct","mods = apply_discounts_and_surcharges(base['base_total_net'], rabatt_pct, rabatt_abs, zuschlag_pct, zuschlag_abs)"
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,145,mods,"('Call', ('Name', 'apply_discounts_and_surcharges'), (('Subscript', ('Name', 'base'), ('Const', ""'base_total_net'"")), ('Name', 'rabatt_pct'), ('Name', 'rabatt_abs'), ('Name', 'zuschlag_pct'), ('Name', 'zuschlag_abs')), ())","('Call', 5, 0)","apply_discounts_and_surcharges,base,rabatt_abs,rabatt_pct,zuschlag_abs,zuschlag_pct","mods = apply_discounts_and_surcharges(base[""base_total_net""], rabatt_pct, rabatt_abs, zuschlag_pct, zuschlag_abs)"
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_ui.py.insert.py,81,mods,"('Call', ('Name', 'apply_discounts_and_surcharges'), (('Subscript', ('Name', 'base'), ('Const', ""'base_total_net'"")), ('Name', 'rabatt_pct'), ('Name', 'rabatt_abs'), ('Name', 'zuschlag_pct'), ('Name', 'zuschlag_abs')), ())","('Call', 5, 0)","apply_discounts_and_surcharges,base,rabatt_abs,rabatt_pct,zuschlag_abs,zuschlag_pct","mods = apply_discounts_and_surcharges(base['base_total_net'], rabatt_pct, rabatt_abs, zuschlag_pct, zuschlag_abs)"
.\notwendig oder nicht\wichtig\portings\patches\heatpump_ui.py.insert.py,82,mods,"('Call', ('Name', 'apply_discounts_and_surcharges'), (('Subscript', ('Name', 'base'), ('Const', ""'base_total_net'"")), ('Name', 'rabatt_pct'), ('Name', 'rabatt_abs'), ('Name', 'zuschlag_pct'), ('Name', 'zuschlag_abs')), ())","('Call', 5, 0)","apply_discounts_and_surcharges,base,rabatt_abs,rabatt_pct,zuschlag_abs,zuschlag_pct","mods = apply_discounts_and_surcharges(base['base_total_net'], rabatt_pct, rabatt_abs, zuschlag_pct, zuschlag_abs)"
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,145,mods,"('Call', ('Name', 'apply_discounts_and_surcharges'), (('Subscript', ('Name', 'base'), ('Const', ""'base_total_net'"")), ('Name', 'rabatt_pct'), ('Name', 'rabatt_abs'), ('Name', 'zuschlag_pct'), ('Name', 'zuschlag_abs')), ())","('Call', 5, 0)","apply_discounts_and_surcharges,base,rabatt_abs,rabatt_pct,zuschlag_abs,zuschlag_pct","mods = apply_discounts_and_surcharges(base[""base_total_net""], rabatt_pct, rabatt_abs, zuschlag_pct, zuschlag_abs)"
.\tools\out_selected\patches\heatpump_ui.py.insert.py,81,mods,"('Call', ('Name', 'apply_discounts_and_surcharges'), (('Subscript', ('Name', 'base'), ('Const', ""'base_total_net'"")), ('Name', 'rabatt_pct'), ('Name', 'rabatt_abs'), ('Name', 'zuschlag_pct'), ('Name', 'zuschlag_abs')), ())","('Call', 5, 0)","apply_discounts_and_surcharges,base,rabatt_abs,rabatt_pct,zuschlag_abs,zuschlag_pct","mods = apply_discounts_and_surcharges(base['base_total_net'], rabatt_pct, rabatt_abs, zuschlag_pct, zuschlag_abs)"
.\tools\portings\patches\heatpump_ui.py.insert.py,82,mods,"('Call', ('Name', 'apply_discounts_and_surcharges'), (('Subscript', ('Name', 'base'), ('Const', ""'base_total_net'"")), ('Name', 'rabatt_pct'), ('Name', 'rabatt_abs'), ('Name', 'zuschlag_pct'), ('Name', 'zuschlag_abs')), ())","('Call', 5, 0)","apply_discounts_and_surcharges,base,rabatt_abs,rabatt_pct,zuschlag_abs,zuschlag_pct","mods = apply_discounts_and_surcharges(base['base_total_net'], rabatt_pct, rabatt_abs, zuschlag_pct, zuschlag_abs)"
.\pdf_template_engine\placeholders.py,580,mods_qty,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'module_quantity'""),), ())","('Call', 1, 0)",analysis_results,"mods_qty = analysis_results.get(""module_quantity"")"
.\pdf_template_engine\placeholders.py,578,mods_qty,"('Call', ('Attr', 'project_details', 'get'), (('Const', ""'module_quantity'""),), ())","('Call', 1, 0)",project_details,"mods_qty = project_details.get(""module_quantity"")"
.\pdf_template_engine\placeholders.py,1235,module_details,"('BoolOp', 'Or', (('Call', ('Name', 'fetch_details'), (('Name', 'alt_model'),), ()), ('Dict', ())))","('BoolOp', 'Or', 2)","alt_model,fetch_details",module_details = fetch_details(alt_model) or {}
.\pdf_template_engine\placeholders.py,1230,module_details,"('BoolOp', 'Or', (('Call', ('Name', 'fetch_details'), (('Name', 'module_name'),), ()), ('Dict', ())))","('BoolOp', 'Or', 2)","fetch_details,module_name",module_details = fetch_details(module_name) or {}
.\pdf_template_engine\placeholders.py,1218,module_details,"('Dict', ())","('Dict', 0)",,module_details = {}
.\pdf_template_engine\placeholders.py,1225,module_details,"('Name', 'md')","('Name',)",md,module_details = md
.\pdf_template_engine\placeholders.py,1282,module_details,"('Name', 'md')","('Name',)",md,module_details = md
.\calculations.py,2477,module_details,"('Other', 'IfExp')","('Other', 'IfExp')","real_get_product_by_id,selected_module_id",module_details = (
.\multi_offer_generator.py,922,module_id,"('BoolOp', 'Or', (('Call', ('Attr', 'existing_project_details', 'get'), (('Const', ""'selected_module_id'""),), ()), ('Call', ('Attr', 'settings', 'get'), (('Const', ""'selected_module_id'""),), ())))","('BoolOp', 'Or', 2)","existing_project_details,settings","module_id = settings.get(""selected_module_id"") or existing_project_details.get(""selected_module_id"")"
.\pdf_template_engine\placeholders.py,1217,module_id,"('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_module_id'""),), ())","('Call', 1, 0)",project_details,"module_id = project_details.get(""selected_module_id"")"
.\pdf_generator.py,157,module_id,"('Subscript', ('Name', 'module_spec'), ('Const', ""'id'""))","('Subscript',)",module_spec,"module_id = module_spec[""id""]"
.\pdf_generator.py,1223,module_id,"('Subscript', ('Name', 'module_spec'), ('Const', ""'id'""))","('Subscript',)",module_spec,"module_id = module_spec[""id""]"
.\pdf_template_engine\placeholders.py,1216,module_name,"('Call', ('Attr', ""as_str(project_details.get('selected_module_name') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,project_details","module_name = as_str(project_details.get(""selected_module_name"") or """").strip()"
.\info_platform.py,32,module_name,"('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'module_name'""), ('Call', ('Attr', 'texts', 'get'), (('Const', ""'menu_item_info_platform'""), ('Const', ""'Info-Plattform'"")), ())), ())","('Call', 2, 0)","kwargs,texts","module_name = kwargs.get('module_name', texts.get(""menu_item_info_platform"", ""Info-Plattform""))"
.\options.py,68,module_name,"('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'module_name'""), ('Call', ('Attr', 'texts', 'get'), (('Const', ""'menu_item_options'""), ('Const', ""'Optionen'"")), ())), ())","('Call', 2, 0)","kwargs,texts","module_name = kwargs.get('module_name', texts.get(""menu_item_options"", ""Optionen""))"
.\quick_calc.py,33,module_name,"('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'module_name'""), ('Call', ('Attr', 'texts', 'get'), (('Const', ""'menu_item_quick_calc'""), ('Const', ""'Schnellberechnung'"")), ())), ())","('Call', 2, 0)","kwargs,texts","module_name = kwargs.get('module_name', texts.get(""menu_item_quick_calc"", ""Schnellberechnung""))"
.\pdf_template_engine\placeholders.py,1226,module_name,"('Call', ('Name', 'as_str'), (('BoolOp', 'Or', (('Call', ('Attr', 'md', 'get'), (('Const', ""'model_name'""),), ()), ('Name', 'module_name'))),), ())","('Call', 1, 0)","as_str,md,module_name","module_name = as_str(md.get(""model_name"") or module_name)"
.\pdf_template_engine\placeholders.py,1283,module_name,"('Call', ('Name', 'as_str'), (('BoolOp', 'Or', (('Call', ('Attr', 'md', 'get'), (('Const', ""'model_name'""),), ()), ('Name', 'module_name'))),), ())","('Call', 1, 0)","as_str,md,module_name","module_name = as_str(md.get(""model_name"") or module_name)"
.\crm.py,566,module_options,"('Add', (('List', (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'please_select_option'""), ('Const', ""'--- Bitte wählen ---'"")), ()),)), ('Other', 'ListComp')))","('Add', (('List', 1), ('Other', 'ListComp')))","get_text_crm,module_products,p,texts","module_options = [get_text_crm(texts, ""please_select_option"", ""--- Bitte wählen ---"")] + [p['model_name'] for p in module_products if p.get('model_name')]"
.\solar_calculator.py,102,module_options,"('Add', (('List', (('Name', 'please_select_text'),)), ('Name', 'MODULES')))","('Add', (('List', 1), ('Name',)))","MODULES,please_select_text",module_options = [please_select_text] + MODULES
.\multi_offer_generator.py,420,module_options,"('Other', 'DictComp')","('Other', 'DictComp')","p,products","module_options = {p[""model_name""]: p[""id""] for p in products[""module""]}"
.\multi_offer_generator_new.py,219,module_options,"('Other', 'DictComp')","('Other', 'DictComp')","p,products","module_options = {p[""model_name""]: p[""id""] for p in products[""module""]}"
.\multi_offer_generator_old.py,160,module_options,"('Other', 'DictComp')","('Other', 'DictComp')","p,products","module_options = {p[""model_name""]: p[""id""] for p in products[""module""]}"
.\multi_offer_generator_old.py,513,module_options,"('Other', 'DictComp')","('Other', 'DictComp')","p,products","module_options = {p[""model_name""]: p[""id""] for p in products[""module""]}"
.\crm.py,565,module_products,"('Call', ('Attr', 'st.session_state.product_db_module', 'list_products'), (), (('category', ('Const', ""'Modul'"")),))","('Call', 0, 1)",st,module_products = st.session_state.product_db_module.list_products(category='Modul')
.\crm.py,563,module_products,"('List', ())","('List', 0)",,module_products = []
.\crm.py,561,module_quantity,"('Call', ('Attr', 'col_modules', 'number_input'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'module_quantity_label'""), ('Const', ""'Anzahl PV Module'"")), ()),), (('min_value', ('Const', '0')), ('value', ('Call', ('Name', 'int'), (('Call', ('Attr', 'project_data_form', 'get'), (('Const', ""'module_quantity'""), ('Const', '0')), ()),), ()))))","('Call', 1, 2)","col_modules,get_text_crm,int,project_data_form,texts","module_quantity = col_modules.number_input(get_text_crm(texts, ""module_quantity_label"", ""Anzahl PV Module""), min_value=0, value=int(project_data_form.get('module_quantity', 0)))"
.\live_preview_helpers.py,143,module_quantity,"('Call', ('Attr', 'results_for_display', 'get'), (('Const', ""'module_quantity'""), ('Const', '0')), ())","('Call', 2, 0)",results_for_display,"module_quantity = results_for_display.get('module_quantity', 0)"
.\calculations.py,2356,module_quantity,"('Call', ('Name', 'int'), (('BoolOp', 'Or', (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'module_quantity'""), ('Const', '0')), ()), ('Const', '0'))),), ())","('Call', 1, 0)","int,project_details","module_quantity = int(project_details.get(""module_quantity"", 0) or 0)"
.\analysis.py,2205,month_labels,"('Call', ('Attr', ""get_text(texts, 'month_names_short_list', 'Jan,Feb,Mrz,Apr,Mai,Jun,Jul,Aug,Sep,Okt,Nov,Dez')"", 'split'), (('Const', ""','""),), ())","('Call', 1, 0)","get_text,texts",month_labels = get_text(
.\analysis.py,2382,month_labels,"('Call', ('Attr', ""get_text(texts, 'month_names_short_list', 'Jan,Feb,Mrz,Apr,Mai,Jun,Jul,Aug,Sep,Okt,Nov,Dez')"", 'split'), (('Const', ""','""),), ())","('Call', 1, 0)","get_text,texts",month_labels = get_text(
.\analysis.py,2499,month_labels,"('Call', ('Attr', ""get_text(texts, 'month_names_short_list', 'Jan,Feb,Mrz,Apr,Mai,Jun,Jul,Aug,Sep,Okt,Nov,Dez')"", 'split'), (('Const', ""','""),), ())","('Call', 1, 0)","get_text,texts",month_labels = get_text(
.\analysis.py,4075,month_labels,"('Call', ('Attr', ""get_text(texts, 'month_names_short_list', 'Jan,Feb,Mrz,Apr,Mai,Jun,Jul,Aug,Sep,Okt,Nov,Dez')"", 'split'), (('Const', ""','""),), ())","('Call', 1, 0)","get_text,texts",month_labels = get_text(
.\analysis.py,4336,month_labels,"('Call', ('Attr', ""get_text(texts, 'month_names_short_list', 'Jan,Feb,Mrz,Apr,Mai,Jun,Jul,Aug,Sep,Okt,Nov,Dez')"", 'split'), (('Const', ""','""),), ())","('Call', 1, 0)","get_text,texts",month_labels = get_text(
.\pv_visuals.py,77,month_labels,"('Call', ('Attr', 'month_labels_str', 'split'), (('Const', ""','""),), ())","('Call', 1, 0)",month_labels_str,"month_labels = month_labels_str.split(',')"
.\analysis.py,2211,month_labels,"('List', (('Const', ""'Jan'""), ('Const', ""'Feb'""), ('Const', ""'Mrz'""), ('Const', ""'Apr'""), ('Const', ""'Mai'""), ('Const', ""'Jun'""), ('Const', ""'Jul'""), ('Const', ""'Aug'""), ('Const', ""'Sep'""), ('Const', ""'Okt'""), ('Const', ""'Nov'""), ('Const', ""'Dez'"")))","('List', 12)",,month_labels = [
.\analysis.py,2388,month_labels,"('List', (('Const', ""'Jan'""), ('Const', ""'Feb'""), ('Const', ""'Mrz'""), ('Const', ""'Apr'""), ('Const', ""'Mai'""), ('Const', ""'Jun'""), ('Const', ""'Jul'""), ('Const', ""'Aug'""), ('Const', ""'Sep'""), ('Const', ""'Okt'""), ('Const', ""'Nov'""), ('Const', ""'Dez'"")))","('List', 12)",,month_labels = [
.\analysis.py,2505,month_labels,"('List', (('Const', ""'Jan'""), ('Const', ""'Feb'""), ('Const', ""'Mrz'""), ('Const', ""'Apr'""), ('Const', ""'Mai'""), ('Const', ""'Jun'""), ('Const', ""'Jul'""), ('Const', ""'Aug'""), ('Const', ""'Sep'""), ('Const', ""'Okt'""), ('Const', ""'Nov'""), ('Const', ""'Dez'"")))","('List', 12)",,month_labels = [
.\analysis.py,4081,month_labels,"('List', (('Const', ""'Jan'""), ('Const', ""'Feb'""), ('Const', ""'Mrz'""), ('Const', ""'Apr'""), ('Const', ""'Mai'""), ('Const', ""'Jun'""), ('Const', ""'Jul'""), ('Const', ""'Aug'""), ('Const', ""'Sep'""), ('Const', ""'Okt'""), ('Const', ""'Nov'""), ('Const', ""'Dez'"")))","('List', 12)",,month_labels = [
.\analysis.py,4342,month_labels,"('List', (('Const', ""'Jan'""), ('Const', ""'Feb'""), ('Const', ""'Mrz'""), ('Const', ""'Apr'""), ('Const', ""'Mai'""), ('Const', ""'Jun'""), ('Const', ""'Jul'""), ('Const', ""'Aug'""), ('Const', ""'Sep'""), ('Const', ""'Okt'""), ('Const', ""'Nov'""), ('Const', ""'Dez'"")))","('List', 12)",,month_labels = [
.\pv_visuals.py,79,month_labels,"('List', (('Const', ""'Jan'""), ('Const', ""'Feb'""), ('Const', ""'Mrz'""), ('Const', ""'Apr'""), ('Const', ""'Mai'""), ('Const', ""'Jun'""), ('Const', ""'Jul'""), ('Const', ""'Aug'""), ('Const', ""'Sep'""), ('Const', ""'Okt'""), ('Const', ""'Nov'""), ('Const', ""'Dez'"")))","('List', 12)",,"month_labels = [""Jan"", ""Feb"", ""Mrz"", ""Apr"", ""Mai"", ""Jun"", ""Jul"", ""Aug"", ""Sep"", ""Okt"", ""Nov"", ""Dez""]"
.\analysis.py,4541,month_labels_chart,"('Call', ('Attr', ""get_text(texts_local, 'month_names_short_list_chart', 'Jan,Feb,Mrz,Apr,Mai,Jun,Jul,Aug,Sep,Okt,Nov,Dez')"", 'split'), (('Const', ""','""),), ())","('Call', 1, 0)","get_text,texts_local",month_labels_chart = get_text(
.\analysis.py,4547,month_labels_chart,"('List', (('Const', ""'Jan'""), ('Const', ""'Feb'""), ('Const', ""'Mrz'""), ('Const', ""'Apr'""), ('Const', ""'Mai'""), ('Const', ""'Jun'""), ('Const', ""'Jul'""), ('Const', ""'Aug'""), ('Const', ""'Sep'""), ('Const', ""'Okt'""), ('Const', ""'Nov'""), ('Const', ""'Dez'"")))","('List', 12)",,month_labels_chart = [
.\calculations.py,716,monthly_consumption,"('Call', ('Attr', 'base_data', 'get'), (('Const', ""'monthly_consumption'""), ('Mult', (('Const', '12'), ('List', (('Const', '400'),))))), ())","('Call', 2, 0)",base_data,"monthly_consumption = base_data.get(""monthly_consumption"", [400] * 12)"
.\analysis.py,8938,monthly_consumption,"('Mult', (('Const', '12'), ('List', (('Div', ('Name', 'annual_consumption'), ('Const', '12')),))))","('Mult', (('Const',), ('List', 1)))",annual_consumption,monthly_consumption = [annual_consumption / 12] * 12
.\pdf_template_engine\placeholders.py,729,monthly_direct_sc,"('BoolOp', 'Or', (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'monthly_direct_self_consumption_kwh'""), ('List', ())), ()), ('List', ())))","('BoolOp', 'Or', 2)",analysis_results,"monthly_direct_sc = analysis_results.get(""monthly_direct_self_consumption_kwh"", []) or []"
.\pdf_template_engine\placeholders.py,1127,monthly_direct_sc,"('BoolOp', 'Or', (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'monthly_direct_self_consumption_kwh'""),), ()), ('List', ())))","('BoolOp', 'Or', 2)",analysis_results,"monthly_direct_sc        = analysis_results.get(""monthly_direct_self_consumption_kwh"") or []"
.\calculations.py,2660,monthly_distribution_factors,"('Call', ('Attr', 'global_constants', 'get'), (('Const', ""'monthly_production_distribution'""), ('Mult', (('Const', '12'), ('List', (('Div', ('Const', '1'), ('Const', '12')),))))), ())","('Call', 2, 0)",global_constants,monthly_distribution_factors = global_constants.get(
.\calculations.py,2670,monthly_distribution_factors,"('Mult', (('Const', '12'), ('List', (('Div', ('Const', '1'), ('Const', '12')),))))","('Mult', (('Const',), ('List', 1)))",,monthly_distribution_factors = [1 / 12] * 12  # Robuster Fallback
.\calculations.py,2719,monthly_distribution_factors_consumption,"('Call', ('Attr', 'global_constants', 'get'), (('Const', ""'monthly_consumption_distribution'""), ('Mult', (('Const', '12'), ('List', (('Div', ('Const', '1'), ('Const', '12')),))))), ())","('Call', 2, 0)",global_constants,monthly_distribution_factors_consumption = global_constants.get(
.\calculations.py,2730,monthly_distribution_factors_consumption,"('Mult', (('Const', '12'), ('List', (('Div', ('Const', '1'), ('Const', '12')),))))","('Mult', (('Const',), ('List', 1)))",,monthly_distribution_factors_consumption = [1 / 12] * 12  # Fallback
.\calculations.py,2777,monthly_feed_in_kwh,"('Mult', (('Const', '12'), ('List', (('Const', '0.0'),))))","('Mult', (('Const',), ('List', 1)))",,monthly_feed_in_kwh = [0.0] * 12
.\analysis.py,2437,monthly_feed_in_kwh,"('Other', 'ListComp')","('Other', 'ListComp')","factor,monthly_factors,yearly_feed_in",monthly_feed_in_kwh = [yearly_feed_in * factor for factor in monthly_factors]
.\analysis.py,2439,monthly_feed_in_kwh,"('Other', 'ListComp')","('Other', 'ListComp')","float,int,isinstance,math,monthly_feed_in_kwh_raw,v",monthly_feed_in_kwh = [
.\calculations.py,2867,monthly_feed_in_kwh,"('Subscript', ('Name', 'monthly_pv_production_kwh'), ('Other', 'Slice'))","('Subscript',)",monthly_pv_production_kwh,monthly_feed_in_kwh = monthly_pv_production_kwh[:]  # alles geht ins Netz
.\calculations.py,2778,monthly_grid_bezug_kwh,"('Mult', (('Const', '12'), ('List', (('Const', '0.0'),))))","('Mult', (('Const',), ('List', 1)))",,monthly_grid_bezug_kwh = [0.0] * 12
.\calculations.py,2868,monthly_grid_bezug_kwh,"('Subscript', ('Name', 'monthly_total_consumption_kwh'), ('Other', 'Slice'))","('Subscript',)",monthly_total_consumption_kwh,monthly_grid_bezug_kwh = monthly_total_consumption_kwh[:]  # gesamter Verbrauch aus dem Netz
.\financial_tools.py,37,monthly_payment,"('Div', ('Mult', (('Name', 'monthly_rate'), ('Name', 'principal'), ('Pow', ('Add', (('Const', '1'), ('Name', 'monthly_rate'))), ('Name', 'num_payments')))), ('Sub', ('Pow', ('Add', (('Const', '1'), ('Name', 'monthly_rate'))), ('Name', 'num_payments')), ('Const', '1')))","('Div', ('Mult', (('Name',), ('Name',), ('Pow', ('Add', (('Const',), ('Name',))), ('Name',)))), ('Sub', ('Pow', ('Add', (('Const',), ('Name',))), ('Name',)), ('Const',)))","monthly_rate,num_payments,principal",monthly_payment = principal * (monthly_rate * (1 + monthly_rate)**num_payments) / ((1 + monthly_rate)**num_payments - 1)
.\financial_tools.py,33,monthly_payment,"('Div', ('Name', 'principal'), ('Name', 'num_payments'))","('Div', ('Name',), ('Name',))","num_payments,principal",monthly_payment = principal / num_payments
.\calculations.py,715,monthly_production,"('Call', ('Attr', 'base_data', 'get'), (('Const', ""'monthly_production'""), ('Mult', (('Const', '12'), ('List', (('Const', '500'),))))), ())","('Call', 2, 0)",base_data,"monthly_production = base_data.get(""monthly_production"", [500] * 12)"
.\analysis.py,8937,monthly_production,"('Other', 'ListComp')","('Other', 'ListComp')","annual_production,factor,seasonal_factors",monthly_production = [annual_production * factor / 12 for factor in seasonal_factors]
.\calculations.py,2694,monthly_pv_production_kwh_base,"('Mult', (('Const', '12'), ('List', (('Const', '0.0'),))))","('Mult', (('Const',), ('List', 1)))",,monthly_pv_production_kwh_base = [0.0] * 12
.\calculations.py,2608,monthly_pv_production_kwh_base,"('Name', 'monthly_prod_pvgis')","('Name',)",monthly_prod_pvgis,monthly_pv_production_kwh_base = monthly_prod_pvgis
.\calculations.py,2685,monthly_pv_production_kwh_base,"('Other', 'ListComp')","('Other', 'ListComp')","annual_pv_production_kwh_base,factor,normalized_monthly_distribution",monthly_pv_production_kwh_base = [
.\pdf_template_engine\placeholders.py,2524,monthly_rate,"('Call', ('Attr', 'financing', 'get'), (('Const', ""'monthly_payment_eur'""), ('Const', '0')), ())","('Call', 2, 0)",financing,"monthly_rate = financing.get('monthly_payment_eur', 0)"
.\financial_tools.py,29,monthly_rate,"('Div', ('Div', ('Name', 'annual_interest_rate'), ('Const', '100')), ('Const', '12'))","('Div', ('Div', ('Name',), ('Const',)), ('Const',))",annual_interest_rate,monthly_rate = annual_interest_rate / 100 / 12
.\pdf_template_engine\placeholders.py,730,monthly_storage_charge,"('BoolOp', 'Or', (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'monthly_storage_charge_kwh'""), ('List', ())), ()), ('List', ())))","('BoolOp', 'Or', 2)",analysis_results,"monthly_storage_charge = analysis_results.get(""monthly_storage_charge_kwh"", []) or []"
.\pdf_template_engine\placeholders.py,1128,monthly_storage_charge,"('BoolOp', 'Or', (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'monthly_storage_charge_kwh'""),), ()), ('List', ())))","('BoolOp', 'Or', 2)",analysis_results,"monthly_storage_charge   = analysis_results.get(""monthly_storage_charge_kwh"") or []"
.\pdf_styles.py,382,months,"('Call', ('Attr', 'data', 'get'), (('Const', ""'months'""), ('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '1'), ('Const', '13')), ()),), ())), ())","('Call', 2, 0)","data,list,range","months = data.get('months', list(range(1, 13)))"
.\analysis.py,8141,months,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '1'), ('Add', (('Const', '1'), ('Name', 'leasing_term')))), ()),), ())","('Call', 1, 0)","leasing_term,list,range","months = list(range(1, leasing_term + 1))"
.\analysis.py,5856,months,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '1'), ('Const', '13')), ()),), ())","('Call', 1, 0)","list,range","months = list(range(1, 13))"
.\analysis.py,5770,months,"('List', (('Const', ""'Jan'""), ('Const', ""'Feb'""), ('Const', ""'Mär'""), ('Const', ""'Apr'""), ('Const', ""'Mai'""), ('Const', ""'Jun'""), ('Const', ""'Jul'""), ('Const', ""'Aug'""), ('Const', ""'Sep'""), ('Const', ""'Okt'""), ('Const', ""'Nov'""), ('Const', ""'Dez'"")))","('List', 12)",,months = [
.\analysis.py,8932,months,"('List', (('Const', ""'Jan'""), ('Const', ""'Feb'""), ('Const', ""'Mär'""), ('Const', ""'Apr'""), ('Const', ""'Mai'""), ('Const', ""'Jun'""), ('Const', ""'Jul'""), ('Const', ""'Aug'""), ('Const', ""'Sep'""), ('Const', ""'Okt'""), ('Const', ""'Nov'""), ('Const', ""'Dez'"")))","('List', 12)",,"months = ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun',"
.\calculations.py,666,months,"('List', (('Const', ""'Jan'""), ('Const', ""'Feb'""), ('Const', ""'Mär'""), ('Const', ""'Apr'""), ('Const', ""'Mai'""), ('Const', ""'Jun'""), ('Const', ""'Jul'""), ('Const', ""'Aug'""), ('Const', ""'Sep'""), ('Const', ""'Okt'""), ('Const', ""'Nov'""), ('Const', ""'Dez'"")))","('List', 12)",,months = [
.\crm_dashboard_ui.py,295,months,"('List', (('Const', ""'Jan'""), ('Const', ""'Feb'""), ('Const', ""'Mär'""), ('Const', ""'Apr'""), ('Const', ""'Mai'""), ('Const', ""'Jun'""), ('Const', ""'Jul'""), ('Const', ""'Aug'""), ('Const', ""'Sep'""), ('Const', ""'Okt'""), ('Const', ""'Nov'""), ('Const', ""'Dez'"")))","('List', 12)",,"months = ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez']"
.\analysis_utils.py,134,months,"('Mult', (('Const', '12'), ('Name', 'value')))","('Mult', (('Const',), ('Name',)))",value,months = value * 12
.\gui.py,741,multi_offer_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'multi_offer_generator'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","multi_offer_module = import_module_with_fallback(""multi_offer_generator"", import_errors)"
.\gui.py,95,multi_offer_module,"('Const', 'None')","('Const',)",,multi_offer_module: Optional[Any] = None
.\analysis.py,367,mwst_ersparnis,"('Const', '0.0')","('Const',)",,mwst_ersparnis = 0.0
.\analysis.py,365,mwst_ersparnis,"('Mult', (('Const', '0.19'), ('Name', 'netto_betrag')))","('Mult', (('Const',), ('Name',)))",netto_betrag,mwst_ersparnis = netto_betrag * 0.19
.\analysis.py,362,mwst_ersparnis,"('Sub', ('Name', 'brutto_betrag'), ('Name', 'netto_betrag'))","('Sub', ('Name',), ('Name',))","brutto_betrag,netto_betrag",mwst_ersparnis = brutto_betrag - netto_betrag
.\notwendig oder nicht\excel_range_reader.py,15,n,"('Add', (('Mult', (('Const', '26'), ('Name', 'n'))), ('Sub', ('Call', ('Name', 'ord'), (('Name', 'ch'),), ()), ('Const', '64'))))","('Add', (('Mult', (('Const',), ('Name',))), ('Sub', ('Call', 1, 0), ('Const',))))","ch,n,ord",n = n * 26 + (ord(ch) - 64)
.\analysis_utils.py,392,n,"('Call', ('Name', 'len'), (('Name', 'data'),), ())","('Call', 1, 0)","data,len",n = len(data)
.\notwendig oder nicht\excel_range_reader.py,13,n,"('Const', '0')","('Const',)",,n = 0
.\pdf_widgets.py,276,n,"('Const', '1')","('Const',)",,n = 1
.\heatpump_pricing.py,163,n,"('Mult', (('Const', '12'), ('Name', 'years')))","('Mult', (('Const',), ('Name',)))",years,n = years * 12
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,109,n,"('Mult', (('Const', '12'), ('Name', 'years')))","('Mult', (('Const',), ('Name',)))",years,n = years * 12
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,109,n,"('Mult', (('Const', '12'), ('Name', 'years')))","('Mult', (('Const',), ('Name',)))",years,n = years * 12
.\calculations.py,2072,na_text,"('Call', ('Attr', 'current_texts', 'get'), (('Name', 'na_text_key'), ('Const', ""'N/A'"")), ())","('Call', 2, 0)","current_texts,na_text_key","na_text = current_texts.get(na_text_key, ""N/A"")"
.\analysis.py,222,na_text,"('Call', ('Name', 'get_text'), (('Name', 'current_texts'), ('Name', 'na_text_key'), ('Const', ""'k.A.'"")), ())","('Call', 3, 0)","current_texts,get_text,na_text_key","na_text = get_text(current_texts, na_text_key, ""k.A."")"
.\pdf_generator.py,744,na_text,"('Call', ('Name', 'get_text'), (('Name', 'current_texts'), ('Name', 'na_text_key'), ('Const', ""'k.A.'"")), ())","('Call', 3, 0)","current_texts,get_text,na_text_key","na_text = get_text(current_texts, na_text_key, ""k.A."")"
.\tools\import_module_attributes_generic.py,199,name,"('BoolOp', 'Or', (('Call', ('Attr', 'p', 'get'), (('Const', ""'model_name'""),), ()), ('Const', ""''"")))","('BoolOp', 'Or', 2)",p,"name = p.get(""model_name"") or """""
.\analysis_utils.py,261,name,"('Subscript', ('Name', 'scenario_names'), ('Name', 'i'))","('Subscript',)","i,scenario_names",name = scenario_names[i]
.\pdf_template_engine\placeholders.py,1976,name_l,"('Call', ('Attr', ""storage_name or ''"", 'lower'), (), ())","('Call', 0, 0)",storage_name,"name_l = (storage_name or """").lower()"
.\pdf_template_engine\placeholders.py,1650,name_l,"('Call', ('Attr', 'inverter_name', 'lower'), (), ())","('Call', 0, 0)",inverter_name,name_l = inverter_name.lower()
.\dev_tools\kakerlake_ultra_cleaner.py,112,names,"('Call', ('Name', 'set'), (), ())","('Call', 0, 0)",set,names=set()
.\mnt\data\kakerlake_ultra_cleaner.py,112,names,"('Call', ('Name', 'set'), (), ())","('Call', 0, 0)",set,names=set()
.\tools\kakerlake_ultra_cleaner.py,113,names,"('Call', ('Name', 'set'), (), ())","('Call', 0, 0)",set,names=set()
.\notwendig oder nicht\wichtig\repo_porter.py,117,names,"('List', ())","('List', 0)",,names = []
.\tools\repo_porter.py,117,names,"('List', ())","('List', 0)",,names = []
.\solar_calculator.py,53,names,"('Other', 'ListComp')","('Other', 'ListComp')","p,products","names = [p.get('model_name', f""ID:{p.get('id', 'N/A')}"") for p in products]"
.\dev_tools\kakerlake_ultra_cleaner.py,481,new,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,rhs","new=cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\dev_tools\kakerlake_ultra_cleaner.py,485,new,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,rhs","new=cst.parse_expression(f""build_project_data({rhs.left.code}, {rhs.right.code})""); self.changed=True"
.\dev_tools\kakerlake_ultra_cleaner.py,490,new,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,rhs","new=cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,363,new,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,rhs","new = cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,367,new,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,rhs","new = cst.parse_expression(f""build_project_data({rhs.left.code}, {rhs.right.code})""); self.changed=True"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,372,new,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,rhs","new = cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,379,new,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","code_for,cst,rhs","new = cst.parse_expression(f""build_project_data({code_for(rhs)})""); self.changed=True"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,383,new,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","code_for,cst,rhs","new = cst.parse_expression(f""build_project_data({code_for(rhs.left)}, {code_for(rhs.right)})""); self.changed=True"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,387,new,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","code_for,cst,rhs","new = cst.parse_expression(f""build_project_data({code_for(rhs)})""); self.changed=True"
.\mnt\data\kakerlake_ultra_cleaner.py,481,new,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,rhs","new=cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\mnt\data\kakerlake_ultra_cleaner.py,485,new,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,rhs","new=cst.parse_expression(f""build_project_data({rhs.left.code}, {rhs.right.code})""); self.changed=True"
.\mnt\data\kakerlake_ultra_cleaner.py,490,new,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,rhs","new=cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,363,new,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,rhs","new = cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,367,new,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,rhs","new = cst.parse_expression(f""build_project_data({rhs.left.code}, {rhs.right.code})""); self.changed=True"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,372,new,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,rhs","new = cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\tools\kakerlake_ultra_cleaner.py,482,new,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,rhs","new=cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\tools\kakerlake_ultra_cleaner.py,486,new,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,rhs","new=cst.parse_expression(f""build_project_data({rhs.left.code}, {rhs.right.code})""); self.changed=True"
.\tools\kakerlake_ultra_cleaner.py,491,new,"('Call', ('Attr', 'cst', 'parse_expression'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","cst,rhs","new=cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\dev_tools\kakerlake_ultra_cleaner.py,455,new,"('Call', ('Name', 'insert_def_if_missing_calculations'), (('Name', 'code'), ('Const', ""'build_project_data'""), ('Name', 'BUILD_PD_DEF_CODE')), ())","('Call', 3, 0)","BUILD_PD_DEF_CODE,code,insert_def_if_missing_calculations","new=insert_def_if_missing_calculations(code, ""build_project_data"", BUILD_PD_DEF_CODE)"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,333,new,"('Call', ('Name', 'insert_def_if_missing_calculations'), (('Name', 'code'), ('Const', ""'build_project_data'""), ('Name', 'BUILD_PD_DEF_CODE')), ())","('Call', 3, 0)","BUILD_PD_DEF_CODE,code,insert_def_if_missing_calculations","new = insert_def_if_missing_calculations(code, ""build_project_data"", BUILD_PD_DEF_CODE)"
.\mnt\data\kakerlake_ultra_cleaner.py,455,new,"('Call', ('Name', 'insert_def_if_missing_calculations'), (('Name', 'code'), ('Const', ""'build_project_data'""), ('Name', 'BUILD_PD_DEF_CODE')), ())","('Call', 3, 0)","BUILD_PD_DEF_CODE,code,insert_def_if_missing_calculations","new=insert_def_if_missing_calculations(code, ""build_project_data"", BUILD_PD_DEF_CODE)"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,333,new,"('Call', ('Name', 'insert_def_if_missing_calculations'), (('Name', 'code'), ('Const', ""'build_project_data'""), ('Name', 'BUILD_PD_DEF_CODE')), ())","('Call', 3, 0)","BUILD_PD_DEF_CODE,code,insert_def_if_missing_calculations","new = insert_def_if_missing_calculations(code, ""build_project_data"", BUILD_PD_DEF_CODE)"
.\tools\kakerlake_ultra_cleaner.py,456,new,"('Call', ('Name', 'insert_def_if_missing_calculations'), (('Name', 'code'), ('Const', ""'build_project_data'""), ('Name', 'BUILD_PD_DEF_CODE')), ())","('Call', 3, 0)","BUILD_PD_DEF_CODE,code,insert_def_if_missing_calculations","new=insert_def_if_missing_calculations(code, ""build_project_data"", BUILD_PD_DEF_CODE)"
.\dev_tools\kakerlake_ultra_cleaner.py,329,new,"('Call', ('Name', 'insert_def_if_missing_calculations'), (('Name', 'code'), ('Const', ""'compute_annual_savings'""), ('Name', 'COMPUTE_DEF_CODE')), ())","('Call', 3, 0)","COMPUTE_DEF_CODE,code,insert_def_if_missing_calculations","new=insert_def_if_missing_calculations(code, ""compute_annual_savings"", COMPUTE_DEF_CODE)"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,190,new,"('Call', ('Name', 'insert_def_if_missing_calculations'), (('Name', 'code'), ('Const', ""'compute_annual_savings'""), ('Name', 'COMPUTE_DEF_CODE')), ())","('Call', 3, 0)","COMPUTE_DEF_CODE,code,insert_def_if_missing_calculations","new = insert_def_if_missing_calculations(code, ""compute_annual_savings"", COMPUTE_DEF_CODE)"
.\mnt\data\kakerlake_ultra_cleaner.py,329,new,"('Call', ('Name', 'insert_def_if_missing_calculations'), (('Name', 'code'), ('Const', ""'compute_annual_savings'""), ('Name', 'COMPUTE_DEF_CODE')), ())","('Call', 3, 0)","COMPUTE_DEF_CODE,code,insert_def_if_missing_calculations","new=insert_def_if_missing_calculations(code, ""compute_annual_savings"", COMPUTE_DEF_CODE)"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,190,new,"('Call', ('Name', 'insert_def_if_missing_calculations'), (('Name', 'code'), ('Const', ""'compute_annual_savings'""), ('Name', 'COMPUTE_DEF_CODE')), ())","('Call', 3, 0)","COMPUTE_DEF_CODE,code,insert_def_if_missing_calculations","new = insert_def_if_missing_calculations(code, ""compute_annual_savings"", COMPUTE_DEF_CODE)"
.\tools\kakerlake_ultra_cleaner.py,330,new,"('Call', ('Name', 'insert_def_if_missing_calculations'), (('Name', 'code'), ('Const', ""'compute_annual_savings'""), ('Name', 'COMPUTE_DEF_CODE')), ())","('Call', 3, 0)","COMPUTE_DEF_CODE,code,insert_def_if_missing_calculations","new=insert_def_if_missing_calculations(code, ""compute_annual_savings"", COMPUTE_DEF_CODE)"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,312,new_content,"('Call', ('Attr', 'io', 'BytesIO'), (('Call', ('Attr', 'content_str', 'encode'), (('Const', ""'latin-1'""),), (('errors', ('Const', ""'ignore'"")),)),), ())","('Call', 1, 0)","content_str,io","new_content = io.BytesIO(content_str.encode('latin-1', errors='ignore'))"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,346,new_content,"('Call', ('Attr', 'io', 'BytesIO'), (('Call', ('Attr', 'content_str', 'encode'), (('Const', ""'latin-1'""),), (('errors', ('Const', ""'ignore'"")),)),), ())","('Call', 1, 0)","content_str,io","new_content = io.BytesIO(content_str.encode('latin-1', errors='ignore'))"
.\pdf_template_engine\dynamic_overlay.py,866,new_content,"('Call', ('Attr', 'io', 'BytesIO'), (('Call', ('Attr', 'content_str', 'encode'), (('Const', ""'latin-1'""),), (('errors', ('Const', ""'ignore'"")),)),), ())","('Call', 1, 0)","content_str,io","new_content = io.BytesIO(content_str.encode('latin-1', errors='ignore'))"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,312,new_content,"('Call', ('Attr', 'io', 'BytesIO'), (('Call', ('Attr', 'content_str', 'encode'), (('Const', ""'latin-1'""),), (('errors', ('Const', ""'ignore'"")),)),), ())","('Call', 1, 0)","content_str,io","new_content = io.BytesIO(content_str.encode('latin-1', errors='ignore'))"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,346,new_content,"('Call', ('Attr', 'io', 'BytesIO'), (('Call', ('Attr', 'content_str', 'encode'), (('Const', ""'latin-1'""),), (('errors', ('Const', ""'ignore'"")),)),), ())","('Call', 1, 0)","content_str,io","new_content = io.BytesIO(content_str.encode('latin-1', errors='ignore'))"
.\admin_panel.py,1944,new_content,"('Call', ('Attr', 'st', 'text_area'), (('Const', ""'Inhalt'""),), (('height', ('Const', '100')), ('key', ('Other', 'JoinedStr')), ('value', ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'template'), ('Const', ""'content'"")))))))","('Call', 1, 3)","st,template",new_content = st.text_area(
.\doc_output.py,688,new_content,"('Call', ('Attr', 'st', 'text_area'), (('Const', ""'Inhalt:'""),), (('height', ('Const', '100')), ('key', ('Other', 'JoinedStr')), ('value', ('Subscript', ('Name', 'item'), ('Const', ""'content'"")))))","('Call', 1, 3)","item,st",new_content = st.text_area(
.\pdf_widgets.py,210,new_content,"('Dict', (('KV', ('Const', ""'data'""), ('Call', ('Attr', 'self.content_templates.get(new_content_type, {})', 'get'), (('Const', ""'default_content'""),), ())), ('KV', ('Const', ""'id'""), ('Call', ('Name', 'str'), (('Call', ('Attr', 'uuid', 'uuid4'), (), ()),), ())), ('KV', ('Const', ""'type'""), ('Name', 'new_content_type'))))","('Dict', 3)","new_content_type,self,str,uuid",new_content = {
.\database.py,1296,new_id,"('Attr', 'cursor', 'lastrowid')","('Attr',)",cursor,new_id = cursor.lastrowid
.\tools\import_module_attributes_generic.py,221,new_id,"('Call', ('Name', 'add_product'), (('Dict', (('KV', ('Const', ""'brand'""), ('BoolOp', 'Or', (('Const', ""''""), ('Name', 'brand')))), ('KV', ('Const', ""'category'""), ('Name', 'category')), ('KV', ('Const', ""'model_name'""), ('Name', 'model_name')))),), ())","('Call', 1, 0)","add_product,brand,category,model_name","new_id = add_product({""category"": category, ""model_name"": model_name, ""brand"": brand or """"})"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_upload.py.insert.py,32,new_id,"('Call', ('Name', 'add_product'), (('Name', 'test_product'),), ())","('Call', 1, 0)","add_product,test_product",new_id = add_product(test_product)
.\tests\test_admin_upload.py,32,new_id,"('Call', ('Name', 'add_product'), (('Name', 'test_product'),), ())","('Call', 1, 0)","add_product,test_product",new_id = add_product(test_product)
.\tools\portings\patches\test_admin_upload.py.insert.py,32,new_id,"('Call', ('Name', 'add_product'), (('Name', 'test_product'),), ())","('Call', 1, 0)","add_product,test_product",new_id = add_product(test_product)
.\notwendig oder nicht\wichtig\portings\patches\test_admin_upload.py.insert.py,53,new_image_b64,"('Call', ('Attr', 'base64.b64encode(larger_png_data)', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)","base64,larger_png_data",new_image_b64 = base64.b64encode(larger_png_data).decode('utf-8')
.\tests\test_admin_upload.py,53,new_image_b64,"('Call', ('Attr', 'base64.b64encode(larger_png_data)', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)","base64,larger_png_data",new_image_b64 = base64.b64encode(larger_png_data).decode('utf-8')
.\tools\portings\patches\test_admin_upload.py.insert.py,53,new_image_b64,"('Call', ('Attr', 'base64.b64encode(larger_png_data)', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)","base64,larger_png_data",new_image_b64 = base64.b64encode(larger_png_data).decode('utf-8')
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,116,new_image_b64,"('Call', ('Attr', 'base64.b64encode(png_data)', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)","base64,png_data",new_image_b64 = base64.b64encode(png_data).decode('utf-8')
.\tests\test_admin_workflow.py,107,new_image_b64,"('Call', ('Attr', 'base64.b64encode(png_data)', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)","base64,png_data",new_image_b64 = base64.b64encode(png_data).decode('utf-8')
.\tools\portings\patches\test_admin_workflow.py.insert.py,116,new_image_b64,"('Call', ('Attr', 'base64.b64encode(png_data)', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)","base64,png_data",new_image_b64 = base64.b64encode(png_data).decode('utf-8')
.\admin_panel.py,998,new_image_b64,"('Call', ('Attr', 'base64.b64encode(uploaded_product_image_manual_file_form.getvalue())', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)","base64,uploaded_product_image_manual_file_form",new_image_b64 = base64.b64encode(uploaded_product_image_manual_file_form.getvalue()).decode('utf-8')
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,54,new_image_b64,"('Name', 'uploaded_product_image_b64')","('Name',)",uploaded_product_image_b64,new_image_b64 = uploaded_product_image_b64  # In der echten App: base64.b64encode(uploaded_file.getvalue()).decode('utf-8')
.\tests\test_admin_workflow.py,54,new_image_b64,"('Name', 'uploaded_product_image_b64')","('Name',)",uploaded_product_image_b64,new_image_b64 = uploaded_product_image_b64  # In der echten App: base64.b64encode(uploaded_file.getvalue()).decode('utf-8')
.\tools\portings\patches\test_admin_workflow.py.insert.py,54,new_image_b64,"('Name', 'uploaded_product_image_b64')","('Name',)",uploaded_product_image_b64,new_image_b64 = uploaded_product_image_b64  # In der echten App: base64.b64encode(uploaded_file.getvalue()).decode('utf-8')
.\pdf_ui.py,736,new_image_item,"('Dict', (('KV', ('Const', ""'created'""), ('Call', ('Attr', 'datetime.now()', 'strftime'), (('Const', ""'%Y-%m-%d %H:%M'""),), ())), ('KV', ('Const', ""'description'""), ('Name', 'img_description')), ('KV', ('Const', ""'id'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'image_data'""), ('Name', 'image_b64')), ('KV', ('Const', ""'image_format'""), ('Attr', 'uploaded_image', 'type')), ('KV', ('Const', ""'position'""), ('Name', 'img_position')), ('KV', ('Const', ""'title'""), ('Name', 'img_title')), ('KV', ('Const', ""'type'""), ('Const', ""'image'""))))","('Dict', 8)","datetime,image_b64,img_description,img_position,img_title,len,st,uploaded_image",new_image_item = {
.\central_pdf_system.py,1216,new_image_item,"('Dict', (('KV', ('Const', ""'data'""), ('Const', 'None')), ('KV', ('Const', ""'enabled'""), ('Const', 'True')), ('KV', ('Const', ""'filename'""), ('Const', ""''"")), ('KV', ('Const', ""'id'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'position'""), ('Const', ""'Nach Kostenaufstellung'"")), ('KV', ('Const', ""'title'""), ('Const', ""''"")), ('KV', ('Const', ""'type'""), ('Const', ""'image'""))))","('Dict', 7)","len,st",new_image_item = {
.\doc_output.py,619,new_item,"('Dict', (('KV', ('Const', ""'caption'""), ('Const', ""'Bildunterschrift'"")), ('KV', ('Const', ""'content'""), ('Const', 'None')), ('KV', ('Const', ""'id'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'position'""), ('Const', ""'middle'"")), ('KV', ('Const', ""'size'""), ('Const', ""'medium'"")), ('KV', ('Const', ""'title'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'type'""), ('Const', ""'image'""))))","('Dict', 7)","i,len,st",new_item = {
.\doc_output.py,606,new_item,"('Dict', (('KV', ('Const', ""'content'""), ('Const', ""'Ihr benutzerdefinierter Text hier...'"")), ('KV', ('Const', ""'id'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'position'""), ('Const', ""'middle'"")), ('KV', ('Const', ""'style'""), ('Const', ""'normal'"")), ('KV', ('Const', ""'title'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'type'""), ('Const', ""'text'""))))","('Dict', 6)","i,len,st",new_item = {
.\doc_output.py,633,new_item,"('Dict', (('KV', ('Const', ""'headers'""), ('List', (('Const', ""'Spalte 1'""), ('Const', ""'Spalte 2'""), ('Const', ""'Spalte 3'"")))), ('KV', ('Const', ""'id'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'position'""), ('Const', ""'middle'"")), ('KV', ('Const', ""'rows'""), ('List', (('List', (('Const', ""'Zeile 1'""), ('Const', ""'Daten'""), ('Const', ""'Werte'""))), ('List', (('Const', ""'Zeile 2'""), ('Const', ""'Mehr'""), ('Const', ""'Info'"")))))), ('KV', ('Const', ""'title'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'type'""), ('Const', ""'table'""))))","('Dict', 6)","i,len,st",new_item = {
.\admin_panel.py,2073,new_name,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Name ändern'""),), (('key', ('Other', 'JoinedStr')), ('value', ('Subscript', ('Name', 'template'), ('Const', ""'name'"")))))","('Call', 1, 2)","st,template",new_name = st.text_input(
.\admin_panel.py,1939,new_name,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Name'""),), (('key', ('Other', 'JoinedStr')), ('value', ('Subscript', ('Name', 'template'), ('Const', ""'name'"")))))","('Call', 1, 2)","st,template",new_name = st.text_input(
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,61,new_product_id,"('Call', ('Name', 'add_product'), (('Name', 'product_data_to_save_db'),), ())","('Call', 1, 0)","add_product,product_data_to_save_db",new_product_id = add_product(product_data_to_save_db)
.\tests\test_admin_workflow.py,61,new_product_id,"('Call', ('Name', 'add_product'), (('Name', 'product_data_to_save_db'),), ())","('Call', 1, 0)","add_product,product_data_to_save_db",new_product_id = add_product(product_data_to_save_db)
.\tools\portings\patches\test_admin_workflow.py.insert.py,61,new_product_id,"('Call', ('Name', 'add_product'), (('Name', 'product_data_to_save_db'),), ())","('Call', 1, 0)","add_product,product_data_to_save_db",new_product_id = add_product(product_data_to_save_db)
.\admin_panel.py,1056,new_product_id,"('Call', ('Name', 'add_product_func'), (('Name', 'product_data_for_add'),), ())","('Call', 1, 0)","add_product_func,product_data_for_add",new_product_id = add_product_func(product_data_for_add)
.\admin_panel.py,1624,new_template_content_input,"('Call', ('Attr', 'st', 'text_area'), (('Call', ('Name', 'get_text_local'), (('BoolOp', 'Or', (('Const', ""'admin_template_content_label'""), ('Name', 'item_content_label_key'))), ('Const', ""'Inhalt...'"")), ()),), (('height', ('Const', '200')), ('key', ('Other', 'JoinedStr')), ('value', ('Name', 'current_content_val'))))","('Call', 1, 3)","WIDGET_KEY_SUFFIX,current_content_val,get_text_local,item_content_label_key,st,template_type_key","else: new_template_content_input = st.text_area(get_text_local(item_content_label_key or ""admin_template_content_label"", ""Inhalt...""), value=current_content_val, height=200, key=f""{template_type_key}_content_ta_mt{WIDGET_KEY_SUFFIX}_form"")"
.\admin_panel.py,1617,new_template_content_input,"('Const', ""''"")","('Const',)",,"new_template_data_b64_for_save = None; new_template_content_input = """""
.\admin_panel.py,1620,new_template_data_b64_for_save,"('Call', ('Attr', 'base64.b64encode(uploaded_image_file.getvalue())', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)","base64,uploaded_image_file","if uploaded_image_file: new_template_data_b64_for_save = base64.b64encode(uploaded_image_file.getvalue()).decode('utf-8'); st.image(uploaded_image_file, caption=get_text_local(""admin_image_preview"", ""Vorschau""), width=200)"
.\admin_panel.py,1617,new_template_data_b64_for_save,"('Const', 'None')","('Const',)",,"new_template_data_b64_for_save = None; new_template_content_input = """""
.\admin_panel.py,1622,new_template_data_b64_for_save,"('Name', 'current_image_data_b64')","('Name',)",current_image_data_b64,"try: st.image(base64.b64decode(current_image_data_b64), caption=get_text_local(""admin_current_image"", ""Aktuelles Bild""), width=200); new_template_data_b64_for_save = current_image_data_b64"
.\central_pdf_system.py,1203,new_text_item,"('Dict', (('KV', ('Const', ""'content'""), ('Const', ""''"")), ('KV', ('Const', ""'enabled'""), ('Const', 'True')), ('KV', ('Const', ""'id'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'position'""), ('Const', ""'Nach Projektübersicht'"")), ('KV', ('Const', ""'title'""), ('Const', ""''"")), ('KV', ('Const', ""'type'""), ('Const', ""'text'""))))","('Dict', 6)","len,st",new_text_item = {
.\pdf_ui.py,673,new_text_item,"('Dict', (('KV', ('Const', ""'content'""), ('Name', 'text_content')), ('KV', ('Const', ""'created'""), ('Call', ('Attr', 'datetime.now()', 'strftime'), (('Const', ""'%Y-%m-%d %H:%M'""),), ())), ('KV', ('Const', ""'id'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'position'""), ('Name', 'text_position')), ('KV', ('Const', ""'style'""), ('Name', 'text_style')), ('KV', ('Const', ""'title'""), ('Name', 'text_title')), ('KV', ('Const', ""'type'""), ('Const', ""'text'""))))","('Dict', 7)","datetime,len,st,text_content,text_position,text_style,text_title",new_text_item = {
.\pdf_styles.py,1143,new_theme,"('Call', ('Attr', 'self.predefined_themes[base_theme]', 'copy'), (), ())","('Call', 0, 0)","base_theme,self",new_theme = self.predefined_themes[base_theme].copy()
.\pdf_styles.py,1147,new_theme,"('Dict', (('KV', ('Const', ""'chart_style'""), ('Const', ""'modern'"")), ('KV', ('Const', ""'colors'""), ('Call', ('Name', 'ColorScheme'), (), (('accent', ('Const', ""'#93C5FD'"")), ('background', ('Const', ""'#FFFFFF'"")), ('error', ('Const', ""'#EF4444'"")), ('primary', ('Const', ""'#3B82F6'"")), ('secondary', ('Const', ""'#60A5FA'"")), ('success', ('Const', ""'#10B981'"")), ('text', ('Const', ""'#1F2937'"")), ('warning', ('Const', ""'#F59E0B'""))))), ('KV', ('Const', ""'fonts'""), ('Dict', (('KV', ('Const', ""'accent'""), ('Const', ""'Helvetica-Oblique'"")), ('KV', ('Const', ""'body'""), ('Const', ""'Helvetica'"")), ('KV', ('Const', ""'heading'""), ('Const', ""'Helvetica-Bold'""))))), ('KV', ('Const', ""'layout'""), ('Const', ""'clean'"")), ('KV', ('Const', ""'name'""), ('Name', 'name'))))","('Dict', 5)","ColorScheme,name",new_theme = {
.\dev_tools\kakerlake_ultra_cleaner_v3.py,349,newc,"('Call', ('Name', 'insert_def_if_missing_calculations'), (('Name', 'code'), ('Const', ""'build_project_data'""), ('Name', 'BUILD_PD_DEF_CODE')), ())","('Call', 3, 0)","BUILD_PD_DEF_CODE,code,insert_def_if_missing_calculations","newc = insert_def_if_missing_calculations(code, ""build_project_data"", BUILD_PD_DEF_CODE)"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,204,newc,"('Call', ('Name', 'insert_def_if_missing_calculations'), (('Name', 'code'), ('Const', ""'compute_annual_savings'""), ('Name', 'COMPUTE_DEF_CODE')), ())","('Call', 3, 0)","COMPUTE_DEF_CODE,code,insert_def_if_missing_calculations","newc = insert_def_if_missing_calculations(code, ""compute_annual_savings"", COMPUTE_DEF_CODE)"
.\calculations.py,4243,next_maintenance,"('Call', ('Attr', 'datetime', 'fromtimestamp'), (('Add', (('Call', ('Attr', 'next_maintenance', 'timestamp'), (), ()), ('Mult', (('Const', '24'), ('Const', '30'), ('Const', '3600'), ('Name', 'interval_months'))))),), ())","('Call', 1, 0)","datetime,interval_months,next_maintenance",next_maintenance = datetime.fromtimestamp(
.\calculations.py,4241,next_maintenance,"('Name', 'last_maintenance')","('Name',)",last_maintenance,next_maintenance = last_maintenance
.\tools\import_module_attributes_generic.py,368,nh,"('Call', ('Attr', ""' '"", 'join'), (('Call', ('Attr', 'nh', 'split'), (), ()),), ())","('Call', 1, 0)",nh,"nh = str(h).strip().lower(); nh = "" "".join(nh.split())"
.\tools\import_module_attributes_generic.py,408,nh,"('Call', ('Attr', ""' '"", 'join'), (('Call', ('Attr', 'nh', 'split'), (), ()),), ())","('Call', 1, 0)",nh,"nh = str(h).strip().lower(); nh = "" "".join(nh.split())"
.\tools\import_module_attributes_generic.py,368,nh,"('Call', ('Attr', 'str(h).strip()', 'lower'), (), ())","('Call', 0, 0)","h,str","nh = str(h).strip().lower(); nh = "" "".join(nh.split())"
.\tools\import_module_attributes_generic.py,408,nh,"('Call', ('Attr', 'str(h).strip()', 'lower'), (), ())","('Call', 0, 0)","h,str","nh = str(h).strip().lower(); nh = "" "".join(nh.split())"
.\calculations.py,4069,nominal_savings,"('Mult', (('Attr', 'self', 'annual_savings'), ('Pow', ('Add', (('Attr', 'self', 'electricity_price_increase'), ('Const', '1'))), ('Sub', ('Name', 'year'), ('Const', '1')))))","('Mult', (('Attr',), ('Pow', ('Add', (('Attr',), ('Const',))), ('Sub', ('Name',), ('Const',)))))","self,year",nominal_savings = self.annual_savings * ((1 + self.electricity_price_increase) ** (year - 1))
.\calculations.py,4109,nominal_savings,"('Mult', (('Attr', 'self', 'annual_savings'), ('Pow', ('Add', (('Const', '1'), ('Name', 'conservative_price_increase'))), ('Sub', ('Name', 'year'), ('Const', '1')))))","('Mult', (('Attr',), ('Pow', ('Add', (('Const',), ('Name',))), ('Sub', ('Name',), ('Const',)))))","conservative_price_increase,self,year",nominal_savings = self.annual_savings * ((1 + conservative_price_increase) ** (year - 1))
.\dev_tools\kakerlake_ultra_cleaner.py,146,norm,"('Call', ('Attr', 're', 'sub'), (('Const', ""'\\\\s+'""), ('Const', ""''""), ('Name', 'body_src')), ())","('Call', 3, 0)","body_src,re","norm=re.sub(r'\s+','',body_src)"
.\mnt\data\kakerlake_ultra_cleaner.py,146,norm,"('Call', ('Attr', 're', 'sub'), (('Const', ""'\\\\s+'""), ('Const', ""''""), ('Name', 'body_src')), ())","('Call', 3, 0)","body_src,re","norm=re.sub(r'\s+','',body_src)"
.\tools\kakerlake_ultra_cleaner.py,147,norm,"('Call', ('Attr', 're', 'sub'), (('Const', ""'\\\\s+'""), ('Const', ""''""), ('Name', 'body_src')), ())","('Call', 3, 0)","body_src,re","norm=re.sub(r'\s+','',body_src)"
.\tools\import_module_attributes_generic.py,375,norm,"('Call', ('Name', '_normalize_record'), (('Name', 'rec'),), ())","('Call', 1, 0)","_normalize_record,rec",norm = _normalize_record(rec)
.\tools\import_module_attributes_generic.py,414,norm,"('Call', ('Name', '_normalize_record'), (('Name', 'rec'),), ())","('Call', 1, 0)","_normalize_record,rec",norm = _normalize_record(rec)
.\tools\import_module_attributes_generic.py,283,norm,"('Call', ('Name', '_normalize_record'), (('Name', 'row'),), ())","('Call', 1, 0)","_normalize_record,row",norm = _normalize_record(row)
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,75,norm,"('Call', ('Name', '_normalize_tariff_to_eur_per_kwh'), (('Name', 'ar_val'),), ())","('Call', 1, 0)","_normalize_tariff_to_eur_per_kwh,ar_val",norm = _normalize_tariff_to_eur_per_kwh(ar_val)
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,97,norm,"('Call', ('Name', '_normalize_tariff_to_eur_per_kwh'), (('Name', 'ar_val'),), ())","('Call', 1, 0)","_normalize_tariff_to_eur_per_kwh,ar_val",norm = _normalize_tariff_to_eur_per_kwh(ar_val)
.\pdf_template_engine\placeholders.py,114,norm,"('Call', ('Name', '_normalize_tariff_to_eur_per_kwh'), (('Name', 'ar_val'),), ())","('Call', 1, 0)","_normalize_tariff_to_eur_per_kwh,ar_val",norm = _normalize_tariff_to_eur_per_kwh(ar_val)
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,75,norm,"('Call', ('Name', '_normalize_tariff_to_eur_per_kwh'), (('Name', 'ar_val'),), ())","('Call', 1, 0)","_normalize_tariff_to_eur_per_kwh,ar_val",norm = _normalize_tariff_to_eur_per_kwh(ar_val)
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,97,norm,"('Call', ('Name', '_normalize_tariff_to_eur_per_kwh'), (('Name', 'ar_val'),), ())","('Call', 1, 0)","_normalize_tariff_to_eur_per_kwh,ar_val",norm = _normalize_tariff_to_eur_per_kwh(ar_val)
.\product_db.py,127,not_null_stmt,"('Const', ""' NOT NULL'"")","('Const',)",,"if col_name in [""category"", ""model_name""]: not_null_stmt = "" NOT NULL"""
.\product_db.py,126,not_null_stmt,"('Const', ""''"")","('Const',)",,"not_null_stmt = """""
.\crm_dashboard_ui.py,225,notes,"('Call', ('Attr', 'customer', 'get'), (('Const', ""'notes'""), ('Const', ""'Keine Notizen vorhanden'"")), ())","('Call', 2, 0)",customer,"notes = customer.get('notes', 'Keine Notizen vorhanden')"
.\crm_pipeline_ui.py,260,notes,"('Call', ('Attr', 'st', 'text_area'), (('Const', ""'Notizen'""),), (('placeholder', ('Const', ""'Zusätzliche Informationen zum Lead'"")),))","('Call', 1, 1)",st,"notes = st.text_area(""Notizen"", placeholder=""Zusätzliche Informationen zum Lead"")"
.\crm_calendar_ui.py,232,notes,"('Call', ('Attr', 'st', 'text_area'), (('Const', ""'Notizen'""),), (('placeholder', ('Const', ""'Zusätzliche Informationen zum Termin'"")),))","('Call', 1, 1)",st,"notes = st.text_area(""Notizen"", placeholder=""Zusätzliche Informationen zum Termin"")"
.\crm_calendar_ui.py,443,now,"('Call', ('Attr', 'datetime', 'now'), (), ())","('Call', 0, 0)",datetime,now = datetime.now()
.\crm.py,151,now,"('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())","('Call', 0, 0)",datetime,now = datetime.now().isoformat()
.\crm.py,207,now,"('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())","('Call', 0, 0)",datetime,now = datetime.now().isoformat()
.\database.py,1160,now,"('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())","('Call', 0, 0)",datetime,now = datetime.now().isoformat()
.\database.py,1198,now,"('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())","('Call', 0, 0)",datetime,now = datetime.now().isoformat()
.\database.py,1267,now,"('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())","('Call', 0, 0)",datetime,now = datetime.now().isoformat()
.\analysis.py,5510,npv,"('Call', ('Attr', 'integrator', 'calculate_npv_sensitivity'), (('Name', 'calc_results'), ('Name', 'rate')), ())","('Call', 2, 0)","calc_results,integrator,rate","npv = integrator.calculate_npv_sensitivity(calc_results, rate)"
.\calculations.py,1400,npv,"('Call', ('Name', 'sum'), (('Other', 'GeneratorExp'),), ())","('Call', 1, 0)","cash_flows,cf,enumerate,i,rate,sum","npv = sum(cf / (1 + rate) ** i for i, cf in enumerate(cash_flows))"
.\analysis.py,8828,npv,"('Sub', ('Call', ('Name', 'sum'), (('Other', 'ListComp'),), ()), ('Name', 'investment'))","('Sub', ('Call', 1, 0), ('Name',))","annual_savings,discount_rate,investment,range,sum,year","npv = sum([annual_savings / (1 + discount_rate)**year for year in range(1, 21)]) - investment"
.\calculations.py,1379,npv,"('USub', ('Name', 'investment'))","('USub', ('Name',))",investment,npv = -investment
.\calculations.py,1775,npv,"('USub', ('Name', 'investment'))","('USub', ('Name',))",investment,npv = -investment
.\calculations.py,1781,npv_distribution,"('Call', ('Attr', 'np', 'array'), (('Name', 'npv_distribution'),), ())","('Call', 1, 0)","np,npv_distribution",npv_distribution = np.array(npv_distribution)
.\calculations.py,1764,npv_distribution,"('List', ())","('List', 0)",,npv_distribution = []
.\tools\import_module_attributes_generic.py,263,num,"('Call', ('Name', '_to_number'), (('Subscript', ('Name', 'out'), ('Const', ""'capacity_w'"")),), ())","('Call', 1, 0)","_to_number,out","num = _to_number(out[""capacity_w""])"
.\tools\import_module_attributes_generic.py,267,num,"('Call', ('Name', '_to_number'), (('Subscript', ('Name', 'out'), ('Const', ""'product_warranty_years'"")),), ())","('Call', 1, 0)","_to_number,out","num = _to_number(out[""product_warranty_years""])"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,109,num,"('Call', ('Name', 'float'), (('Name', 'clean_val'),), ())","('Call', 1, 0)","clean_val,float",num = float(clean_val)
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,145,num,"('Call', ('Name', 'float'), (('Name', 'clean_val'),), ())","('Call', 1, 0)","clean_val,float",num = float(clean_val)
.\pdf_template_engine\placeholders.py,396,num,"('Call', ('Name', 'float'), (('Name', 'clean_val'),), ())","('Call', 1, 0)","clean_val,float",num = float(clean_val)
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,109,num,"('Call', ('Name', 'float'), (('Name', 'clean_val'),), ())","('Call', 1, 0)","clean_val,float",num = float(clean_val)
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,145,num,"('Call', ('Name', 'float'), (('Name', 'clean_val'),), ())","('Call', 1, 0)","clean_val,float",num = float(clean_val)
.\pdf_template_engine\dynamic_overlay.py,154,nums,"('Call', ('Attr', 're', 'findall'), (('Const', ""'[-+]?[0-9]*[\\\\.,]?[0-9]+'""), ('Name', 'line')), ())","('Call', 2, 0)","line,re","nums = re.findall(r""[-+]?[0-9]*[\.,]?[0-9]+"", line)"
.\tools\import_module_attributes_generic.py,249,nums,"('Call', ('Attr', 're', 'findall'), (('Const', ""'\\\\d{1,3}'""), ('Name', 'v')), ())","('Call', 2, 0)","re,v","nums = re.findall(r""\d{1,3}"", v)"
.\pdf_template_engine\dynamic_overlay.py,155,nums,"('Other', 'ListComp')","('Other', 'ListComp')","n,nums","nums = [n.replace("","", ""."") for n in nums]"
.\analysis.py,3829,nutzwert_illustrativ_eur,"('Call', ('Attr', 'np', 'nan_to_num'), (('Name', 'nutzwert_illustrativ_eur'),), (('nan', ('Const', '0.0')), ('neginf', ('Const', '0.0')), ('posinf', ('Const', '0.0'))))","('Call', 1, 3)","np,nutzwert_illustrativ_eur",nutzwert_illustrativ_eur = np.nan_to_num(
.\analysis.py,3824,nutzwert_illustrativ_eur,"('Mult', (('Name', 'kapazitaet_range_kwh'), ('Name', 'scaling_factor_heuristic'), ('Sub', ('Const', '1'), ('Call', ('Attr', 'np', 'exp'), (('Mult', (('Name', 'kapazitaet_range_kwh'), ('USub', ('Const', '0.3')))),), ()))))","('Mult', (('Name',), ('Name',), ('Sub', ('Const',), ('Call', 1, 0))))","kapazitaet_range_kwh,np,scaling_factor_heuristic",nutzwert_illustrativ_eur = (
.\multi_offer_generator.py,609,offer_data,"('Call', ('Attr', 'self', '_prepare_offer_data'), (('Name', 'customer_data'), ('Name', 'company'), ('Name', 'company_settings'), ('Name', 'project_data'), ('Name', 'i')), ())","('Call', 5, 0)","company,company_settings,customer_data,i,project_data,self","offer_data = self._prepare_offer_data(customer_data, company, company_settings, project_data, i)"
.\multi_offer_generator_new.py,307,offer_data,"('Call', ('Attr', 'self', '_prepare_offer_data'), (('Name', 'customer_data'), ('Name', 'company'), ('Name', 'settings'), ('Name', 'project_data')), ())","('Call', 4, 0)","company,customer_data,project_data,self,settings","offer_data = self._prepare_offer_data(customer_data, company, settings, project_data)"
.\multi_offer_generator_old.py,657,offer_data,"('Call', ('Name', 'calculate_offer_details'), (), (('customer_id', ('Subscript', ('Name', 'get_all_active_customers'), ('Const', ""'id'""))),))","('Call', 0, 1)","calculate_offer_details,get_all_active_customers","offer_data = calculate_offer_details(customer_id=get_all_active_customers[""id""])"
.\multi_offer_generator.py,890,offer_data,"('Dict', (('KV', ('Const', ""'company_data'""), ('Name', 'company')), ('KV', ('Const', ""'customer_data'""), ('Name', 'customer_data')), ('KV', ('Const', ""'include_storage'""), ('Call', ('Attr', 'settings', 'get'), (('Const', ""'include_storage'""), ('Const', 'True')), ())), ('KV', ('Const', ""'module_quantity'""), ('Call', ('Attr', 'settings', 'get'), (('Const', ""'module_quantity'""), ('Const', '20')), ())), ('KV', ('Const', ""'offer_date'""), ('Call', ('Attr', 'datetime.now()', 'strftime'), (('Const', ""'%d.%m.%Y'""),), ()))))","('Dict', 5)","company,customer_data,datetime,settings",offer_data = {
.\multi_offer_generator_new.py,353,offer_data,"('Dict', (('KV', ('Const', ""'company_data'""), ('Name', 'company')), ('KV', ('Const', ""'customer_data'""), ('Name', 'customer_data')), ('KV', ('Const', ""'include_storage'""), ('Call', ('Attr', 'settings', 'get'), (('Const', ""'include_storage'""), ('Const', 'True')), ())), ('KV', ('Const', ""'module_quantity'""), ('Call', ('Attr', 'settings', 'get'), (('Const', ""'module_quantity'""), ('Const', '20')), ())), ('KV', ('Const', ""'offer_date'""), ('Call', ('Attr', 'datetime.now()', 'strftime'), (('Const', ""'%d.%m.%Y'""),), ()))))","('Dict', 5)","company,customer_data,datetime,settings",offer_data = {
.\central_pdf_system.py,1818,offer_templates,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'pdf_offer_title_templates'""), ('List', ())), ())","('Call', 2, 0)",load_admin_setting_func,"offer_templates = load_admin_setting_func('pdf_offer_title_templates', [])"
.\central_pdf_system.py,1821,offer_templates,"('List', ())","('List', 0)",,title_templates = offer_templates = letter_templates = []
.\doc_output.py,1927,offer_title_options,"('Dict', (('KV', ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'no_offer_titles_available'""), ('Const', ""'Keine Angebotstitel verfügbar'"")), ()), ('Const', ""'Standard Angebotstitel'"")),))","('Dict', 1)","get_text_pdf_ui,texts","offer_title_options = {get_text_pdf_ui(texts, ""no_offer_titles_available"", ""Keine Angebotstitel verfügbar""): ""Standard Angebotstitel""}"
.\pdf_ui.py,978,offer_title_options,"('Dict', (('KV', ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'no_offer_titles_available'""), ('Const', ""'Keine Angebotstitel verfügbar'"")), ()), ('Const', ""'Standard Angebotstitel'"")),))","('Dict', 1)","get_text_pdf_ui,texts","if not offer_title_options: offer_title_options = {get_text_pdf_ui(texts, ""no_offer_titles_available"", ""Keine Angebotstitel verfügbar""): ""Standard Angebotstitel""}"
.\doc_output.py,1925,offer_title_options,"('Other', 'DictComp')","('Other', 'DictComp')","dict,enumerate,i,isinstance,offer_title_templates,t","offer_title_options = {t.get('name', f""Titel {i+1}""): t.get('content') for i, t in enumerate(offer_title_templates) if isinstance(t, dict) and t.get('name')}"
.\pdf_ui.py,977,offer_title_options,"('Other', 'DictComp')","('Other', 'DictComp')","dict,enumerate,i,isinstance,offer_title_templates,t","offer_title_options = {t.get('name', f""Titel {i+1}""): t.get('content') for i, t in enumerate(offer_title_templates) if isinstance(t,dict) and t.get('name')}"
.\doc_output.py,1865,offer_title_templates,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'pdf_offer_title_templates'""), ('List', ())), ())","('Call', 2, 0)",load_admin_setting_func,"offer_title_templates = load_admin_setting_func('pdf_offer_title_templates', [])"
.\pdf_ui.py,353,offer_title_templates,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'pdf_offer_title_templates'""), ('List', ())), ())","('Call', 2, 0)",load_admin_setting_func,"offer_title_templates = load_admin_setting_func('pdf_offer_title_templates', [])"
.\doc_output.py,1868,offer_title_templates,"('List', ())","('List', 0)",,"if not isinstance(offer_title_templates, list): offer_title_templates = []"
.\pdf_ui.py,375,offer_title_templates,"('List', ())","('List', 0)",,"if not isinstance(offer_title_templates, list): offer_title_templates = []"
.\multi_offer_generator.py,1050,offer_title_templates,"('Other', 'IfExp')","('Other', 'IfExp')","callable,load_admin_setting","offer_title_templates = load_admin_setting(""pdf_offer_title_templates"", []) if callable(load_admin_setting) else []"
.\heatpump_ui.py,181,oil_l,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Heizöl (Liter/Jahr)'""),), (('min_value', ('Const', '0.0')), ('step', ('Const', '50.0')), ('value', ('Const', '0.0'))))","('Call', 1, 3)",st,"oil_l = st.number_input(""Heizöl (Liter/Jahr)"", min_value=0.0, value=0.0, step=50.0)"
.\calculations_heatpump.py,222,oil_l,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'consumption', 'get'), (('Const', ""'oil_l'""), ('Const', '0')), ()), ('Const', '0'))),), ())","('Call', 1, 0)","consumption,float","oil_l = float(consumption.get('oil_l', 0) or 0)"
.\heatpump_ui.py,502,oil_price,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Ölpreis (ct/kWh)'""),), (('max_value', ('Const', '20.0')), ('min_value', ('Const', '5.0')), ('step', ('Const', '0.5')), ('value', ('Const', '10.0'))))","('Call', 1, 4)",st,oil_price = st.number_input(
.\heatpump_ui.py,894,oil_price,"('Const', '10.0')","('Const',)",,oil_price = 10.0          # ct/kWh
.\admin_module_alias_mapping_ui.py,62,ok,"('Call', ('Attr', 'st', 'form_submit_button'), (('Const', ""'Speichern'""),), ())","('Call', 1, 0)",st,"ok = st.form_submit_button(""Speichern"")"
.\admin_product_attributes_ui.py,21,ok,"('Call', ('Name', 'export_attributes_to_csv'), (('Name', 'path'),), ())","('Call', 1, 0)","export_attributes_to_csv,path",ok = export_attributes_to_csv(path)
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,107,ok,"('Const', 'False')","('Const',)",,ok = False
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,133,ok,"('Const', 'False')","('Const',)",,ok = False
.\tests\test_logo_integration.py,101,ok,"('Const', 'False')","('Const',)",,ok = False
.\tests\test_logo_integration.py,120,ok,"('Const', 'False')","('Const',)",,ok = False
.\tools\portings\patches\test_logo_integration.py.insert.py,107,ok,"('Const', 'False')","('Const',)",,ok = False
.\tools\portings\patches\test_logo_integration.py.insert.py,133,ok,"('Const', 'False')","('Const',)",,ok = False
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,101,ok,"('Const', 'True')","('Const',)",,ok = True
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,126,ok,"('Const', 'True')","('Const',)",,ok = True
.\tests\test_logo_integration.py,95,ok,"('Const', 'True')","('Const',)",,ok = True
.\tests\test_logo_integration.py,113,ok,"('Const', 'True')","('Const',)",,ok = True
.\tools\portings\patches\test_logo_integration.py.insert.py,101,ok,"('Const', 'True')","('Const',)",,ok = True
.\tools\portings\patches\test_logo_integration.py.insert.py,126,ok,"('Const', 'True')","('Const',)",,ok = True
.\pdf_styles.py,788,opacity,"('Call', ('Attr', 'st', 'slider'), (('Const', ""'Transparenz'""),), (('max_value', ('Const', '0.5')), ('min_value', ('Const', '0.0')), ('step', ('Const', '0.05')), ('value', ('Const', '0.1'))))","('Call', 1, 4)",st,opacity = st.slider(
.\pdf_template_engine\dynamic_overlay.py,100,opacity,"('Call', ('Name', 'float'), (('Name', 'opacity'),), ())","('Call', 1, 0)","float,opacity",opacity = float(opacity)
.\pdf_template_engine\dynamic_overlay.py,98,opacity,"('Call', ('Name', 'load_admin_setting'), (('Const', ""'pdf_global_watermark_opacity'""), ('Const', '0.1')), ())","('Call', 2, 0)",load_admin_setting,"opacity = load_admin_setting(""pdf_global_watermark_opacity"", 0.10)"
.\pdf_template_engine\dynamic_overlay.py,102,opacity,"('Const', '0.1')","('Const',)",,opacity = 0.10
.\analysis.py,5842,optimization_potential,"('Call', ('Attr', 'shading_analysis', 'get'), (('Const', ""'optimization_potential'""), ('Const', '0.0')), ())","('Call', 2, 0)",shading_analysis,"optimization_potential = shading_analysis.get(""optimization_potential"", 0.0)"
.\calculations.py,1631,optimization_potential,"('Mult', (('Const', '0.3'), ('Name', 'energy_loss_kwh')))","('Mult', (('Const',), ('Name',)))",energy_loss_kwh,optimization_potential = energy_loss_kwh * 0.3  # 30% durch Optimierung möglich
.\pdf_ui.py,1472,options,"('Attr', 'st.session_state', 'pdf_inclusion_options')","('Attr',)",st,options = st.session_state.pdf_inclusion_options
.\notwendig oder nicht\wichtig\portings\patches\test_pdf_logos.py.insert.py,68,options,"('Dict', (('KV', ('Const', ""'include_classic_template'""), ('Const', 'False')), ('KV', ('Const', ""'include_main_template'""), ('Const', 'True')), ('KV', ('Const', ""'template_selection'""), ('Const', ""'6seiten'""))))","('Dict', 3)",,options = {
.\tests\test_pdf_logos.py,70,options,"('Dict', (('KV', ('Const', ""'include_classic_template'""), ('Const', 'False')), ('KV', ('Const', ""'include_main_template'""), ('Const', 'True')), ('KV', ('Const', ""'template_selection'""), ('Const', ""'6seiten'""))))","('Dict', 3)",,options = {
.\tools\portings\patches\test_pdf_logos.py.insert.py,68,options,"('Dict', (('KV', ('Const', ""'include_classic_template'""), ('Const', 'False')), ('KV', ('Const', ""'include_main_template'""), ('Const', 'True')), ('KV', ('Const', ""'template_selection'""), ('Const', ""'6seiten'""))))","('Dict', 3)",,options = {
.\options.py,15,options_dependencies_available,"('Const', 'False')","('Const',)",,options_dependencies_available = False
.\options.py,12,options_dependencies_available,"('Const', 'True')","('Const',)",,options_dependencies_available = True
.\gui.py,738,options_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'options'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","options_module = import_module_with_fallback(""options"", import_errors)"
.\gui.py,92,options_module,"('Const', 'None')","('Const',)",,options_module: Optional[Any] = None
.\pdf_generator.py,2008,ordered_section_definitions_pdf,"('List', (('Tuple', (('Const', ""'ProjectOverview'""), ('Const', ""'pdf_section_title_overview'""), ('Const', ""'1. Projektübersicht & Eckdaten'""))), ('Tuple', (('Const', ""'TechnicalComponents'""), ('Const', ""'pdf_section_title_components'""), ('Const', ""'2. Angebotene Systemkomponenten'""))), ('Tuple', (('Const', ""'CostDetails'""), ('Const', ""'pdf_section_title_cost_details'""), ('Const', ""'3. Detaillierte Kostenaufstellung'""))), ('Tuple', (('Const', ""'Economics'""), ('Const', ""'pdf_section_title_economics'""), ('Const', ""'4. Wirtschaftlichkeit im Überblick'""))), ('Tuple', (('Const', ""'SimulationDetails'""), ('Const', ""'pdf_section_title_simulation'""), ('Const', ""'5. Simulationsübersicht (Auszug)'""))), ('Tuple', (('Const', ""'CO2Savings'""), ('Const', ""'pdf_section_title_co2'""), ('Const', ""'6. Ihre CO₂-Einsparung'""))), ('Tuple', (('Const', ""'Visualizations'""), ('Const', ""'pdf_section_title_visualizations'""), ('Const', ""'7. Grafische Auswertungen'""))), ('Tuple', (('Const', ""'FutureAspects'""), ('Const', ""'pdf_chapter_title_future_aspects'""), ('Const', ""'8. Zukunftsaspekte & Erweiterungen'""))), ('Tuple', (('Const', ""'CompanyProfile'""), ('Const', ""'pdf_section_title_company_profile'""), ('Const', ""'9. Unser Unternehmen'""))), ('Tuple', (('Const', ""'Certifications'""), ('Const', ""'pdf_section_title_certifications'""), ('Const', ""'10. Zertifizierungen & Qualitätsstandards'""))), ('Tuple', (('Const', ""'References'""), ('Const', ""'pdf_section_title_references'""), ('Const', ""'11. Referenzen & Kundenerfahrungen'""))), ('Tuple', (('Const', ""'Installation'""), ('Const', ""'pdf_section_title_installation'""), ('Const', ""'12. Professionelle Installation'""))), ('Tuple', (('Const', ""'Maintenance'""), ('Const', ""'pdf_section_title_maintenance'""), ('Const', ""'13. Wartung & Langzeitservice'""))), ('Tuple', (('Const', ""'Financing'""), ('Const', ""'pdf_section_title_financing'""), ('Const', ""'14. Flexible Finanzierungslösungen'""))), ('Tuple', (('Const', ""'Insurance'""), ('Const', ""'pdf_section_title_insurance'""), ('Const', ""'15. Umfassender Versicherungsschutz'""))), ('Tuple', (('Const', ""'Warranty'""), ('Const', ""'pdf_section_title_warranty'""), ('Const', ""'16. Herstellergarantie & Gewährleistung'"")))))","('List', 16)",,ordered_section_definitions_pdf = [
.\pdf_generator.py,2050,ordered_section_definitions_pdf,"('Name', 'reordered')","('Name',)",reordered,ordered_section_definitions_pdf = reordered
.\pdf_generator.py,2074,ordered_section_definitions_pdf,"('Name', 'reordered')","('Name',)",reordered,ordered_section_definitions_pdf = reordered
.\analysis.py,153,orig,"('Attr', 'cell', 'cell_contents')","('Attr',)",cell,orig = cell.cell_contents
.\admin_panel.py,561,orig,"('BoolOp', 'Or', (('Attr', 'up', 'name'), ('Const', ""'modul.pdf'"")))","('BoolOp', 'Or', 2)",up,"orig = up.name or ""modul.pdf"""
.\dev_tools\kakerlake_ultra_cleaner.py,346,orig_code,"('Attr', 'orig.value', 'code')","('Attr',)",orig,orig_code=orig.value.code
.\mnt\data\kakerlake_ultra_cleaner.py,346,orig_code,"('Attr', 'orig.value', 'code')","('Attr',)",orig,orig_code=orig.value.code
.\tools\kakerlake_ultra_cleaner.py,347,orig_code,"('Attr', 'orig.value', 'code')","('Attr',)",orig,orig_code=orig.value.code
.\dev_tools\kakerlake_ultra_cleaner_v2.py,218,orig_code,"('Attr', 'rhs', 'code')","('Attr',)",rhs,orig_code = rhs.code
.\mnt\data\kakerlake_ultra_cleaner_v2.py,218,orig_code,"('Attr', 'rhs', 'code')","('Attr',)",rhs,orig_code = rhs.code
.\notwendig oder nicht\excel_range_reader.py,22,out,"('Add', (('Call', ('Name', 'chr'), (('Add', (('Const', '65'), ('Name', 'rem'))),), ()), ('Name', 'out')))","('Add', (('Call', 1, 0), ('Name',)))","chr,out,rem",out = chr(65 + rem) + out
.\notwendig oder nicht\wichtig\repo_to_json.py,260,out,"('Call', ('Attr', 'Path(args.out)', 'resolve'), (), ())","('Call', 0, 0)","Path,args",out = Path(args.out).resolve()
.\tools\repo_to_json.py,260,out,"('Call', ('Attr', 'Path(args.out)', 'resolve'), (), ())","('Call', 0, 0)","Path,args",out = Path(args.out).resolve()
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\merger.py.insert.py,19,out,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,out = io.BytesIO(); writer.write(out)
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\merger.py.insert.py,20,out,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,out = io.BytesIO(); writer.write(out)
.\pdf_template_engine\dynamic_overlay.py,969,out,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,out = io.BytesIO()
.\pdf_template_engine\dynamic_overlay.py,985,out,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,out = io.BytesIO()
.\pdf_template_engine\merger.py,17,out,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,out = io.BytesIO(); writer.write(out)
.\tools\out_selected\patches\pdf_template_engine\merger.py.insert.py,19,out,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,out = io.BytesIO(); writer.write(out)
.\tools\portings\patches\pdf_template_engine\merger.py.insert.py,20,out,"('Call', ('Attr', 'io', 'BytesIO'), (), ())","('Call', 0, 0)",io,out = io.BytesIO(); writer.write(out)
.\tests\test_main6_render.py,73,out,"('Call', ('Attr', 'pg', 'generate_main_template_pdf_bytes'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,company_info,pg,project_data","out = pg.generate_main_template_pdf_bytes(project_data, analysis_results, company_info)"
.\tools\test_main6_render.py,73,out,"('Call', ('Attr', 'pg', 'generate_main_template_pdf_bytes'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,company_info,pg,project_data","out = pg.generate_main_template_pdf_bytes(project_data, analysis_results, company_info)"
.\tools\schema_extractor.py,114,out,"('Call', ('Name', 'Path'), (('Name', 'root'), ('Const', ""'schema.json'"")), ())","('Call', 2, 0)","Path,root","out = Path(root, 'schema.json')"
.\dev_tools\kakerlake_ultra_cleaner.py,610,out,"('Call', ('Name', 'ensure_dir'), (('Attr', 'args', 'out'),), ())","('Call', 1, 0)","args,ensure_dir",args=ap.parse_args(); out=ensure_dir(args.out)
.\mnt\data\kakerlake_ultra_cleaner.py,610,out,"('Call', ('Name', 'ensure_dir'), (('Attr', 'args', 'out'),), ())","('Call', 1, 0)","args,ensure_dir",args=ap.parse_args(); out=ensure_dir(args.out)
.\tools\kakerlake_ultra_cleaner.py,611,out,"('Call', ('Name', 'ensure_dir'), (('Attr', 'args', 'out'),), ())","('Call', 1, 0)","args,ensure_dir",args=ap.parse_args(); out=ensure_dir(args.out)
.\excel_eval.py,399,out,"('Call', ('Name', 'export_formulas_to_csv'), (('Attr', 'args', 'infile'), ('Attr', 'args', 'outfile')), (('engine', ('Attr', 'args', 'engine')), ('limit', ('Attr', 'args', 'limit'))))","('Call', 2, 2)","args,export_formulas_to_csv","out = export_formulas_to_csv(args.infile, args.outfile, limit=args.limit, engine=args.engine)"
.\excel_eval.py,401,out,"('Call', ('Name', 'export_formulas_to_xlsx'), (('Attr', 'args', 'infile'), ('Attr', 'args', 'outfile')), (('engine', ('Attr', 'args', 'engine')), ('limit', ('Attr', 'args', 'limit'))))","('Call', 2, 2)","args,export_formulas_to_xlsx","out = export_formulas_to_xlsx(args.infile, args.outfile, limit=args.limit, engine=args.engine)"
.\notwendig oder nicht\wichtig\repo_porter.py,134,out,"('Call', ('Name', 'set'), (), ())","('Call', 0, 0)",set,out: Set[str] = set()
.\tools\repo_porter.py,134,out,"('Call', ('Name', 'set'), (), ())","('Call', 0, 0)",set,out: Set[str] = set()
.\notwendig oder nicht\excel_range_reader.py,19,out,"('Const', ""''"")","('Const',)",,"out = """""
.\tests\test_page4_images.py,36,out,"('Const', ""'test_page4_images.pdf'"")","('Const',)",,out='test_page4_images.pdf'
.\tools\test_page4_images.py,36,out,"('Const', ""'test_page4_images.pdf'"")","('Const',)",,out='test_page4_images.pdf'
.\notwendig oder nicht\wichtig\repo_to_json.py,127,out,"('Dict', (('KV', ('Const', ""'classes'""), ('List', ())), ('KV', ('Const', ""'functions'""), ('List', ())), ('KV', ('Const', ""'methods'""), ('List', ()))))","('Dict', 3)",,"out = {""functions"": [], ""classes"": [], ""methods"": []}"
.\tools\repo_to_json.py,127,out,"('Dict', (('KV', ('Const', ""'classes'""), ('List', ())), ('KV', ('Const', ""'functions'""), ('List', ())), ('KV', ('Const', ""'methods'""), ('List', ()))))","('Dict', 3)",,"out = {""functions"": [], ""classes"": [], ""methods"": []}"
.\tools\schema_extractor.py,54,out,"('Dict', (('KV', ('Const', ""'type'""), ('Const', 'None')),))","('Dict', 1)",,"out: Dict[str, Any] = {""type"": None}"
.\calculations.py,19,out,"('Dict', ())","('Dict', 0)",,out = {}
.\heatpump_pricing.py,227,out,"('Dict', ())","('Dict', 0)",,"out: Dict[str, Any] = {}"
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,175,out,"('Dict', ())","('Dict', 0)",,"out: Dict[str, Any] = {}"
.\pdf_atomizer.py,148,out,"('Dict', ())","('Dict', 0)",,out = {}
.\tools\import_module_attributes_generic.py,227,out,"('Dict', ())","('Dict', 0)",,"out: Dict[str, Any] = {}"
.\tools\import_module_attributes_generic.py,483,out,"('Dict', ())","('Dict', 0)",,"out: Dict[str, Any] = {}"
.\tools\kakerlake_ultra_cleaner.py,244,out,"('Dict', ())","('Dict', 0)",,out = {}
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,175,out,"('Dict', ())","('Dict', 0)",,"out: Dict[str, Any] = {}"
.\utils\remove_text.py,23,out,"('Div', ('Name', 'DST'), ('Other', 'JoinedStr'))","('Div', ('Name',), ('Other', 'JoinedStr'))","DST,pdf_in","out = DST / f""nt_{pdf_in.name}"""
.\admin_panel.py,610,out,"('Div', ('Name', 'base_dir'), ('Attr', 'f', 'name'))","('Div', ('Name',), ('Attr',))","base_dir,f",out = base_dir / f.name
.\tests\test_main_pdf.py,110,out,"('Div', ('Name', 'root'), ('Const', ""'out_main_full_test.pdf'""))","('Div', ('Name',), ('Const',))",root,out = root / 'out_main_full_test.pdf'
.\tools\test_main_pdf.py,110,out,"('Div', ('Name', 'root'), ('Const', ""'out_main_full_test.pdf'""))","('Div', ('Name',), ('Const',))",root,out = root / 'out_main_full_test.pdf'
.\dev_tools\kakerlake_ultra_cleaner.py,30,out,"('List', ())","('List', 0)",,out=[];
.\dev_tools\kakerlake_ultra_cleaner.py,37,out,"('List', ())","('List', 0)",,out=[];
.\dev_tools\kakerlake_ultra_cleaner_v2.py,25,out,"('List', ())","('List', 0)",,out=[];
.\dev_tools\kakerlake_ultra_cleaner_v2.py,32,out,"('List', ())","('List', 0)",,out=[];
.\dev_tools\kakerlake_ultra_cleaner_v3.py,26,out,"('List', ())","('List', 0)",,out=[];
.\excel_eval.py,74,out,"('List', ())","('List', 0)",,"out: List[Tuple[str, str, str]] = []"
.\mnt\data\kakerlake_ultra_cleaner.py,30,out,"('List', ())","('List', 0)",,out=[];
.\mnt\data\kakerlake_ultra_cleaner.py,37,out,"('List', ())","('List', 0)",,out=[];
.\mnt\data\kakerlake_ultra_cleaner_v2.py,25,out,"('List', ())","('List', 0)",,out=[];
.\mnt\data\kakerlake_ultra_cleaner_v2.py,32,out,"('List', ())","('List', 0)",,out=[];
.\notwendig oder nicht\wichtig\repo_porter.py,335,out,"('List', ())","('List', 0)",,out: List[str] = []
.\notwendig oder nicht\wichtig\repo_porter_select.py,97,out,"('List', ())","('List', 0)",,out: List[str] = []
.\tools\kakerlake_ultra_cleaner.py,31,out,"('List', ())","('List', 0)",,out=[];
.\tools\kakerlake_ultra_cleaner.py,38,out,"('List', ())","('List', 0)",,out=[];
.\tools\repo_porter.py,335,out,"('List', ())","('List', 0)",,out: List[str] = []
.\tools\repo_porter_select.py,97,out,"('List', ())","('List', 0)",,out: List[str] = []
.\dev_tools\kakerlake_ultra_cleaner.py,596,out_csv,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'out'), ('Const', ""'yaml_position_collisions.csv'"")), ())","('Call', 2, 0)","os,out","out_csv=os.path.join(out, ""yaml_position_collisions.csv"")"
.\mnt\data\kakerlake_ultra_cleaner.py,596,out_csv,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'out'), ('Const', ""'yaml_position_collisions.csv'"")), ())","('Call', 2, 0)","os,out","out_csv=os.path.join(out, ""yaml_position_collisions.csv"")"
.\tools\kakerlake_ultra_cleaner.py,597,out_csv,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'out'), ('Const', ""'yaml_position_collisions.csv'"")), ())","('Call', 2, 0)","os,out","out_csv=os.path.join(out, ""yaml_position_collisions.csv"")"
.\excel_eval.py,209,out_csv,"('Call', ('Name', 'Path'), (('Name', 'out_csv'),), ())","('Call', 1, 0)","Path,out_csv",out_csv = Path(out_csv)
.\pdf_erstellen_komplett.py,142,out_path,"('Call', ('Name', 'Path'), (('BoolOp', 'Or', (('Div', ('Name', 'base_dir'), ('Const', ""'recreated_full.pdf'"")), ('Name', 'output_pdf'))),), ())","('Call', 1, 0)","Path,base_dir,output_pdf","out_path = Path(output_pdf or (base_dir / ""recreated_full.pdf""))"
.\tests\test_main6_render.py,74,out_path,"('Call', ('Name', 'Path'), (('Const', ""'test_main6.pdf'""),), ())","('Call', 1, 0)",Path,out_path = Path('test_main6.pdf')
.\tools\test_main6_render.py,74,out_path,"('Call', ('Name', 'Path'), (('Const', ""'test_main6.pdf'""),), ())","('Call', 1, 0)",Path,out_path = Path('test_main6.pdf')
.\tests\test_overlay_footer.py,23,out_path,"('Div', ('Name', 'base_dir'), ('Const', ""'out_main6_footer_test.pdf'""))","('Div', ('Name',), ('Const',))",base_dir,"out_path = base_dir / ""out_main6_footer_test.pdf"""
.\tools\test_overlay_footer.py,23,out_path,"('Div', ('Name', 'base_dir'), ('Const', ""'out_main6_footer_test.pdf'""))","('Div', ('Name',), ('Const',))",base_dir,"out_path = base_dir / ""out_main6_footer_test.pdf"""
.\notwendig oder nicht\wichtig\repo_porter.py,479,out_root,"('Call', ('Attr', 'Path(args.from_out)', 'resolve'), (), ())","('Call', 0, 0)","Path,args",out_root = Path(args.from_out).resolve()
.\tools\repo_porter.py,479,out_root,"('Call', ('Attr', 'Path(args.from_out)', 'resolve'), (), ())","('Call', 0, 0)","Path,args",out_root = Path(args.from_out).resolve()
.\notwendig oder nicht\wichtig\repo_porter.py,364,out_root,"('Call', ('Attr', 'Path(args.out)', 'resolve'), (), ())","('Call', 0, 0)","Path,args",out_root = Path(args.out).resolve()
.\tools\repo_porter.py,364,out_root,"('Call', ('Attr', 'Path(args.out)', 'resolve'), (), ())","('Call', 0, 0)","Path,args",out_root = Path(args.out).resolve()
.\pdf_generator.py,658,ov_page,"('Subscript', ('Attr', 'ov_reader', 'pages'), ('Const', '0'))","('Subscript',)",ov_reader,ov_page = ov_reader.pages[0]
.\pdf_template_engine\dynamic_overlay.py,891,ov_page,"('Subscript', ('Attr', 'overlay_reader', 'pages'), ('Sub', ('Name', 'page_num'), ('Const', '1')))","('Subscript',)","overlay_reader,page_num",ov_page = overlay_reader.pages[page_num - 1]
.\pdf_generator.py,433,overlay_bytes,"('Call', ('Attr', 'buf', 'getvalue'), (), ())","('Call', 0, 0)",buf,overlay_bytes = buf.getvalue()
.\notwendig oder nicht\wichtig\portings\patches\test_product_images.py.insert.py,58,overlay_bytes,"('Call', ('Name', 'generate_overlay'), (('Name', 'coords_dir'), ('Name', 'dynamic_data')), (('total_pages', ('Const', '7')),))","('Call', 2, 1)","coords_dir,dynamic_data,generate_overlay","overlay_bytes = generate_overlay(coords_dir, dynamic_data, total_pages=7)"
.\tests\test_product_images.py,59,overlay_bytes,"('Call', ('Name', 'generate_overlay'), (('Name', 'coords_dir'), ('Name', 'dynamic_data')), (('total_pages', ('Const', '7')),))","('Call', 2, 1)","coords_dir,dynamic_data,generate_overlay","overlay_bytes = generate_overlay(coords_dir, dynamic_data, total_pages=7)"
.\tools\portings\patches\test_product_images.py.insert.py,58,overlay_bytes,"('Call', ('Name', 'generate_overlay'), (('Name', 'coords_dir'), ('Name', 'dynamic_data')), (('total_pages', ('Const', '7')),))","('Call', 2, 1)","coords_dir,dynamic_data,generate_overlay","overlay_bytes = generate_overlay(coords_dir, dynamic_data, total_pages=7)"
.\pdf_generator.py,436,overlay_bytes,"('Other', 'IfExp')","('Other', 'IfExp')",overlay_parts,"overlay_bytes = overlay_parts[0] if overlay_parts else b"""""
.\pdf_generator.py,420,overlay_bytes,"('Subscript', ('Name', 'overlay_parts'), ('Const', '0'))","('Subscript',)",overlay_parts,overlay_bytes = overlay_parts[0]
.\excel_eval.py,371,p,"('Call', ('Attr', 'argparse', 'ArgumentParser'), (('Const', ""'excel_eval'""),), ())","('Call', 1, 0)",argparse,"p = argparse.ArgumentParser(""excel_eval"")"
.\pdf_generator.py,596,p,"('Call', ('Attr', 'canv', 'beginPath'), (), ())","('Call', 0, 0)",canv,p = canv.beginPath()
.\central_pdf_system.py,458,p,"('Call', ('Attr', 'canvas', 'Canvas'), (('Name', 'buffer'),), (('pagesize', ('Name', 'A4')),))","('Call', 1, 1)","A4,buffer,canvas","p = canvas.Canvas(buffer, pagesize=A4)"
.\pdf_atomizer.py,230,p,"('Call', ('Attr', 'doc', 'load_page'), (('Name', 'i'),), ())","('Call', 1, 0)","doc,i",p = doc.load_page(i)
.\dev_tools\kakerlake_ultra_cleaner.py,516,p,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'r'), ('Name', 'fn')), ())","('Call', 2, 0)","fn,os,r","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,402,p,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'r'), ('Name', 'fn')), ())","('Call', 2, 0)","fn,os,r","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,31,p,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'r'), ('Name', 'fn')), ())","('Call', 2, 0)","fn,os,r","p=os.path.join(r,fn)"
.\mnt\data\kakerlake_ultra_cleaner.py,516,p,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'r'), ('Name', 'fn')), ())","('Call', 2, 0)","fn,os,r","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,402,p,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'r'), ('Name', 'fn')), ())","('Call', 2, 0)","fn,os,r","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\tools\kakerlake_ultra_cleaner.py,517,p,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'r'), ('Name', 'fn')), ())","('Call', 2, 0)","fn,os,r","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\dev_tools\kakerlake_ultra_cleaner.py,609,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'all'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""all""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--no-backup"", action=""store_true"")"
.\mnt\data\kakerlake_ultra_cleaner.py,609,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'all'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""all""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--no-backup"", action=""store_true"")"
.\tools\kakerlake_ultra_cleaner.py,610,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'all'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""all""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--no-backup"", action=""store_true"")"
.\dev_tools\kakerlake_ultra_cleaner.py,605,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'autopatch-annual-savings'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""autopatch-annual-savings""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--write"", action=""store_true""); p.add_argument(""--no-backup"", action=""store_true"")"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,422,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'autopatch-annual-savings'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""autopatch-annual-savings""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--write"", action=""store_true""); p.add_argument(""--no-backup"", action=""store_true""); p.add_argument(""--debug"", action=""store_true"")"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,412,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'autopatch-annual-savings'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""autopatch-annual-savings""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--write"", action=""store_true""); p.add_argument(""--no-backup"", action=""store_true""); p.add_argument(""--debug"", action=""store_true"")"
.\mnt\data\kakerlake_ultra_cleaner.py,605,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'autopatch-annual-savings'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""autopatch-annual-savings""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--write"", action=""store_true""); p.add_argument(""--no-backup"", action=""store_true"")"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,422,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'autopatch-annual-savings'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""autopatch-annual-savings""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--write"", action=""store_true""); p.add_argument(""--no-backup"", action=""store_true""); p.add_argument(""--debug"", action=""store_true"")"
.\tools\kakerlake_ultra_cleaner.py,606,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'autopatch-annual-savings'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""autopatch-annual-savings""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--write"", action=""store_true""); p.add_argument(""--no-backup"", action=""store_true"")"
.\dev_tools\kakerlake_ultra_cleaner.py,606,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'autopatch-project-data'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""autopatch-project-data""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--write"", action=""store_true""); p.add_argument(""--no-backup"", action=""store_true"")"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,423,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'autopatch-project-data'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""autopatch-project-data""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--write"", action=""store_true""); p.add_argument(""--no-backup"", action=""store_true""); p.add_argument(""--debug"", action=""store_true"")"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,413,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'autopatch-project-data'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""autopatch-project-data""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--write"", action=""store_true""); p.add_argument(""--no-backup"", action=""store_true""); p.add_argument(""--debug"", action=""store_true"")"
.\mnt\data\kakerlake_ultra_cleaner.py,606,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'autopatch-project-data'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""autopatch-project-data""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--write"", action=""store_true""); p.add_argument(""--no-backup"", action=""store_true"")"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,423,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'autopatch-project-data'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""autopatch-project-data""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--write"", action=""store_true""); p.add_argument(""--no-backup"", action=""store_true""); p.add_argument(""--debug"", action=""store_true"")"
.\tools\kakerlake_ultra_cleaner.py,607,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'autopatch-project-data'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""autopatch-project-data""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--write"", action=""store_true""); p.add_argument(""--no-backup"", action=""store_true"")"
.\dev_tools\kakerlake_ultra_cleaner.py,604,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'scan'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""scan""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports"")"
.\mnt\data\kakerlake_ultra_cleaner.py,604,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'scan'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""scan""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports"")"
.\tools\kakerlake_ultra_cleaner.py,605,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'scan'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""scan""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports"")"
.\dev_tools\kakerlake_ultra_cleaner.py,607,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'structure'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""structure""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports"")"
.\mnt\data\kakerlake_ultra_cleaner.py,607,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'structure'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""structure""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports"")"
.\tools\kakerlake_ultra_cleaner.py,608,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'structure'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""structure""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports"")"
.\dev_tools\kakerlake_ultra_cleaner.py,608,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'yaml-check'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""yaml-check""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--tol-mm"", type=float, default=0.2)"
.\mnt\data\kakerlake_ultra_cleaner.py,608,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'yaml-check'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""yaml-check""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--tol-mm"", type=float, default=0.2)"
.\tools\kakerlake_ultra_cleaner.py,609,p,"('Call', ('Attr', 'sub', 'add_parser'), (('Const', ""'yaml-check'""),), ())","('Call', 1, 0)",sub,"p=sub.add_parser(""yaml-check""); p.add_argument(""root""); p.add_argument(""--out"", default=""ultra_reports""); p.add_argument(""--tol-mm"", type=float, default=0.2)"
.\notwendig oder nicht\wichtig\repo_porter_select.py,41,p,"('Call', ('Name', 'Path'), (('Attr', 'args', 'include_file'),), ())","('Call', 1, 0)","Path,args",p = Path(args.include_file)
.\tools\repo_porter_select.py,41,p,"('Call', ('Name', 'Path'), (('Attr', 'args', 'include_file'),), ())","('Call', 1, 0)","Path,args",p = Path(args.include_file)
.\tools\count_pages.py,4,p,"('Call', ('Name', 'Path'), (('Const', ""'c:/123456/corba/out_main_full_test.pdf'""),), ())","('Call', 1, 0)",Path,p = Path('c:/123456/corba/out_main_full_test.pdf')
.\pdf_erstellen_komplett.py,109,p,"('Call', ('Name', 'Path'), (('Name', 'path'),), ())","('Call', 1, 0)","Path,path",p = Path(path)
.\tools\import_module_attributes_generic.py,526,p,"('Call', ('Name', 'Path'), (('Name', 'path'),), ())","('Call', 1, 0)","Path,path",p = Path(path)
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,46,p,"('Call', ('Name', 'Path'), (('Name', 's'),), ())","('Call', 1, 0)","Path,s",p = Path(s)
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,48,p,"('Call', ('Name', 'Path'), (('Name', 's'),), ())","('Call', 1, 0)","Path,s",p = Path(s)
.\pdf_template_engine\dynamic_overlay.py,78,p,"('Call', ('Name', 'Path'), (('Name', 's'),), ())","('Call', 1, 0)","Path,s",p = Path(s)
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,46,p,"('Call', ('Name', 'Path'), (('Name', 's'),), ())","('Call', 1, 0)","Path,s",p = Path(s)
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,48,p,"('Call', ('Name', 'Path'), (('Name', 's'),), ())","('Call', 1, 0)","Path,s",p = Path(s)
.\dev_tools\kakerlake_ultra_cleaner.py,571,p,"('Const', 'None')","('Const',)",,x=y=p=None
.\mnt\data\kakerlake_ultra_cleaner.py,571,p,"('Const', 'None')","('Const',)",,x=y=p=None
.\tools\kakerlake_ultra_cleaner.py,572,p,"('Const', 'None')","('Const',)",,x=y=p=None
.\notwendig oder nicht\wichtig\repo_porter_select.py,188,p,"('Div', ('Name', 'src'), ('Name', 'name'))","('Div', ('Name',), ('Name',))","name,src",p = src / name
.\tools\repo_porter_select.py,188,p,"('Div', ('Name', 'src'), ('Name', 'name'))","('Div', ('Name',), ('Name',))","name,src",p = src / name
.\dev_tools\kakerlake_ultra_cleaner.py,569,p,"('Other', 'IfExp')","('Other', 'IfExp')","int,o,pg",p=int(o[pg]) if pg and o.get(pg) is not None else None
.\mnt\data\kakerlake_ultra_cleaner.py,569,p,"('Other', 'IfExp')","('Other', 'IfExp')","int,o,pg",p=int(o[pg]) if pg and o.get(pg) is not None else None
.\tools\kakerlake_ultra_cleaner.py,570,p,"('Other', 'IfExp')","('Other', 'IfExp')","int,o,pg",p=int(o[pg]) if pg and o.get(pg) is not None else None
.\admin_panel.py,921,p_add_cost_form,"('Call', ('Attr', 'st', 'number_input'), (), (('format', ('Const', ""'%.2f'"")), ('key', ('Other', 'JoinedStr')), ('label', ('Call', ('Name', 'get_text_local'), (('Const', ""'product_additional_cost_netto_label'""), ('Const', ""'Zusatzkosten Netto (€)'"")), ())), ('min_value', ('Const', '0.0')), ('step', ('Const', '0.01')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'additional_cost_netto'""), ('Const', '0.0')), ()),), ()))))","('Call', 0, 6)","float,form_key_manual_prod_ui,get_text_local,product_data_for_manual_form,st","p_add_cost_form = st.number_input(label=get_text_local(""product_additional_cost_netto_label"",""Zusatzkosten Netto (€)""), min_value=0.0, value=float(product_data_for_manual_form.get('additional_cost_netto', 0.0)),step=0.01,format=""%.2f"", key=f""{form_key_manual_prod_ui}_add_cost_man"")"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,29,p_add_cost_form,"('Const', '0.0')","('Const',)",,p_add_cost_form = 0.0
.\tests\test_admin_workflow.py,29,p_add_cost_form,"('Const', '0.0')","('Const',)",,p_add_cost_form = 0.0
.\tools\portings\patches\test_admin_workflow.py.insert.py,29,p_add_cost_form,"('Const', '0.0')","('Const',)",,p_add_cost_form = 0.0
.\admin_panel.py,919,p_brand_form,"('Call', ('Attr', 'st', 'text_input'), (), (('key', ('Other', 'JoinedStr')), ('label', ('Call', ('Name', 'get_text_local'), (('Const', ""'product_brand_label'""), ('Const', ""'Hersteller'"")), ())), ('value', ('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'brand'""), ('Const', ""''"")), ()))))","('Call', 0, 3)","form_key_manual_prod_ui,get_text_local,product_data_for_manual_form,st","p_brand_form = st.text_input(label=get_text_local(""product_brand_label"",""Hersteller""), value=product_data_for_manual_form.get('brand', ''), key=f""{form_key_manual_prod_ui}_brand_man"")"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,27,p_brand_form,"('Const', ""'Test Brand'"")","('Const',)",,"p_brand_form = ""Test Brand"""
.\tests\test_admin_workflow.py,27,p_brand_form,"('Const', ""'Test Brand'"")","('Const',)",,"p_brand_form = ""Test Brand"""
.\tools\portings\patches\test_admin_workflow.py.insert.py,27,p_brand_form,"('Const', ""'Test Brand'"")","('Const',)",,"p_brand_form = ""Test Brand"""
.\admin_panel.py,918,p_category_form,"('Call', ('Attr', 'st', 'selectbox'), (), (('disabled', ('Not', ('Name', 'available_cats_form'))), ('index', ('Name', 'default_cat_idx')), ('key', ('Other', 'JoinedStr')), ('label', ('Call', ('Name', 'get_text_local'), (('Const', ""'product_category_label'""), ('Const', ""'Kategorie*'"")), ())), ('options', ('Name', 'available_cats_form'))))","('Call', 0, 5)","available_cats_form,default_cat_idx,form_key_manual_prod_ui,get_text_local,st","p_category_form = st.selectbox(label=get_text_local(""product_category_label"",""Kategorie*""), options=available_cats_form, index=default_cat_idx, key=f""{form_key_manual_prod_ui}_category_man"", disabled=not available_cats_form)"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,26,p_category_form,"('Const', ""'Modul'"")","('Const',)",,"p_category_form = ""Modul"""
.\tests\test_admin_workflow.py,26,p_category_form,"('Const', ""'Modul'"")","('Const',)",,"p_category_form = ""Modul"""
.\tools\portings\patches\test_admin_workflow.py.insert.py,26,p_category_form,"('Const', ""'Modul'"")","('Const',)",,"p_category_form = ""Modul"""
.\admin_panel.py,973,p_description_form_val,"('Call', ('Attr', 'st', 'text_area'), (('Call', ('Name', 'get_text_local'), (('Const', ""'product_description_label'""), ('Const', ""'Beschreibung'"")), ()),), (('height', ('Const', '100')), ('key', ('Other', 'JoinedStr')), ('value', ('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'description'""), ('Const', ""''"")), ()))))","('Call', 1, 3)","form_key_manual_prod_ui,get_text_local,product_data_for_manual_form,st","p_description_form_val = st.text_area(get_text_local(""product_description_label"",""Beschreibung""), value=product_data_for_manual_form.get('description', ''), height=100, key=f""{form_key_manual_prod_ui}_desc_man"")"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,31,p_description_form_val,"('Const', ""'Test Beschreibung'"")","('Const',)",,"p_description_form_val = ""Test Beschreibung"""
.\tests\test_admin_workflow.py,31,p_description_form_val,"('Const', ""'Test Beschreibung'"")","('Const',)",,"p_description_form_val = ""Test Beschreibung"""
.\tools\portings\patches\test_admin_workflow.py.insert.py,31,p_description_form_val,"('Const', ""'Test Beschreibung'"")","('Const',)",,"p_description_form_val = ""Test Beschreibung"""
.\admin_panel.py,967,p_efficiency_percent_val,"('Call', ('Attr', 'st', 'number_input'), (), (('format', ('Const', ""'%.2f'"")), ('key', ('Other', 'JoinedStr')), ('label', ('Call', ('Name', 'get_text_local'), (('Const', ""'inverter_max_efficiency_percent_label'""), ('Const', ""'Max. Wirkungsgrad (%)'"")), ())), ('max_value', ('Const', '100.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '0.01')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'efficiency_percent'""), ('Const', '0.0')), ()),), ()))))","('Call', 0, 7)","float,form_key_manual_prod_ui,get_text_local,product_data_for_manual_form,st","p_efficiency_percent_val = st.number_input(label=get_text_local(""inverter_max_efficiency_percent_label"",""Max. Wirkungsgrad (%)""), min_value=0.0,max_value=100.0, value=float(product_data_for_manual_form.get('efficiency_percent', 0.0)),step=0.01,format=""%.2f"", key=f""{form_key_manual_prod_ui}_eff_inv_man"")"
.\admin_panel.py,960,p_efficiency_percent_val,"('Call', ('Attr', 'st', 'number_input'), (), (('format', ('Const', ""'%.2f'"")), ('key', ('Other', 'JoinedStr')), ('label', ('Call', ('Name', 'get_text_local'), (('Const', ""'module_efficiency_percent_label'""), ('Const', ""'Wirkungsgrad (%)'"")), ())), ('max_value', ('Const', '100.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '0.01')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'efficiency_percent'""), ('Const', '0.0')), ()),), ()))))","('Call', 0, 7)","float,form_key_manual_prod_ui,get_text_local,product_data_for_manual_form,st","p_efficiency_percent_val = st.number_input(label=get_text_local(""module_efficiency_percent_label"",""Wirkungsgrad (%)""), min_value=0.0,max_value=100.0, value=float(product_data_for_manual_form.get('efficiency_percent', 0.0)),step=0.01,format=""%.2f"", key=f""{form_key_manual_prod_ui}_eff_mod_man"")"
.\admin_panel.py,912,p_model_name_form,"('Call', ('Attr', 'st', 'text_input'), (), (('key', ('Other', 'JoinedStr')), ('label', ('Call', ('Name', 'get_text_local'), (('Const', ""'product_model_name_label'""), ('Const', ""'Modellname*'"")), ())), ('value', ('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'model_name'""), ('Const', ""''"")), ()))))","('Call', 0, 3)","form_key_manual_prod_ui,get_text_local,product_data_for_manual_form,st","p_model_name_form = st.text_input(label=get_text_local(""product_model_name_label"",""Modellname*""), value=product_data_for_manual_form.get('model_name', ''), key=f""{form_key_manual_prod_ui}_model_name_man"")"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,25,p_model_name_form,"('Const', ""'Admin Test Produkt'"")","('Const',)",,"p_model_name_form = ""Admin Test Produkt"""
.\tests\test_admin_workflow.py,25,p_model_name_form,"('Const', ""'Admin Test Produkt'"")","('Const',)",,"p_model_name_form = ""Admin Test Produkt"""
.\tools\portings\patches\test_admin_workflow.py.insert.py,25,p_model_name_form,"('Const', ""'Admin Test Produkt'"")","('Const',)",,"p_model_name_form = ""Admin Test Produkt"""
.\admin_panel.py,966,p_power_kw_val,"('Call', ('Attr', 'st', 'number_input'), (), (('key', ('Other', 'JoinedStr')), ('label', ('Call', ('Name', 'get_text_local'), (('Const', ""'inverter_power_kw_label'""), ('Const', ""'Nennleistung AC (kW)'"")), ())), ('min_value', ('Const', '0.0')), ('step', ('Const', '0.1')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'power_kw'""), ('Const', '0.0')), ()),), ()))))","('Call', 0, 5)","float,form_key_manual_prod_ui,get_text_local,product_data_for_manual_form,st","p_power_kw_val = st.number_input(label=get_text_local(""inverter_power_kw_label"",""Nennleistung AC (kW)""), min_value=0.0, value=float(product_data_for_manual_form.get('power_kw', 0.0)), step=0.1, key=f""{form_key_manual_prod_ui}_power_kw_inv_man"")"
.\admin_panel.py,970,p_power_kw_val,"('Call', ('Attr', 'st', 'number_input'), (), (('key', ('Other', 'JoinedStr')), ('label', ('Call', ('Name', 'get_text_local'), (('Const', ""'storage_max_charge_discharge_storage_power_kw_label'""), ('Const', ""'Max. Lade-/Entladeleistung (kW)'"")), ())), ('min_value', ('Const', '0.0')), ('step', ('Const', '0.1')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'power_kw'""), ('Const', '0.0')), ()),), ()))))","('Call', 0, 5)","float,form_key_manual_prod_ui,get_text_local,product_data_for_manual_form,st","p_power_kw_val = st.number_input(label=get_text_local(""storage_max_charge_discharge_storage_power_kw_label"",""Max. Lade-/Entladeleistung (kW)""),min_value=0.0,value=float(product_data_for_manual_form.get('power_kw', 0.0)),step=0.1, key=f""{form_key_manual_prod_ui}_storage_power_man"")"
.\admin_panel.py,920,p_price_form,"('Call', ('Attr', 'st', 'number_input'), (), (('format', ('Const', ""'%.2f'"")), ('key', ('Other', 'JoinedStr')), ('label', ('Call', ('Name', 'get_text_local'), (('Const', ""'product_price_euro_label'""), ('Const', ""'Preis (€)'"")), ())), ('min_value', ('Const', '0.0')), ('step', ('Const', '0.01')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'price_euro'""), ('Const', '0.0')), ()),), ()))))","('Call', 0, 6)","float,form_key_manual_prod_ui,get_text_local,product_data_for_manual_form,st","p_price_form = st.number_input(label=get_text_local(""product_price_euro_label"",""Preis (€)""), min_value=0.0, value=float(product_data_for_manual_form.get('price_euro', 0.0)), step=0.01, format=""%.2f"", key=f""{form_key_manual_prod_ui}_price_man"")"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,28,p_price_form,"('Const', '500.0')","('Const',)",,p_price_form = 500.0
.\tests\test_admin_workflow.py,28,p_price_form,"('Const', '500.0')","('Const',)",,p_price_form = 500.0
.\tools\portings\patches\test_admin_workflow.py.insert.py,28,p_price_form,"('Const', '500.0')","('Const',)",,p_price_form = 500.0
.\admin_panel.py,922,p_warranty_form,"('Call', ('Attr', 'st', 'number_input'), (), (('key', ('Other', 'JoinedStr')), ('label', ('Call', ('Name', 'get_text_local'), (('Const', ""'product_warranty_years_label'""), ('Const', ""'Garantie (Jahre)'"")), ())), ('min_value', ('Const', '0')), ('step', ('Const', '1')), ('value', ('Call', ('Name', 'int'), (('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'warranty_years'""), ('Const', '0')), ()),), ()))))","('Call', 0, 5)","form_key_manual_prod_ui,get_text_local,int,product_data_for_manual_form,st","p_warranty_form = st.number_input(label=get_text_local(""product_warranty_years_label"",""Garantie (Jahre)""), min_value=0, value=int(product_data_for_manual_form.get('warranty_years', 0)), step=1, key=f""{form_key_manual_prod_ui}_warranty_man"")"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,30,p_warranty_form,"('Const', '10')","('Const',)",,p_warranty_form = 10
.\tests\test_admin_workflow.py,30,p_warranty_form,"('Const', '10')","('Const',)",,p_warranty_form = 10
.\tools\portings\patches\test_admin_workflow.py.insert.py,30,p_warranty_form,"('Const', '10')","('Const',)",,p_warranty_form = 10
.\utils\export_coords.py,15,page,"('Subscript', ('Attr', 'doc', 'pages'), ('Const', '0'))","('Subscript',)",doc,page = doc.pages[0]                   # jede deiner Vorlagen hat 1 Seite
.\pdf_preview.py,98,page,"('Subscript', ('Name', 'pdf_document'), ('Name', 'page_num'))","('Subscript',)","page_num,pdf_document",page = pdf_document[page_num]
.\pdf_preview.py,341,page,"('Subscript', ('Name', 'pdf_document'), ('Name', 'page_num'))","('Subscript',)","page_num,pdf_document",page = pdf_document[page_num]
.\pdf_generator.py,650,page_num,"('Add', (('Name', 'idx'), ('Name', 'start_number')))","('Add', (('Name',), ('Name',)))","idx,start_number",page_num = start_number + idx
.\pdf_generator.py,108,page_num,"('Call', ('Attr', 'canvas', 'getPageNumber'), (), ())","('Call', 0, 0)",canvas,page_num = canvas.getPageNumber()
.\pdf_generator.py,1344,page_num,"('Call', ('Attr', 'canvas_obj', 'getPageNumber'), (), ())","('Call', 0, 0)",canvas_obj,page_num = canvas_obj.getPageNumber()
.\pdf_preview.py,286,page_num,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Seite'""),), (('key', ('Const', ""'page_selector'"")), ('max_value', ('Name', 'total_pages')), ('min_value', ('Const', '1')), ('value', ('Add', (('Attr', 'st.session_state', 'preview_current_page'), ('Const', '1'))))))","('Call', 1, 4)","st,total_pages",page_num = st.number_input(
.\pdf_styles.py,1059,palette,"('Call', ('Attr', 'self', '_generate_color_palette'), (('Name', 'base_color'),), ())","('Call', 1, 0)","base_color,self",palette = self._generate_color_palette(base_color)
.\pdf_styles.py,1116,palette,"('List', ())","('List', 0)",,palette = []
.\data_input.py,112,params,"('Dict', (('KV', ('Const', ""'address'""), ('Name', 'full_query_address')), ('KV', ('Const', ""'key'""), ('Name', 'api_key'))))","('Dict', 2)","api_key,full_query_address","params = {""address"": full_query_address, ""key"": api_key}"
.\calculations.py,2205,params,"('Dict', (('KV', ('Const', ""'angle'""), ('Name', 'tilt')), ('KV', ('Const', ""'aspect'""), ('Name', 'azimuth')), ('KV', ('Const', ""'browser'""), ('Const', '0')), ('KV', ('Const', ""'lat'""), ('Name', 'latitude')), ('KV', ('Const', ""'lon'""), ('Name', 'longitude')), ('KV', ('Const', ""'loss'""), ('Name', 'system_loss_percent')), ('KV', ('Const', ""'mountingplace'""), ('Const', ""'building'"")), ('KV', ('Const', ""'outputformat'""), ('Const', ""'json'"")), ('KV', ('Const', ""'peakpower'""), ('Name', 'peak_power_kwp')), ('KV', ('Const', ""'pvtechchoice'""), ('Const', ""'crystSi'""))))","('Dict', 10)","azimuth,latitude,longitude,peak_power_kwp,system_loss_percent,tilt",params = {
.\data_input.py,146,params,"('Dict', (('KV', ('Const', ""'center'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'key'""), ('Name', 'api_key')), ('KV', ('Const', ""'maptype'""), ('Const', ""'satellite'"")), ('KV', ('Const', ""'size'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'zoom'""), ('Call', ('Name', 'str'), (('Name', 'zoom'),), ()))))","('Dict', 5)","api_key,height,latitude,longitude,str,width,zoom","params = { ""center"": f""{latitude},{longitude}"", ""zoom"": str(zoom), ""size"": f""{width}x{height}"", ""maptype"": ""satellite"", ""key"": api_key }"
.\crm_calendar_ui.py,430,params,"('List', ())","('List', 0)",,params = []
.\crm_pipeline_ui.py,658,params,"('List', ())","('List', 0)",,params = []
.\product_db.py,216,params,"('List', ())","('List', 0)",,"query = ""SELECT * FROM products""; params: List[Any] = []"
.\database.py,1724,params,"('Tuple', (('Name', 'company_id'),))","('Tuple', 1)",company_id,"params: Tuple = (company_id,)    # <- Typisierung über `Tuple`, nicht `Tuple`"
.\notwendig oder nicht\wichtig\repo_porter.py,548,parent_class,"('Call', ('Attr', ""row['parent_class']"", 'strip'), (), ())","('Call', 0, 0)",row,"parent_class = row[""parent_class""].strip()"
.\tools\repo_porter.py,548,parent_class,"('Call', ('Attr', ""row['parent_class']"", 'strip'), (), ())","('Call', 0, 0)",row,"parent_class = row[""parent_class""].strip()"
.\notwendig oder nicht\wichtig\repo_porter.py,69,parent_class,"('Const', 'None')","('Const',)",,parent_class: Optional[str] = None  # für Methoden
.\tools\repo_porter.py,69,parent_class,"('Const', 'None')","('Const',)",,parent_class: Optional[str] = None  # für Methoden
.\data_input.py,261,parsed_data,"('Call', ('Name', 'parse_full_address_string'), (('Name', 'full_address_input_val'), ('Name', 'texts')), ())","('Call', 2, 0)","full_address_input_val,parse_full_address_string,texts","parsed_data=parse_full_address_string(full_address_input_val,texts)"
.\data_input.py,65,parsed_data,"('Dict', (('KV', ('Const', ""'city'""), ('Const', ""''"")), ('KV', ('Const', ""'house_number'""), ('Const', ""''"")), ('KV', ('Const', ""'street'""), ('Const', ""''"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""''""))))","('Dict', 4)",,"parsed_data = {""street"": """", ""house_number"": """", ""zip_code"": """", ""city"": """"}"
.\analysis.py,243,parts,"('Call', ('Attr', 'formatted_num_str', 'split'), (('Const', ""'.'""),), ())","('Call', 1, 0)",formatted_num_str,"parts = formatted_num_str.split(""."")"
.\data_input.py,74,parts,"('Call', ('Attr', 'full_address', 'split'), (('Const', ""','""),), ())","('Call', 1, 0)",full_address,"parts = full_address.split(',')"
.\pdf_generator.py,1816,parts,"('Call', ('Attr', 'fullname.strip()', 'split'), (), ())","('Call', 0, 0)",fullname,parts = fullname.strip().split()
.\notwendig oder nicht\wichtig\repo_porter_select.py,166,parts,"('List', ())","('List', 0)",,parts: List[str] = []
.\pdf_template_engine\placeholders.py,2142,parts,"('List', ())","('List', 0)",,parts=[]
.\tools\import_module_attributes_generic.py,134,parts,"('List', ())","('List', 0)",,parts: List[str] = []
.\tools\repo_porter_select.py,166,parts,"('List', ())","('List', 0)",,parts: List[str] = []
.\tools\schema_extractor.py,37,parts,"('Other', 'ListComp')","('Other', 'ListComp')","body,p,split_top_level",parts = [p.strip() for p in split_top_level(body)]
.\pdf_template_engine\dynamic_overlay.py,307,path,"('Call', ('Attr', 'c', 'beginPath'), (), ())","('Call', 0, 0)",c,path = c.beginPath()
.\admin_product_attributes_ui.py,19,path,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Pfad für Export'""),), (('key', ('Const', ""'exp_path'"")), ('value', ('Const', ""'attributes_export.csv'""))))","('Call', 1, 2)",st,"path = st.text_input(""Pfad für Export"", value=""attributes_export.csv"", key=""exp_path"")"
.\excel_eval.py,141,path,"('Call', ('Name', 'Path'), (('Name', 'path'),), ())","('Call', 1, 0)","Path,path",path = Path(path)
.\crm.py,498,path,"('Call', ('Name', '_get_customer_document_file_path'), (('Call', ('Attr', 'd', 'get'), (('Const', ""'id'""),), ()),), ())","('Call', 1, 0)","_get_customer_document_file_path,d","path = _get_customer_document_file_path(d.get(""id""))"
.\excel_eval.py,72,path,"('Call', ('Name', 'str'), (('Name', 'path'),), ())","('Call', 1, 0)","path,str",path = str(path)
.\tools\kakerlake_ultra_cleaner.py,638,path,"('Const', ""'/mnt/data/kakerlake_ultra_cleaner.py'"")","('Const',)",,"path = ""/mnt/data/kakerlake_ultra_cleaner.py"""
.\notwendig oder nicht\excel_range_reader.py,38,path,"('Div', ('Name', 'BASE'), ('Other', 'JoinedStr'))","('Div', ('Name',), ('Other', 'JoinedStr'))","BASE,sheet_name","path = BASE / f""cells_{sheet_name}.csv.gz"""
.\notwendig oder nicht\wichtig\repo_porter_select.py,39,pats,"('Call', ('Name', 'list'), (('BoolOp', 'Or', (('Attr', 'args', 'include'), ('List', ()))),), ())","('Call', 1, 0)","args,list",pats = list(args.include or [])
.\tools\repo_porter_select.py,39,pats,"('Call', ('Name', 'list'), (('BoolOp', 'Or', (('Attr', 'args', 'include'), ('List', ()))),), ())","('Call', 1, 0)","args,list",pats = list(args.include or [])
.\notwendig oder nicht\wichtig\repo_porter_select.py,123,pats,"('Call', ('Name', 'load_patterns'), (('Name', 'args'),), ())","('Call', 1, 0)","args,load_patterns",pats = load_patterns(args)
.\tools\repo_porter_select.py,123,pats,"('Call', ('Name', 'load_patterns'), (('Name', 'args'),), ())","('Call', 1, 0)","args,load_patterns",pats = load_patterns(args)
.\pdf_styles.py,777,pattern,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Muster'""),), (('format_func', ('Other', 'Lambda')), ('options', ('List', (('Const', ""'gradient'""), ('Const', ""'dots'""), ('Const', ""'lines'""), ('Const', ""'hexagon'""))))))","('Call', 1, 2)","st,x",pattern = st.selectbox(
.\analysis_utils.py,325,pattern,"('Const', ""'-?\\\\d+(?:\\\\.\\\\d+)?'"")","('Const',)",,pattern = r'-?\d+(?:\.\d+)?'
.\calculations_heatpump.py,120,payback_period_years,"('Call', ('Name', 'float'), (('Const', ""'inf'""),), ())","('Call', 1, 0)",float,payback_period_years = float('inf')
.\calculations_heatpump.py,118,payback_period_years,"('Div', ('Name', 'investment_cost'), ('Name', 'annual_savings'))","('Div', ('Name',), ('Name',))","annual_savings,investment_cost",payback_period_years = investment_cost / annual_savings
.\heatpump_pricing.py,134,pct,"('Attr', 'cfg', 'base_pct')","('Attr',)",cfg,pct = cfg.base_pct
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,79,pct,"('Attr', 'cfg', 'base_pct')","('Attr',)",cfg,pct = cfg.base_pct
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,79,pct,"('Attr', 'cfg', 'base_pct')","('Attr',)",cfg,pct = cfg.base_pct
.\analysis.py,404,pct,"('Call', ('Name', 'float'), (('Call', ('Attr', 'cheat', 'get'), (('Const', ""'percent'""),), ()),), ())","('Call', 1, 0)","cheat,float","pct = float(cheat.get(""percent""))"
.\calculations.py,3335,pct,"('Call', ('Name', 'float'), (('Name', 'cheated_percent'),), ())","('Call', 1, 0)","cheated_percent,float",pct = float(cheated_percent)
.\analysis.py,406,pct,"('Call', ('Name', 'min'), (('Const', '95.0'), ('Call', ('Name', 'max'), (('Const', '0.0'), ('Name', 'pct')), ())), ())","('Call', 2, 0)","max,min,pct","pct = min(95.0, max(0.0, pct))"
.\calculations.py,3337,pct,"('Call', ('Name', 'min'), (('Const', '95.0'), ('Call', ('Name', 'max'), (('Const', '0.0'), ('Name', 'pct')), ())), ())","('Call', 2, 0)","max,min,pct","pct = min(95.0, max(0.0, pct))"
.\pdf_template_engine\placeholders.py,1346,pct_str,"('Call', ('Name', 'as_str'), (('Name', 'perf_pct'),), ())","('Call', 1, 0)","as_str,perf_pct",pct_str = as_str(perf_pct)
.\pdf_template_engine\placeholders.py,1344,pct_str,"('Call', ('Name', 'fmt_number'), (('Call', ('Name', 'float'), (('Name', 'perf_pct'),), ()), ('Const', '0'), ('Const', ""'%'"")), ())","('Call', 3, 0)","float,fmt_number,perf_pct","pct_str = fmt_number(float(perf_pct), 0, ""%"")"
.\solar_calculator.py,40,pd,"('Attr', 'st.session_state', 'project_data')","('Attr',)",st,pd = st.session_state.project_data
.\pdf_generator.py,1812,pd,"('BoolOp', 'Or', (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'project_details'""),), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",project_data,pd = project_data.get('project_details') or {}
.\pdf_generator.py,1826,pd,"('BoolOp', 'Or', (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'project_details'""),), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",project_data,pd = project_data.get('project_details') or {}
.\solar_calculator.py,79,pd,"('Call', ('Name', '_ensure_project_data_dicts'), (), ())","('Call', 0, 0)",_ensure_project_data_dicts,pd = _ensure_project_data_dicts()
.\pdf_preview.py,236,pdf_bytes,"('Attr', 'st.session_state', 'preview_pdf_bytes')","('Attr',)",st,pdf_bytes = st.session_state.preview_pdf_bytes
.\central_pdf_system.py,1898,pdf_bytes,"('Call', ('Attr', 'PDF_MANAGER', 'generate_pdf'), (), (('**', ('Name', 'kwargs')), ('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info')), ('company_logo_base64', ('Call', ('Attr', 'company_info', 'get'), (('Const', ""'logo_base64'""),), ())), ('include_business_certifications', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_business_certifications'""), ('Const', 'False')), ())), ('include_business_company_profile', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_business_company_profile'""), ('Const', 'False')), ())), ('include_business_financing', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_business_financing'""), ('Const', 'False')), ())), ('include_business_installation', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_business_installation'""), ('Const', 'False')), ())), ('include_business_insurance', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_business_insurance'""), ('Const', 'False')), ())), ('include_business_maintenance', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_business_maintenance'""), ('Const', 'False')), ())), ('include_business_references', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_business_references'""), ('Const', 'False')), ())), ('include_business_warranty', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_business_warranty'""), ('Const', 'False')), ())), ('include_certifications_tom90', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_certifications_tom90'""), ('Const', 'False')), ())), ('include_chart_descriptions', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_chart_descriptions'""), ('Const', 'True')), ())), ('include_chart_kpis', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_chart_kpis'""), ('Const', 'True')), ())), ('include_company_documents', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_company_documents'""), ('Const', 'True')), ())), ('include_company_profile_tom90', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_company_profile_tom90'""), ('Const', 'False')), ())), ('include_enhanced_charts', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_enhanced_charts'""), ('Const', 'True')), ())), ('include_financing_tom90', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_financing_tom90'""), ('Const', 'False')), ())), ('include_installation_tom90', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_installation_tom90'""), ('Const', 'False')), ())), ('include_insurance_tom90', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_insurance_tom90'""), ('Const', 'False')), ())), ('include_maintenance_tom90', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_maintenance_tom90'""), ('Const', 'False')), ())), ('include_pdf_attachments', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_pdf_attachments'""), ('Const', 'False')), ())), ('include_product_datasheets', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_product_datasheets'""), ('Const', 'True')), ())), ('include_references_tom90', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_references_tom90'""), ('Const', 'False')), ())), ('include_warranty_tom90', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'include_warranty_tom90'""), ('Const', 'False')), ())), ('inclusion_options', ('Name', 'inclusion_options')), ('layout_choice', ('Name', 'layout_choice')), ('project_data', ('Name', 'project_data')), ('sections_to_include', ('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'selected_sections'""), ('List', ())), ())), ('selected_cover_letter_text', ('Call', ('Attr', 'template_data', 'get'), (('Const', ""'cover_letter_text'""),), ())), ('selected_offer_title_text', ('Call', ('Attr', 'template_data', 'get'), (('Const', ""'offer_title_text'""),), ())), ('selected_title_image_b64', ('Call', ('Attr', 'template_data', 'get'), (('Const', ""'title_image_b64'""),), ())), ('texts', ('Name', 'texts'))))","('Call', 0, 34)","PDF_MANAGER,analysis_results,company_info,inclusion_options,kwargs,layout_choice,project_data,template_data,texts",pdf_bytes = PDF_MANAGER.generate_pdf(
.\gui.py,498,pdf_bytes,"('Call', ('Attr', 'doc_output_module', 'generate_simple_pdf'), (('Name', 'project_data_fallback'), ('Name', 'calc_results_fallback')), ())","('Call', 2, 0)","calc_results_fallback,doc_output_module,project_data_fallback",pdf_bytes = doc_output_module.generate_simple_pdf(
.\pdf_preview.py,207,pdf_bytes,"('Call', ('Attr', 'engine', 'generate_preview_pdf'), (), (('active_company_id', ('Name', 'active_company_id')), ('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info')), ('company_logo_base64', ('Call', ('Attr', 'company_info', 'get'), (('Const', ""'logo_base64'""),), ())), ('db_list_company_documents_func', ('Name', 'db_list_company_documents_func')), ('force_refresh', ('Const', 'True')), ('get_product_by_id_func', ('Name', 'get_product_by_id_func')), ('inclusion_options', ('Name', 'inclusion_options')), ('list_products_func', ('Name', 'list_products_func')), ('load_admin_setting_func', ('Name', 'load_admin_setting_func')), ('project_data', ('Name', 'project_data')), ('save_admin_setting_func', ('Name', 'save_admin_setting_func')), ('sections_to_include', ('List', (('Const', ""'ProjectOverview'""), ('Const', ""'TechnicalComponents'""), ('Const', ""'CostDetails'"")))), ('selected_cover_letter_text', ('Const', ""''"")), ('selected_offer_title_text', ('Const', ""'Ihr Photovoltaik-Angebot'"")), ('selected_title_image_b64', ('Const', 'None')), ('texts', ('Name', 'texts'))))","('Call', 0, 17)","active_company_id,analysis_results,company_info,db_list_company_documents_func,engine,get_product_by_id_func,inclusion_options,list_products_func,load_admin_setting_func,project_data,save_admin_setting_func,texts",pdf_bytes = engine.generate_preview_pdf(
.\pdf_helpers.py,105,pdf_bytes,"('Call', ('Attr', 'final_buffer', 'getvalue'), (), ())","('Call', 0, 0)",final_buffer,pdf_bytes = final_buffer.getvalue()
.\multi_offer_generator.py,719,pdf_bytes,"('Call', ('Attr', 'item', 'get'), (('Const', ""'bytes'""),), ())","('Call', 1, 0)",item,pdf_bytes = item.get('bytes')
.\central_pdf_system.py,2035,pdf_bytes,"('Call', ('Attr', 'self', 'generate_pdf_central'), (), (('active_company_id', ('Name', 'active_company_id')), ('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info')), ('db_list_company_documents_func', ('Name', 'db_list_company_documents_func')), ('get_product_by_id_func', ('Name', 'get_product_by_id_func')), ('inclusion_options', ('Name', 'inclusion_options')), ('layout_choice', ('Name', 'selected_layout')), ('list_products_func', ('Name', 'list_products_func')), ('load_admin_setting_func', ('Name', 'load_admin_setting_func')), ('project_data', ('Name', 'project_data')), ('save_admin_setting_func', ('Name', 'save_admin_setting_func')), ('template_data', ('Name', 'template_data')), ('texts', ('Name', 'texts'))))","('Call', 0, 13)","active_company_id,analysis_results,company_info,db_list_company_documents_func,get_product_by_id_func,inclusion_options,list_products_func,load_admin_setting_func,project_data,save_admin_setting_func,selected_layout,self,template_data,texts",pdf_bytes = self.generate_pdf_central(
.\pdf_ui.py,1106,pdf_bytes,"('Call', ('Name', '_create_no_data_fallback_pdf'), (), (('customer_data', ('Call', ('Attr', 'project_data', 'get'), (('Const', ""'customer_data'""), ('Dict', ())), ())), ('texts', ('Name', 'texts'))))","('Call', 0, 2)","_create_no_data_fallback_pdf,project_data,texts",pdf_bytes = _create_no_data_fallback_pdf(
.\doc_output.py,2338,pdf_bytes,"('Call', ('Name', '_generate_offer_pdf_safe'), (), (('active_company_id', ('Name', 'active_company_id_for_docs')), ('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info_for_pdf')), ('company_logo_base64', ('Name', 'company_logo_b64_for_pdf')), ('db_list_company_documents_func', ('Name', 'db_list_company_documents_func')), ('get_product_by_id_func', ('Name', 'get_product_by_id_func')), ('inclusion_options', ('Name', 'final_inclusion_options_to_pass')), ('list_products_func', ('Name', 'list_products_func')), ('load_admin_setting_func', ('Name', 'load_admin_setting_func')), ('project_data', ('Name', 'enhanced_project_data')), ('save_admin_setting_func', ('Name', 'save_admin_setting_func')), ('sections_to_include', ('Name', 'final_sections_to_include_to_pass')), ('selected_cover_letter_text', ('Attr', 'st.session_state', 'selected_cover_letter_text_content_doc_output')), ('selected_offer_title_text', ('Attr', 'st.session_state', 'selected_offer_title_text_content_doc_output')), ('selected_title_image_b64', ('Attr', 'st.session_state', 'selected_title_image_b64_data_doc_output')), ('texts', ('Name', 'texts'))))","('Call', 0, 16)","_generate_offer_pdf_safe,active_company_id_for_docs,analysis_results,company_info_for_pdf,company_logo_b64_for_pdf,db_list_company_documents_func,enhanced_project_data,final_inclusion_options_to_pass,final_sections_to_include_to_pass,get_product_by_id_func,list_products_func,load_admin_setting_func,save_admin_setting_func,st,texts",pdf_bytes = _generate_offer_pdf_safe(
.\pdf_ui.py,1141,pdf_bytes,"('Call', ('Name', '_generate_offer_pdf_safe'), (), (('active_company_id', ('Name', 'active_company_id_for_docs')), ('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info_for_pdf')), ('company_logo_base64', ('Name', 'company_logo_b64_for_pdf')), ('db_list_company_documents_func', ('Name', 'db_list_company_documents_func')), ('get_product_by_id_func', ('Name', 'get_product_by_id_func')), ('inclusion_options', ('Name', 'final_inclusion_options_to_pass')), ('list_products_func', ('Name', 'list_products_func')), ('load_admin_setting_func', ('Name', 'load_admin_setting_func')), ('project_data', ('Name', 'project_data')), ('save_admin_setting_func', ('Name', 'save_admin_setting_func')), ('sections_to_include', ('Name', 'final_sections_to_include_to_pass')), ('selected_cover_letter_text', ('Attr', 'st.session_state', 'selected_cover_letter_text_content_doc_output')), ('selected_offer_title_text', ('Attr', 'st.session_state', 'selected_offer_title_text_content_doc_output')), ('selected_title_image_b64', ('Attr', 'st.session_state', 'selected_title_image_b64_data_doc_output')), ('texts', ('Name', 'texts'))))","('Call', 0, 16)","_generate_offer_pdf_safe,active_company_id_for_docs,analysis_results,company_info_for_pdf,company_logo_b64_for_pdf,db_list_company_documents_func,final_inclusion_options_to_pass,final_sections_to_include_to_pass,get_product_by_id_func,list_products_func,load_admin_setting_func,project_data,save_admin_setting_func,st,texts",pdf_bytes = _generate_offer_pdf_safe(
.\doc_output.py,2224,pdf_bytes,"('Call', ('Name', 'create_fallback_pdf'), (), (('issues', ('Subscript', ('Name', 'validation_result'), ('Const', ""'missing_data'""))), ('texts', ('Name', 'texts')), ('warnings', ('Subscript', ('Name', 'validation_result'), ('Const', ""'warnings'"")))))","('Call', 0, 3)","create_fallback_pdf,texts,validation_result",pdf_bytes = create_fallback_pdf(
.\doc_output.py,2316,pdf_bytes,"('Call', ('Name', 'enhance_pdf_generation_with_modern_design'), (), (('db_list_company_documents_func', ('Name', 'db_list_company_documents_func')), ('get_product_by_id_func', ('Name', 'get_product_by_id_func')), ('list_products_func', ('Name', 'list_products_func')), ('load_admin_setting_func', ('Name', 'load_admin_setting_func')), ('modern_design_config', ('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pdf_modern_design_config'""),), ())), ('offer_data', ('Name', 'offer_data_enhanced')), ('save_admin_setting_func', ('Name', 'save_admin_setting_func')), ('template_name', ('Const', ""'Professional'"")), ('texts', ('Name', 'texts'))))","('Call', 0, 9)","db_list_company_documents_func,enhance_pdf_generation_with_modern_design,get_product_by_id_func,list_products_func,load_admin_setting_func,offer_data_enhanced,save_admin_setting_func,st,texts",pdf_bytes = enhance_pdf_generation_with_modern_design(
.\tests\test_overlay_footer.py,22,pdf_bytes,"('Call', ('Name', 'generate_custom_offer_pdf'), (('Name', 'coords_dir'), ('Name', 'bg_dir'), ('Name', 'dyn')), (('additional_pdf', ('Const', 'None')),))","('Call', 3, 1)","bg_dir,coords_dir,dyn,generate_custom_offer_pdf","pdf_bytes = generate_custom_offer_pdf(coords_dir, bg_dir, dyn, additional_pdf=None)"
.\tools\test_overlay_footer.py,22,pdf_bytes,"('Call', ('Name', 'generate_custom_offer_pdf'), (('Name', 'coords_dir'), ('Name', 'bg_dir'), ('Name', 'dyn')), (('additional_pdf', ('Const', 'None')),))","('Call', 3, 1)","bg_dir,coords_dir,dyn,generate_custom_offer_pdf","pdf_bytes = generate_custom_offer_pdf(coords_dir, bg_dir, dyn, additional_pdf=None)"
.\pdf_erstellen_komplett.py,231,pdf_bytes,"('Call', ('Name', 'generate_custom_offer_pdf'), (('Name', 'coords_dir'), ('Name', 'bg_dir'), ('Name', 'dyn'), ('Name', 'additional_pdf_bytes')), ())","('Call', 4, 0)","additional_pdf_bytes,bg_dir,coords_dir,dyn,generate_custom_offer_pdf","pdf_bytes = generate_custom_offer_pdf(coords_dir, bg_dir, dyn, additional_pdf_bytes)"
.\pdf_erstellen_komplett.py,140,pdf_bytes,"('Call', ('Name', 'generate_custom_offer_pdf'), (('Name', 'coords_dir'), ('Name', 'bg_dir'), ('Name', 'dynamic_data'), ('Name', 'additional_pdf_bytes')), ())","('Call', 4, 0)","additional_pdf_bytes,bg_dir,coords_dir,dynamic_data,generate_custom_offer_pdf","pdf_bytes = generate_custom_offer_pdf(coords_dir, bg_dir, dynamic_data, additional_pdf_bytes)"
.\pdf_preview.py,58,pdf_bytes,"('Call', ('Name', 'generate_offer_pdf'), (), (('**', ('Name', 'kwargs')), ('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info')), ('inclusion_options', ('Name', 'inclusion_options')), ('project_data', ('Name', 'project_data')), ('texts', ('Name', 'texts'))))","('Call', 0, 6)","analysis_results,company_info,generate_offer_pdf,inclusion_options,kwargs,project_data,texts",pdf_bytes = generate_offer_pdf(
.\heatpump_ui.py,1061,pdf_bytes,"('Call', ('Name', 'generate_offer_pdf'), (), (('active_company_id', ('Const', 'None')), ('analysis_results', ('Name', 'analysis_results_hp')), ('company_info', ('Name', 'company_info')), ('company_logo_base64', ('Call', ('Attr', 'company_info', 'get'), (('Const', ""'logo_base64'""),), ())), ('db_list_company_documents_func', ('Other', 'Lambda')), ('get_product_by_id_func', ('Other', 'Lambda')), ('inclusion_options', ('Dict', (('KV', ('Const', ""'include_company_logo'""), ('Const', 'True')), ('KV', ('Const', ""'include_product_images'""), ('Const', 'False'))))), ('list_products_func', ('Other', 'Lambda')), ('load_admin_setting_func', ('Other', 'Lambda')), ('project_data', ('Name', 'project_data_hp')), ('save_admin_setting_func', ('Other', 'Lambda')), ('sections_to_include', ('Const', 'None')), ('selected_cover_letter_text', ('Const', ""'Sehr geehrte Damen und Herren,\\n\\nwir freuen uns, Ihnen unser Wärmepumpen-Angebot zu präsentieren.'"")), ('selected_offer_title_text', ('Const', ""'Angebot Wärmepumpe'"")), ('selected_title_image_b64', ('Const', 'None')), ('texts', ('Dict', ()))))","('Call', 0, 16)","analysis_results_hp,company_info,d,generate_offer_pdf,project_data_hp",pdf_bytes = generate_offer_pdf(
.\multi_offer_generator_old.py,283,pdf_bytes,"('Call', ('Name', 'generate_offer_pdf'), (), (('active_company_id', ('Name', 'company_id')), ('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_details')), ('company_logo_base64', ('Call', ('Attr', 'company_details', 'get'), (('Const', ""'logo_base64'""),), ())), ('db_list_company_documents_func', ('Other', 'IfExp')), ('get_product_by_id_func', ('Name', 'get_product_by_id')), ('inclusion_options', ('Dict', (('KV', ('Const', ""'include_company_logo'""), ('Const', 'True')), ('KV', ('Const', ""'include_product_images'""), ('Const', 'True'))))), ('list_products_func', ('Name', 'list_products')), ('load_admin_setting_func', ('Other', 'IfExp')), ('project_data', ('Name', 'project_data')), ('save_admin_setting_func', ('Other', 'IfExp')), ('sections_to_include', ('List', (('Const', ""'ProjectOverview'""), ('Const', ""'TechnicalComponents'""), ('Const', ""'CostDetails'""), ('Const', ""'Economics'"")))), ('selected_cover_letter_text', ('Const', ""'Sehr geehrte Damen und Herren,\\n\\nvielen Dank für Ihr Interesse.'"")), ('selected_offer_title_text', ('Other', 'JoinedStr')), ('selected_title_image_b64', ('Const', 'None')), ('texts', ('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'TEXTS'""), ('Dict', ())), ()))))","('Call', 0, 16)","analysis_results,callable,company_details,company_id,company_name,d,generate_offer_pdf,get_product_by_id,list_company_documents,list_products,load_admin_setting,project_data,save_admin_setting,st",pdf_bytes = generate_offer_pdf(
.\multi_offer_generator_old.py,745,pdf_bytes,"('Call', ('Name', 'generate_offer_pdf'), (), (('active_company_id', ('Name', 'company_id')), ('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_details')), ('company_logo_base64', ('Call', ('Attr', 'company_details', 'get'), (('Const', ""'logo_base64'""),), ())), ('db_list_company_documents_func', ('Other', 'IfExp')), ('get_product_by_id_func', ('Name', 'get_product_by_id')), ('inclusion_options', ('Dict', (('KV', ('Const', ""'include_company_logo'""), ('Const', 'True')), ('KV', ('Const', ""'include_product_images'""), ('Const', 'True'))))), ('list_products_func', ('Name', 'list_products')), ('load_admin_setting_func', ('Other', 'IfExp')), ('project_data', ('Name', 'project_data')), ('save_admin_setting_func', ('Other', 'IfExp')), ('sections_to_include', ('List', (('Const', ""'ProjectOverview'""), ('Const', ""'TechnicalComponents'""), ('Const', ""'CostDetails'""), ('Const', ""'Economics'"")))), ('selected_cover_letter_text', ('Const', ""'Sehr geehrte Damen und Herren,\\n\\nvielen Dank für Ihr Interesse.'"")), ('selected_offer_title_text', ('Other', 'JoinedStr')), ('selected_title_image_b64', ('Const', 'None')), ('texts', ('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'TEXTS'""), ('Dict', ())), ()))))","('Call', 0, 16)","analysis_results,callable,company_details,company_id,company_name,d,generate_offer_pdf,get_product_by_id,list_company_documents,list_products,load_admin_setting,project_data,save_admin_setting,st",pdf_bytes = generate_offer_pdf(
.\multi_offer_generator_old.py,1154,pdf_bytes,"('Call', ('Name', 'generate_offer_pdf'), (), (('active_company_id', ('Name', 'company_id')), ('analysis_results', ('Name', 'custom_analysis')), ('company_info', ('Name', 'company_info')), ('company_logo_base64', ('Call', ('Attr', 'company_info', 'get'), (('Const', ""'logo_base64'""),), ())), ('db_list_company_documents_func', ('Name', 'db_list_company_documents_func')), ('get_product_by_id_func', ('Name', 'get_product_by_id_func')), ('inclusion_options', ('Call', ('Attr', 'config', 'get'), (('Const', ""'inclusion_options'""), ('Dict', ())), ())), ('list_products_func', ('Name', 'list_products_func')), ('load_admin_setting_func', ('Name', 'load_admin_setting_func')), ('project_data', ('Name', 'custom_project_data')), ('save_admin_setting_func', ('Name', 'save_admin_setting_func')), ('sections_to_include', ('Call', ('Attr', 'config', 'get'), (('Const', ""'sections_to_include'""), ('List', ())), ())), ('selected_cover_letter_text', ('Call', ('Attr', ""config.get('custom_texts', {})"", 'get'), (('Const', ""'cover_letter'""), ('Const', ""''"")), ())), ('selected_offer_title_text', ('Call', ('Attr', ""config.get('custom_texts', {})"", 'get'), (('Const', ""'offer_title'""), ('Const', ""'Photovoltaik-Angebot'"")), ())), ('selected_title_image_b64', ('Const', 'None')), ('texts', ('Name', 'texts')), ('use_modern_design', ('Const', 'True'))))","('Call', 0, 17)","company_id,company_info,config,custom_analysis,custom_project_data,db_list_company_documents_func,generate_offer_pdf,get_product_by_id_func,list_products_func,load_admin_setting_func,save_admin_setting_func,texts",pdf_bytes = generate_offer_pdf(
.\tests\test_main_pdf.py,90,pdf_bytes,"('Call', ('Name', 'generate_offer_pdf'), (), (('active_company_id', ('Other', 'IfExp')), ('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info')), ('company_logo_base64', ('Call', ('Attr', 'company_info', 'get'), (('Const', ""'logo_base64'""),), ())), ('db_list_company_documents_func', ('Name', 'db_list_company_documents_func')), ('get_product_by_id_func', ('Name', 'get_product_by_id_func')), ('inclusion_options', ('Name', 'inclusion_options')), ('list_products_func', ('Name', 'list_products_func')), ('load_admin_setting_func', ('Name', 'load_admin_setting_func')), ('project_data', ('Name', 'project_data')), ('save_admin_setting_func', ('Name', 'save_admin_setting_func')), ('sections_to_include', ('Const', 'None')), ('selected_cover_letter_text', ('Const', ""'Sehr geehrte Damen und Herren,\\n\\nHerzlichen Dank für Ihre Anfrage.'"")), ('selected_offer_title_text', ('Const', ""'Angebot für Ihre Photovoltaikanlage'"")), ('selected_title_image_b64', ('Const', 'None')), ('texts', ('Name', 'texts')), ('use_modern_design', ('Const', 'True'))))","('Call', 0, 17)","active_company,analysis_results,company_info,db_list_company_documents_func,generate_offer_pdf,get_product_by_id_func,inclusion_options,list_products_func,load_admin_setting_func,project_data,save_admin_setting_func,texts",pdf_bytes = generate_offer_pdf(
.\tools\test_main_pdf.py,90,pdf_bytes,"('Call', ('Name', 'generate_offer_pdf'), (), (('active_company_id', ('Other', 'IfExp')), ('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info')), ('company_logo_base64', ('Call', ('Attr', 'company_info', 'get'), (('Const', ""'logo_base64'""),), ())), ('db_list_company_documents_func', ('Name', 'db_list_company_documents_func')), ('get_product_by_id_func', ('Name', 'get_product_by_id_func')), ('inclusion_options', ('Name', 'inclusion_options')), ('list_products_func', ('Name', 'list_products_func')), ('load_admin_setting_func', ('Name', 'load_admin_setting_func')), ('project_data', ('Name', 'project_data')), ('save_admin_setting_func', ('Name', 'save_admin_setting_func')), ('sections_to_include', ('Const', 'None')), ('selected_cover_letter_text', ('Const', ""'Sehr geehrte Damen und Herren,\\n\\nHerzlichen Dank für Ihre Anfrage.'"")), ('selected_offer_title_text', ('Const', ""'Angebot für Ihre Photovoltaikanlage'"")), ('selected_title_image_b64', ('Const', 'None')), ('texts', ('Name', 'texts')), ('use_modern_design', ('Const', 'True'))))","('Call', 0, 17)","active_company,analysis_results,company_info,db_list_company_documents_func,generate_offer_pdf,get_product_by_id_func,inclusion_options,list_products_func,load_admin_setting_func,project_data,save_admin_setting_func,texts",pdf_bytes = generate_offer_pdf(
.\notwendig oder nicht\wichtig\portings\patches\test_final_pdf_logos.py.insert.py,75,pdf_bytes,"('Call', ('Name', 'generate_offer_pdf_with_main_templates'), (), (('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info')), ('project_data', ('Name', 'project_data')), ('template_type', ('Const', ""'6seiten'""))))","('Call', 0, 4)","analysis_results,company_info,generate_offer_pdf_with_main_templates,project_data",pdf_bytes = generate_offer_pdf_with_main_templates(
.\tests\test_final_pdf_logos.py,77,pdf_bytes,"('Call', ('Name', 'generate_offer_pdf_with_main_templates'), (), (('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info')), ('project_data', ('Name', 'project_data')), ('template_type', ('Const', ""'6seiten'""))))","('Call', 0, 4)","analysis_results,company_info,generate_offer_pdf_with_main_templates,project_data",pdf_bytes = generate_offer_pdf_with_main_templates(
.\tools\portings\patches\test_final_pdf_logos.py.insert.py,75,pdf_bytes,"('Call', ('Name', 'generate_offer_pdf_with_main_templates'), (), (('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info')), ('project_data', ('Name', 'project_data')), ('template_type', ('Const', ""'6seiten'""))))","('Call', 0, 4)","analysis_results,company_info,generate_offer_pdf_with_main_templates,project_data",pdf_bytes = generate_offer_pdf_with_main_templates(
.\doc_output.py,2204,pdf_bytes,"('Const', 'None')","('Const',)",,pdf_bytes = None
.\doc_output.py,2297,pdf_bytes,"('Const', 'None')","('Const',)",,pdf_bytes = None
.\pdf_ui.py,1081,pdf_bytes,"('Const', 'None')","('Const',)",,pdf_bytes = None
.\pdf_ui.py,1170,pdf_bytes_to_download,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'generated_pdf_bytes_for_download_v1'""),), ())","('Call', 1, 0)",st,pdf_bytes_to_download = st.session_state.get('generated_pdf_bytes_for_download_v1')
.\doc_output.py,2362,pdf_bytes_to_download,"('Call', ('Attr', 'st.session_state', 'pop'), (('Const', ""'generated_pdf_bytes_for_download_v1'""),), ())","('Call', 1, 0)",st,pdf_bytes_to_download = st.session_state.pop('generated_pdf_bytes_for_download_v1')
.\multi_offer_generator_new.py,310,pdf_content,"('Call', ('Attr', 'self', '_generate_company_pdf'), (('Name', 'offer_data'), ('Name', 'company')), ())","('Call', 2, 0)","company,offer_data,self","pdf_content = self._generate_company_pdf(offer_data, company)"
.\multi_offer_generator.py,612,pdf_content,"('Call', ('Attr', 'self', '_generate_company_pdf'), (('Name', 'offer_data'), ('Name', 'company'), ('Name', 'i')), ())","('Call', 3, 0)","company,i,offer_data,self","pdf_content = self._generate_company_pdf(offer_data, company, i)"
.\multi_offer_generator.py,1108,pdf_content,"('Call', ('Name', 'generate_offer_pdf'), (), (('active_company_id', ('Call', ('Attr', 'company', 'get'), (('Const', ""'id'""), ('Const', '1')), ())), ('analysis_results', ('Name', 'calc_results')), ('company_info', ('Name', 'company')), ('company_logo_base64', ('Call', ('Attr', 'company', 'get'), (('Const', ""'logo_base64'""),), ())), ('db_list_company_documents_func', ('Other', 'IfExp')), ('get_product_by_id_func', ('Other', 'IfExp')), ('inclusion_options', ('Dict', (('KV', ('Const', ""'append_additional_pages_after_main6'""), ('Name', 'is_extended')), ('KV', ('Const', ""'company_document_ids_to_include'""), ('Name', 'company_doc_ids')), ('KV', ('Const', ""'include_all_documents'""), ('Name', 'include_all_docs')), ('KV', ('Const', ""'include_company_logo'""), ('Call', ('Attr', 'pdf_options', 'get'), (('Const', ""'include_company_logo'""), ('Const', 'True')), ())), ('KV', ('Const', ""'include_optional_component_details'""), ('Call', ('Attr', 'pdf_options', 'get'), (('Const', ""'include_optional_component_details'""), ('Const', 'True')), ())), ('KV', ('Const', ""'include_product_images'""), ('Call', ('Attr', 'pdf_options', 'get'), (('Const', ""'include_product_images'""), ('Const', 'True')), ())), ('KV', ('Const', ""'selected_charts_for_pdf'""), ('Other', 'IfExp')), ('KV', ('Const', ""'selected_cover_letter_template'""), ('Name', 'selected_cover_letter')), ('KV', ('Const', ""'selected_offer_title_template'""), ('Name', 'selected_offer_title')), ('KV', ('Const', ""'selected_title_image_template'""), ('Name', 'selected_title_image')), ('KV', ('Const', ""'use_templates'""), ('Const', 'True')), ('UNPACK', ('Name', 'inclusion_extras'))))), ('list_products_func', ('Other', 'IfExp')), ('load_admin_setting_func', ('Other', 'IfExp')), ('project_data', ('Name', 'pdf_project_data')), ('save_admin_setting_func', ('Other', 'IfExp')), ('sections_to_include', ('Name', 'selected_sections')), ('selected_cover_letter_text', ('Const', ""'Sehr geehrte Damen und Herren,\\n\\nvielen Dank für Ihr Interesse an nachhaltiger Solarenergie.'"")), ('selected_offer_title_text', ('Other', 'JoinedStr')), ('selected_title_image_b64', ('Const', 'None')), ('texts', ('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'TEXTS'""), ('Dict', ())), ()))))","('Call', 0, 16)","calc_results,callable,charts_to_include,company,company_doc_ids,d,generate_offer_pdf,get_product_by_id,include_all_docs,inclusion_extras,is_extended,list_company_documents,list_products,load_admin_setting,pdf_options,pdf_project_data,save_admin_setting,selected_cover_letter,selected_offer_title,selected_sections,selected_title_image,st",pdf_content = generate_offer_pdf(
.\multi_offer_generator_new.py,393,pdf_content,"('Call', ('Name', 'generate_offer_pdf'), (), (('company_data', ('Name', 'company')), ('customer_data', ('Subscript', ('Name', 'offer_data'), ('Const', ""'customer_data'""))), ('offer_data', ('Name', 'offer_data'))))","('Call', 0, 3)","company,generate_offer_pdf,offer_data",pdf_content = generate_offer_pdf(
.\pdf_generator.py,1881,pdf_design_config,"('Call', ('Attr', 'inclusion_options', 'get'), (('Const', ""'pdf_design_config'""), ('Dict', ())), ())","('Call', 2, 0)",inclusion_options,"pdf_design_config = inclusion_options.get(""pdf_design_config"", {})"
.\pdf_ui.py,906,pdf_design_config,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pdf_design_config'""), ('Dict', ())), ())","('Call', 2, 0)",st,"pdf_design_config = st.session_state.get('pdf_design_config', {})"
.\clean_unicode_emojis.py,141,pdf_files,"('List', (('Const', ""'pdf_generator.py'""), ('Const', ""'tom90_renderer.py'""), ('Const', ""'central_pdf_system.py'"")))","('List', 3)",,"pdf_files = [""pdf_generator.py"", ""tom90_renderer.py"", ""central_pdf_system.py""]"
.\clean_unicode_emojis.py,20,pdf_files,"('List', (('Const', ""'pdf_generator.py'""), ('Const', ""'tom90_renderer.py'""), ('Const', ""'central_pdf_system.py'""), ('Const', ""'doc_output.py'""), ('Const', ""'mega_tom90_hybrid_pdf.py'"")))","('List', 5)",,pdf_files = [
.\pdf_migration.py,169,pdf_files,"('List', ())","('List', 0)",,pdf_files = []
.\multi_offer_generator.py,1064,pdf_options,"('Call', ('Attr', 'base_settings', 'get'), (('Const', ""'pdf_options'""), ('Dict', ())), ())","('Call', 2, 0)",base_settings,"pdf_options = base_settings.get(""pdf_options"", {})"
.\multi_offer_generator.py,1088,pdf_options,"('Call', ('Attr', 'base_settings', 'get'), (('Const', ""'pdf_options'""), ('Dict', ())), ())","('Call', 2, 0)",base_settings,"pdf_options = base_settings.get(""pdf_options"", {})"
.\multi_offer_generator.py,504,pdf_options,"('Subscript', ('Name', 'settings'), ('Const', ""'pdf_options'""))","('Subscript',)",settings,"pdf_options = settings[""pdf_options""]"
.\notwendig oder nicht\wichtig\portings\patches\test_product_images.py.insert.py,62,pdf_path,"('Attr', 'tmp', 'name')","('Attr',)",tmp,pdf_path = tmp.name
.\tests\test_product_images.py,63,pdf_path,"('Attr', 'tmp', 'name')","('Attr',)",tmp,pdf_path = tmp.name
.\tools\portings\patches\test_product_images.py.insert.py,62,pdf_path,"('Attr', 'tmp', 'name')","('Attr',)",tmp,pdf_path = tmp.name
.\tests\test_final_pdf_logos.py,106,pdf_path,"('Call', ('Name', 'create_test_pdf_with_logos'), (), ())","('Call', 0, 0)",create_test_pdf_with_logos,pdf_path = create_test_pdf_with_logos()
.\debug_logo_pdf.py,109,pdf_path,"('Call', ('Name', 'test_logo_rendering_debug'), (), ())","('Call', 0, 0)",test_logo_rendering_debug,pdf_path = test_logo_rendering_debug()
.\tests\test_pdf_logos.py,110,pdf_path,"('Call', ('Name', 'test_pdf_with_logos'), (), ())","('Call', 0, 0)",test_pdf_with_logos,pdf_path = test_pdf_with_logos()
.\pdf_ui.py,363,pdf_presets,"('Call', ('Attr', 'json', 'loads'), (('Name', 'loaded_presets'),), ())","('Call', 1, 0)","json,loaded_presets",pdf_presets = json.loads(loaded_presets)
.\pdf_ui.py,366,pdf_presets,"('List', ())","('List', 0)",,pdf_presets = []
.\pdf_ui.py,369,pdf_presets,"('List', ())","('List', 0)",,pdf_presets = []
.\pdf_ui.py,371,pdf_presets,"('List', ())","('List', 0)",,pdf_presets = []
.\pdf_ui.py,360,pdf_presets,"('Name', 'loaded_presets')","('Name',)",loaded_presets,pdf_presets = loaded_presets
.\gui.py,742,pdf_preview_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'pdf_preview'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","pdf_preview_module = import_module_with_fallback(""pdf_preview"", import_errors)"
.\gui.py,96,pdf_preview_module,"('Const', 'None')","('Const',)",,pdf_preview_module: Optional[Any] = None
.\analysis_utils.py,361,performance,"('Const', ""'Durchschnittlich'"")","('Const',)",,"performance = ""Durchschnittlich"""
.\analysis_utils.py,365,performance,"('Const', ""'Unterdurchschnittlich'"")","('Const',)",,"performance = ""Unterdurchschnittlich"""
.\analysis_utils.py,363,performance,"('Const', ""'Überdurchschnittlich'"")","('Const',)",,"performance = ""Überdurchschnittlich"""
.\pdf_template_engine\placeholders.py,1929,pf,"('Call', ('Name', 'parse_float'), (('Name', 'aval'),), ())","('Call', 1, 0)","aval,parse_float",pf = parse_float(aval)
.\pdf_template_engine\placeholders.py,1936,pf,"('Call', ('Name', 'parse_float'), (('Name', 'aval'),), ())","('Call', 1, 0)","aval,parse_float",pf = parse_float(aval)
.\pdf_template_engine\placeholders.py,1954,pf,"('Call', ('Name', 'parse_float'), (('Name', 'aval'),), ())","('Call', 1, 0)","aval,parse_float",pf = parse_float(aval)
.\pdf_template_engine\placeholders.py,1547,pf,"('Call', ('Name', 'parse_float'), (('Name', 'cap_w'),), ())","('Call', 1, 0)","cap_w,parse_float",pf = parse_float(cap_w)
.\pdf_template_engine\placeholders.py,1611,pf,"('Call', ('Name', 'parse_float'), (('Name', 'v'),), ())","('Call', 1, 0)","parse_float,v",pf = parse_float(v)
.\pdf_template_engine\placeholders.py,1626,pf,"('Call', ('Name', 'parse_float'), (('Name', 'v'),), ())","('Call', 1, 0)","parse_float,v",pf = parse_float(v)
.\notwendig oder nicht\wichtig\repo_porter.py,93,pf,"('Div', ('Name', 'd'), ('Name', 'f'))","('Div', ('Name',), ('Name',))","d,f",pf = d / f
.\tools\repo_porter.py,93,pf,"('Div', ('Name', 'd'), ('Name', 'f'))","('Div', ('Name',), ('Name',))","d,f",pf = d / f
.\dev_tools\kakerlake_ultra_cleaner.py,565,pg,"('Call', ('Name', 'fk'), (('Tuple', (('Const', ""'page'""), ('Const', ""'seite'""), ('Const', ""'p'""))),), ())","('Call', 1, 0)",fk,"xk=fk((""x"",""left"")); yk=fk((""y"",""top"")); pg=fk((""page"",""seite"",""p""))"
.\mnt\data\kakerlake_ultra_cleaner.py,565,pg,"('Call', ('Name', 'fk'), (('Tuple', (('Const', ""'page'""), ('Const', ""'seite'""), ('Const', ""'p'""))),), ())","('Call', 1, 0)",fk,"xk=fk((""x"",""left"")); yk=fk((""y"",""top"")); pg=fk((""page"",""seite"",""p""))"
.\tools\kakerlake_ultra_cleaner.py,566,pg,"('Call', ('Name', 'fk'), (('Tuple', (('Const', ""'page'""), ('Const', ""'seite'""), ('Const', ""'p'""))),), ())","('Call', 1, 0)",fk,"xk=fk((""x"",""left"")); yk=fk((""y"",""top"")); pg=fk((""page"",""seite"",""p""))"
.\pdf_atomizer.py,220,pg,"('Dict', ())","('Dict', 0)",,pg = {}
.\pdf_template_engine\placeholders.py,489,phone,"('Call', ('Attr', ""as_str(customer.get('phone_mobile') or customer.get('phone_landline') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,customer","phone = as_str(customer.get(""phone_mobile"") or customer.get(""phone_landline"") or """").strip()"
.\crm_pipeline_ui.py,226,phone,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Telefon'""),), (('placeholder', ('Const', ""'+49 123 456789'"")),))","('Call', 1, 1)",st,"phone = st.text_input(""Telefon"", placeholder=""+49 123 456789"")"
.\admin_panel.py,772,pid,"('Call', ('Attr', 'p', 'get'), (('Const', ""'id'""),), ())","('Call', 1, 0)",p,pid = p.get('id')
.\product_attributes.py,249,pid,"('Call', ('Name', '_add_prod'), (('Dict', (('KV', ('Const', ""'brand'""), ('Name', 'brand')), ('KV', ('Const', ""'category'""), ('Name', 'category')), ('KV', ('Const', ""'model_name'""), ('Name', 'model')))),), ())","('Call', 1, 0)","_add_prod,brand,category,model","pid = _add_prod({'category': category, 'model_name': model, 'brand': brand})"
.\pdf_template_engine\placeholders.py,1414,pid,"('Call', ('Name', '_get_pid'), (('Name', 'mm_pd'),), ())","('Call', 1, 0)","_get_pid,mm_pd",pid = _get_pid(mm_pd)
.\pdf_template_engine\placeholders.py,1407,pid,"('Call', ('Name', '_get_pid'), (('Name', 'mod_model'),), ())","('Call', 1, 0)","_get_pid,mod_model",pid = _get_pid(mod_model)
.\pdf_template_engine\placeholders.py,1409,pid,"('Call', ('Name', '_get_pid'), (('Name', 'module_name'),), ())","('Call', 1, 0)","_get_pid,module_name",pid = _get_pid(module_name)
.\pdf_template_engine\placeholders.py,1418,pid,"('Call', ('Name', 'int'), (('Call', ('Attr', 'module_details', 'get'), (('Const', ""'id'""),), ()),), ())","('Call', 1, 0)","int,module_details","pid = int(module_details.get(""id""))"
.\tools\import_module_attributes_generic.py,202,pid,"('Call', ('Name', 'int'), (('Call', ('Attr', 'p', 'get'), (('Const', ""'id'""),), ()),), ())","('Call', 1, 0)","int,p","pid = int(p.get(""id""))"
.\tools\import_module_attributes_generic.py,213,pid,"('Call', ('Name', 'int'), (('Call', ('Attr', 'p', 'get'), (('Const', ""'id'""),), ()),), ())","('Call', 1, 0)","int,p","pid = int(p.get(""id""))"
.\tools\import_module_attributes_generic.py,155,pid,"('Call', ('Name', 'int'), (('Call', ('Attr', 'rec', 'get'), (('Const', ""'id'""),), ()),), ())","('Call', 1, 0)","int,rec","pid = int(rec.get(""id""))"
.\pdf_template_engine\placeholders.py,1401,pid,"('Call', ('Name', 'int'), (('Name', 'module_id'),), ())","('Call', 1, 0)","int,module_id",pid = int(module_id)
.\product_attributes.py,201,pid,"('Call', ('Name', 'int'), (('Subscript', ('Name', 'p'), ('Const', ""'id'"")),), ())","('Call', 1, 0)","int,p",pid = int(p['id'])
.\tools\smoke_crm_save.py,43,pid,"('Call', ('Name', 'save_project'), (('Name', 'conn'), ('Name', 'proj')), ())","('Call', 2, 0)","conn,proj,save_project","pid = save_project(conn, proj)"
.\pdf_template_engine\placeholders.py,1397,pid,"('Const', 'None')","('Const',)",,pid = None
.\pdf_template_engine\placeholders.py,1403,pid,"('Const', 'None')","('Const',)",,pid = None
.\pdf_template_engine\placeholders.py,1420,pid,"('Const', 'None')","('Const',)",,pid = None
.\product_attributes.py,247,pid,"('Other', 'IfExp')","('Other', 'IfExp')","int,prod",pid = int(prod['id']) if prod else None
.\pdf_preview.py,99,pix,"('Call', ('Attr', 'page', 'get_pixmap'), (), (('dpi', ('Attr', 'self', 'preview_dpi')),))","('Call', 0, 1)","page,self",pix = page.get_pixmap(dpi=self.preview_dpi)
.\pdf_preview.py,342,pix,"('Call', ('Attr', 'page', 'get_pixmap'), (), (('dpi', ('Const', '100')),))","('Call', 0, 1)",page,pix = page.get_pixmap(dpi=100)
.\pdf_template_engine\placeholders.py,1666,pkw,"('Call', ('Name', 'float'), (('Call', ('Attr', 'inverter_details', 'get'), (('Const', ""'power_kw'""),), ()),), ())","('Call', 1, 0)","float,inverter_details","pkw = float(inverter_details.get(""power_kw""))"
.\pdf_template_engine\placeholders.py,1668,pkw,"('Call', ('Name', 'float'), (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_inverter_power_kw'""),), ()),), ())","('Call', 1, 0)","float,project_details","pkw = float(project_details.get(""selected_inverter_power_kw""))"
.\pdf_template_engine\placeholders.py,1664,pkw,"('Const', 'None')","('Const',)",,pkw = None
.\crm.py,181,placeholders,"('Call', ('Attr', ""', '"", 'join'), (('Mult', (('Call', ('Name', 'len'), (('Name', 'data_to_save'),), ()), ('List', (('Const', ""'?'""),)))),), ())","('Call', 1, 0)","data_to_save,len","placeholders = ', '.join(['?'] * len(data_to_save))"
.\crm.py,226,placeholders,"('Call', ('Attr', ""', '"", 'join'), (('Mult', (('Call', ('Name', 'len'), (('Name', 'insert_data'),), ()), ('List', (('Const', ""'?'""),)))),), ())","('Call', 1, 0)","insert_data,len","placeholders = ', '.join(['?'] * len(insert_data))"
.\product_db.py,170,placeholders,"('Call', ('Attr', ""', '"", 'join'), (('Mult', (('Call', ('Name', 'len'), (('Name', 'insert_data'),), ()), ('List', (('Const', ""'?'""),)))),), ())","('Call', 1, 0)","insert_data,len","fields = ', '.join(insert_data.keys()); placeholders = ', '.join(['?'] * len(insert_data))"
.\brand_logo_db.py,304,placeholders,"('Call', ('Attr', ""','"", 'join'), (('Mult', (('Call', ('Name', 'len'), (('Name', 'brand_names'),), ()), ('Const', ""'?'""))),), ())","('Call', 1, 0)","brand_names,len","placeholders = ','.join('?' * len(brand_names))"
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,317,placeholders,"('Call', ('Attr', ""','"", 'join'), (('Mult', (('Call', ('Name', 'len'), (('Name', 'brand_names'),), ()), ('Const', ""'?'""))),), ())","('Call', 1, 0)","brand_names,len","placeholders = ','.join('?' * len(brand_names))"
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,367,placeholders,"('Call', ('Attr', ""','"", 'join'), (('Mult', (('Call', ('Name', 'len'), (('Name', 'brand_names'),), ()), ('Const', ""'?'""))),), ())","('Call', 1, 0)","brand_names,len","placeholders = ','.join('?' * len(brand_names))"
.\tools\out_selected\patches\brand_logo_db.py.insert.py,317,placeholders,"('Call', ('Attr', ""','"", 'join'), (('Mult', (('Call', ('Name', 'len'), (('Name', 'brand_names'),), ()), ('Const', ""'?'""))),), ())","('Call', 1, 0)","brand_names,len","placeholders = ','.join('?' * len(brand_names))"
.\tools\portings\patches\brand_logo_db.py.insert.py,367,placeholders,"('Call', ('Attr', ""','"", 'join'), (('Mult', (('Call', ('Name', 'len'), (('Name', 'brand_names'),), ()), ('Const', ""'?'""))),), ())","('Call', 1, 0)","brand_names,len","placeholders = ','.join('?' * len(brand_names))"
.\database.py,1287,placeholders,"('Call', ('Attr', ""','"", 'join'), (('Mult', (('Call', ('Name', 'len'), (('Name', 'fields'),), ()), ('List', (('Const', ""'?'""),)))),), ())","('Call', 1, 0)","fields,len","placeholders = "","".join([""?""]*len(fields))"
.\notwendig oder nicht\wichtig\portings\patches\test_hp_functions.py.insert.py,114,placeholders,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'test_project_data'), ('Name', 'test_analysis_results'), ('Name', 'test_company_info')), ())","('Call', 3, 0)","build_dynamic_data,test_analysis_results,test_company_info,test_project_data","placeholders = build_dynamic_data(test_project_data, test_analysis_results, test_company_info)"
.\tests\test_hp_functions.py,101,placeholders,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'test_project_data'), ('Name', 'test_analysis_results'), ('Name', 'test_company_info')), ())","('Call', 3, 0)","build_dynamic_data,test_analysis_results,test_company_info,test_project_data","placeholders = build_dynamic_data(test_project_data, test_analysis_results, test_company_info)"
.\tools\portings\patches\test_hp_functions.py.insert.py,114,placeholders,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'test_project_data'), ('Name', 'test_analysis_results'), ('Name', 'test_company_info')), ())","('Call', 3, 0)","build_dynamic_data,test_analysis_results,test_company_info,test_project_data","placeholders = build_dynamic_data(test_project_data, test_analysis_results, test_company_info)"
.\solar_calculator.py,82,please_select_text,"('Call', ('Name', '_get_text'), (('Name', 'texts'), ('Const', ""'please_select_option'""), ('Const', ""'--- Bitte wählen ---'"")), ())","('Call', 3, 0)","_get_text,texts","please_select_text = _get_text(texts, 'please_select_option', '--- Bitte wählen ---')"
.\data_input.py,163,please_select_text,"('Call', ('Name', 'get_text_di'), (('Name', 'texts'), ('Const', ""'please_select_option'""), ('Const', ""'--- Bitte wählen ---'"")), ())","('Call', 3, 0)","get_text_di,texts","please_select_text = get_text_di(texts, ""please_select_option"", ""--- Bitte wählen ---"")"
.\create_png_test_images.py,56,png_b64,"('Call', ('Name', 'create_png_test_image'), (), ())","('Call', 0, 0)",create_png_test_image,png_b64 = create_png_test_image()
.\notwendig oder nicht\wichtig\portings\patches\create_png_test_images.py.insert.py,66,png_b64,"('Call', ('Name', 'create_png_test_image'), (), ())","('Call', 0, 0)",create_png_test_image,png_b64 = create_png_test_image()
.\tools\portings\patches\create_png_test_images.py.insert.py,66,png_b64,"('Call', ('Name', 'create_png_test_image'), (), ())","('Call', 0, 0)",create_png_test_image,png_b64 = create_png_test_image()
.\tests\test_page4_images.py,6,png_b64,"('Const', ""'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR4nGMAAQAABQABDQottAAAAABJRU5ErkJggg=='"")","('Const',)",,"png_b64 = ""iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR4nGMAAQAABQABDQottAAAAABJRU5ErkJggg=="""
.\tools\test_page4_images.py,6,png_b64,"('Const', ""'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR4nGMAAQAABQABDQottAAAAABJRU5ErkJggg=='"")","('Const',)",,"png_b64 = ""iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR4nGMAAQAABQABDQottAAAAABJRU5ErkJggg=="""
.\pdf_styles.py,629,points,"('List', (('Tuple', (('Name', 'x'), ('Add', (('Name', 'size'), ('Name', 'y'))))), ('Tuple', (('Add', (('Name', 'size'), ('Name', 'x'))), ('Name', 'y'))), ('Tuple', (('Name', 'x'), ('Sub', ('Name', 'y'), ('Name', 'size')))), ('Tuple', (('Sub', ('Name', 'x'), ('Name', 'size')), ('Name', 'y')))))","('List', 4)","size,x,y","points = [(x, y + size), (x + size, y), (x, y - size), (x - size, y)]"
.\pdf_styles.py,620,points,"('Other', 'ListComp')","('Other', 'ListComp')","a,angles,np,size,x,y","points = [(x + size * np.cos(a), y + size * np.sin(a)) for a in angles]"
.\pdf_styles.py,682,points,"('Other', 'ListComp')","('Other', 'ListComp')","a,angles,hex_size,np,x,y","points = [(x + hex_size * np.cos(a),"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,87,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,228,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,105,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,246,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\pdf_template_engine\dynamic_overlay.py,600,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\pdf_template_engine\dynamic_overlay.py,741,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,87,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,228,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,105,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,246,pos,"('Call', ('Attr', 'el', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",el,"pos = el.get(""position"")"
.\pdf_template_engine\dynamic_overlay.py,421,pos,"('Call', ('Attr', 'elem', 'get'), (('Const', ""'position'""), ('Tuple', (('Const', '0'), ('Const', '0'), ('Const', '0'), ('Const', '0')))), ())","('Call', 2, 0)",elem,"pos = elem.get(""position"", (0, 0, 0, 0))"
.\pdf_template_engine\dynamic_overlay.py,446,pos,"('Call', ('Attr', 'elem', 'get'), (('Const', ""'position'""), ('Tuple', (('Const', '0'), ('Const', '0'), ('Const', '0'), ('Const', '0')))), ())","('Call', 2, 0)",elem,"pos = elem.get(""position"", (0, 0, 0, 0))"
.\pdf_template_engine\dynamic_overlay.py,549,pos,"('Call', ('Attr', 'meta', 'get'), (('Const', ""'position'""),), ())","('Call', 1, 0)",meta,"pos = meta.get(""position"")"
.\notwendig oder nicht\python_function_recipes.py,33,pos,"('Sub', ('Call', ('Attr', ""key_row.sort_values(kind='mergesort')"", 'searchsorted'), (('Name', 'lookup_value'),), (('side', ('Const', ""'right'"")),)), ('Const', '1'))","('Sub', ('Call', 1, 1), ('Const',))","key_row,lookup_value","pos = key_row.sort_values(kind='mergesort').searchsorted(lookup_value, side='right') - 1"
.\notwendig oder nicht\python_function_recipes.py,239,pos,"('Sub', ('Call', ('Attr', 'key_col', 'searchsorted'), (('Name', 'lookup_value'),), (('side', ('Const', ""'right'"")),)), ('Const', '1'))","('Sub', ('Call', 1, 1), ('Const',))","key_col,lookup_value","pos = key_col.searchsorted(lookup_value, side='right') - 1"
.\notwendig oder nicht\python_function_recipes.py,66,pos,"('Sub', ('Call', ('Attr', 'lv', 'searchsorted'), (('Name', 'lookup_value'),), (('side', ('Const', ""'right'"")),)), ('Const', '1'))","('Sub', ('Call', 1, 1), ('Const',))","lookup_value,lv","pos = lv.searchsorted(lookup_value, side='right') - 1"
.\notwendig oder nicht\python_function_recipes.py,83,pos,"('Sub', ('Call', ('Attr', 'srt', 'searchsorted'), (('Name', 'lookup_value'),), (('side', ('Other', 'IfExp')),)), ('Other', 'IfExp'))","('Sub', ('Call', 1, 1), ('Other', 'IfExp'))","lookup_value,match_type,srt","pos = srt.searchsorted(lookup_value, side='left' if match_type==-1 else 'right') - (0 if match_type==-1 else 1)"
.\debug_logo_rendering.py,66,pos_str,"('Call', ('Attr', 'pos_str', 'strip'), (('Const', ""'()'""),), ())","('Call', 1, 0)",pos_str,pos_str = pos_str.strip('()')
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_rendering.py.insert.py,64,pos_str,"('Call', ('Attr', 'pos_str', 'strip'), (('Const', ""'()'""),), ())","('Call', 1, 0)",pos_str,pos_str = pos_str.strip('()')
.\tools\portings\patches\debug_logo_rendering.py.insert.py,64,pos_str,"('Call', ('Attr', 'pos_str', 'strip'), (('Const', ""'()'""),), ())","('Call', 1, 0)",pos_str,pos_str = pos_str.strip('()')
.\debug_logo_rendering.py,64,pos_str,"('Subscript', ('Call', ('Attr', 'line', 'split'), (('Const', ""': '""),), ()), ('Const', '1'))","('Subscript',)",line,pos_str = line.split(': ')[1]
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_rendering.py.insert.py,62,pos_str,"('Subscript', ('Call', ('Attr', 'line', 'split'), (('Const', ""': '""),), ()), ('Const', '1'))","('Subscript',)",line,pos_str = line.split(': ')[1]
.\tools\portings\patches\debug_logo_rendering.py.insert.py,62,pos_str,"('Subscript', ('Call', ('Attr', 'line', 'split'), (('Const', ""': '""),), ()), ('Const', '1'))","('Subscript',)",line,pos_str = line.split(': ')[1]
.\admin_logo_positions_ui.py,209,positions,"('Call', ('Name', 'load_admin_setting'), (('Const', ""'pdf_logo_positions'""), ('Name', 'DEFAULT_POSITIONS')), ())","('Call', 2, 0)","DEFAULT_POSITIONS,load_admin_setting","positions = load_admin_setting(""pdf_logo_positions"", DEFAULT_POSITIONS)"
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_positions_ui.py.insert.py,187,positions,"('Call', ('Name', 'load_admin_setting'), (('Const', ""'pdf_logo_positions'""), ('Name', 'DEFAULT_POSITIONS')), ())","('Call', 2, 0)","DEFAULT_POSITIONS,load_admin_setting","positions = load_admin_setting(""pdf_logo_positions"", DEFAULT_POSITIONS)"
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_positions_ui.py.insert.py,194,positions,"('Call', ('Name', 'load_admin_setting'), (('Const', ""'pdf_logo_positions'""), ('Name', 'DEFAULT_POSITIONS')), ())","('Call', 2, 0)","DEFAULT_POSITIONS,load_admin_setting","positions = load_admin_setting(""pdf_logo_positions"", DEFAULT_POSITIONS)"
.\tools\out_selected\patches\admin_logo_positions_ui.py.insert.py,187,positions,"('Call', ('Name', 'load_admin_setting'), (('Const', ""'pdf_logo_positions'""), ('Name', 'DEFAULT_POSITIONS')), ())","('Call', 2, 0)","DEFAULT_POSITIONS,load_admin_setting","positions = load_admin_setting(""pdf_logo_positions"", DEFAULT_POSITIONS)"
.\tools\portings\patches\admin_logo_positions_ui.py.insert.py,194,positions,"('Call', ('Name', 'load_admin_setting'), (('Const', ""'pdf_logo_positions'""), ('Name', 'DEFAULT_POSITIONS')), ())","('Call', 2, 0)","DEFAULT_POSITIONS,load_admin_setting","positions = load_admin_setting(""pdf_logo_positions"", DEFAULT_POSITIONS)"
.\pdf_atomizer.py,265,positions,"('List', ())","('List', 0)",,positions = []
.\doc_output.py,198,potential_sources,"('List', (('Const', ""'calculation_results'""), ('Const', ""'current_analysis_results'""), ('Const', ""'kpi_results'""), ('Const', ""'berechnung_ergebnisse'"")))","('List', 4)",,"potential_sources = ['calculation_results', 'current_analysis_results', 'kpi_results', 'berechnung_ergebnisse']"
.\doc_output.py,189,potential_sources,"('List', (('Const', ""'current_project_data'""), ('Const', ""'project_details'""), ('Const', ""'projektdaten'"")))","('List', 3)",,"potential_sources = ['current_project_data', 'project_details', 'projektdaten']"
.\analysis.py,3275,power_values,"('List', (('Subscript', ('Name', 'system_data'), ('Const', ""'system_kwp'"")),))","('List', 1)",system_data,"power_values = [system_data[""system_kwp""]]"
.\analysis.py,9094,power_values,"('Other', 'ListComp')","('Other', 'ListComp')","anlage_kwp,degradation_rate,year,years",power_values = [anlage_kwp * (1 - degradation_rate/100)**year for year in years]
.\analysis.py,7665,precision_in_table,"('Const', '0')","('Const',)",,precision_in_table = 0
.\analysis.py,7662,precision_in_table,"('Const', '2')","('Const',)",,precision_in_table = 2
.\analysis.py,7673,precision_in_table,"('Const', '2')","('Const',)",,precision_in_table = 2
.\analysis.py,7678,precision_in_table,"('Const', '4')","('Const',)",,precision_in_table = 4
.\notwendig oder nicht\wichtig\repo_to_json.py,90,prefer,"('Const', 'False')","('Const',)",,prefer = False
.\tools\repo_to_json.py,90,prefer,"('Const', 'False')","('Const',)",,prefer = False
.\notwendig oder nicht\wichtig\repo_to_json.py,88,prefer,"('Const', 'True')","('Const',)",,prefer = True
.\tools\repo_to_json.py,88,prefer,"('Const', 'True')","('Const',)",,prefer = True
.\doc_output.py,352,preview_cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'min'), (('Call', ('Name', 'len'), (('Name', 'chart_types'),), ()), ('Const', '4')), ()),), ())","('Call', 1, 0)","chart_types,len,min,st","preview_cols = st.columns(min(len(chart_types), 4))"
.\multi_offer_generator.py,237,preview_cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'min'), (('Const', '4'), ('Name', 'num_companies')), ()),), ())","('Call', 1, 0)","min,num_companies,st","preview_cols = st.columns(min(4, num_companies))"
.\multi_offer_generator.py,376,preview_cols,"('Call', ('Attr', 'st', 'columns'), (('Call', ('Name', 'min'), (('Const', '4'), ('Name', 'num_companies')), ()),), ())","('Call', 1, 0)","min,num_companies,st","preview_cols = st.columns(min(4, num_companies))"
.\doc_output.py,1963,preview_cols,"('Call', ('Attr', 'st', 'columns'), (('Const', '3'),), ())","('Call', 1, 0)",st,preview_cols = st.columns(3)
.\doc_output.py,1980,preview_text,"('Add', (('Const', ""'...'""), ('Subscript', ('Name', 'preview_text'), ('Other', 'Slice'))))","('Add', (('Const',), ('Subscript',)))",preview_text,"preview_text = preview_text[:200] + ""..."""
.\doc_output.py,1978,preview_text,"('Attr', 'st.session_state', 'selected_cover_letter_text_content_doc_output')","('Attr',)",st,preview_text = st.session_state.selected_cover_letter_text_content_doc_output
.\admin_panel.py,1971,preview_text,"('Subscript', ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'template'), ('Const', ""'content'"")))), ('Other', 'Slice'))","('Subscript',)",template,"preview_text = (template['content'] or """")[:200]"
.\heatpump_pricing.py,78,price,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'p', 'get'), (('Const', ""'price_euro'""),), ()), ('Const', '0.0'))),), ())","('Call', 1, 0)","float,p","price = float(p.get(""price_euro"") or 0.0)"
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,29,price,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'p', 'get'), (('Const', ""'price_euro'""),), ()), ('Const', '0.0'))),), ())","('Call', 1, 0)","float,p","price = float(p.get(""price_euro"") or 0.0)"
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,29,price,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'p', 'get'), (('Const', ""'price_euro'""),), ()), ('Const', '0.0'))),), ())","('Call', 1, 0)","float,p","price = float(p.get(""price_euro"") or 0.0)"
.\calculations.py,1092,price,"('Mult', (('Name', 'base_price'), ('Pow', ('Add', (('Const', '1'), ('Name', 'electricity_price_increase'))), ('Name', 'year'))))","('Mult', (('Name',), ('Pow', ('Add', (('Const',), ('Name',))), ('Name',))))","base_price,electricity_price_increase,year",price = base_price * (1 + electricity_price_increase) ** year
.\admin_panel.py,1221,price_display_val,"('Call', ('Name', 'float'), (('Other', 'IfExp'),), ())","('Call', 1, 0)","float,price_euro_val",price_display_val = float(price_euro_val if price_euro_val is not None else 0.0)
.\admin_panel.py,1219,price_display_val,"('Const', '0.0')","('Const',)",,price_display_val = 0.0
.\pdf_template_engine\placeholders.py,2087,price_eur_kwh,"('BoolOp', 'Or', (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'aktueller_strompreis_fuer_hochrechnung_euro_kwh'""),), ()), ('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'electricity_price_eur_per_kwh'""),), ()), ('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'electricity_price_kwh'""),), ()), ('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'electricity_price_per_kwh'""),), ())))","('BoolOp', 'Or', 4)",analysis_results,price_eur_kwh = (
.\analysis.py,1901,price_eur_kwh,"('BoolOp', 'Or', (('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'aktueller_strompreis_fuer_hochrechnung_euro_kwh'""),), ()),), ()), ('Const', '0.0')))","('BoolOp', 'Or', 2)","_parse_float,analysis_results","price_eur_kwh = _parse_float(analysis_results.get(""aktueller_strompreis_fuer_hochrechnung_euro_kwh"")) or 0.0"
.\pdf_template_engine\placeholders.py,2172,price_eur_kwh,"('BoolOp', 'Or', (('Call', ('Name', '_to_float'), (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'aktueller_strompreis_fuer_hochrechnung_euro_kwh'""),), ()),), ()), ('Call', ('Name', '_to_float'), (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'electricity_price_eur_per_kwh'""),), ()),), ()), ('Call', ('Name', '_to_float'), (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'electricity_price_kwh'""),), ()),), ()), ('Call', ('Name', '_to_float'), (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'electricity_price_per_kwh'""),), ()),), ()), ('Const', '0.3')))","('BoolOp', 'Or', 5)","_to_float,analysis_results,project_data",price_eur_kwh = (
.\pdf_template_engine\placeholders.py,993,price_eur_kwh,"('Call', ('Name', 'parse_float'), (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'aktueller_strompreis_fuer_hochrechnung_euro_kwh'""),), ()),), ())","('Call', 1, 0)","analysis_results,parse_float","price_eur_kwh = parse_float(analysis_results.get(""aktueller_strompreis_fuer_hochrechnung_euro_kwh""))"
.\multi_offer_generator.py,828,price_factor,"('Add', (('Const', '1.0'), ('Div', ('Mult', (('Name', 'company_index'), ('Name', 'price_increment'))), ('Const', '100.0'))))","('Add', (('Const',), ('Div', ('Mult', (('Name',), ('Name',))), ('Const',))))","company_index,price_increment",price_factor = 1.0 + (company_index * price_increment / 100.0)
.\multi_offer_generator.py,839,price_factor,"('Add', (('Const', '1.0'), ('Div', ('Mult', (('Name', 'company_index'), ('Name', 'price_increment'))), ('Const', '100.0'))))","('Add', (('Const',), ('Div', ('Mult', (('Name',), ('Name',))), ('Const',))))","company_index,price_increment",price_factor = 1.0 + (company_index * price_increment / 100.0)
.\multi_offer_generator.py,386,price_factor,"('Add', (('Const', '1.0'), ('Div', ('Mult', (('Name', 'i'), ('Subscript', ('Name', 'settings'), ('Const', ""'price_increment_percent'"")))), ('Const', '100.0'))))","('Add', (('Const',), ('Div', ('Mult', (('Name',), ('Subscript',))), ('Const',))))","i,settings","price_factor = 1.0 + (i * settings[""price_increment_percent""] / 100.0)"
.\multi_offer_generator.py,395,price_factor,"('Add', (('Const', '1.0'), ('Mult', (('Const', '0.03'), ('Name', 'i')))))","('Add', (('Const',), ('Mult', (('Const',), ('Name',)))))",i,price_factor = 1.0 + (i * 0.03)
.\multi_offer_generator.py,841,price_factor,"('Const', '1.0')","('Const',)",,price_factor = 1.0
.\multi_offer_generator.py,393,price_factor,"('Other', 'IfExp')","('Other', 'IfExp')","factors,i,len",price_factor = factors[i] if i < len(factors) else factors[-1]
.\multi_offer_generator.py,836,price_factor,"('Other', 'IfExp')","('Other', 'IfExp')","company_index,custom_factors,len",price_factor = custom_factors[company_index] if company_index < len(custom_factors) else custom_factors[-1]
.\multi_offer_generator.py,388,price_factor,"('Pow', ('Call', ('Attr', 'settings', 'get'), (('Const', ""'price_exponent'""), ('Const', '1.03')), ()), ('Name', 'i'))","('Pow', ('Call', 2, 0), ('Name',))","i,settings","price_factor = settings.get(""price_exponent"", 1.03) ** i"
.\multi_offer_generator.py,831,price_factor,"('Pow', ('Name', 'exponent'), ('Name', 'company_index'))","('Pow', ('Name',), ('Name',))","company_index,exponent",price_factor = exponent ** company_index
.\calculations.py,3000,price_value_from_matrix,"('Const', '0.0')","('Const',)",,price_value_from_matrix = 0.0  # Sicherer Fallback
.\calculations.py,2967,price_value_from_matrix,"('Const', 'None')","('Const',)",,price_value_from_matrix = None
.\calculations.py,2995,price_value_from_matrix,"('Subscript', ('Name', 'selected_row_from_matrix'), ('Name', 'original_no_storage_column_name'))","('Subscript',)","original_no_storage_column_name,selected_row_from_matrix",price_value_from_matrix = selected_row_from_matrix[
.\calculations.py,2978,price_value_from_matrix,"('Subscript', ('Name', 'selected_row_from_matrix'), ('Name', 'original_price_col_key_for_df_access'))","('Subscript',)","original_price_col_key_for_df_access,selected_row_from_matrix",price_value_from_matrix = selected_row_from_matrix[
.\analysis.py,1672,primary_color,"('Call', ('Attr', 'specific_settings', 'get'), (('Const', ""'primary_chart_color'""), ('Call', ('Name', '_safe_viz_get'), (('Name', 'viz_settings'), ('Const', ""'primary_chart_color'"")), ())), ())","('Call', 2, 0)","_safe_viz_get,specific_settings,viz_settings",primary_color = specific_settings.get(
.\admin_panel.py,1569,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Call', ('Name', 'get_text_local'), (('Const', ""'admin_pdf_primary_color_label'""), ('Const', ""'PDF Haupt-/Akzentfarbe'"")), ()),), (('key', ('Other', 'JoinedStr')), ('value', ('Call', ('Attr', 'current_design_settings', 'get'), (('Const', ""'primary_color'""), ('Subscript', ('Name', 'PDF_DESIGN_SETTINGS_DEFAULT'), ('Const', ""'primary_color'""))), ()))))","('Call', 1, 2)","PDF_DESIGN_SETTINGS_DEFAULT,WIDGET_KEY_SUFFIX,current_design_settings,get_text_local,st","primary_color = st.color_picker(get_text_local(""admin_pdf_primary_color_label"", ""PDF Haupt-/Akzentfarbe""), value=current_design_settings.get('primary_color', PDF_DESIGN_SETTINGS_DEFAULT['primary_color']), key=f""pdf_primary_color{WIDGET_KEY_SUFFIX}"")"
.\admin_panel.py,1476,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Call', ('Name', 'get_text_local'), (('Const', ""'admin_viz_primary_color_label'""), ('Const', ""'Primäre Diagrammfarbe'"")), ()),), (('key', ('Other', 'JoinedStr')), ('value', ('Call', ('Attr', 'viz_settings', 'get'), (('Const', ""'primary_chart_color'""), ('Call', ('Attr', 'default_viz_settings_fallback', 'get'), (('Const', ""'primary_chart_color'""),), ())), ()))))","('Call', 1, 2)","WIDGET_KEY_SUFFIX,default_viz_settings_fallback,get_text_local,st,viz_settings","primary_color = st.color_picker(get_text_local(""admin_viz_primary_color_label"", ""Primäre Diagrammfarbe""), value=viz_settings.get(""primary_chart_color"", default_viz_settings_fallback.get(""primary_chart_color"")), key=f""viz_primary_color_picker{WIDGET_KEY_SUFFIX}"")"
.\doc_output.py,1219,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""' Primärfarbe'""),), (('value', ('Const', ""'#667eea'"")),))","('Call', 1, 1)",st,"primary_color = st.color_picker("" Primärfarbe"", value=""#667eea"")"
.\doc_output.py,264,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Primärfarbe'""), ('Const', ""'#2E86AB'"")), (('key', ('Const', ""'pdf_primary_color'"")),))","('Call', 2, 1)",st,"primary_color = st.color_picker(""Primärfarbe"", ""#2E86AB"", key=""pdf_primary_color"")"
.\components\progress_demo.py,130,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Primärfarbe'""), ('Const', ""'#3b82f6'"")), ())","('Call', 2, 0)",st,"primary_color = st.color_picker(""Primärfarbe"", ""#3b82f6"")"
.\components\progress_settings.py,50,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Primärfarbe'""),), (('help', ('Const', ""'Hauptfarbe für den Ladebalken'"")), ('value', ('Attr', 'current_config', 'color_primary'))))","('Call', 1, 2)","current_config,st",primary_color = st.color_picker(
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_settings.py.insert.py,52,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Primärfarbe'""),), (('help', ('Const', ""'Hauptfarbe für den Ladebalken'"")), ('value', ('Attr', 'current_config', 'color_primary'))))","('Call', 1, 2)","current_config,st",primary_color = st.color_picker(
.\notwendig oder nicht\wichtig\portings\patches\components\progress_settings.py.insert.py,53,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Primärfarbe'""),), (('help', ('Const', ""'Hauptfarbe für den Ladebalken'"")), ('value', ('Attr', 'current_config', 'color_primary'))))","('Call', 1, 2)","current_config,st",primary_color = st.color_picker(
.\tools\out_selected\patches\components\progress_settings.py.insert.py,52,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Primärfarbe'""),), (('help', ('Const', ""'Hauptfarbe für den Ladebalken'"")), ('value', ('Attr', 'current_config', 'color_primary'))))","('Call', 1, 2)","current_config,st",primary_color = st.color_picker(
.\tools\portings\patches\components\progress_settings.py.insert.py,53,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Primärfarbe'""),), (('help', ('Const', ""'Hauptfarbe für den Ladebalken'"")), ('value', ('Attr', 'current_config', 'color_primary'))))","('Call', 1, 2)","current_config,st",primary_color = st.color_picker(
.\central_pdf_system.py,1555,primary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Primärfarbe'""),), (('help', ('Const', ""'Hauptfarbe für Überschriften und Akzente'"")), ('value', ('Const', ""'#0d3780'""))))","('Call', 1, 2)",st,"primary_color = st.color_picker(""Primärfarbe"", value=""#0d3780"", help=""Hauptfarbe für Überschriften und Akzente"")"
.\heatpump_pricing.py,208,principal,"('Const', '0.0')","('Const',)",,principal = 0.0
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,155,principal,"('Const', '0.0')","('Const',)",,principal = 0.0
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,155,principal,"('Const', '0.0')","('Const',)",,principal = 0.0
.\heatpump_pricing.py,206,principal,"('Sub', ('Subscript', ('Name', 'subsidy'), ('Const', ""'effective_total_after_subsidy_net'"")), ('Call', ('Name', 'float'), (('Call', ('Attr', 'financing', 'get'), (('Const', ""'equity_amount'""), ('Const', '0.0')), ()),), ()))","('Sub', ('Subscript',), ('Call', 1, 0))","financing,float,subsidy","principal = subsidy[""effective_total_after_subsidy_net""] - float(financing.get(""equity_amount"", 0.0))"
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,153,principal,"('Sub', ('Subscript', ('Name', 'subsidy'), ('Const', ""'effective_total_after_subsidy_net'"")), ('Call', ('Name', 'float'), (('Call', ('Attr', 'financing', 'get'), (('Const', ""'equity_amount'""), ('Const', '0.0')), ()),), ()))","('Sub', ('Subscript',), ('Call', 1, 0))","financing,float,subsidy","principal = subsidy[""effective_total_after_subsidy_net""] - float(financing.get(""equity_amount"", 0.0))"
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,153,principal,"('Sub', ('Subscript', ('Name', 'subsidy'), ('Const', ""'effective_total_after_subsidy_net'"")), ('Call', ('Name', 'float'), (('Call', ('Attr', 'financing', 'get'), (('Const', ""'equity_amount'""), ('Const', '0.0')), ()),), ()))","('Sub', ('Subscript',), ('Call', 1, 0))","financing,float,subsidy","principal = subsidy[""effective_total_after_subsidy_net""] - float(financing.get(""equity_amount"", 0.0))"
.\heatpump_ui.py,1190,principal,"('Sub', ('Subscript', ('Name', 'subsidy'), ('Const', ""'effective_total_after_subsidy_net'"")), ('Name', 'equity_amount'))","('Sub', ('Subscript',), ('Name',))","equity_amount,subsidy",principal = subsidy['effective_total_after_subsidy_net'] - equity_amount
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_ui.py.insert.py,114,principal,"('Sub', ('Subscript', ('Name', 'subsidy'), ('Const', ""'effective_total_after_subsidy_net'"")), ('Name', 'equity_amount'))","('Sub', ('Subscript',), ('Name',))","equity_amount,subsidy",principal = subsidy['effective_total_after_subsidy_net'] - equity_amount
.\notwendig oder nicht\wichtig\portings\patches\heatpump_ui.py.insert.py,115,principal,"('Sub', ('Subscript', ('Name', 'subsidy'), ('Const', ""'effective_total_after_subsidy_net'"")), ('Name', 'equity_amount'))","('Sub', ('Subscript',), ('Name',))","equity_amount,subsidy",principal = subsidy['effective_total_after_subsidy_net'] - equity_amount
.\tools\out_selected\patches\heatpump_ui.py.insert.py,114,principal,"('Sub', ('Subscript', ('Name', 'subsidy'), ('Const', ""'effective_total_after_subsidy_net'"")), ('Name', 'equity_amount'))","('Sub', ('Subscript',), ('Name',))","equity_amount,subsidy",principal = subsidy['effective_total_after_subsidy_net'] - equity_amount
.\tools\portings\patches\heatpump_ui.py.insert.py,115,principal,"('Sub', ('Subscript', ('Name', 'subsidy'), ('Const', ""'effective_total_after_subsidy_net'"")), ('Name', 'equity_amount'))","('Sub', ('Subscript',), ('Name',))","equity_amount,subsidy",principal = subsidy['effective_total_after_subsidy_net'] - equity_amount
.\financial_tools.py,47,principal_payment,"('Name', 'monthly_payment')","('Name',)",monthly_payment,principal_payment = monthly_payment
.\financial_tools.py,50,principal_payment,"('Sub', ('Name', 'monthly_payment'), ('Name', 'interest_payment'))","('Sub', ('Name',), ('Name',))","interest_payment,monthly_payment",principal_payment = monthly_payment - interest_payment
.\central_pdf_system.py,65,problematic_keys,"('List', (('Const', ""'include_business_warranty'""), ('Const', ""'include_warranty_tom90'""), ('Const', ""'include_business_insurance'""), ('Const', ""'include_business_maintenance'""), ('Const', ""'include_business_financing'"")))","('List', 5)",,problematic_keys = [
.\central_pdf_system.py,296,problematic_keys,"('List', (('Const', ""'include_business_warranty'""), ('Const', ""'include_warranty_tom90'""), ('Const', ""'include_business_insurance'""), ('Const', ""'include_business_maintenance'""), ('Const', ""'include_business_financing'""), ('Const', ""'include_enhanced_charts'""), ('Const', ""'include_chart_descriptions'"")))","('List', 7)",,problematic_keys = [
.\pdf_generator.py,1455,processed_text,"('Call', ('Attr', 'processed_text', 'replace'), (('Name', 'placeholder'), ('Call', ('Name', 'str'), (('Name', 'value_repl'),), ())), ())","('Call', 2, 0)","placeholder,processed_text,str,value_repl","processed_text = processed_text.replace(placeholder, str(value_repl))"
.\pdf_generator.py,1426,processed_text,"('Call', ('Name', 'str'), (('Name', 'text_template'),), ())","('Call', 1, 0)","str,text_template",processed_text = str(text_template)
.\tools\import_module_attributes_generic.py,132,prod,"('Call', ('Attr', 'row', 'get'), (('Const', ""'product_warranty_years'""),), ())","('Call', 1, 0)",row,"prod = row.get(""product_warranty_years"")"
.\product_attributes.py,246,prod,"('Call', ('Name', '_get_prod'), (('Name', 'model'),), ())","('Call', 1, 0)","_get_prod,model",prod = _get_prod(model)
.\pdf_template_engine\placeholders.py,857,prod,"('Call', ('Name', 'float'), (('Name', 'annual_prod'),), ())","('Call', 1, 0)","annual_prod,float",prod = float(annual_prod)
.\admin_product_attributes_ui.py,41,prod,"('Call', ('Name', 'get_product_by_model_name'), (('Name', 'selected_model'),), ())","('Call', 1, 0)","get_product_by_model_name,selected_model",prod = get_product_by_model_name(selected_model)
.\admin_panel.py,1065,prod_specific_dir,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'PRODUCT_DATASHEETS_BASE_DIR_ADMIN'), ('Call', ('Name', 'str'), (('Name', 'new_product_id'),), ())), ())","('Call', 2, 0)","PRODUCT_DATASHEETS_BASE_DIR_ADMIN,new_product_id,os,str","prod_specific_dir = os.path.join(PRODUCT_DATASHEETS_BASE_DIR_ADMIN, str(new_product_id))"
.\admin_panel.py,1028,prod_specific_dir,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'PRODUCT_DATASHEETS_BASE_DIR_ADMIN'), ('Call', ('Name', 'str'), (('Name', 'product_id_for_files'),), ())), ())","('Call', 2, 0)","PRODUCT_DATASHEETS_BASE_DIR_ADMIN,os,product_id_for_files,str","prod_specific_dir = os.path.join(PRODUCT_DATASHEETS_BASE_DIR_ADMIN, str(product_id_for_files))"
.\pdf_template_engine\placeholders.py,1258,prods,"('BoolOp', 'Or', (('Call', ('Name', '_list_products'), (), ()), ('Call', ('Name', '_list_products'), (), (('category', ('Const', ""'Modul'"")),)), ('List', ())))","('BoolOp', 'Or', 3)",_list_products,"prods = _list_products(category=""Modul"") or _list_products() or []"
.\heatpump_pricing.py,71,prods,"('BoolOp', 'Or', (('Call', ('Name', 'list_products'), (), ()), ('List', ())))","('BoolOp', 'Or', 2)",list_products,prods = list_products() or []
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,22,prods,"('BoolOp', 'Or', (('Call', ('Name', 'list_products'), (), ()), ('List', ())))","('BoolOp', 'Or', 2)",list_products,prods = list_products() or []
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,22,prods,"('BoolOp', 'Or', (('Call', ('Name', 'list_products'), (), ()), ('List', ())))","('BoolOp', 'Or', 2)",list_products,prods = list_products() or []
.\admin_panel.py,891,product_categories_manual_list,"('Call', ('Name', 'list_product_categories_func'), (), ())","('Call', 0, 0)",list_product_categories_func,product_categories_manual_list = list_product_categories_func()
.\admin_panel.py,894,product_categories_manual_list,"('List', (('Const', ""'Modul'""), ('Const', ""'Wechselrichter'""), ('Const', ""'Batteriespeicher'""), ('Const', ""'Wallbox'""), ('Const', ""'Zubehör'""), ('Const', ""'Sonstiges'"")))","('List', 6)",,"product_categories_manual_list = [""Modul"", ""Wechselrichter"", ""Batteriespeicher"", ""Wallbox"", ""Zubehör"", ""Sonstiges""]"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,109,product_data_for_manual_form,"('Call', ('Name', 'get_product_by_id'), (('Name', 'product_id'),), ())","('Call', 1, 0)","get_product_by_id,product_id",product_data_for_manual_form = get_product_by_id(product_id)
.\tests\test_admin_workflow.py,100,product_data_for_manual_form,"('Call', ('Name', 'get_product_by_id'), (('Name', 'product_id'),), ())","('Call', 1, 0)","get_product_by_id,product_id",product_data_for_manual_form = get_product_by_id(product_id)
.\tools\portings\patches\test_admin_workflow.py.insert.py,109,product_data_for_manual_form,"('Call', ('Name', 'get_product_by_id'), (('Name', 'product_id'),), ())","('Call', 1, 0)","get_product_by_id,product_id",product_data_for_manual_form = get_product_by_id(product_id)
.\admin_panel.py,896,product_data_for_manual_form,"('Dict', ())","('Dict', 0)",,product_data_for_manual_form = {}
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,18,product_data_for_manual_form,"('Dict', ())","('Dict', 0)",,product_data_for_manual_form = {}  # Leere Daten für neues Produkt
.\tests\test_admin_workflow.py,18,product_data_for_manual_form,"('Dict', ())","('Dict', 0)",,product_data_for_manual_form = {}  # Leere Daten für neues Produkt
.\tools\portings\patches\test_admin_workflow.py.insert.py,18,product_data_for_manual_form,"('Dict', ())","('Dict', 0)",,product_data_for_manual_form = {}  # Leere Daten für neues Produkt
.\admin_panel.py,902,product_data_for_manual_form,"('Name', 'product_to_edit_manual_data')","('Name',)",product_to_edit_manual_data,product_data_for_manual_form = product_to_edit_manual_data
.\admin_panel.py,709,product_data_import,"('Dict', ())","('Dict', 0)",,product_data_import = {}
.\admin_panel.py,711,product_data_import,"('Other', 'DictComp')","('Other', 'DictComp')","k,pd,row,v","product_data_import = {k: (v if pd.notna(v) else None) for k, v in row.to_dict().items()}"
.\admin_panel.py,981,product_data_to_save_db,"('Dict', (('KV', ('Const', ""'additional_cost_netto'""), ('Name', 'p_add_cost_form')), ('KV', ('Const', ""'brand'""), ('Call', ('Attr', ""p_brand_form or ''"", 'strip'), (), ())), ('KV', ('Const', ""'category'""), ('Name', 'p_category_form')), ('KV', ('Const', ""'datasheet_link_db_path'""), ('Name', 'current_datasheet_link')), ('KV', ('Const', ""'description'""), ('Call', ('Attr', ""p_description_form_val or ''"", 'strip'), (), ())), ('KV', ('Const', ""'image_base64'""), ('BoolOp', 'Or', (('Const', ""''""), ('Name', 'current_product_image_b64_form')))), ('KV', ('Const', ""'model_name'""), ('Call', ('Attr', ""p_model_name_form or ''"", 'strip'), (), ())), ('KV', ('Const', ""'price_euro'""), ('Name', 'p_price_form')), ('KV', ('Const', ""'warranty_years'""), ('Name', 'p_warranty_form'))))","('Dict', 9)","current_datasheet_link,current_product_image_b64_form,p_add_cost_form,p_brand_form,p_category_form,p_description_form_val,p_model_name_form,p_price_form,p_warranty_form",product_data_to_save_db = {
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,39,product_data_to_save_db,"('Dict', (('KV', ('Const', ""'additional_cost_netto'""), ('Name', 'p_add_cost_form')), ('KV', ('Const', ""'brand'""), ('Call', ('Attr', 'p_brand_form', 'strip'), (), ())), ('KV', ('Const', ""'category'""), ('Name', 'p_category_form')), ('KV', ('Const', ""'description'""), ('Call', ('Attr', 'p_description_form_val', 'strip'), (), ())), ('KV', ('Const', ""'image_base64'""), ('BoolOp', 'Or', (('Const', ""''""), ('Name', 'current_product_image_b64_form')))), ('KV', ('Const', ""'model_name'""), ('Call', ('Attr', 'p_model_name_form', 'strip'), (), ())), ('KV', ('Const', ""'price_euro'""), ('Name', 'p_price_form')), ('KV', ('Const', ""'warranty_years'""), ('Name', 'p_warranty_form'))))","('Dict', 8)","current_product_image_b64_form,p_add_cost_form,p_brand_form,p_category_form,p_description_form_val,p_model_name_form,p_price_form,p_warranty_form",product_data_to_save_db = {
.\tests\test_admin_workflow.py,39,product_data_to_save_db,"('Dict', (('KV', ('Const', ""'additional_cost_netto'""), ('Name', 'p_add_cost_form')), ('KV', ('Const', ""'brand'""), ('Call', ('Attr', 'p_brand_form', 'strip'), (), ())), ('KV', ('Const', ""'category'""), ('Name', 'p_category_form')), ('KV', ('Const', ""'description'""), ('Call', ('Attr', 'p_description_form_val', 'strip'), (), ())), ('KV', ('Const', ""'image_base64'""), ('BoolOp', 'Or', (('Const', ""''""), ('Name', 'current_product_image_b64_form')))), ('KV', ('Const', ""'model_name'""), ('Call', ('Attr', 'p_model_name_form', 'strip'), (), ())), ('KV', ('Const', ""'price_euro'""), ('Name', 'p_price_form')), ('KV', ('Const', ""'warranty_years'""), ('Name', 'p_warranty_form'))))","('Dict', 8)","current_product_image_b64_form,p_add_cost_form,p_brand_form,p_category_form,p_description_form_val,p_model_name_form,p_price_form,p_warranty_form",product_data_to_save_db = {
.\tools\portings\patches\test_admin_workflow.py.insert.py,39,product_data_to_save_db,"('Dict', (('KV', ('Const', ""'additional_cost_netto'""), ('Name', 'p_add_cost_form')), ('KV', ('Const', ""'brand'""), ('Call', ('Attr', 'p_brand_form', 'strip'), (), ())), ('KV', ('Const', ""'category'""), ('Name', 'p_category_form')), ('KV', ('Const', ""'description'""), ('Call', ('Attr', 'p_description_form_val', 'strip'), (), ())), ('KV', ('Const', ""'image_base64'""), ('BoolOp', 'Or', (('Const', ""''""), ('Name', 'current_product_image_b64_form')))), ('KV', ('Const', ""'model_name'""), ('Call', ('Attr', 'p_model_name_form', 'strip'), (), ())), ('KV', ('Const', ""'price_euro'""), ('Name', 'p_price_form')), ('KV', ('Const', ""'warranty_years'""), ('Name', 'p_warranty_form'))))","('Dict', 8)","current_product_image_b64_form,p_add_cost_form,p_brand_form,p_category_form,p_description_form_val,p_model_name_form,p_price_form,p_warranty_form",product_data_to_save_db = {
.\notwendig oder nicht\wichtig\portings\patches\test_admin_fix.py.insert.py,70,product_data_to_save_db,"('Dict', (('KV', ('Const', ""'additional_cost_netto'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_add_cost_form'""))), ('KV', ('Const', ""'brand'""), ('Call', ('Attr', ""test_form_values['p_brand_form'] or ''"", 'strip'), (), ())), ('KV', ('Const', ""'category'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_category_form'""))), ('KV', ('Const', ""'datasheet_link_db_path'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'current_datasheet_link'""))), ('KV', ('Const', ""'description'""), ('Call', ('Attr', ""test_form_values['p_description_form_val'] or ''"", 'strip'), (), ())), ('KV', ('Const', ""'image_base64'""), ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'current_product_image_b64_form'""))))), ('KV', ('Const', ""'model_name'""), ('Call', ('Attr', ""test_form_values['p_model_name_form'] or ''"", 'strip'), (), ())), ('KV', ('Const', ""'price_euro'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_price_form'""))), ('KV', ('Const', ""'warranty_years'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_warranty_form'"")))))","('Dict', 9)",test_form_values,product_data_to_save_db = {
.\tests\test_admin_fix.py,59,product_data_to_save_db,"('Dict', (('KV', ('Const', ""'additional_cost_netto'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_add_cost_form'""))), ('KV', ('Const', ""'brand'""), ('Call', ('Attr', ""test_form_values['p_brand_form'] or ''"", 'strip'), (), ())), ('KV', ('Const', ""'category'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_category_form'""))), ('KV', ('Const', ""'datasheet_link_db_path'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'current_datasheet_link'""))), ('KV', ('Const', ""'description'""), ('Call', ('Attr', ""test_form_values['p_description_form_val'] or ''"", 'strip'), (), ())), ('KV', ('Const', ""'image_base64'""), ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'current_product_image_b64_form'""))))), ('KV', ('Const', ""'model_name'""), ('Call', ('Attr', ""test_form_values['p_model_name_form'] or ''"", 'strip'), (), ())), ('KV', ('Const', ""'price_euro'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_price_form'""))), ('KV', ('Const', ""'warranty_years'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_warranty_form'"")))))","('Dict', 9)",test_form_values,product_data_to_save_db = {
.\tools\portings\patches\test_admin_fix.py.insert.py,70,product_data_to_save_db,"('Dict', (('KV', ('Const', ""'additional_cost_netto'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_add_cost_form'""))), ('KV', ('Const', ""'brand'""), ('Call', ('Attr', ""test_form_values['p_brand_form'] or ''"", 'strip'), (), ())), ('KV', ('Const', ""'category'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_category_form'""))), ('KV', ('Const', ""'datasheet_link_db_path'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'current_datasheet_link'""))), ('KV', ('Const', ""'description'""), ('Call', ('Attr', ""test_form_values['p_description_form_val'] or ''"", 'strip'), (), ())), ('KV', ('Const', ""'image_base64'""), ('BoolOp', 'Or', (('Const', ""''""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'current_product_image_b64_form'""))))), ('KV', ('Const', ""'model_name'""), ('Call', ('Attr', ""test_form_values['p_model_name_form'] or ''"", 'strip'), (), ())), ('KV', ('Const', ""'price_euro'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_price_form'""))), ('KV', ('Const', ""'warranty_years'""), ('Subscript', ('Name', 'test_form_values'), ('Const', ""'p_warranty_form'"")))))","('Dict', 9)",test_form_values,product_data_to_save_db = {
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,119,product_data_to_save_db,"('Dict', (('KV', ('Const', ""'brand'""), ('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'brand'""),), ())), ('KV', ('Const', ""'category'""), ('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'category'""),), ())), ('KV', ('Const', ""'description'""), ('Const', ""'AKTUALISIERTE Beschreibung'"")), ('KV', ('Const', ""'image_base64'""), ('BoolOp', 'Or', (('Const', ""''""), ('Name', 'current_product_image_b64_form')))), ('KV', ('Const', ""'model_name'""), ('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'model_name'""),), ())), ('KV', ('Const', ""'price_euro'""), ('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'price_euro'""),), ()))))","('Dict', 6)","current_product_image_b64_form,product_data_for_manual_form",product_data_to_save_db = {
.\tests\test_admin_workflow.py,110,product_data_to_save_db,"('Dict', (('KV', ('Const', ""'brand'""), ('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'brand'""),), ())), ('KV', ('Const', ""'category'""), ('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'category'""),), ())), ('KV', ('Const', ""'description'""), ('Const', ""'AKTUALISIERTE Beschreibung'"")), ('KV', ('Const', ""'image_base64'""), ('BoolOp', 'Or', (('Const', ""''""), ('Name', 'current_product_image_b64_form')))), ('KV', ('Const', ""'model_name'""), ('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'model_name'""),), ())), ('KV', ('Const', ""'price_euro'""), ('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'price_euro'""),), ()))))","('Dict', 6)","current_product_image_b64_form,product_data_for_manual_form",product_data_to_save_db = {
.\tools\portings\patches\test_admin_workflow.py.insert.py,119,product_data_to_save_db,"('Dict', (('KV', ('Const', ""'brand'""), ('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'brand'""),), ())), ('KV', ('Const', ""'category'""), ('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'category'""),), ())), ('KV', ('Const', ""'description'""), ('Const', ""'AKTUALISIERTE Beschreibung'"")), ('KV', ('Const', ""'image_base64'""), ('BoolOp', 'Or', (('Const', ""''""), ('Name', 'current_product_image_b64_form')))), ('KV', ('Const', ""'model_name'""), ('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'model_name'""),), ())), ('KV', ('Const', ""'price_euro'""), ('Call', ('Attr', 'product_data_for_manual_form', 'get'), (('Const', ""'price_euro'""),), ()))))","('Dict', 6)","current_product_image_b64_form,product_data_for_manual_form",product_data_to_save_db = {
.\gui.py,729,product_db_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'product_db'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","product_db_module = import_module_with_fallback(""product_db"", import_errors)"
.\gui.py,83,product_db_module,"('Const', 'None')","('Const',)",,product_db_module: Optional[Any] = None
.\pdf_generator.py,1579,product_details,"('Call', ('Name', 'get_product_by_id_func_param'), (('Name', 'product_id'),), ())","('Call', 1, 0)","get_product_by_id_func_param,product_id",product_details = get_product_by_id_func_param(product_id)
.\pdf_generator.py,1577,product_details,"('Const', 'None')","('Const',)",,"product_details: Optional[Dict[str, Any]] = None"
.\product_db.py,173,product_id,"('Attr', 'cursor', 'lastrowid')","('Attr',)",cursor,conn.commit(); product_id = cursor.lastrowid
.\add_test_product_images.py,43,product_id,"('Call', ('Attr', 'product', 'get'), (('Const', ""'id'""),), ())","('Call', 1, 0)",product,product_id = product.get('id')
.\create_png_test_images.py,63,product_id,"('Call', ('Attr', 'product', 'get'), (('Const', ""'id'""),), ())","('Call', 1, 0)",product,product_id = product.get('id')
.\notwendig oder nicht\wichtig\portings\patches\add_test_product_images.py.insert.py,61,product_id,"('Call', ('Attr', 'product', 'get'), (('Const', ""'id'""),), ())","('Call', 1, 0)",product,product_id = product.get('id')
.\notwendig oder nicht\wichtig\portings\patches\create_png_test_images.py.insert.py,73,product_id,"('Call', ('Attr', 'product', 'get'), (('Const', ""'id'""),), ())","('Call', 1, 0)",product,product_id = product.get('id')
.\tools\portings\patches\add_test_product_images.py.insert.py,61,product_id,"('Call', ('Attr', 'product', 'get'), (('Const', ""'id'""),), ())","('Call', 1, 0)",product,product_id = product.get('id')
.\tools\portings\patches\create_png_test_images.py.insert.py,73,product_id,"('Call', ('Attr', 'product', 'get'), (('Const', ""'id'""),), ())","('Call', 1, 0)",product,product_id = product.get('id')
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,101,product_id,"('Call', ('Name', 'add_product'), (('Name', 'initial_product'),), ())","('Call', 1, 0)","add_product,initial_product",product_id = add_product(initial_product)
.\tests\test_admin_workflow.py,92,product_id,"('Call', ('Name', 'add_product'), (('Name', 'initial_product'),), ())","('Call', 1, 0)","add_product,initial_product",product_id = add_product(initial_product)
.\tools\portings\patches\test_admin_workflow.py.insert.py,101,product_id,"('Call', ('Name', 'add_product'), (('Name', 'initial_product'),), ())","('Call', 1, 0)","add_product,initial_product",product_id = add_product(initial_product)
.\pdf_ui.py,1442,product_ids,"('List', (('Tuple', (('Const', ""'Modul'""), ('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_module_id'""),), ()))), ('Tuple', (('Const', ""'Wechselrichter'""), ('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_inverter_id'""),), ()))), ('Tuple', (('Const', ""'Batteriespeicher'""), ('Other', 'IfExp')))))","('List', 3)",project_details,product_ids = [
.\multi_offer_generator_old.py,668,product_ids,"('Other', 'ListComp')","('Other', 'ListComp')","item,offer_data","product_ids = [item['product_id'] for item in offer_data.get('items', [])]"
.\pdf_generator.py,2819,product_ids_for_datasheets,"('Call', ('Name', 'list'), (('Call', ('Name', 'filter'), (('Const', 'None'), ('List', (('Call', ('Attr', 'pv_details_pdf', 'get'), (('Const', ""'selected_module_id'""),), ()), ('Call', ('Attr', 'pv_details_pdf', 'get'), (('Const', ""'selected_inverter_id'""),), ()), ('Other', 'IfExp')))), ()),), ())","('Call', 1, 0)","filter,list,pv_details_pdf","product_ids_for_datasheets = list(filter(None, ["
.\pdf_generator.py,2830,product_ids_for_datasheets,"('Call', ('Name', 'list'), (('Call', ('Name', 'set'), (('Name', 'product_ids_for_datasheets'),), ()),), ())","('Call', 1, 0)","list,product_ids_for_datasheets,set",product_ids_for_datasheets = list(set(product_ids_for_datasheets))
.\pdf_generator.py,1690,product_image_flowables_prod,"('Call', ('Name', '_get_image_flowable'), (('Name', 'product_image_base64_prod'), ('Name', 'img_w_prod'), ('Name', 'texts'), ('Const', 'None'), ('Name', 'img_h_max_prod')), (('align', ('Const', ""'CENTER'"")),))","('Call', 5, 1)","_get_image_flowable,img_h_max_prod,img_w_prod,product_image_base64_prod,texts","product_image_flowables_prod = _get_image_flowable(product_image_base64_prod, img_w_prod, texts, None, img_h_max_prod, align='CENTER')"
.\pdf_generator.py,1685,product_image_flowables_prod,"('List', ())","('List', 0)",,product_image_flowables_prod: List[Any] = []
.\pv_visuals.py,81,production_data,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'monthly_productions_sim'""),), ())","('Call', 1, 0)",analysis_results,production_data = analysis_results.get('monthly_productions_sim')
.\analysis.py,2256,production_data,"('Other', 'ListComp')","('Other', 'ListComp')","factor,monthly_factors,yearly_total",production_data = [yearly_total * factor for factor in monthly_factors]
.\analysis.py,2258,production_data,"('Other', 'ListComp')","('Other', 'ListComp')","float,int,isinstance,math,production_data_raw,v",production_data = [
.\multi_offer_generator.py,411,products,"('Attr', 'self', 'products')","('Attr',)",self,products = self.products
.\multi_offer_generator_new.py,215,products,"('Attr', 'self', 'products')","('Attr',)",self,products = self.products
.\multi_offer_generator_old.py,158,products,"('Attr', 'self', 'products')","('Attr',)",self,products = self.products
.\multi_offer_generator_old.py,511,products,"('Attr', 'self', 'products')","('Attr',)",self,products = self.products
.\admin_product_attributes_ui.py,36,products,"('Call', ('Name', 'list_products'), (), (('category', ('BoolOp', 'Or', (('Const', 'None'), ('Name', 'category')))),))","('Call', 0, 1)","category,list_products",products = list_products(category=category or None)
.\add_test_product_images.py,35,products,"('Call', ('Name', 'list_products'), (), ())","('Call', 0, 0)",list_products,products = list_products()  # Alle Produkte
.\add_test_product_images.py,69,products,"('Call', ('Name', 'list_products'), (), ())","('Call', 0, 0)",list_products,products = list_products()  # Alle Produkte
.\admin_logo_management_ui.py,43,products,"('Call', ('Name', 'list_products'), (), ())","('Call', 0, 0)",list_products,products = list_products()
.\create_png_test_images.py,59,products,"('Call', ('Name', 'list_products'), (), ())","('Call', 0, 0)",list_products,products = list_products()
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,21,products,"('Call', ('Name', 'list_products'), (), ())","('Call', 0, 0)",list_products,products = list_products()
.\notwendig oder nicht\wichtig\portings\patches\add_test_product_images.py.insert.py,53,products,"('Call', ('Name', 'list_products'), (), ())","('Call', 0, 0)",list_products,products = list_products()  # Alle Produkte
.\notwendig oder nicht\wichtig\portings\patches\add_test_product_images.py.insert.py,96,products,"('Call', ('Name', 'list_products'), (), ())","('Call', 0, 0)",list_products,products = list_products()  # Alle Produkte
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,22,products,"('Call', ('Name', 'list_products'), (), ())","('Call', 0, 0)",list_products,products = list_products()
.\notwendig oder nicht\wichtig\portings\patches\create_png_test_images.py.insert.py,69,products,"('Call', ('Name', 'list_products'), (), ())","('Call', 0, 0)",list_products,products = list_products()
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,21,products,"('Call', ('Name', 'list_products'), (), ())","('Call', 0, 0)",list_products,products = list_products()
.\tools\portings\patches\add_test_product_images.py.insert.py,53,products,"('Call', ('Name', 'list_products'), (), ())","('Call', 0, 0)",list_products,products = list_products()  # Alle Produkte
.\tools\portings\patches\add_test_product_images.py.insert.py,96,products,"('Call', ('Name', 'list_products'), (), ())","('Call', 0, 0)",list_products,products = list_products()  # Alle Produkte
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,22,products,"('Call', ('Name', 'list_products'), (), ())","('Call', 0, 0)",list_products,products = list_products()
.\tools\portings\patches\create_png_test_images.py.insert.py,69,products,"('Call', ('Name', 'list_products'), (), ())","('Call', 0, 0)",list_products,products = list_products()
.\solar_calculator.py,52,products,"('Call', ('Name', 'list_products_safe'), (), (('category', ('Name', 'category')),))","('Call', 0, 1)","category,list_products_safe",products = list_products_safe(category=category)
.\product_attributes.py,191,products,"('Other', 'IfExp')","('Other', 'IfExp')","_list_products,category",products = _list_products(category=category) if category else _list_products()
.\components\progress_manager.py,71,progress_bar,"('Call', ('Attr', 'self', 'create_progress_bar'), (('Name', 'progress_id'), ('Name', 'title'), ('Name', 'container')), ())","('Call', 3, 0)","container,progress_id,self,title",progress_bar = self.create_progress_bar(
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,128,progress_bar,"('Call', ('Attr', 'self', 'create_progress_bar'), (('Name', 'progress_id'), ('Name', 'title'), ('Name', 'container')), ())","('Call', 3, 0)","container,progress_id,self,title",progress_bar = self.create_progress_bar(
.\tools\out_selected\patches\components\progress_manager.py.insert.py,128,progress_bar,"('Call', ('Attr', 'self', 'create_progress_bar'), (('Name', 'progress_id'), ('Name', 'title'), ('Name', 'container')), ())","('Call', 3, 0)","container,progress_id,self,title",progress_bar = self.create_progress_bar(
.\multi_offer_generator.py,591,progress_bar,"('Call', ('Attr', 'st', 'progress'), (('Const', '0'),), ())","('Call', 1, 0)",st,progress_bar = st.progress(0)
.\multi_offer_generator_new.py,292,progress_bar,"('Call', ('Attr', 'st', 'progress'), (('Const', '0'),), ())","('Call', 1, 0)",st,progress_bar = st.progress(0)
.\multi_offer_generator_old.py,1392,progress_bar,"('Call', ('Attr', 'st', 'progress'), (('Const', '0'),), ())","('Call', 1, 0)",st,progress_bar = st.progress(0)
.\pdf_migration.py,37,progress_bar,"('Call', ('Attr', 'st', 'progress'), (('Const', '0'),), ())","('Call', 1, 0)",st,progress_bar = st.progress(0)
.\components\progress_manager.py,86,progress_bar,"('Call', ('Name', 'ProgressBar'), (('Name', 'progress_id'), ('Name', 'title'), ('Name', 'container'), ('Attr', 'self', 'config')), ())","('Call', 4, 0)","ProgressBar,container,progress_id,self,title",progress_bar = ProgressBar(
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,143,progress_bar,"('Call', ('Name', 'ProgressBar'), (('Name', 'progress_id'), ('Name', 'title'), ('Name', 'container'), ('Attr', 'self', 'config')), ())","('Call', 4, 0)","ProgressBar,container,progress_id,self,title",progress_bar = ProgressBar(
.\tools\out_selected\patches\components\progress_manager.py.insert.py,143,progress_bar,"('Call', ('Name', 'ProgressBar'), (('Name', 'progress_id'), ('Name', 'title'), ('Name', 'container'), ('Attr', 'self', 'config')), ())","('Call', 4, 0)","ProgressBar,container,progress_id,self,title",progress_bar = ProgressBar(
.\components\progress_settings.py,141,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Const', ""'Demo wird ausgeführt...'""), ('Name', 'demo_container')), ())","('Call', 2, 0)","create_progress_bar,demo_container","progress_bar = create_progress_bar(""Demo wird ausgeführt..."", demo_container)"
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_settings.py.insert.py,146,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Const', ""'Demo wird ausgeführt...'""), ('Name', 'demo_container')), ())","('Call', 2, 0)","create_progress_bar,demo_container","progress_bar = create_progress_bar(""Demo wird ausgeführt..."", demo_container)"
.\notwendig oder nicht\wichtig\portings\patches\components\progress_settings.py.insert.py,151,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Const', ""'Demo wird ausgeführt...'""), ('Name', 'demo_container')), ())","('Call', 2, 0)","create_progress_bar,demo_container","progress_bar = create_progress_bar(""Demo wird ausgeführt..."", demo_container)"
.\tools\out_selected\patches\components\progress_settings.py.insert.py,146,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Const', ""'Demo wird ausgeführt...'""), ('Name', 'demo_container')), ())","('Call', 2, 0)","create_progress_bar,demo_container","progress_bar = create_progress_bar(""Demo wird ausgeführt..."", demo_container)"
.\tools\portings\patches\components\progress_settings.py.insert.py,151,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Const', ""'Demo wird ausgeführt...'""), ('Name', 'demo_container')), ())","('Call', 2, 0)","create_progress_bar,demo_container","progress_bar = create_progress_bar(""Demo wird ausgeführt..."", demo_container)"
.\components\progress_demo.py,23,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Const', ""'Lade Daten...'""), ('Call', ('Attr', 'st', 'container'), (), ())), ())","('Call', 2, 0)","create_progress_bar,st","progress_bar = create_progress_bar(""Lade Daten..."", st.container())"
.\pdf_generator.py,142,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Const', ""'PDF wird erstellt...'""), ('Const', 'None')), ())","('Call', 2, 0)",create_progress_bar,"progress_bar = create_progress_bar(""PDF wird erstellt..."", None)"
.\components\progress_demo.py,143,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Const', ""'Teste eigene Farben...'""), ('Call', ('Attr', 'st', 'container'), (), ())), ())","('Call', 2, 0)","create_progress_bar,st","progress_bar = create_progress_bar(""Teste eigene Farben..."", st.container())"
.\components\progress_demo.py,89,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Const', ""'Verarbeite Daten...'""), ('Call', ('Attr', 'st', 'container'), (), ())), ())","('Call', 2, 0)","create_progress_bar,st","progress_bar = create_progress_bar(""Verarbeite Daten..."", st.container())"
.\components\progress_demo.py,74,progress_bar,"('Call', ('Name', 'create_progress_bar'), (('Other', 'JoinedStr'), ('Call', ('Attr', 'st', 'container'), (), ())), ())","('Call', 2, 0)","create_progress_bar,st,style_name","progress_bar = create_progress_bar(f""Teste {style_name} Style..."", st.container())"
.\pdf_generator.py,145,progress_bar,"('Const', 'None')","('Const',)",,progress_bar = None
.\components\progress_demo.py,83,progress_manager.config.style,"('Name', 'original_style')","('Name',)",original_style,progress_manager.config.style = original_style
.\components\progress_demo.py,72,progress_manager.config.style,"('Name', 'style')","('Name',)",style,progress_manager.config.style = style
.\analysis.py,6960,proj,"('BoolOp', 'Or', (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",st,"proj = st.session_state.get(""project_data"", {}) or {}"
.\multi_offer_generator.py,695,proj,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'multi_offer_project_data'""), ('Dict', ())), ())","('Call', 2, 0)",st,"proj = st.session_state.get('multi_offer_project_data', {})"
.\tools\smoke_crm_save.py,37,proj,"('Dict', (('KV', ('Const', ""'creation_date'""), ('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())), ('KV', ('Const', ""'customer_id'""), ('Name', 'cid')), ('KV', ('Const', ""'project_name'""), ('Const', ""'PV Angebot Test'"")), ('KV', ('Const', ""'project_status'""), ('Const', ""'Angebot'""))))","('Dict', 4)","cid,datetime",proj = {
.\pdf_generator.py,1772,proj_company_info,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'company_information'""),), ())","('Call', 1, 0)",project_data,proj_company_info = project_data.get('company_information')
.\pdf_generator.py,497,proj_company_info,"('Call', ('Attr', 'safe_project_data', 'get'), (('Const', ""'company_information'""),), ())","('Call', 1, 0)",safe_project_data,proj_company_info = safe_project_data.get('company_information')
.\pdf_ui.py,1249,proj_details,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'project_details'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"proj_details = project_data.get('project_details', {})"
.\multi_offer_generator.py,696,proj_details,"('Other', 'IfExp')","('Other', 'IfExp')","dict,isinstance,proj","proj_details = proj.get('project_details', {}) if isinstance(proj, dict) else {}"
.\pdf_ui.py,1250,proj_payload,"('Dict', (('KV', ('Const', ""'anlage_type'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'anlage_type'""),), ())), ('KV', ('Const', ""'annual_consumption_kwh'""), ('BoolOp', 'Or', (('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'annual_consumption_kwh'""),), ()), ('Call', ('Attr', ""project_data.get('consumption_data', {})"", 'get'), (('Const', ""'annual_consumption'""),), ())))), ('KV', ('Const', ""'annual_heating_kwh'""), ('BoolOp', 'Or', (('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'annual_heating_kwh'""),), ()), ('Call', ('Attr', ""project_data.get('consumption_data', {})"", 'get'), (('Const', ""'consumption_heating_kwh_yr'""),), ())))), ('KV', ('Const', ""'building_height_gt_7m'""), ('Call', ('Name', 'int'), (('Call', ('Name', 'bool'), (('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'building_height_gt_7m'""),), ()),), ()),), ())), ('KV', ('Const', ""'costs_heating_euro_mo'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'costs_heating_euro_mo'""),), ())), ('KV', ('Const', ""'costs_household_euro_mo'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'costs_household_euro_mo'""),), ())), ('KV', ('Const', ""'creation_date'""), ('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())), ('KV', ('Const', ""'customer_id'""), ('Name', 'created_customer_id')), ('KV', ('Const', ""'feed_in_type'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'feed_in_type'""),), ())), ('KV', ('Const', ""'free_roof_area_sqm'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'free_roof_area_sqm'""),), ())), ('KV', ('Const', ""'include_additional_components'""), ('Call', ('Name', 'int'), (('Call', ('Name', 'bool'), (('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'include_additional_components'""),), ()),), ()),), ())), ('KV', ('Const', ""'include_storage'""), ('Call', ('Name', 'int'), (('Call', ('Name', 'bool'), (('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'include_storage'""),), ()),), ()),), ())), ('KV', ('Const', ""'latitude'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'latitude'""),), ())), ('KV', ('Const', ""'longitude'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'longitude'""),), ())), ('KV', ('Const', ""'module_quantity'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'module_quantity'""),), ())), ('KV', ('Const', ""'project_name'""), ('BoolOp', 'Or', (('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'project_name'""),), ()), ('Other', 'JoinedStr')))), ('KV', ('Const', ""'project_status'""), ('Const', ""'Angebot'"")), ('KV', ('Const', ""'roof_covering_type'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'roof_covering_type'""),), ())), ('KV', ('Const', ""'roof_inclination_deg'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'roof_inclination_deg'""),), ())), ('KV', ('Const', ""'roof_orientation'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'roof_orientation'""),), ())), ('KV', ('Const', ""'roof_type'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'roof_type'""),), ())), ('KV', ('Const', ""'selected_inverter_id'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'selected_inverter_id'""),), ())), ('KV', ('Const', ""'selected_module_id'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'selected_module_id'""),), ())), ('KV', ('Const', ""'selected_storage_id'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'selected_storage_id'""),), ())), ('KV', ('Const', ""'selected_storage_storage_power_kw'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'selected_storage_storage_power_kw'""),), ())), ('KV', ('Const', ""'visualize_roof_in_pdf'""), ('Call', ('Name', 'int'), (('Call', ('Name', 'bool'), (('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'visualize_roof_in_pdf'""),), ()),), ()),), ()))))","('Dict', 26)","bool,created_customer_id,datetime,int,proj_details,project_data",proj_payload = {
.\multi_offer_generator.py,697,proj_payload,"('Dict', (('KV', ('Const', ""'creation_date'""), ('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())), ('KV', ('Const', ""'customer_id'""), ('Name', 'crm_customer_id')), ('KV', ('Const', ""'include_storage'""), ('Call', ('Name', 'int'), (('Call', ('Name', 'bool'), (('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'include_storage'""),), ()),), ()),), ())), ('KV', ('Const', ""'latitude'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'latitude'""),), ())), ('KV', ('Const', ""'longitude'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'longitude'""),), ())), ('KV', ('Const', ""'module_quantity'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'module_quantity'""),), ())), ('KV', ('Const', ""'project_name'""), ('BoolOp', 'Or', (('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'project_name'""),), ()), ('Other', 'JoinedStr')))), ('KV', ('Const', ""'project_status'""), ('Const', ""'Angebot'"")), ('KV', ('Const', ""'selected_inverter_id'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'selected_inverter_id'""),), ())), ('KV', ('Const', ""'selected_module_id'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'selected_module_id'""),), ())), ('KV', ('Const', ""'selected_storage_id'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'selected_storage_id'""),), ())), ('KV', ('Const', ""'selected_storage_storage_power_kw'""), ('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'selected_storage_storage_power_kw'""),), ())), ('KV', ('Const', ""'visualize_roof_in_pdf'""), ('Call', ('Name', 'int'), (('Call', ('Name', 'bool'), (('Call', ('Attr', 'proj_details', 'get'), (('Const', ""'visualize_roof_in_pdf'""),), ()),), ()),), ()))))","('Dict', 13)","bool,crm_customer_id,datetime,int,proj_details",proj_payload = {
.\analysis.py,1849,project_data,"('BoolOp', 'Or', (('Dict', ()), ('Name', 'project_data')))","('BoolOp', 'Or', 2)",project_data,project_data = project_data or {}
.\pdf_template_engine\placeholders.py,420,project_data,"('BoolOp', 'Or', (('Dict', ()), ('Name', 'project_data')))","('BoolOp', 'Or', 2)",project_data,project_data = project_data or {}
.\notwendig oder nicht\calculations_cli.py,45,project_data,"('Call', ('Attr', 'data', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",data,"project_data: Dict[str, Any] = data.get(""project_data"", {})"
.\notwendig oder nicht\keine ahnung\calculations_cli.py,45,project_data,"('Call', ('Attr', 'data', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",data,"project_data: Dict[str, Any] = data.get(""project_data"", {})"
.\notwendig oder nicht\need or not\calculations_cli.py,45,project_data,"('Call', ('Attr', 'data', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ())","('Call', 2, 0)",data,"project_data: Dict[str, Any] = data.get(""project_data"", {})"
.\pdf_erstellen_komplett.py,198,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Attr', 'json', 'loads'), (('Call', ('Attr', 'pj.read()', 'decode'), (('Const', ""'utf-8'""),), ()),), ()),), ())","('Call', 1, 0)","build_project_data,json,pj","project_data = build_project_data(json.loads(pj.read().decode(""utf-8"")))"
.\central_pdf_system.py,167,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ()),), ())","('Call', 1, 0)","build_project_data,kwargs","project_data = build_project_data(kwargs.get('project_data', {}))"
.\central_pdf_system.py,408,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ()),), ())","('Call', 1, 0)","build_project_data,kwargs","project_data = build_project_data(kwargs.get('project_data', {}))"
.\central_pdf_system.py,462,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Attr', 'kwargs', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ()),), ())","('Call', 1, 0)","build_project_data,kwargs","project_data = build_project_data(kwargs.get('project_data', {}))"
.\multi_offer_generator_old.py,272,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Attr', 'self', '_prepare_project_data_for_pdf'), (('Name', 'company_id'),), ()),), ())","('Call', 1, 0)","build_project_data,company_id,self",project_data = build_project_data(self._prepare_project_data_for_pdf(company_id))
.\multi_offer_generator_old.py,737,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Attr', 'self', '_prepare_project_data_for_pdf'), (('Name', 'company_id'),), ()),), ())","('Call', 1, 0)","build_project_data,company_id,self",project_data = build_project_data(self._prepare_project_data_for_pdf(company_id))
.\multi_offer_generator.py,581,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'multi_offer_project_data'""), ('Dict', ())), ()),), ())","('Call', 1, 0)","build_project_data,st","project_data = build_project_data(st.session_state.get(""multi_offer_project_data"", {}))"
.\multi_offer_generator_new.py,282,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'multi_offer_project_data'""), ('Dict', ())), ()),), ())","('Call', 1, 0)","build_project_data,st","project_data = build_project_data(st.session_state.get(""multi_offer_project_data"", {}))"
.\analysis.py,507,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ()),), ())","('Call', 1, 0)","build_project_data,st","project_data = build_project_data(st.session_state.get('project_data', {}))"
.\analysis.py,5293,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ()),), ())","('Call', 1, 0)","build_project_data,st","project_data = build_project_data(st.session_state.get(""project_data"", {}))"
.\analysis.py,6668,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ()),), ())","('Call', 1, 0)","build_project_data,st","project_data = build_project_data(st.session_state.get(""project_data"", {}))"
.\analysis.py,7765,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ()),), ())","('Call', 1, 0)","build_project_data,st","project_data = build_project_data(st.session_state.get(""project_data"", {}))"
.\analysis.py,7832,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ()),), ())","('Call', 1, 0)","build_project_data,st","project_data = build_project_data(st.session_state.get(""project_data"", {}))"
.\central_pdf_system.py,1986,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ()),), ())","('Call', 1, 0)","build_project_data,st","project_data = build_project_data(st.session_state.get('project_data', {}))"
.\live_preview_helpers.py,199,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ()),), ())","('Call', 1, 0)","build_project_data,st","project_data = build_project_data(st.session_state.get('project_data', {}))"
.\multi_offer_generator.py,110,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ()),), ())","('Call', 1, 0)","build_project_data,st","project_data = build_project_data(st.session_state.get(""project_data"", {}))"
.\multi_offer_generator_new.py,105,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ()),), ())","('Call', 1, 0)","build_project_data,st","project_data = build_project_data(st.session_state.get(""project_data"", {}))"
.\multi_offer_generator_old.py,377,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ()),), ())","('Call', 1, 0)","build_project_data,st","project_data = build_project_data(st.session_state.get(""project_data"", {}))"
.\pdf_erstellen_komplett.py,179,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'project_data'""), ('Dict', ())), ()),), ())","('Call', 1, 0)","build_project_data,st","project_data = build_project_data(st.session_state.get(""project_data"", {}))"
.\pdf_erstellen_komplett.py,127,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Name', '_read_json'), (('Name', 'project_json'),), ()),), ())","('Call', 1, 0)","_read_json,build_project_data,project_json",project_data = build_project_data(_read_json(project_json))
.\pdf_generator.py,1767,project_data,"('Call', ('Name', 'build_project_data'), (('Call', ('Name', 'dict'), (('BoolOp', 'Or', (('Dict', ()), ('Name', 'project_data'))),), ()),), ())","('Call', 1, 0)","build_project_data,dict,project_data",project_data = build_project_data(dict(project_data or {}))
.\calculations.py,4289,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '10.0')), ('KV', ('Const', ""'annual_consumption_kwh'""), ('Const', '4000')), ('KV', ('Const', ""'electricity_price_eur_per_kwh'""), ('Const', '0.3')), ('KV', ('Const', ""'location'""), ('Dict', (('KV', ('Const', ""'latitude'""), ('Const', '50.0')), ('KV', ('Const', ""'longitude'""), ('Const', '10.0'))))), ('KV', ('Const', ""'storage_kwh'""), ('Const', '10.0')))),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\tools\debug_dynamic_page3.py,4,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'annual_consumption_kwh'""), ('Const', '6000')), ('KV', ('Const', ""'einspeise_art'""), ('Const', ""'parts'"")))),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\tests\test_final_pdf_logos.py,20,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterstraße 1'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@beispiel.de'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'roof_area'""), ('Const', '50')), ('KV', ('Const', ""'roof_orientation'""), ('Const', ""'Süd'""))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'"")))))))))),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\tests\test_pdf_logos.py,20,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterstraße 1'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@beispiel.de'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'roof_area'""), ('Const', '50')), ('KV', ('Const', ""'roof_orientation'""), ('Const', ""'Süd'""))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'"")))))))))),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\tests\test_main_pdf.py,43,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterstraße'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@example.com'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'house_number'""), ('Const', ""'1'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'phone_mobile'""), ('Const', ""'0151 2345678'"")), ('KV', ('Const', ""'salutation'""), ('Const', ""'Herr'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'WR 5kW'"")), ('KV', ('Const', ""'selected_module_capacity_w'""), ('Const', '420')), ('KV', ('Const', ""'selected_module_name'""), ('Const', ""'PV-Modul 420W'"")), ('KV', ('Const', ""'selected_storage_capacity_kwh'""), ('Const', '5.1'))))))),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\tools\test_main_pdf.py,43,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterstraße'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@example.com'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'house_number'""), ('Const', ""'1'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'phone_mobile'""), ('Const', ""'0151 2345678'"")), ('KV', ('Const', ""'salutation'""), ('Const', ""'Herr'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'WR 5kW'"")), ('KV', ('Const', ""'selected_module_capacity_w'""), ('Const', '420')), ('KV', ('Const', ""'selected_module_name'""), ('Const', ""'PV-Modul 420W'"")), ('KV', ('Const', ""'selected_storage_capacity_kwh'""), ('Const', '5.1'))))))),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\tests\test_main6_render.py,14,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterweg'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@example.com'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'house_number'""), ('Const', ""'12'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'phone_mobile'""), ('Const', ""'+491234567'"")), ('KV', ('Const', ""'salutation'""), ('Const', ""'Herr'"")), ('KV', ('Const', ""'title'""), ('Const', ""''"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'electricity_price_increase_annual_percent'""), ('Const', '5')), ('KV', ('Const', ""'include_storage'""), ('Const', 'True')), ('KV', ('Const', ""'module_cell_technology'""), ('Const', ""'Monokristallin N-Type'"")), ('KV', ('Const', ""'module_cell_type'""), ('Const', ""'108 Halbzellen'"")), ('KV', ('Const', ""'module_guarantee_combined'""), ('Const', ""'25 Jahre Produktgarantie | 30 Jahre Leistungsgarantie'"")), ('KV', ('Const', ""'module_manufacturer'""), ('Const', ""'JA Solar'"")), ('KV', ('Const', ""'module_model'""), ('Const', ""'JAM54S31-420/MR'"")), ('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'module_structure'""), ('Const', ""'Glas-Folie'"")), ('KV', ('Const', ""'module_version'""), ('Const', ""'Black Frame'"")), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'Huawei SUN2000-8KTL-M1'"")), ('KV', ('Const', ""'selected_inverter_power_kw'""), ('Const', '8')), ('KV', ('Const', ""'selected_inverter_quantity'""), ('Const', '1')), ('KV', ('Const', ""'selected_module_capacity_w'""), ('Const', '420')), ('KV', ('Const', ""'selected_storage_name'""), ('Const', ""'Huawei LUNA2000-7-S1-7kWh Stromspeicher'"")), ('KV', ('Const', ""'stromkosten_haushalt_euro_monat'""), ('Const', '150')), ('KV', ('Const', ""'stromkosten_heizung_euro_monat'""), ('Const', '50'))))))),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\tools\test_main6_render.py,14,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterweg'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@example.com'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'house_number'""), ('Const', ""'12'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'phone_mobile'""), ('Const', ""'+491234567'"")), ('KV', ('Const', ""'salutation'""), ('Const', ""'Herr'"")), ('KV', ('Const', ""'title'""), ('Const', ""''"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'electricity_price_increase_annual_percent'""), ('Const', '5')), ('KV', ('Const', ""'include_storage'""), ('Const', 'True')), ('KV', ('Const', ""'module_cell_technology'""), ('Const', ""'Monokristallin N-Type'"")), ('KV', ('Const', ""'module_cell_type'""), ('Const', ""'108 Halbzellen'"")), ('KV', ('Const', ""'module_guarantee_combined'""), ('Const', ""'25 Jahre Produktgarantie | 30 Jahre Leistungsgarantie'"")), ('KV', ('Const', ""'module_manufacturer'""), ('Const', ""'JA Solar'"")), ('KV', ('Const', ""'module_model'""), ('Const', ""'JAM54S31-420/MR'"")), ('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'module_structure'""), ('Const', ""'Glas-Folie'"")), ('KV', ('Const', ""'module_version'""), ('Const', ""'Black Frame'"")), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'Huawei SUN2000-8KTL-M1'"")), ('KV', ('Const', ""'selected_inverter_power_kw'""), ('Const', '8')), ('KV', ('Const', ""'selected_inverter_quantity'""), ('Const', '1')), ('KV', ('Const', ""'selected_module_capacity_w'""), ('Const', '420')), ('KV', ('Const', ""'selected_storage_name'""), ('Const', ""'Huawei LUNA2000-7-S1-7kWh Stromspeicher'"")), ('KV', ('Const', ""'stromkosten_haushalt_euro_monat'""), ('Const', '150')), ('KV', ('Const', ""'stromkosten_heizung_euro_monat'""), ('Const', '50'))))))),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\tests\test_build_dynamic_data.py,4,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'A'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'B'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'include_storage'""), ('Const', 'True')), ('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'Sun2000 10KTL-M1 10 kW Wechselrichter'"")), ('KV', ('Const', ""'selected_module_name'""), ('Const', ""'Neostar 2S+ 455W'"")), ('KV', ('Const', ""'selected_storage_name'""), ('Const', ""'ECS4100 -H3 12,09 kWh Stromspeicher'""))))))),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\tools\test_build_dynamic_data.py,4,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'A'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'B'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'include_storage'""), ('Const', 'True')), ('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'Sun2000 10KTL-M1 10 kW Wechselrichter'"")), ('KV', ('Const', ""'selected_module_name'""), ('Const', ""'Neostar 2S+ 455W'"")), ('KV', ('Const', ""'selected_storage_name'""), ('Const', ""'ECS4100 -H3 12,09 kWh Stromspeicher'""))))))),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\.tmp_placeholder_test.py,8,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'include_storage'""), ('Const', 'True')), ('KV', ('Const', ""'module_quantity'""), ('Const', '10')), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'PowerMax 5K'"")), ('KV', ('Const', ""'selected_module_capacity_w'""), ('Const', '400')), ('KV', ('Const', ""'selected_module_name'""), ('Const', ""'AlphaSolar 450W'"")), ('KV', ('Const', ""'selected_storage_name'""), ('Const', ""'EnergyCell 10kWh'"")), ('KV', ('Const', ""'selected_storage_storage_power_kw'""), ('Const', '10.0'))))))),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\tests\test_section_titles_logos.py,19,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'selected_inverter_power_kw'""), ('Const', '10.5')), ('KV', ('Const', ""'selected_storage_capacity_kwh'""), ('Const', '15.6'))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'"")))))))))),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\debug_brand_extraction.py,14,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', ())), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'"")))))))))),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\debug_logo_pdf.py,21,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', ())), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'"")))))))))),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\simple_logo_test.py,21,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', ())), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'"")))))))))),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\debug_logo_rendering.py,21,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_name'""), ('Const', ""'Test Inverter'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_name'""), ('Const', ""'Test Module'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_name'""), ('Const', ""'Test Storage'"")))))))))),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\tests\test_page4_images.py,8,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Test'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Kunde'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'inverter_image_b64'""), ('Name', 'png_b64')), ('KV', ('Const', ""'module_cell_technology'""), ('Const', ""'N-Type TOPCon Halfcut Bifazial'"")), ('KV', ('Const', ""'module_cell_type'""), ('Const', ""'Monokristalline'"")), ('KV', ('Const', ""'module_guarantee_combined'""), ('Const', ""'30 Jahre Produktgarantie'"")), ('KV', ('Const', ""'module_image_b64'""), ('Name', 'png_b64')), ('KV', ('Const', ""'module_quantity'""), ('Const', '12')), ('KV', ('Const', ""'module_structure'""), ('Const', ""'Glas-Glas Module'"")), ('KV', ('Const', ""'module_version'""), ('Const', ""'All-Black'"")), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'Sun2000 10KTL-M1 10 kW'"")), ('KV', ('Const', ""'selected_inverter_power_kw'""), ('Const', '10')), ('KV', ('Const', ""'selected_inverter_quantity'""), ('Const', '1')), ('KV', ('Const', ""'selected_module_capacity_w'""), ('Const', '460')), ('KV', ('Const', ""'selected_storage_name'""), ('Const', ""'LUNA2000-7-S1-7kWh Stromspeicher'"")), ('KV', ('Const', ""'selected_storage_power_kw'""), ('Const', '7.0')), ('KV', ('Const', ""'selected_storage_storage_power_kw'""), ('Const', '7.0')), ('KV', ('Const', ""'storage_image_b64'""), ('Name', 'png_b64'))))))),), ())","('Call', 1, 0)","build_project_data,png_b64",project_data=build_project_data({
.\tools\test_page4_images.py,8,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Test'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Kunde'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'inverter_image_b64'""), ('Name', 'png_b64')), ('KV', ('Const', ""'module_cell_technology'""), ('Const', ""'N-Type TOPCon Halfcut Bifazial'"")), ('KV', ('Const', ""'module_cell_type'""), ('Const', ""'Monokristalline'"")), ('KV', ('Const', ""'module_guarantee_combined'""), ('Const', ""'30 Jahre Produktgarantie'"")), ('KV', ('Const', ""'module_image_b64'""), ('Name', 'png_b64')), ('KV', ('Const', ""'module_quantity'""), ('Const', '12')), ('KV', ('Const', ""'module_structure'""), ('Const', ""'Glas-Glas Module'"")), ('KV', ('Const', ""'module_version'""), ('Const', ""'All-Black'"")), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'Sun2000 10KTL-M1 10 kW'"")), ('KV', ('Const', ""'selected_inverter_power_kw'""), ('Const', '10')), ('KV', ('Const', ""'selected_inverter_quantity'""), ('Const', '1')), ('KV', ('Const', ""'selected_module_capacity_w'""), ('Const', '460')), ('KV', ('Const', ""'selected_storage_name'""), ('Const', ""'LUNA2000-7-S1-7kWh Stromspeicher'"")), ('KV', ('Const', ""'selected_storage_power_kw'""), ('Const', '7.0')), ('KV', ('Const', ""'selected_storage_storage_power_kw'""), ('Const', '7.0')), ('KV', ('Const', ""'storage_image_b64'""), ('Name', 'png_b64'))))))),), ())","('Call', 1, 0)","build_project_data,png_b64",project_data=build_project_data({
.\pdf_ui.py,224,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'customer_data'""), ('Name', 'customer_data_pdf')), ('KV', ('Const', ""'heatpump_offer'""), ('Name', 'hp_offer')), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '0.1')), ('KV', ('Const', ""'module_quantity'""), ('Const', '1')), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'Placeholder WR'"")), ('KV', ('Const', ""'selected_module_name'""), ('Const', ""'Placeholder Modul'""))))))),), ())","('Call', 1, 0)","build_project_data,customer_data_pdf,hp_offer",project_data = build_project_data({
.\debug_page3_check.py,34,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'einspeise_art'""), ('Const', ""'parts'"")),)),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\tests\test_page3_values.py,17,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'einspeise_art'""), ('Const', ""'parts'"")),)),), ())","('Call', 1, 0)",build_project_data,"project_data = build_project_data({""einspeise_art"": ""parts""})"
.\tests\test_right_alignment.py,16,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'einspeise_art'""), ('Const', ""'parts'"")),)),), ())","('Call', 1, 0)",build_project_data,"project_data = build_project_data({""einspeise_art"": ""parts""})"
.\tools\test_page3_values.py,17,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'einspeise_art'""), ('Const', ""'parts'"")),)),), ())","('Call', 1, 0)",build_project_data,"project_data = build_project_data({""einspeise_art"": ""parts""})"
.\tests\test_product_images.py,17,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'customer_name'""), ('Const', ""'Test Kunde'"")), ('KV', ('Const', ""'installation_location'""), ('Const', ""'Test-Location'"")), ('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'projekt_name'""), ('Const', ""'Test Projekt'"")), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'PowerMax 5K'"")), ('KV', ('Const', ""'selected_module_name'""), ('Const', ""'BetaSun 400W'"")), ('KV', ('Const', ""'selected_storage_name'""), ('Const', ""'EnergyCell 10kWh'""))))),)),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\tests\test_roof_data.py,32,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'roof_inclination_deg'""), ('Const', '30')), ('KV', ('Const', ""'roof_orientation'""), ('Const', ""'Ost'""))))),)),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\tests\test_roof_data.py,17,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', (('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'roof_inclination_deg'""), ('Const', '45')), ('KV', ('Const', ""'roof_orientation'""), ('Const', ""'Südwest'""))))),)),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({
.\doc_output.py,1844,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', ()),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({})
.\pdf_ui.py,209,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', ()),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({})
.\tests\test_numbering.py,15,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', ()),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({})
.\tests\test_overlay_footer.py,14,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', ()),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({})
.\tests\test_page1_alignment.py,16,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', ()),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({})
.\tests\test_roof_data.py,45,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', ()),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({})
.\tools\test_numbering.py,15,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', ()),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({})
.\tools\test_overlay_footer.py,14,project_data,"('Call', ('Name', 'build_project_data'), (('Dict', ()),), ())","('Call', 1, 0)",build_project_data,project_data = build_project_data({})
.\notwendig oder nicht\wichtig\portings\patches\test_final_pdf_logos.py.insert.py,18,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterstraße 1'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@beispiel.de'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'roof_area'""), ('Const', '50')), ('KV', ('Const', ""'roof_orientation'""), ('Const', ""'Süd'""))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\notwendig oder nicht\wichtig\portings\patches\test_pdf_logos.py.insert.py,18,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterstraße 1'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@beispiel.de'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'roof_area'""), ('Const', '50')), ('KV', ('Const', ""'roof_orientation'""), ('Const', ""'Süd'""))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\tools\portings\patches\test_final_pdf_logos.py.insert.py,18,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterstraße 1'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@beispiel.de'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'roof_area'""), ('Const', '50')), ('KV', ('Const', ""'roof_orientation'""), ('Const', ""'Süd'""))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\tools\portings\patches\test_pdf_logos.py.insert.py,18,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterstraße 1'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'email'""), ('Const', ""'max@beispiel.de'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'roof_area'""), ('Const', '50')), ('KV', ('Const', ""'roof_orientation'""), ('Const', ""'Süd'""))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\notwendig oder nicht\wichtig\portings\patches\test_section_titles_logos.py.insert.py,17,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'selected_inverter_power_kw'""), ('Const', '10.5')), ('KV', ('Const', ""'selected_storage_capacity_kwh'""), ('Const', '15.6'))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\tools\portings\patches\test_section_titles_logos.py.insert.py,17,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'selected_inverter_power_kw'""), ('Const', '10.5')), ('KV', ('Const', ""'selected_storage_capacity_kwh'""), ('Const', '15.6'))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_pdf.py.insert.py,19,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', ())), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\notwendig oder nicht\wichtig\portings\patches\simple_logo_test.py.insert.py,19,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', ())), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\tools\portings\patches\debug_logo_pdf.py.insert.py,19,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', ())), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\tools\portings\patches\simple_logo_test.py.insert.py,19,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', ())), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_id'""), ('Const', '2')), ('KV', ('Const', ""'product_name'""), ('Const', ""'GW8K-ET'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_id'""), ('Const', '1')), ('KV', ('Const', ""'product_name'""), ('Const', ""'SUN2000-8KTL-M1'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_id'""), ('Const', '3')), ('KV', ('Const', ""'product_name'""), ('Const', ""'Battery-Box Premium HVM'""))))))))))","('Dict', 3)",,project_data = {
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_rendering.py.insert.py,19,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_name'""), ('Const', ""'Test Inverter'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_name'""), ('Const', ""'Test Module'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_name'""), ('Const', ""'Test Storage'""))))))))))","('Dict', 2)",,project_data = {
.\tools\portings\patches\debug_logo_rendering.py.insert.py,19,project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'""))))), ('KV', ('Const', ""'selected_products'""), ('Dict', (('KV', ('Const', ""'inverter'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'GoodWe'"")), ('KV', ('Const', ""'product_name'""), ('Const', ""'Test Inverter'""))))), ('KV', ('Const', ""'module'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'Huawei'"")), ('KV', ('Const', ""'product_name'""), ('Const', ""'Test Module'""))))), ('KV', ('Const', ""'storage'""), ('Dict', (('KV', ('Const', ""'brand_name'""), ('Const', ""'BYD'"")), ('KV', ('Const', ""'product_name'""), ('Const', ""'Test Storage'""))))))))))","('Dict', 2)",,project_data = {
.\notwendig oder nicht\wichtig\portings\patches\debug_page3_check.py.insert.py,11,project_data,"('Dict', (('KV', ('Const', ""'einspeise_art'""), ('Const', ""'parts'"")),))","('Dict', 1)",,project_data = {
.\notwendig oder nicht\wichtig\portings\patches\test_right_alignment.py.insert.py,14,project_data,"('Dict', (('KV', ('Const', ""'einspeise_art'""), ('Const', ""'parts'"")),))","('Dict', 1)",,"project_data = {""einspeise_art"": ""parts""}"
.\notwendig oder nicht\wichtig\portings\patches\tools\test_page3_values.py.insert.py,11,project_data,"('Dict', (('KV', ('Const', ""'einspeise_art'""), ('Const', ""'parts'"")),))","('Dict', 1)",,"project_data = {""einspeise_art"": ""parts""}"
.\tools\portings\patches\debug_page3_check.py.insert.py,11,project_data,"('Dict', (('KV', ('Const', ""'einspeise_art'""), ('Const', ""'parts'"")),))","('Dict', 1)",,project_data = {
.\tools\portings\patches\test_right_alignment.py.insert.py,14,project_data,"('Dict', (('KV', ('Const', ""'einspeise_art'""), ('Const', ""'parts'"")),))","('Dict', 1)",,"project_data = {""einspeise_art"": ""parts""}"
.\tools\portings\patches\tools\test_page3_values.py.insert.py,11,project_data,"('Dict', (('KV', ('Const', ""'einspeise_art'""), ('Const', ""'parts'"")),))","('Dict', 1)",,"project_data = {""einspeise_art"": ""parts""}"
.\notwendig oder nicht\wichtig\portings\patches\test_product_images.py.insert.py,16,project_data,"('Dict', (('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'customer_name'""), ('Const', ""'Test Kunde'"")), ('KV', ('Const', ""'installation_location'""), ('Const', ""'Test-Location'"")), ('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'projekt_name'""), ('Const', ""'Test Projekt'"")), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'PowerMax 5K'"")), ('KV', ('Const', ""'selected_module_name'""), ('Const', ""'BetaSun 400W'"")), ('KV', ('Const', ""'selected_storage_name'""), ('Const', ""'EnergyCell 10kWh'""))))),))","('Dict', 1)",,project_data = {
.\tools\portings\patches\test_product_images.py.insert.py,16,project_data,"('Dict', (('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'customer_name'""), ('Const', ""'Test Kunde'"")), ('KV', ('Const', ""'installation_location'""), ('Const', ""'Test-Location'"")), ('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'projekt_name'""), ('Const', ""'Test Projekt'"")), ('KV', ('Const', ""'selected_inverter_name'""), ('Const', ""'PowerMax 5K'"")), ('KV', ('Const', ""'selected_module_name'""), ('Const', ""'BetaSun 400W'"")), ('KV', ('Const', ""'selected_storage_name'""), ('Const', ""'EnergyCell 10kWh'""))))),))","('Dict', 1)",,project_data = {
.\notwendig oder nicht\wichtig\portings\patches\test_roof_data.py.insert.py,30,project_data,"('Dict', (('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'roof_inclination_deg'""), ('Const', '30')), ('KV', ('Const', ""'roof_orientation'""), ('Const', ""'Ost'""))))),))","('Dict', 1)",,project_data = {
.\tools\portings\patches\test_roof_data.py.insert.py,30,project_data,"('Dict', (('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'roof_inclination_deg'""), ('Const', '30')), ('KV', ('Const', ""'roof_orientation'""), ('Const', ""'Ost'""))))),))","('Dict', 1)",,project_data = {
.\notwendig oder nicht\wichtig\portings\patches\test_roof_data.py.insert.py,15,project_data,"('Dict', (('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'roof_inclination_deg'""), ('Const', '45')), ('KV', ('Const', ""'roof_orientation'""), ('Const', ""'Südwest'""))))),))","('Dict', 1)",,project_data = {
.\tools\portings\patches\test_roof_data.py.insert.py,15,project_data,"('Dict', (('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'roof_inclination_deg'""), ('Const', '45')), ('KV', ('Const', ""'roof_orientation'""), ('Const', ""'Südwest'""))))),))","('Dict', 1)",,project_data = {
.\notwendig oder nicht\wichtig\portings\patches\test_page1_alignment.py.insert.py,14,project_data,"('Dict', ())","('Dict', 0)",,project_data = {}
.\notwendig oder nicht\wichtig\portings\patches\test_roof_data.py.insert.py,43,project_data,"('Dict', ())","('Dict', 0)",,project_data = {}
.\pdf_erstellen_komplett.py,172,project_data,"('Dict', ())","('Dict', 0)",,"project_data: Dict[str, Any] = {}"
.\tools\portings\patches\test_page1_alignment.py.insert.py,14,project_data,"('Dict', ())","('Dict', 0)",,project_data = {}
.\tools\portings\patches\test_roof_data.py.insert.py,43,project_data,"('Dict', ())","('Dict', 0)",,project_data = {}
.\doc_output.py,192,project_data,"('Subscript', ('Attr', 'st', 'session_state'), ('Name', 'source'))","('Subscript',)","source,st",project_data = st.session_state[source]
.\analysis.py,1850,project_details,"('BoolOp', 'Or', (('Dict', ()), ('Name', 'project_details')))","('BoolOp', 'Or', 2)",project_details,project_details = project_details or {}
.\calculations.py,2351,project_details,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'project_details'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"project_details = project_data.get(""project_details"", {})"
.\doc_output.py,125,project_details,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'project_details'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"project_details = project_data.get('project_details', {})"
.\doc_output.py,132,project_details,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'project_details'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"project_details = project_data.get('project_details', {})"
.\live_preview_helpers.py,200,project_details,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'project_details'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"project_details = project_data.get('project_details', {})"
.\pdf_generator.py,2993,project_details,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'project_details'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"project_details = project_data.get('project_details', {})"
.\pdf_ui.py,1439,project_details,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'project_details'""), ('Dict', ())), ())","('Call', 2, 0)",project_data,"project_details = project_data.get('project_details', {})"
.\crm.py,688,project_details,"('Call', ('Name', 'load_project'), (('Name', 'conn'), ('Name', 'selected_project_id')), ())","('Call', 2, 0)","conn,load_project,selected_project_id","project_details = load_project(conn, selected_project_id)"
.\multi_offer_generator.py,910,project_details,"('Dict', (('KV', ('Const', ""'include_additional_components'""), ('Const', 'True')), ('KV', ('Const', ""'include_storage'""), ('Call', ('Attr', 'settings', 'get'), (('Const', ""'include_storage'""), ('Const', 'True')), ())), ('KV', ('Const', ""'module_quantity'""), ('Call', ('Attr', 'settings', 'get'), (('Const', ""'module_quantity'""), ('Const', '20')), ()))))","('Dict', 3)",settings,project_details = {
.\pdf_template_engine\placeholders.py,425,project_details,"('Other', 'IfExp')","('Other', 'IfExp')","dict,isinstance,project_data","project_details = project_data.get(""project_details"", {}) if isinstance(project_data, dict) else {}"
.\crm.py,848,project_id,"('Call', ('Name', 'save_project'), (('Name', 'conn_test'), ('Name', 'test_project_data')), ())","('Call', 2, 0)","conn_test,save_project,test_project_data","project_id = save_project(conn_test, test_project_data)"
.\crm.py,217,project_id,"('Subscript', ('Name', 'project_data'), ('Const', ""'id'""))","('Subscript',)",project_data,project_id = project_data['id']
.\crm.py,515,project_to_edit,"('BoolOp', 'Or', (('Call', ('Name', 'load_project'), (('Name', 'conn'), ('Name', 'selected_project_id')), ()), ('Dict', ())))","('BoolOp', 'Or', 2)","conn,load_project,selected_project_id","project_to_edit = load_project(conn, selected_project_id) or {}"
.\crm.py,513,project_to_edit,"('Dict', ())","('Dict', 0)",,project_to_edit = {}
.\heatpump_ui.py,753,pv_coverage_hp,"('Call', ('Name', 'min'), (('Const', '0.4'), ('Div', ('Name', 'pv_production_annual'), ('Name', 'hp_consumption'))), ())","('Call', 2, 0)","hp_consumption,min,pv_production_annual","pv_coverage_hp = min(0.4, pv_production_annual / hp_consumption)"
.\heatpump_ui.py,751,pv_coverage_hp,"('Call', ('Name', 'min'), (('Const', '0.8'), ('Div', ('Name', 'pv_production_annual'), ('Name', 'hp_consumption'))), ())","('Call', 2, 0)","hp_consumption,min,pv_production_annual","pv_coverage_hp = min(0.8, pv_production_annual / hp_consumption)"
.\heatpump_ui.py,755,pv_coverage_hp,"('Const', '0.0')","('Const',)",,pv_coverage_hp = 0.0
.\pdf_ui.py,281,pv_default_index,"('Const', '0')","('Const',)",,pv_default_index = 0
.\pdf_ui.py,287,pv_default_index,"('Name', 'idx')","('Name',)",idx,pv_default_index = idx; wp_default_index = idx; break
.\heatpump_ui.py,92,pv_integration_data,"('Call', ('Name', 'render_pv_integration'), (('Name', 'texts'), ('Name', 'project_data_effective')), ())","('Call', 2, 0)","project_data_effective,render_pv_integration,texts","pv_integration_data = render_pv_integration(texts, project_data_effective)"
.\heatpump_ui.py,82,pv_integration_data,"('Const', 'None')","('Const',)",,pv_integration_data = None
.\heatpump_ui.py,98,pv_integration_data,"('Const', 'None')","('Const',)",,pv_integration_data = None
.\heatpump_ui.py,710,pv_size_kwp,"('BoolOp', 'Or', (('Call', ('Attr', 'calc_results_ss', 'get'), (('Const', ""'anlage_kwp'""),), ()), ('Const', '0'), ('Other', 'IfExp')))","('BoolOp', 'Or', 3)","calc_results_ss,dict,isinstance,project_data",pv_size_kwp = (
.\calculations_extended.py,406,pv_size_kwp,"('Call', ('Attr', 'offer_data', 'get'), (('Const', ""'pv_size_kwp'""), ('Const', '0')), ())","('Call', 2, 0)",offer_data,"pv_size_kwp = offer_data.get(""pv_size_kwp"", 0)"
.\pdf_template_engine\placeholders.py,2552,pv_total,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'total_investment_netto'""),), ())","('Call', 1, 0)",analysis_results,pv_total = analysis_results.get('total_investment_netto')
.\pdf_ui.py,253,pv_total,"('Other', 'IfExp')","('Other', 'IfExp')","analysis_results,dict,isinstance","pv_total = analysis_results.get('total_investment_netto') if isinstance(analysis_results, dict) else None"
.\gui.py,739,pv_visuals_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'pv_visuals'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","pv_visuals_module = import_module_with_fallback(""pv_visuals"", import_errors)"
.\analysis.py,9221,pv_visuals_module,"('Const', 'None')","('Const',)",,pv_visuals_module = None
.\gui.py,93,pv_visuals_module,"('Const', 'None')","('Const',)",,pv_visuals_module: Optional[Any] = None
.\options.py,101,pvgis_enabled,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""' PV-Gis Integration & Produktionswerte aktivieren'""),), (('help', ('Const', ""'Wenn aktiviert, werden Ertragsdaten von PV-Gis abgerufen. Achtung API-Key wird benötigt!'"")), ('key', ('Name', 'session_key')), ('value', ('Subscript', ('Attr', 'st', 'session_state'), ('Name', 'session_key')))))","('Call', 1, 3)","session_key,st",pvgis_enabled = st.checkbox(
.\calculations.py,2515,pvgis_enabled,"('Call', ('Name', 'bool'), (('Call', ('Attr', 'global_constants', 'get'), (('Const', ""'pvgis_enabled'""), ('Const', 'False')), ()),), ())","('Call', 1, 0)","bool,global_constants","pvgis_enabled = bool(global_constants.get(""pvgis_enabled"", False))  # Default auf false"
.\calculations.py,2504,pvgis_enabled,"('Call', ('Name', 'bool'), (('Name', 'pvgis_setting_raw'),), ())","('Call', 1, 0)","bool,pvgis_setting_raw",pvgis_enabled = bool(pvgis_setting_raw)
.\calculations.py,2502,pvgis_enabled,"('Compare', ('Call', ('Attr', 'pvgis_setting_raw', 'lower'), (), ()), ('In',), (('List', (('Const', ""'true'""), ('Const', ""'1'""), ('Const', ""'yes'""), ('Const', ""'on'""))),))","('Compare', ('In',), 1)",pvgis_setting_raw,"pvgis_enabled = pvgis_setting_raw.lower() in ['true', '1', 'yes', 'on']"
.\doc_output.py,568,pvgis_enabled,"('Other', 'IfExp')","('Other', 'IfExp')","callable,load_admin_setting_func","pvgis_enabled = load_admin_setting_func('enable_pvgis_integration', False) if callable(load_admin_setting_func) else False"
.\calculations.py,2562,pvgis_results_data,"('Call', ('Name', 'get_pvgis_data'), (('Name', 'lat'), ('Name', 'lon'), ('Subscript', ('Name', 'results'), ('Const', ""'anlage_kwp'"")), ('Name', 'tilt_val'), ('Name', 'azimuth_val'), ('Name', 'SYSTEM_LOSS_PVGIS'), ('Name', 'texts'), ('Name', 'errors_list')), (('debug_mode_enabled', ('Name', 'app_debug_mode_is_enabled')),))","('Call', 8, 1)","SYSTEM_LOSS_PVGIS,app_debug_mode_is_enabled,azimuth_val,errors_list,get_pvgis_data,lat,lon,results,texts,tilt_val",pvgis_results_data = get_pvgis_data(
.\calculations.py,2494,pvgis_results_data,"('Const', 'None')","('Const',)",,pvgis_results_data = None
.\calculations.py,2584,pvgis_results_data,"('Const', 'None')","('Const',)",,"pvgis_results_data = None  # Sicherstellen, dass es None ist bei Fehler"
.\calculations.py,2587,pvgis_results_data,"('Const', 'None')","('Const',)",,pvgis_results_data = None
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,159,py,"('Add', (('Mult', (('Other', 'IfExp'), ('Sub', ('Name', 'y1'), ('Name', 'y0')))), ('Name', 'y0')))","('Add', (('Mult', (('Other', 'IfExp'), ('Sub', ('Name',), ('Name',)))), ('Name',)))","top,tv,y0,y1",py = y0 + (y1 - y0) * (tv / top if top > 0 else 0.0)
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,177,py,"('Add', (('Mult', (('Other', 'IfExp'), ('Sub', ('Name', 'y1'), ('Name', 'y0')))), ('Name', 'y0')))","('Add', (('Mult', (('Other', 'IfExp'), ('Sub', ('Name',), ('Name',)))), ('Name',)))","top,tv,y0,y1",py = y0 + (y1 - y0) * (tv / top if top > 0 else 0.0)
.\pdf_template_engine\dynamic_overlay.py,672,py,"('Add', (('Mult', (('Other', 'IfExp'), ('Sub', ('Name', 'y1'), ('Name', 'y0')))), ('Name', 'y0')))","('Add', (('Mult', (('Other', 'IfExp'), ('Sub', ('Name',), ('Name',)))), ('Name',)))","top,tv,y0,y1",py = y0 + (y1 - y0) * (tv / top if top > 0 else 0.0)
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,159,py,"('Add', (('Mult', (('Other', 'IfExp'), ('Sub', ('Name', 'y1'), ('Name', 'y0')))), ('Name', 'y0')))","('Add', (('Mult', (('Other', 'IfExp'), ('Sub', ('Name',), ('Name',)))), ('Name',)))","top,tv,y0,y1",py = y0 + (y1 - y0) * (tv / top if top > 0 else 0.0)
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,177,py,"('Add', (('Mult', (('Other', 'IfExp'), ('Sub', ('Name', 'y1'), ('Name', 'y0')))), ('Name', 'y0')))","('Add', (('Mult', (('Other', 'IfExp'), ('Sub', ('Name',), ('Name',)))), ('Name',)))","top,tv,y0,y1",py = y0 + (y1 - y0) * (tv / top if top > 0 else 0.0)
.\dev_tools\kakerlake_ultra_cleaner.py,120,py,"('Call', ('Name', 'list_py'), (('Name', 'root'),), ())","('Call', 1, 0)","list_py,root",py = list_py(root)
.\mnt\data\kakerlake_ultra_cleaner.py,120,py,"('Call', ('Name', 'list_py'), (('Name', 'root'),), ())","('Call', 1, 0)","list_py,root",py = list_py(root)
.\tools\kakerlake_ultra_cleaner.py,121,py,"('Call', ('Name', 'list_py'), (('Name', 'root'),), ())","('Call', 1, 0)","list_py,root",py = list_py(root)
.\pdf_ui.py,1419,pypdf_status,"('Const', ""' Keine PDF-Bibliothek verfügbar'"")","('Const',)",,"pypdf_status = "" Keine PDF-Bibliothek verfügbar"""
.\pdf_ui.py,1417,pypdf_status,"('Const', ""' PyPDF2 verfügbar (Fallback)'"")","('Const',)",,"pypdf_status = "" PyPDF2 verfügbar (Fallback)"""
.\pdf_ui.py,1413,pypdf_status,"('Const', ""' pypdf verfügbar'"")","('Const',)",,"pypdf_status = "" pypdf verfügbar"""
.\heatpump_ui.py,299,quality,"('Const', ""'Gut (Niedrigenergiehaus)'"")","('Const',)",,"quality = ""Gut (Niedrigenergiehaus)"""
.\heatpump_ui.py,303,quality,"('Const', ""'Sanierungsbedarf'"")","('Const',)",,"quality = ""Sanierungsbedarf"""
.\heatpump_ui.py,297,quality,"('Const', ""'Sehr gut (Passivhaus)'"")","('Const',)",,"quality = ""Sehr gut (Passivhaus)"""
.\heatpump_ui.py,301,quality,"('Const', ""'Standard'"")","('Const',)",,"quality = ""Standard"""
.\crm_pipeline_ui.py,657,query,"('Const', ""'SELECT * FROM crm_leads WHERE 1=1'"")","('Const',)",,query = 'SELECT * FROM crm_leads WHERE 1=1'
.\product_db.py,216,query,"('Const', ""'SELECT * FROM products'"")","('Const',)",,"query = ""SELECT * FROM products""; params: List[Any] = []"
.\crm_calendar_ui.py,424,query,"('Const', ""'\\n                SELECT a.*, c.first_name, c.last_name\\n                FROM crm_appointments a\\n                LEFT JOIN crm_customers c ON a.customer_id = c.id\\n                WHERE 1=1\\n            '"")","('Const',)",,query = '''
.\quick_calc.py,17,quick_calc_dependencies_available,"('Const', 'False')","('Const',)",,quick_calc_dependencies_available = False
.\quick_calc.py,14,quick_calc_dependencies_available,"('Const', 'True')","('Const',)",,quick_calc_dependencies_available = True
.\gui.py,736,quick_calc_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'quick_calc'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","quick_calc_module = import_module_with_fallback(""quick_calc"", import_errors)"
.\gui.py,90,quick_calc_module,"('Const', 'None')","('Const',)",,quick_calc_module: Optional[Any] = None
.\dev_tools\kakerlake_ultra_cleaner.py,408,r,"('Attr', 'node', 'right')","('Attr',)",node,l=node.left; r=node.right
.\dev_tools\kakerlake_ultra_cleaner_v2.py,276,r,"('Attr', 'node', 'right')","('Attr',)",node,l=node.left; r=node.right
.\dev_tools\kakerlake_ultra_cleaner_v3.py,294,r,"('Attr', 'node', 'right')","('Attr',)",node,l=node.left; r=node.right
.\mnt\data\kakerlake_ultra_cleaner.py,408,r,"('Attr', 'node', 'right')","('Attr',)",node,l=node.left; r=node.right
.\mnt\data\kakerlake_ultra_cleaner_v2.py,276,r,"('Attr', 'node', 'right')","('Attr',)",node,l=node.left; r=node.right
.\tools\kakerlake_ultra_cleaner.py,409,r,"('Attr', 'node', 'right')","('Attr',)",node,l=node.left; r=node.right
.\dev_tools\kakerlake_ultra_cleaner.py,374,r,"('Attr', 'orig.value', 'right')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\dev_tools\kakerlake_ultra_cleaner.py,392,r,"('Attr', 'orig.value', 'right')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\mnt\data\kakerlake_ultra_cleaner.py,374,r,"('Attr', 'orig.value', 'right')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\mnt\data\kakerlake_ultra_cleaner.py,392,r,"('Attr', 'orig.value', 'right')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\tools\kakerlake_ultra_cleaner.py,375,r,"('Attr', 'orig.value', 'right')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\tools\kakerlake_ultra_cleaner.py,393,r,"('Attr', 'orig.value', 'right')","('Attr',)",orig,l=orig.value.left; r=orig.value.right
.\dev_tools\kakerlake_ultra_cleaner_v2.py,244,r,"('Attr', 'rhs', 'right')","('Attr',)",rhs,l=rhs.left; r=rhs.right
.\dev_tools\kakerlake_ultra_cleaner_v2.py,262,r,"('Attr', 'rhs', 'right')","('Attr',)",rhs,l=rhs.left; r=rhs.right
.\dev_tools\kakerlake_ultra_cleaner_v2.py,290,r,"('Attr', 'rhs', 'right')","('Attr',)",rhs,l=rhs.left; r=rhs.right
.\dev_tools\kakerlake_ultra_cleaner_v3.py,259,r,"('Attr', 'rhs', 'right')","('Attr',)",rhs,l=rhs.left; r=rhs.right
.\dev_tools\kakerlake_ultra_cleaner_v3.py,279,r,"('Attr', 'rhs', 'right')","('Attr',)",rhs,l=rhs.left; r=rhs.right
.\dev_tools\kakerlake_ultra_cleaner_v3.py,308,r,"('Attr', 'rhs', 'right')","('Attr',)",rhs,l=rhs.left; r=rhs.right
.\mnt\data\kakerlake_ultra_cleaner_v2.py,244,r,"('Attr', 'rhs', 'right')","('Attr',)",rhs,l=rhs.left; r=rhs.right
.\mnt\data\kakerlake_ultra_cleaner_v2.py,262,r,"('Attr', 'rhs', 'right')","('Attr',)",rhs,l=rhs.left; r=rhs.right
.\mnt\data\kakerlake_ultra_cleaner_v2.py,290,r,"('Attr', 'rhs', 'right')","('Attr',)",rhs,l=rhs.left; r=rhs.right
.\dev_tools\kakerlake_ultra_cleaner.py,421,r,"('Attr', 'val', 'right')","('Attr',)",val,l=val.left; r=val.right
.\mnt\data\kakerlake_ultra_cleaner.py,421,r,"('Attr', 'val', 'right')","('Attr',)",val,l=val.left; r=val.right
.\tools\kakerlake_ultra_cleaner.py,422,r,"('Attr', 'val', 'right')","('Attr',)",val,l=val.left; r=val.right
.\notwendig oder nicht\wichtig\repo_porter.py,490,r,"('Call', ('Attr', 'csv', 'DictReader'), (('Name', 'f'),), ())","('Call', 1, 0)","csv,f",r = csv.DictReader(f)
.\notwendig oder nicht\wichtig\repo_porter_select.py,132,r,"('Call', ('Attr', 'csv', 'DictReader'), (('Name', 'f'),), ())","('Call', 1, 0)","csv,f",r = csv.DictReader(f)
.\tools\repo_porter.py,490,r,"('Call', ('Attr', 'csv', 'DictReader'), (('Name', 'f'),), ())","('Call', 1, 0)","csv,f",r = csv.DictReader(f)
.\tools\repo_porter_select.py,132,r,"('Call', ('Attr', 'csv', 'DictReader'), (('Name', 'f'),), ())","('Call', 1, 0)","csv,f",r = csv.DictReader(f)
.\utils\remove_text.py,20,r,"('Call', ('Attr', 'fitz', 'Rect'), (('Subscript', ('Name', 'block'), ('Const', ""'bbox'"")),), ())","('Call', 1, 0)","block,fitz","r = fitz.Rect(block[""bbox""])"
.\pdf_generator.py,427,r,"('Call', ('Name', 'PdfReader'), (('Call', ('Attr', '_io', 'BytesIO'), (('Name', 'part'),), ()),), ())","('Call', 1, 0)","PdfReader,_io,part",r = PdfReader(_io.BytesIO(part))
.\tools\count_pages.py,9,r,"('Call', ('Name', 'PdfReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'data'),), ()),), ())","('Call', 1, 0)","PdfReader,data,io",r = PdfReader(io.BytesIO(data))
.\pdf_erstellen_komplett.py,146,r,"('Call', ('Name', 'PdfReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'pdf_bytes'),), ()),), ())","('Call', 1, 0)","PdfReader,io,pdf_bytes",r = PdfReader(io.BytesIO(pdf_bytes))
.\pdf_erstellen_komplett.py,238,r,"('Call', ('Name', 'PdfReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'pdf_bytes'),), ()),), ())","('Call', 1, 0)","PdfReader,io,pdf_bytes",r = PdfReader(io.BytesIO(pdf_bytes))
.\pdf_styles.py,652,r,"('Call', ('Name', 'int'), (('Mult', (('Const', '255'), ('Sub', ('Const', '1'), ('Mult', (('Div', ('Name', 'y'), ('Name', 'height')), ('Name', 'opacity')))))),), ())","('Call', 1, 0)","height,int,opacity,y",r = int(255 * (1 - y / height * opacity))
.\pdf_generator.py,614,r,"('Call', ('Name', 'int'), (('Subscript', ('Name', '_hex'), ('Other', 'Slice')), ('Const', '16')), ())","('Call', 2, 0)","_hex,int","r = int(_hex[1:3], 16); g = int(_hex[3:5], 16); b = int(_hex[5:7], 16)"
.\pdf_template_engine\dynamic_overlay.py,182,r,"('Div', ('BitAnd', ('RShift', ('Name', 'value'), ('Const', '16')), ('Const', '255')), ('Const', '255.0'))","('Div', ('BitAnd', ('RShift', ('Name',), ('Const',)), ('Const',)), ('Const',))",value,r = ((value >> 16) & 0xFF) / 255.0
.\analysis.py,1917,r,"('Div', ('Call', ('Name', 'max'), (('Const', '0.0'), ('Call', ('Name', 'float'), (('Name', 'inc_percent'),), ())), ()), ('Const', '100.0'))","('Div', ('Call', 2, 0), ('Const',))","float,inc_percent,max","r = max(0.0, float(inc_percent)) / 100.0"
.\heatpump_pricing.py,162,r,"('Div', ('Div', ('Name', 'annual_interest_rate_pct'), ('Const', '100.0')), ('Const', '12.0'))","('Div', ('Div', ('Name',), ('Const',)), ('Const',))",annual_interest_rate_pct,r = annual_interest_rate_pct / 100.0 / 12.0
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,108,r,"('Div', ('Div', ('Name', 'annual_interest_rate_pct'), ('Const', '100.0')), ('Const', '12.0'))","('Div', ('Div', ('Name',), ('Const',)), ('Const',))",annual_interest_rate_pct,r = annual_interest_rate_pct / 100.0 / 12.0
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,108,r,"('Div', ('Div', ('Name', 'annual_interest_rate_pct'), ('Const', '100.0')), ('Const', '12.0'))","('Div', ('Div', ('Name',), ('Const',)), ('Const',))",annual_interest_rate_pct,r = annual_interest_rate_pct / 100.0 / 12.0
.\calculations.py,1078,rate,"('Call', ('Name', 'min'), (('Const', '50'), ('Add', (('Mult', (('Const', '0.5'), ('Name', 'year'))), ('Name', 'initial_self_consumption')))), ())","('Call', 2, 0)","initial_self_consumption,min,year","rate = min(50, initial_self_consumption + year * 0.5)"
.\calculations.py,1075,rate,"('Call', ('Name', 'min'), (('Const', '85'), ('Add', (('Mult', (('Const', '2'), ('Name', 'year'))), ('Name', 'initial_self_consumption')))), ())","('Call', 2, 0)","initial_self_consumption,min,year","rate = min(85, initial_self_consumption + year * 2)"
.\heatpump_pricing.py,167,rate,"('Div', ('Mult', (('Name', 'principal'), ('Name', 'r'), ('Pow', ('Add', (('Const', '1'), ('Name', 'r'))), ('Name', 'n')))), ('Sub', ('Pow', ('Add', (('Const', '1'), ('Name', 'r'))), ('Name', 'n')), ('Const', '1')))","('Div', ('Mult', (('Name',), ('Name',), ('Pow', ('Add', (('Const',), ('Name',))), ('Name',)))), ('Sub', ('Pow', ('Add', (('Const',), ('Name',))), ('Name',)), ('Const',)))","n,principal,r",rate = principal * (r * (1 + r) ** n) / ((1 + r) ** n - 1)
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,113,rate,"('Div', ('Mult', (('Name', 'principal'), ('Name', 'r'), ('Pow', ('Add', (('Const', '1'), ('Name', 'r'))), ('Name', 'n')))), ('Sub', ('Pow', ('Add', (('Const', '1'), ('Name', 'r'))), ('Name', 'n')), ('Const', '1')))","('Div', ('Mult', (('Name',), ('Name',), ('Pow', ('Add', (('Const',), ('Name',))), ('Name',)))), ('Sub', ('Pow', ('Add', (('Const',), ('Name',))), ('Name',)), ('Const',)))","n,principal,r",rate = principal * (r * (1 + r) ** n) / ((1 + r) ** n - 1)
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,113,rate,"('Div', ('Mult', (('Name', 'principal'), ('Name', 'r'), ('Pow', ('Add', (('Const', '1'), ('Name', 'r'))), ('Name', 'n')))), ('Sub', ('Pow', ('Add', (('Const', '1'), ('Name', 'r'))), ('Name', 'n')), ('Const', '1')))","('Div', ('Mult', (('Name',), ('Name',), ('Pow', ('Add', (('Const',), ('Name',))), ('Name',)))), ('Sub', ('Pow', ('Add', (('Const',), ('Name',))), ('Name',)), ('Const',)))","n,principal,r",rate = principal * (r * (1 + r) ** n) / ((1 + r) ** n - 1)
.\heatpump_pricing.py,165,rate,"('Div', ('Name', 'principal'), ('Name', 'n'))","('Div', ('Name',), ('Name',))","n,principal",rate = principal / n
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,111,rate,"('Div', ('Name', 'principal'), ('Name', 'n'))","('Div', ('Name',), ('Name',))","n,principal",rate = principal / n
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,111,rate,"('Div', ('Name', 'principal'), ('Name', 'n'))","('Div', ('Name',), ('Name',))","n,principal",rate = principal / n
.\pdf_template_engine\dynamic_overlay.py,503,raw,"('Call', ('Attr', ""text or ''"", 'strip'), (), ())","('Call', 0, 0)",text,"raw = (text or """").strip()"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,34,raw,"('Call', ('Attr', 'base64', 'b64decode'), (('Name', 's'),), ())","('Call', 1, 0)","base64,s",raw = base64.b64decode(s)
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,36,raw,"('Call', ('Attr', 'base64', 'b64decode'), (('Name', 's'),), ())","('Call', 1, 0)","base64,s",raw = base64.b64decode(s)
.\pdf_template_engine\dynamic_overlay.py,66,raw,"('Call', ('Attr', 'base64', 'b64decode'), (('Name', 's'),), ())","('Call', 1, 0)","base64,s",raw = base64.b64decode(s)
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,34,raw,"('Call', ('Attr', 'base64', 'b64decode'), (('Name', 's'),), ())","('Call', 1, 0)","base64,s",raw = base64.b64decode(s)
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,36,raw,"('Call', ('Attr', 'base64', 'b64decode'), (('Name', 's'),), ())","('Call', 1, 0)","base64,s",raw = base64.b64decode(s)
.\pdf_atomizer.py,237,raw,"('Call', ('Attr', 'doc', 'extract_image'), (('Name', 'xref'),), ())","('Call', 1, 0)","doc,xref",raw = doc.extract_image(xref)
.\pdf_template_engine\placeholders.py,1060,raw,"('Call', ('Name', 'max'), (('Const', '1.0'), ('Name', 'target')), ())","('Call', 2, 0)","max,target","raw = max(1.0, target)"
.\notwendig oder nicht\wichtig\repo_to_json.py,171,read_bytes,"('Call', ('Name', 'len'), (('Name', 'data'),), ())","('Call', 1, 0)","data,len",read_bytes = len(data)
.\tools\repo_to_json.py,171,read_bytes,"('Call', ('Name', 'len'), (('Name', 'data'),), ())","('Call', 1, 0)","data,len",read_bytes = len(data)
.\notwendig oder nicht\wichtig\repo_to_json.py,165,read_bytes,"('Name', 'size')","('Name',)",size,read_bytes = size
.\tools\repo_to_json.py,165,read_bytes,"('Name', 'size')","('Name',)",size,read_bytes = size
.\product_attributes.py,239,reader,"('Call', ('Attr', 'csv', 'DictReader'), (('Name', 'f'),), ())","('Call', 1, 0)","csv,f",reader = csv.DictReader(f)
.\pdf_generator.py,569,reader,"('Call', ('Name', 'PdfReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'pdf_bytes'),), ()),), ())","('Call', 1, 0)","PdfReader,io,pdf_bytes",reader = PdfReader(io.BytesIO(pdf_bytes))
.\pdf_generator.py,310,reader,"('Call', ('Name', 'PdfReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'pdf_file'),), ()),), ())","('Call', 1, 0)","PdfReader,io,pdf_file",reader = PdfReader(io.BytesIO(pdf_file))
.\pdf_generator.py,2934,reader,"('Call', ('Name', 'PdfReader'), (('Call', ('Attr', 'io', 'BytesIO'), (('Name', 'pdf_file'),), ()),), ())","('Call', 1, 0)","PdfReader,io,pdf_file",reader = PdfReader(io.BytesIO(pdf_file))
.\pdf_generator.py,305,reader,"('Call', ('Name', 'PdfReader'), (('Name', 'f'),), ())","('Call', 1, 0)","PdfReader,f",reader = PdfReader(f)
.\pdf_generator.py,2929,reader,"('Call', ('Name', 'PdfReader'), (('Name', 'f'),), ())","('Call', 1, 0)","PdfReader,f",reader = PdfReader(f)
.\pdf_generator.py,316,reader,"('Call', ('Name', 'PdfReader'), (('Name', 'pdf_file'),), ())","('Call', 1, 0)","PdfReader,pdf_file",reader = PdfReader(pdf_file)
.\pdf_generator.py,2940,reader,"('Call', ('Name', 'PdfReader'), (('Name', 'pdf_file'),), ())","('Call', 1, 0)","PdfReader,pdf_file",reader = PdfReader(pdf_file)
.\calculations.py,4071,real_savings_this_year,"('Div', ('Name', 'nominal_savings'), ('Pow', ('Add', (('Attr', 'self', 'inflation_rate'), ('Const', '1'))), ('Sub', ('Name', 'year'), ('Const', '1'))))","('Div', ('Name',), ('Pow', ('Add', (('Attr',), ('Const',))), ('Sub', ('Name',), ('Const',))))","nominal_savings,self,year",real_savings_this_year = nominal_savings / ((1 + self.inflation_rate) ** (year - 1))
.\calculations.py,4111,real_savings_this_year,"('Div', ('Name', 'nominal_savings'), ('Pow', ('Add', (('Const', '1'), ('Name', 'higher_inflation'))), ('Sub', ('Name', 'year'), ('Const', '1'))))","('Div', ('Name',), ('Pow', ('Add', (('Const',), ('Name',))), ('Sub', ('Name',), ('Const',))))","higher_inflation,nominal_savings,year",real_savings_this_year = nominal_savings / ((1 + higher_inflation) ** (year - 1))
.\analysis.py,306,rebates_eur,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Pauschale Rabatte (€)'""),), (('help', ('Const', ""'Feste Rabattbeträge in Euro'"")), ('key', ('Const', ""'pricing_modifications_rebates_slider'"")), ('max_value', ('Const', '50000.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '50.0')), ('value', ('Const', '0.0'))))","('Call', 1, 6)",st,rebates_eur = st.number_input(
.\analysis.py,5229,rebates_eur,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_rebates_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,"rebates_eur = st.session_state.get(""pricing_modifications_rebates_slider"", 0.0)"
.\gui.py,153,rebates_eur,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_rebates_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,"rebates_eur = st.session_state.get(""pricing_modifications_rebates_slider"", 0.0)"
.\pdf_ui.py,101,rebates_eur,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_rebates_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,"rebates_eur = st.session_state.get(""pricing_modifications_rebates_slider"", 0.0)"
.\tools\import_module_attributes_generic.py,498,rec,"('Call', ('Name', '_parse_kv_lines'), (('Name', 'text'),), ())","('Call', 1, 0)","_parse_kv_lines,text",rec = _parse_kv_lines(text)
.\product_attributes.py,171,rec,"('Call', ('Name', 'get_attribute'), (('Name', 'product_id'), ('Name', 'key')), ())","('Call', 2, 0)","get_attribute,key,product_id","rec = get_attribute(product_id, key)"
.\tools\import_module_attributes_generic.py,153,rec,"('Call', ('Name', 'get_product_by_model_name'), (('Name', 'model_name'),), ())","('Call', 1, 0)","get_product_by_model_name,model_name",rec = get_product_by_model_name(model_name)
.\tools\import_module_attributes_generic.py,510,rec,"('Call', ('Name', 'get_product_by_model_name'), (('Name', 'stem'),), ())","('Call', 1, 0)","get_product_by_model_name,stem",rec = get_product_by_model_name(stem)
.\notwendig oder nicht\wichtig\repo_to_json.py,276,rec,"('Dict', (('KV', ('Const', ""'error'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'path'""), ('Call', ('Attr', 'str(p.relative_to(root))', 'replace'), (('Const', ""'\\\\'""), ('Const', ""'/'"")), ()))))","('Dict', 2)","e,p,root,str,type",rec = {
.\tools\repo_to_json.py,276,rec,"('Dict', (('KV', ('Const', ""'error'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'path'""), ('Call', ('Attr', 'str(p.relative_to(root))', 'replace'), (('Const', ""'\\\\'""), ('Const', ""'/'"")), ()))))","('Dict', 2)","e,p,root,str,type",rec = {
.\notwendig oder nicht\wichtig\repo_to_json.py,194,rec,"('Dict', (('KV', ('Const', ""'is_text'""), ('Attr', 'meta', 'is_text')), ('KV', ('Const', ""'mtime_iso'""), ('Attr', 'meta', 'mtime_iso')), ('KV', ('Const', ""'path'""), ('Attr', 'meta', 'relpath')), ('KV', ('Const', ""'sha256'""), ('Attr', 'meta', 'sha256')), ('KV', ('Const', ""'size'""), ('Attr', 'meta', 'size')), ('KV', ('Const', ""'stored_bytes'""), ('Attr', 'meta', 'stored_bytes')), ('KV', ('Const', ""'truncated'""), ('Attr', 'meta', 'truncated'))))","('Dict', 7)",meta,rec: Dict = {
.\tools\repo_to_json.py,194,rec,"('Dict', (('KV', ('Const', ""'is_text'""), ('Attr', 'meta', 'is_text')), ('KV', ('Const', ""'mtime_iso'""), ('Attr', 'meta', 'mtime_iso')), ('KV', ('Const', ""'path'""), ('Attr', 'meta', 'relpath')), ('KV', ('Const', ""'sha256'""), ('Attr', 'meta', 'sha256')), ('KV', ('Const', ""'size'""), ('Attr', 'meta', 'size')), ('KV', ('Const', ""'stored_bytes'""), ('Attr', 'meta', 'stored_bytes')), ('KV', ('Const', ""'truncated'""), ('Attr', 'meta', 'truncated'))))","('Dict', 7)",meta,rec: Dict = {
.\tools\import_module_attributes_generic.py,373,rec,"('Other', 'DictComp')","('Other', 'DictComp')","k,orig_cols,row",rec = {k: (row[k] if k in row else None) for k in orig_cols}
.\tools\import_module_attributes_generic.py,412,rec,"('Other', 'DictComp')","('Other', 'DictComp')","k,orig_cols,row",rec = {k: (row[k] if k in row else None) for k in orig_cols}
.\heatpump_ui.py,408,recommended_list,"('Name', 'candidates')","('Name',)",candidates,recommended_list = candidates
.\heatpump_ui.py,404,recommended_list,"('Name', 'suitable')","('Name',)",suitable,recommended_list = suitable
.\analysis.py,397,red,"('Call', ('Name', 'float'), (('Call', ('Attr', 'cheat', 'get'), (('Const', ""'value_years'""),), ()),), ())","('Call', 1, 0)","cheat,float","red = float(cheat.get(""value_years""))"
.\calculations.py,3328,red,"('Call', ('Name', 'float'), (('Name', 'cheated_value_years'),), ())","('Call', 1, 0)","cheated_value_years,float",red = float(cheated_value_years)
.\notwendig oder nicht\python_function_recipes.py,123,ref,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'reference'),), ())","('Call', 1, 0)","pd,reference",ref = pd.DataFrame(reference)
.\notwendig oder nicht\python_function_recipes.py,121,ref,"('Name', 'reference')","('Name',)",reference,ref = reference
.\excel_eval.py,310,ref,"('Other', 'JoinedStr')","('Other', 'JoinedStr')",er,"ref = f""{er.sheet}!{er.address}"""
.\excel_eval.py,207,refs,"('Call', ('Name', 'scan_formulas_openpyxl'), (('Name', 'path'),), (('limit', ('Name', 'limit')),))","('Call', 1, 1)","limit,path,scan_formulas_openpyxl","refs = scan_formulas_openpyxl(path, limit=limit)"
.\excel_eval.py,224,refs,"('Call', ('Name', 'scan_formulas_openpyxl'), (('Name', 'path'),), (('limit', ('Name', 'limit')),))","('Call', 1, 1)","limit,path,scan_formulas_openpyxl","refs = scan_formulas_openpyxl(path, limit=limit)"
.\excel_eval.py,297,refs,"('Call', ('Name', 'scan_formulas_openpyxl'), (('Name', 'path'),), (('limit', ('Name', 'sample_limit')),))","('Call', 1, 1)","path,sample_limit,scan_formulas_openpyxl","refs = scan_formulas_openpyxl(path, limit=sample_limit)"
.\dev_tools\kakerlake_ultra_cleaner.py,516,rel,"('Call', ('Attr', 'os.path', 'relpath'), (('Name', 'p'), ('Name', 'root')), ())","('Call', 2, 0)","os,p,root","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,402,rel,"('Call', ('Attr', 'os.path', 'relpath'), (('Name', 'p'), ('Name', 'root')), ())","('Call', 2, 0)","os,p,root","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\mnt\data\kakerlake_ultra_cleaner.py,516,rel,"('Call', ('Attr', 'os.path', 'relpath'), (('Name', 'p'), ('Name', 'root')), ())","('Call', 2, 0)","os,p,root","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,402,rel,"('Call', ('Attr', 'os.path', 'relpath'), (('Name', 'p'), ('Name', 'root')), ())","('Call', 2, 0)","os,p,root","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\tools\kakerlake_ultra_cleaner.py,517,rel,"('Call', ('Attr', 'os.path', 'relpath'), (('Name', 'p'), ('Name', 'root')), ())","('Call', 2, 0)","os,p,root","p=os.path.join(r,fn); rel=os.path.relpath(p, root); ext=os.path.splitext(fn)[1].lower()"
.\dev_tools\kakerlake_ultra_cleaner.py,537,rel,"('Call', ('Attr', 'p', 'relative_to'), (('Call', ('Name', 'Path'), (('Name', 'root'),), ()),), ())","('Call', 1, 0)","Path,p,root",rel=p.relative_to(Path(root));
.\mnt\data\kakerlake_ultra_cleaner.py,537,rel,"('Call', ('Attr', 'p', 'relative_to'), (('Call', ('Name', 'Path'), (('Name', 'root'),), ()),), ())","('Call', 1, 0)","Path,p,root",rel=p.relative_to(Path(root));
.\tools\kakerlake_ultra_cleaner.py,538,rel,"('Call', ('Attr', 'p', 'relative_to'), (('Call', ('Name', 'Path'), (('Name', 'root'),), ()),), ())","('Call', 1, 0)","Path,p,root",rel=p.relative_to(Path(root));
.\excel_eval.py,262,rel,"('Call', ('Attr', 'p', 'relative_to'), (('Name', 'base'),), ())","('Call', 1, 0)","base,p",rel = p.relative_to(base)
.\dev_tools\kakerlake_ultra_cleaner.py,528,rel,"('Call', ('Attr', 'path', 'relative_to'), (('Name', 'root_path'),), ())","('Call', 1, 0)","path,root_path",rel=path.relative_to(root_path);
.\mnt\data\kakerlake_ultra_cleaner.py,528,rel,"('Call', ('Attr', 'path', 'relative_to'), (('Name', 'root_path'),), ())","('Call', 1, 0)","path,root_path",rel=path.relative_to(root_path);
.\tools\kakerlake_ultra_cleaner.py,529,rel,"('Call', ('Attr', 'path', 'relative_to'), (('Name', 'root_path'),), ())","('Call', 1, 0)","path,root_path",rel=path.relative_to(root_path);
.\notwendig oder nicht\wichtig\repo_to_json.py,158,rel,"('Call', ('Attr', 'str(path.relative_to(root))', 'replace'), (('Const', ""'\\\\'""), ('Const', ""'/'"")), ())","('Call', 2, 0)","path,root,str","rel = str(path.relative_to(root)).replace(""\\"", ""/"")"
.\tools\repo_to_json.py,158,rel,"('Call', ('Attr', 'str(path.relative_to(root))', 'replace'), (('Const', ""'\\\\'""), ('Const', ""'/'"")), ())","('Call', 2, 0)","path,root,str","rel = str(path.relative_to(root)).replace(""\\"", ""/"")"
.\database.py,144,rel,"('Subscript', ('Name', 'row'), ('Const', '0'))","('Subscript',)",row,rel = row[0]
.\excel_eval.py,316,rel_d,"('Const', 'None')","('Const',)",,rel_d = None
.\excel_eval.py,329,rel_d,"('Div', ('Name', 'abs_d'), ('Add', (('Call', ('Name', 'abs'), (('Name', 'evf'),), ()), ('Const', '1e-30'))))","('Div', ('Name',), ('Add', (('Call', 1, 0), ('Const',))))","abs,abs_d,evf",rel_d = abs_d / (abs(evf) + 1e-30)
.\database.py,1521,relative_path_for_db,"('Call', ('Attr', 'os.path', 'join'), (('Call', ('Name', 'str'), (('Name', 'company_id'),), ()), ('Const', ""'images'""), ('Name', 'final_safe_filename')), ())","('Call', 3, 0)","company_id,final_safe_filename,os,str","relative_path_for_db = os.path.join(str(company_id), ""images"", final_safe_filename)"
.\database.py,1455,relative_path_for_db,"('Call', ('Attr', 'os.path', 'join'), (('Call', ('Name', 'str'), (('Name', 'company_id'),), ()), ('Name', 'final_safe_filename')), ())","('Call', 2, 0)","company_id,final_safe_filename,os,str","relative_path_for_db = os.path.join(str(company_id), final_safe_filename)"
.\dev_tools\kakerlake_ultra_cleaner.py,443,rep,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'out'), ('Const', ""'autopatch_annual_savings_report.csv'"")), ())","('Call', 2, 0)","os,out","rep=os.path.join(out,""autopatch_annual_savings_report.csv"")"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,318,rep,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'out'), ('Const', ""'autopatch_annual_savings_report.csv'"")), ())","('Call', 2, 0)","os,out","rep=os.path.join(out,""autopatch_annual_savings_report.csv"")"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,335,rep,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'out'), ('Const', ""'autopatch_annual_savings_report.csv'"")), ())","('Call', 2, 0)","os,out","rep=os.path.join(out,""autopatch_annual_savings_report.csv"")"
.\mnt\data\kakerlake_ultra_cleaner.py,443,rep,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'out'), ('Const', ""'autopatch_annual_savings_report.csv'"")), ())","('Call', 2, 0)","os,out","rep=os.path.join(out,""autopatch_annual_savings_report.csv"")"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,318,rep,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'out'), ('Const', ""'autopatch_annual_savings_report.csv'"")), ())","('Call', 2, 0)","os,out","rep=os.path.join(out,""autopatch_annual_savings_report.csv"")"
.\tools\kakerlake_ultra_cleaner.py,444,rep,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'out'), ('Const', ""'autopatch_annual_savings_report.csv'"")), ())","('Call', 2, 0)","os,out","rep=os.path.join(out,""autopatch_annual_savings_report.csv"")"
.\dev_tools\kakerlake_ultra_cleaner.py,505,rep,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'out'), ('Const', ""'autopatch_project_data_report.csv'"")), ())","('Call', 2, 0)","os,out","rep=os.path.join(out,""autopatch_project_data_report.csv"")"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,391,rep,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'out'), ('Const', ""'autopatch_project_data_report.csv'"")), ())","('Call', 2, 0)","os,out","rep=os.path.join(out,""autopatch_project_data_report.csv"")"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,403,rep,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'out'), ('Const', ""'autopatch_project_data_report.csv'"")), ())","('Call', 2, 0)","os,out","rep=os.path.join(out,""autopatch_project_data_report.csv"")"
.\mnt\data\kakerlake_ultra_cleaner.py,505,rep,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'out'), ('Const', ""'autopatch_project_data_report.csv'"")), ())","('Call', 2, 0)","os,out","rep=os.path.join(out,""autopatch_project_data_report.csv"")"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,391,rep,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'out'), ('Const', ""'autopatch_project_data_report.csv'"")), ())","('Call', 2, 0)","os,out","rep=os.path.join(out,""autopatch_project_data_report.csv"")"
.\tools\kakerlake_ultra_cleaner.py,506,rep,"('Call', ('Attr', 'os.path', 'join'), (('Name', 'out'), ('Const', ""'autopatch_project_data_report.csv'"")), ())","('Call', 2, 0)","os,out","rep=os.path.join(out,""autopatch_project_data_report.csv"")"
.\notwendig oder nicht\wichtig\repo_porter.py,245,report,"('Dict', (('KV', ('Const', ""'missing_counts'""), ('Dict', (('KV', ('Const', ""'class'""), ('Const', '0')), ('KV', ('Const', ""'func'""), ('Const', '0')), ('KV', ('Const', ""'method'""), ('Const', '0'))))), ('KV', ('Const', ""'modules_compared'""), ('Const', '0'))))","('Dict', 2)",,"report = {""modules_compared"": 0, ""missing_counts"": {""func"":0,""class"":0,""method"":0}}"
.\tools\repo_porter.py,245,report,"('Dict', (('KV', ('Const', ""'missing_counts'""), ('Dict', (('KV', ('Const', ""'class'""), ('Const', '0')), ('KV', ('Const', ""'func'""), ('Const', '0')), ('KV', ('Const', ""'method'""), ('Const', '0'))))), ('KV', ('Const', ""'modules_compared'""), ('Const', '0'))))","('Dict', 2)",,"report = {""modules_compared"": 0, ""missing_counts"": {""func"":0,""class"":0,""method"":0}}"
.\dev_tools\kakerlake_ultra_cleaner.py,324,report,"('List', ())","('List', 0)",,"cst, m = require_libcst(); ensure_dir(out); report=[]; changed_files=0"
.\dev_tools\kakerlake_ultra_cleaner.py,450,report,"('List', ())","('List', 0)",,"cst, m = require_libcst(); ensure_dir(out); report=[]; changed_files=0"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,177,report,"('List', ())","('List', 0)",,"cst, m = require_libcst(); ensure_dir(out); report=[]; changed_files=0"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,325,report,"('List', ())","('List', 0)",,"cst, m = require_libcst(); ensure_dir(out); report=[]; changed_files=0"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,190,report,"('List', ())","('List', 0)",,"cst, m = require_libcst(); ensure_dir(out); report=[]; changed_files=0"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,342,report,"('List', ())","('List', 0)",,"cst, m = require_libcst(); ensure_dir(out); report=[]; changed_files=0"
.\mnt\data\kakerlake_ultra_cleaner.py,324,report,"('List', ())","('List', 0)",,"cst, m = require_libcst(); ensure_dir(out); report=[]; changed_files=0"
.\mnt\data\kakerlake_ultra_cleaner.py,450,report,"('List', ())","('List', 0)",,"cst, m = require_libcst(); ensure_dir(out); report=[]; changed_files=0"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,177,report,"('List', ())","('List', 0)",,"cst, m = require_libcst(); ensure_dir(out); report=[]; changed_files=0"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,325,report,"('List', ())","('List', 0)",,"cst, m = require_libcst(); ensure_dir(out); report=[]; changed_files=0"
.\tools\kakerlake_ultra_cleaner.py,325,report,"('List', ())","('List', 0)",,"cst, m = require_libcst(); ensure_dir(out); report=[]; changed_files=0"
.\tools\kakerlake_ultra_cleaner.py,451,report,"('List', ())","('List', 0)",,"cst, m = require_libcst(); ensure_dir(out); report=[]; changed_files=0"
.\pdf_atomizer.py,225,res,"('BoolOp', 'Or', (('Attr', 'pg_dict', 'Resources'), ('Dict', ())))","('BoolOp', 'Or', 2)",pg_dict,res = pg_dict.Resources or {}
.\.tmp_placeholder_test.py,34,res,"('Call', ('Attr', 'placeholders', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,company_info,placeholders,project_data","res = placeholders.build_dynamic_data(project_data, analysis_results, company_info)"
.\excel_eval.py,405,res,"('Call', ('Name', 'batch_export'), (('Attr', 'args', 'base'),), (('engine', ('Attr', 'args', 'engine')), ('limit', ('Attr', 'args', 'limit')), ('out_dir', ('Attr', 'args', 'outdir')), ('pattern', ('Attr', 'args', 'pattern')), ('to', ('Attr', 'args', 'to'))))","('Call', 1, 5)","args,batch_export","res = batch_export(args.base, pattern=args.pattern, out_dir=args.outdir,"
.\notwendig oder nicht\wichtig\portings\patches\tools\test_page3_values.py.insert.py,20,res,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","res = build_dynamic_data(project_data, analysis_results, {})"
.\tests\test_page3_values.py,26,res,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","res = build_dynamic_data(project_data, analysis_results, {})"
.\tools\portings\patches\tools\test_page3_values.py.insert.py,20,res,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","res = build_dynamic_data(project_data, analysis_results, {})"
.\tools\test_page3_values.py,26,res,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","res = build_dynamic_data(project_data, analysis_results, {})"
.\debug_page3_check.py,56,res,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","res = build_dynamic_data(project_data, analysis_results, company_info)"
.\notwendig oder nicht\wichtig\portings\patches\debug_page3_check.py.insert.py,33,res,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","res = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\debug_dynamic_page3.py,19,res,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","res = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\portings\patches\debug_page3_check.py.insert.py,33,res,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","res = build_dynamic_data(project_data, analysis_results, company_info)"
.\tests\test_build_dynamic_data.py,15,res,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'),), (('analysis_results', ('Dict', ())),))","('Call', 1, 1)","build_dynamic_data,project_data","res = build_dynamic_data(project_data, analysis_results={})"
.\tools\test_build_dynamic_data.py,15,res,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'),), (('analysis_results', ('Dict', ())),))","('Call', 1, 1)","build_dynamic_data,project_data","res = build_dynamic_data(project_data, analysis_results={})"
.\pdf_atomizer.py,227,res,"('Dict', ())","('Dict', 0)",,res = {}
.\notwendig oder nicht\python_function_recipes.py,212,res,"('Mult', (('Name', 'm'), ('Name', 'res')))","('Mult', (('Name',), ('Name',)))","m,res",res = res * m
.\notwendig oder nicht\python_function_recipes.py,210,res,"('Subscript', ('Name', 'mats'), ('Const', '0'))","('Subscript',)",mats,res = mats[0]
.\data_input.py,334,response,"('Call', ('Attr', 'requests', 'get'), (('Attr', 'st.session_state', 'satellite_image_url_di'),), (('timeout', ('Const', '15')),))","('Call', 1, 1)","requests,st","response = requests.get(st.session_state.satellite_image_url_di, timeout=15)"
.\data_input.py,114,response,"('Call', ('Attr', 'requests', 'get'), (('Name', 'base_url'),), (('params', ('Name', 'params')), ('timeout', ('Const', '10'))))","('Call', 1, 2)","base_url,params,requests","response = requests.get(base_url, params=params, timeout=10)"
.\calculations.py,2228,response,"('Call', ('Attr', 'requests', 'get'), (('Name', 'base_url'),), (('params', ('Name', 'params')), ('timeout', ('Const', '25'))))","('Call', 1, 2)","base_url,params,requests",response = requests.get(
.\ai_companion.py,97,response,"('Call', ('Attr', 'requests', 'post'), (('Other', 'JoinedStr'),), (('headers', ('Name', 'headers')), ('json', ('Name', 'payload')), ('timeout', ('Const', '30'))))","('Call', 1, 3)","headers,payload,requests,self",response = requests.post(
.\ai_companion.py,285,response,"('Call', ('Attr', 'self', 'call_deepseek_api'), (('Name', 'message'),), ())","('Call', 1, 0)","message,self",response = self.call_deepseek_api(message)
.\calculations.py,2295,response_text_detail,"('Attr', 'e_http.response', 'text')","('Attr',)",e_http,response_text_detail = e_http.response.text
.\calculations.py,2291,response_text_detail,"('Call', ('Attr', 'e_http.response.json()', 'get'), (('Const', ""'message'""), ('Attr', 'e_http.response', 'text')), ())","('Call', 2, 0)",e_http,response_text_detail = e_http.response.json().get(
.\calculations.py,2288,response_text_detail,"('Const', ""''"")","('Const',)",,"response_text_detail = """""
.\calculations.py,2297,response_text_detail,"('Const', ""'Konnte Fehlerdetails nicht extrahieren.'"")","('Const',)",,"response_text_detail = ""Konnte Fehlerdetails nicht extrahieren."""
.\notwendig oder nicht\wichtig\portings\patches\test_admin_fix.py.insert.py,40,result,"('Call', ('Attr', ""input_val or ''"", 'strip'), (), ())","('Call', 0, 0)",input_val,"result = (input_val or """").strip()"
.\tests\test_admin_fix.py,36,result,"('Call', ('Attr', ""input_val or ''"", 'strip'), (), ())","('Call', 0, 0)",input_val,"result = (input_val or """").strip()"
.\tools\portings\patches\test_admin_fix.py.insert.py,40,result,"('Call', ('Attr', ""input_val or ''"", 'strip'), (), ())","('Call', 0, 0)",input_val,"result = (input_val or """").strip()"
.\brand_logo_db.py,117,result,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,result = cursor.fetchone()
.\check_companies.py,83,result,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,result = cursor.fetchone()
.\check_product_image_details.py,12,result,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,result = cursor.fetchone()
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,115,result,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,result = cursor.fetchone()
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,130,result,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,result = cursor.fetchone()
.\notwendig oder nicht\wichtig\portings\patches\check_product_image_details.py.insert.py,17,result,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,result = cursor.fetchone()
.\tools\out_selected\patches\brand_logo_db.py.insert.py,115,result,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,result = cursor.fetchone()
.\tools\portings\patches\brand_logo_db.py.insert.py,130,result,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,result = cursor.fetchone()
.\tools\portings\patches\check_product_image_details.py.insert.py,17,result,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,result = cursor.fetchone()
.\multi_offer_generator_old.py,1217,result,"('Call', ('Attr', 'future', 'result'), (), ())","('Call', 0, 0)",future,result = future.result()
.\multi_offer_generator_old.py,1425,result,"('Call', ('Attr', 'generator', 'generate_pdf_for_company'), (('Name', 'company_id'), ('Attr', 'st.session_state', 'multi_offer_project_data'), ('Name', 'analysis_results'), ('Name', 'texts'), ('Other', 'Lambda'), ('Other', 'Lambda'), ('Name', 'list_products'), ('Name', 'get_product_by_id'), ('Other', 'Lambda')), ())","('Call', 9, 0)","analysis_results,company_id,d,generator,get_product_by_id,list_products,st,texts",result = generator.generate_pdf_for_company(
.\ai_companion.py,105,result,"('Call', ('Attr', 'response', 'json'), (), ())","('Call', 0, 0)",response,result = response.json()
.\migrate_logo_database.py,82,result,"('Call', ('Name', 'add_brand_logo'), (('Const', ""'MigrationTest'""), ('Name', 'test_logo_b64'), ('Const', ""'PNG'"")), (('file_size_bytes', ('Const', '100')), ('height', ('Const', '30.0')), ('position_x', ('Const', '100.0')), ('position_y', ('Const', '200.0')), ('width', ('Const', '60.0'))))","('Call', 3, 5)","add_brand_logo,test_logo_b64",result = add_brand_logo(
.\notwendig oder nicht\wichtig\portings\patches\test_page1_alignment.py.insert.py,21,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","result = build_dynamic_data(project_data, analysis_results, {})"
.\notwendig oder nicht\wichtig\portings\patches\test_right_alignment.py.insert.py,24,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","result = build_dynamic_data(project_data, analysis_results, {})"
.\tests\test_page1_alignment.py,23,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","result = build_dynamic_data(project_data, analysis_results, {})"
.\tests\test_right_alignment.py,26,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","result = build_dynamic_data(project_data, analysis_results, {})"
.\tools\portings\patches\test_page1_alignment.py.insert.py,21,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","result = build_dynamic_data(project_data, analysis_results, {})"
.\tools\portings\patches\test_right_alignment.py.insert.py,24,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Dict', ())), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,project_data","result = build_dynamic_data(project_data, analysis_results, {})"
.\notwendig oder nicht\wichtig\portings\patches\test_roof_data.py.insert.py,24,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","result = build_dynamic_data(project_data, analysis_results, company_info)"
.\notwendig oder nicht\wichtig\portings\patches\test_roof_data.py.insert.py,37,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","result = build_dynamic_data(project_data, analysis_results, company_info)"
.\notwendig oder nicht\wichtig\portings\patches\test_roof_data.py.insert.py,45,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","result = build_dynamic_data(project_data, analysis_results, company_info)"
.\tests\test_roof_data.py,26,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","result = build_dynamic_data(project_data, analysis_results, company_info)"
.\tests\test_roof_data.py,39,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","result = build_dynamic_data(project_data, analysis_results, company_info)"
.\tests\test_roof_data.py,47,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","result = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\portings\patches\test_roof_data.py.insert.py,24,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","result = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\portings\patches\test_roof_data.py.insert.py,37,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","result = build_dynamic_data(project_data, analysis_results, company_info)"
.\tools\portings\patches\test_roof_data.py.insert.py,45,result,"('Call', ('Name', 'build_dynamic_data'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'company_info')), ())","('Call', 3, 0)","analysis_results,build_dynamic_data,company_info,project_data","result = build_dynamic_data(project_data, analysis_results, company_info)"
.\notwendig oder nicht\custom_dynamic_calculation.py,109,result,"('Call', ('Name', 'calculate_savings'), (), (('annual_consumption_kwh', ('Const', '3400')), ('battery_capacity_kwh', ('Const', '12.1')), ('direct_consumption_kwh', ('Const', '2640')), ('eeg_eur_per_kwh', ('Const', '0.0786')), ('price_eur_per_kwh', ('Const', '0.35')), ('pv_production_kwh', ('Const', '8800'))))","('Call', 0, 6)",calculate_savings,result = calculate_savings(
.\tools\custom_dynamic_calculation.py,111,result,"('Call', ('Name', 'calculate_savings'), (), (('annual_consumption_kwh', ('Const', '3400')), ('battery_capacity_kwh', ('Const', '12.1')), ('direct_consumption_kwh', ('Const', '2640')), ('eeg_eur_per_kwh', ('Const', '0.0786')), ('price_eur_per_kwh', ('Const', '0.35')), ('pv_production_kwh', ('Const', '8800'))))","('Call', 0, 6)",calculate_savings,result = calculate_savings(
.\components\progress_demo.py,51,result,"('Call', ('Name', 'complex_calculation'), (), ())","('Call', 0, 0)",complex_calculation,result = complex_calculation()
.\debug_brand_extraction.py,47,result,"('Call', ('Name', 'extract_brands_from_project_data'), (('Name', 'project_data'),), ())","('Call', 1, 0)","extract_brands_from_project_data,project_data",result = extract_brands_from_project_data(project_data)
.\german_formatting.py,69,result,"('Call', ('Name', 'format_german_number'), (('Name', 'value'),), ())","('Call', 1, 0)","format_german_number,value",result = format_german_number(value)
.\components\progress_manager.py,412,result,"('Call', ('Name', 'func'), (('Other', 'Starred'),), (('**', ('Name', 'kwargs')),))","('Call', 1, 1)","args,func,kwargs","result = func(*args, **kwargs)"
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,53,result,"('Call', ('Name', 'func'), (('Other', 'Starred'),), (('**', ('Name', 'kwargs')),))","('Call', 1, 1)","args,func,kwargs","result = func(*args, **kwargs)"
.\tools\out_selected\patches\components\progress_manager.py.insert.py,53,result,"('Call', ('Name', 'func'), (('Other', 'Starred'),), (('**', ('Name', 'kwargs')),))","('Call', 1, 1)","args,func,kwargs","result = func(*args, **kwargs)"
.\central_pdf_system.py,214,result,"('Call', ('Name', 'generate_mega_hybrid_pdf'), (('Other', 'Starred'),), (('**', ('Name', 'debug_kwargs')),))","('Call', 1, 1)","args,debug_kwargs,generate_mega_hybrid_pdf","result = generate_mega_hybrid_pdf(*args, **debug_kwargs)"
.\notwendig oder nicht\wichtig\portings\patches\test_pdf_logos.py.insert.py,82,result,"('Call', ('Name', 'generate_offer_pdf'), (), (('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info')), ('options', ('Name', 'options')), ('output_path', ('Name', 'temp_pdf_path')), ('project_data', ('Name', 'project_data'))))","('Call', 0, 5)","analysis_results,company_info,generate_offer_pdf,options,project_data,temp_pdf_path",result = generate_offer_pdf(
.\tests\test_pdf_logos.py,84,result,"('Call', ('Name', 'generate_offer_pdf'), (), (('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info')), ('options', ('Name', 'options')), ('output_path', ('Name', 'temp_pdf_path')), ('project_data', ('Name', 'project_data'))))","('Call', 0, 5)","analysis_results,company_info,generate_offer_pdf,options,project_data,temp_pdf_path",result = generate_offer_pdf(
.\tools\portings\patches\test_pdf_logos.py.insert.py,82,result,"('Call', ('Name', 'generate_offer_pdf'), (), (('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info')), ('options', ('Name', 'options')), ('output_path', ('Name', 'temp_pdf_path')), ('project_data', ('Name', 'project_data'))))","('Call', 0, 5)","analysis_results,company_info,generate_offer_pdf,options,project_data,temp_pdf_path",result = generate_offer_pdf(
.\central_pdf_system.py,238,result,"('Call', ('Name', 'system_func'), (('Other', 'Starred'),), (('**', ('Name', 'kwargs')),))","('Call', 1, 1)","args,kwargs,system_func","result = system_func(*args, **kwargs)"
.\central_pdf_system.py,263,result,"('Call', ('Name', 'system_func'), (('Other', 'Starred'),), (('**', ('Name', 'kwargs')),))","('Call', 1, 1)","args,kwargs,system_func","result = system_func(*args, **kwargs)"
.\central_pdf_system.py,573,result,"('Call', ('Name', 'system_func'), (('Other', 'Starred'),), (('**', ('Name', 'kwargs')),))","('Call', 1, 1)","args,kwargs,system_func","result = system_func(*args, **kwargs)"
.\central_pdf_system.py,587,result,"('Call', ('Name', 'system_func'), (('Other', 'Starred'),), (('**', ('Name', 'kwargs')),))","('Call', 1, 1)","args,kwargs,system_func","result = system_func(*args, **kwargs)"
.\central_pdf_system.py,599,result,"('Call', ('Name', 'system_func'), (('Other', 'Starred'),), (('**', ('Name', 'kwargs')),))","('Call', 1, 1)","args,kwargs,system_func","result = system_func(*args, **kwargs)"
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,198,result,"('Call', ('Name', 'test_func'), (), ())","('Call', 0, 0)",test_func,result = test_func()
.\tests\test_logo_integration.py,171,result,"('Call', ('Name', 'test_func'), (), ())","('Call', 0, 0)",test_func,result = test_func()
.\tools\portings\patches\test_logo_integration.py.insert.py,198,result,"('Call', ('Name', 'test_func'), (), ())","('Call', 0, 0)",test_func,result = test_func()
.\pdf_template_engine\placeholders.py,443,result,"('Dict', (('KV', ('Const', ""'company_city_zip'""), ('Call', ('Attr', 'f""{as_str(company_info.get(\'zip_code\'))} {as_str(company_info.get(\'city\'))}""', 'strip'), (), ())), ('KV', ('Const', ""'company_email'""), ('Call', ('Name', 'as_str'), (('Call', ('Attr', 'company_info', 'get'), (('Const', ""'email'""),), ()),), ())), ('KV', ('Const', ""'company_logo_b64'""), ('Call', ('Name', 'as_str'), (('Call', ('Attr', 'company_info', 'get'), (('Const', ""'logo_base64'""),), ()),), ())), ('KV', ('Const', ""'company_name'""), ('Call', ('Name', 'as_str'), (('Call', ('Attr', 'company_info', 'get'), (('Const', ""'name'""),), ()),), ())), ('KV', ('Const', ""'company_phone'""), ('Call', ('Name', 'as_str'), (('Call', ('Attr', 'company_info', 'get'), (('Const', ""'phone'""),), ()),), ())), ('KV', ('Const', ""'company_street'""), ('Call', ('Name', 'as_str'), (('Call', ('Attr', 'company_info', 'get'), (('Const', ""'street'""),), ()),), ())), ('KV', ('Const', ""'customer_city_zip'""), ('Call', ('Attr', 'f""{as_str(customer.get(\'zip_code\'))} {as_str(customer.get(\'city\'))}""', 'strip'), (), ())), ('KV', ('Const', ""'customer_email'""), ('Call', ('Name', 'as_str'), (('Call', ('Attr', 'customer', 'get'), (('Const', ""'email'""),), ()),), ())), ('KV', ('Const', ""'customer_name'""), ('Name', 'full_name')), ('KV', ('Const', ""'customer_phone'""), ('Call', ('Name', 'as_str'), (('BoolOp', 'Or', (('Call', ('Attr', 'customer', 'get'), (('Const', ""'phone_landline'""),), ()), ('Call', ('Attr', 'customer', 'get'), (('Const', ""'phone_mobile'""),), ()))),), ())), ('KV', ('Const', ""'customer_street'""), ('Call', ('Attr', 'f""{as_str(customer.get(\'address\'))} {as_str(customer.get(\'house_number\'))}""', 'strip'), (), ()))))","('Dict', 11)","as_str,company_info,customer,full_name","result: Dict[str, str] = {"
.\pdf_template_engine\placeholders.py,492,result,"('Dict', (('KV', ('Const', ""'company_city_zip'""), ('Call', ('Name', 'as_str'), (('Call', ('Attr', 'f""{company_info.get(\'zip_code\', \'\')} {company_info.get(\'city\', \'\')}""', 'strip'), (), ()),), ())), ('KV', ('Const', ""'company_email'""), ('Call', ('Name', 'as_str'), (('BoolOp', 'Or', (('Call', ('Attr', 'company_info', 'get'), (('Const', ""'email'""),), ()), ('Const', ""''""))),), ())), ('KV', ('Const', ""'company_logo_b64'""), ('Call', ('Name', 'as_str'), (('BoolOp', 'Or', (('Call', ('Attr', 'company_info', 'get'), (('Const', ""'logo_base64'""),), ()), ('Const', ""''""))),), ())), ('KV', ('Const', ""'company_name'""), ('Call', ('Name', 'as_str'), (('BoolOp', 'Or', (('Call', ('Attr', 'company_info', 'get'), (('Const', ""'name'""),), ()), ('Const', ""''""))),), ())), ('KV', ('Const', ""'company_phone'""), ('Call', ('Name', 'as_str'), (('BoolOp', 'Or', (('Call', ('Attr', 'company_info', 'get'), (('Const', ""'phone'""),), ()), ('Const', ""''""))),), ())), ('KV', ('Const', ""'company_street'""), ('Call', ('Name', 'as_str'), (('BoolOp', 'Or', (('Call', ('Attr', 'company_info', 'get'), (('Const', ""'street'""),), ()), ('Const', ""''""))),), ())), ('KV', ('Const', ""'company_website'""), ('Call', ('Name', 'as_str'), (('BoolOp', 'Or', (('Call', ('Attr', 'company_info', 'get'), (('Const', ""'website'""),), ()), ('Const', ""''""))),), ())), ('KV', ('Const', ""'customer_city_zip'""), ('Name', 'city_zip')), ('KV', ('Const', ""'customer_email'""), ('Name', 'email')), ('KV', ('Const', ""'customer_name'""), ('Name', 'full_name')), ('KV', ('Const', ""'customer_phone'""), ('Name', 'phone')), ('KV', ('Const', ""'customer_street'""), ('Name', 'street_full')), ('KV', ('Const', ""'inverter_backup_capable'""), ('Const', ""''"")), ('KV', ('Const', ""'inverter_guarantee_text'""), ('Const', ""''"")), ('KV', ('Const', ""'inverter_image_b64'""), ('Const', ""''"")), ('KV', ('Const', ""'inverter_manufacturer'""), ('Const', ""''"")), ('KV', ('Const', ""'inverter_max_efficiency_percent'""), ('Const', ""''"")), ('KV', ('Const', ""'inverter_model'""), ('Const', ""''"")), ('KV', ('Const', ""'inverter_phases'""), ('Const', ""''"")), ('KV', ('Const', ""'inverter_power_watt'""), ('Const', ""''"")), ('KV', ('Const', ""'inverter_shading_management'""), ('Const', ""''"")), ('KV', ('Const', ""'inverter_smart_home_integration'""), ('Const', ""''"")), ('KV', ('Const', ""'inverter_type'""), ('Const', ""''"")), ('KV', ('Const', ""'inverter_warranty_years'""), ('Const', ""'siehe Produktdatenblatt'"")), ('KV', ('Const', ""'module_image_b64'""), ('Const', ""''"")), ('KV', ('Const', ""'module_manufacturer'""), ('Const', ""''"")), ('KV', ('Const', ""'module_model'""), ('Const', ""''"")), ('KV', ('Const', ""'module_performance_warranty'""), ('Const', ""''"")), ('KV', ('Const', ""'module_power_wp'""), ('Const', ""''"")), ('KV', ('Const', ""'module_warranty_years'""), ('Const', ""'siehe Produktdatenblatt'"")), ('KV', ('Const', ""'storage_backup_text'""), ('Const', ""''"")), ('KV', ('Const', ""'storage_capacity_kwh'""), ('Const', ""''"")), ('KV', ('Const', ""'storage_cell_technology'""), ('Const', ""''"")), ('KV', ('Const', ""'storage_cycles'""), ('Const', ""''"")), ('KV', ('Const', ""'storage_dod_percent'""), ('Const', ""''"")), ('KV', ('Const', ""'storage_extension_module_size_kwh'""), ('Const', ""''"")), ('KV', ('Const', ""'storage_image_b64'""), ('Const', ""''"")), ('KV', ('Const', ""'storage_manufacturer'""), ('Const', ""''"")), ('KV', ('Const', ""'storage_max_size_kwh'""), ('Const', ""''"")), ('KV', ('Const', ""'storage_model'""), ('Const', ""''"")), ('KV', ('Const', ""'storage_outdoor_capability'""), ('Const', ""''"")), ('KV', ('Const', ""'storage_power_kw'""), ('Const', ""''"")), ('KV', ('Const', ""'storage_size_battery_kwh_star'""), ('Const', ""''"")), ('KV', ('Const', ""'storage_warranty_text'""), ('Const', ""'siehe Produktdatenblatt'""))))","('Dict', 44)","as_str,city_zip,company_info,email,full_name,phone,street_full","result: Dict[str, str] = {"
.\tools\import_module_attributes_generic.py,422,result,"('Dict', (('KV', ('Const', ""'details'""), ('Name', 'details')), ('KV', ('Const', ""'ensured'""), ('Name', 'ensured')), ('KV', ('Const', ""'ensured_created'""), ('Name', 'ensured_created')), ('KV', ('Const', ""'ensured_existing'""), ('Name', 'ensured_existing')), ('KV', ('Const', ""'format'""), ('Name', 'file_format')), ('KV', ('Const', ""'headers'""), ('Other', 'IfExp')), ('KV', ('Const', ""'mapping'""), ('Name', 'mapping_report')), ('KV', ('Const', ""'ok'""), ('Const', 'True')), ('KV', ('Const', ""'path'""), ('Name', 'path')), ('KV', ('Const', ""'samples'""), ('Name', 'samples')), ('KV', ('Const', ""'sheets'""), ('Other', 'IfExp')), ('KV', ('Const', ""'skipped'""), ('Name', 'skipped')), ('KV', ('Const', ""'total_rows'""), ('Name', 'total_rows')), ('KV', ('Const', ""'updated'""), ('Name', 'updated')), ('KV', ('Const', ""'upserted'""), ('Name', 'upserted'))))","('Dict', 15)","details,ensured,ensured_created,ensured_existing,file_format,locals,mapping_report,orig_cols,path,samples,sheets_info,skipped,total_rows,updated,upserted","result = {""ok"": True, ""path"": path, ""format"": file_format, ""headers"": orig_cols if 'orig_cols' in locals() else None, ""mapping"": mapping_report, ""samples"": samples, ""sheets"": sheets_info if file_format == ""xlsx"" else None, ""total_rows"": total_rows, ""ensured"": ensured, ""ensured_existing"": ensured_existing, ""ensured_created"": ensured_created, ""updated"": updated, ""upserted"": upserted, ""skipped"": skipped, ""details"": details}"
.\calculations_extended.py,185,result,"('Dict', (('KV', ('Const', ""'name'""), ('Call', ('Attr', 'config', 'get'), (('Const', ""'name'""),), ())), ('KV', ('Const', ""'payback'""), ('Const', '10'))))","('Dict', 2)",config,"result = {""name"": config.get(""name""), ""payback"": 10} # Dummy-Ergebnis"
.\analysis_utils.py,204,result,"('Div', ('Name', 'numerator'), ('Name', 'denominator'))","('Div', ('Name',), ('Name',))","denominator,numerator",result = numerator / denominator
.\database.py,118,result,"('List', ())","('List', 0)",,"result: List[Dict[str, Any]] = []"
.\brand_logo_db.py,164,results,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,results = cursor.fetchall()
.\brand_logo_db.py,314,results,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,results = cursor.fetchall()
.\check_product_images.py,17,results,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,results = cursor.fetchall()
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,165,results,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,results = cursor.fetchall()
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,327,results,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,results = cursor.fetchall()
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,187,results,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,results = cursor.fetchall()
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,377,results,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,results = cursor.fetchall()
.\notwendig oder nicht\wichtig\portings\patches\check_product_images.py.insert.py,22,results,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,results = cursor.fetchall()
.\tools\out_selected\patches\brand_logo_db.py.insert.py,165,results,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,results = cursor.fetchall()
.\tools\out_selected\patches\brand_logo_db.py.insert.py,327,results,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,results = cursor.fetchall()
.\tools\portings\patches\brand_logo_db.py.insert.py,187,results,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,results = cursor.fetchall()
.\tools\portings\patches\brand_logo_db.py.insert.py,377,results,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,results = cursor.fetchall()
.\tools\portings\patches\check_product_images.py.insert.py,22,results,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,results = cursor.fetchall()
.\multi_offer_generator_old.py,1407,results,"('Call', ('Attr', 'generator', 'generate_all_pdfs_parallel'), (('Name', 'selected_companies'), ('Attr', 'st.session_state', 'multi_offer_project_data'), ('Name', 'analysis_results'), ('Name', 'texts'), ('Other', 'Lambda')), ())","('Call', 5, 0)","analysis_results,generator,p,progress_bar,selected_companies,st,texts",results = generator.generate_all_pdfs_parallel(
.\multi_offer_generator_old.py,856,results,"('Call', ('Name', 'perform_calculations'), (('Name', 'customer_project_data'), ('Name', 'texts'), ('Name', 'errors_list')), ())","('Call', 3, 0)","customer_project_data,errors_list,perform_calculations,texts","results = perform_calculations(customer_project_data, texts, errors_list)"
.\calculations.py,4299,results,"('Call', ('Name', 'perform_calculations'), (('Name', 'project_data'), ('Dict', ()), ('Name', 'calculation_errors')), ())","('Call', 3, 0)","calculation_errors,perform_calculations,project_data","results = perform_calculations(project_data, {}, calculation_errors)  # texts"
.\notwendig oder nicht\calculations_cli.py,53,results,"('Call', ('Name', 'perform_calculations'), (('Name', 'project_data'), ('Name', 'texts'), ('Name', 'errors_list'), ('Name', 'simulation_duration_user'), ('Name', 'electricity_price_increase_user')), ())","('Call', 5, 0)","electricity_price_increase_user,errors_list,perform_calculations,project_data,simulation_duration_user,texts","results: Dict[str, Any] = perform_calculations("
.\notwendig oder nicht\keine ahnung\calculations_cli.py,53,results,"('Call', ('Name', 'perform_calculations'), (('Name', 'project_data'), ('Name', 'texts'), ('Name', 'errors_list'), ('Name', 'simulation_duration_user'), ('Name', 'electricity_price_increase_user')), ())","('Call', 5, 0)","electricity_price_increase_user,errors_list,perform_calculations,project_data,simulation_duration_user,texts","results: Dict[str, Any] = perform_calculations("
.\notwendig oder nicht\need or not\calculations_cli.py,53,results,"('Call', ('Name', 'perform_calculations'), (('Name', 'project_data'), ('Name', 'texts'), ('Name', 'errors_list'), ('Name', 'simulation_duration_user'), ('Name', 'electricity_price_increase_user')), ())","('Call', 5, 0)","electricity_price_increase_user,errors_list,perform_calculations,project_data,simulation_duration_user,texts","results: Dict[str, Any] = perform_calculations("
.\pdf_generator.py,1182,results,"('Call', ('Name', 'run_all_extended_analyses'), (('Name', 'offer_data'),), ())","('Call', 1, 0)","offer_data,run_all_extended_analyses",results = run_all_extended_analyses(offer_data)
.\calculations_extended.py,410,results,"('Dict', (('KV', ('Const', ""'annual_equity_return_percent'""), ('Call', ('Name', 'calculate_annual_equity_return'), (('Name', 'investment'), ('Name', 'annual_savings')), ())), ('KV', ('Const', ""'co2_avoidance_per_year_tons'""), ('Call', ('Name', 'calculate_co2_avoidance_per_year'), (('Name', 'annual_production'),), ())), ('KV', ('Const', ""'co2_payback_time'""), ('Call', ('Name', 'calculate_co2_payback_time'), (('Name', 'pv_size_kwp'), ('Name', 'annual_production')), ())), ('KV', ('Const', ""'dynamic_payback_3_percent'""), ('Call', ('Name', 'calculate_dynamic_payback_period'), (('Name', 'investment'), ('Name', 'annual_savings'), ('Const', '3.0')), ())), ('KV', ('Const', ""'dynamic_payback_5_percent'""), ('Call', ('Name', 'calculate_dynamic_payback_period'), (('Name', 'investment'), ('Name', 'annual_savings'), ('Const', '5.0')), ())), ('KV', ('Const', ""'energy_payback_time'""), ('Call', ('Name', 'calculate_energy_payback_time'), (('Name', 'total_embodied_energy'), ('Name', 'annual_production')), ())), ('KV', ('Const', ""'internal_rate_of_return'""), ('Call', ('Name', 'calculate_internal_rate_of_return'), (('Name', 'investment'), ('Name', 'annual_savings')), ())), ('KV', ('Const', ""'lcoe'""), ('Call', ('Name', 'calculate_lcoe'), (('Name', 'investment'), ('Name', 'annual_production')), ())), ('KV', ('Const', ""'net_present_value'""), ('Call', ('Name', 'calculate_net_present_value'), (('Name', 'investment'), ('Name', 'annual_savings')), ())), ('KV', ('Const', ""'profit_after_10_years'""), ('Call', ('Name', 'calculate_profit_after_x_years'), (('Name', 'investment'), ('Name', 'annual_savings'), ('Const', '10')), ())), ('KV', ('Const', ""'profit_after_20_years'""), ('Call', ('Name', 'calculate_profit_after_x_years'), (('Name', 'investment'), ('Name', 'annual_savings'), ('Const', '20')), ())), ('KV', ('Const', ""'profitability_index'""), ('Call', ('Name', 'calculate_profitability_index'), (('Name', 'investment'), ('Name', 'annual_savings')), ())), ('KV', ('Const', ""'total_roi_percent'""), ('Call', ('Name', 'calculate_total_roi'), (('Name', 'investment'), ('Name', 'annual_savings')), ()))))","('Dict', 13)","annual_production,annual_savings,calculate_annual_equity_return,calculate_co2_avoidance_per_year,calculate_co2_payback_time,calculate_dynamic_payback_period,calculate_energy_payback_time,calculate_internal_rate_of_return,calculate_lcoe,calculate_net_present_value,calculate_profit_after_x_years,calculate_profitability_index,calculate_total_roi,investment,pv_size_kwp,total_embodied_energy",results = {
.\calculations.py,2349,results,"('Dict', (('KV', ('Const', ""'calculation_errors'""), ('Name', 'errors_list')),))","('Dict', 1)",errors_list,"results: Dict[str, Any] = {""calculation_errors"": errors_list}"
.\multi_offer_generator_old.py,1191,results,"('Dict', ())","('Dict', 0)",,results = {}
.\multi_offer_generator_old.py,1416,results,"('Dict', ())","('Dict', 0)",,results = {}
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,194,results,"('Dict', ())","('Dict', 0)",,results = {}
.\tests\test_logo_integration.py,167,results,"('Dict', ())","('Dict', 0)",,results = {}
.\tools\portings\patches\test_logo_integration.py.insert.py,194,results,"('Dict', ())","('Dict', 0)",,results = {}
.\calculations_extended.py,182,results,"('List', ())","('List', 0)",,results = []
.\database.py,1596,results,"('List', ())","('List', 0)",,results = []
.\excel_eval.py,254,results,"('List', ())","('List', 0)",,"results: List[Tuple[Path, Path]] = []"
.\tools\import_module_attributes_generic.py,527,results,"('List', ())","('List', 0)",,"results: List[Dict[str, Any]] = []"
.\live_preview_helpers.py,122,results_for_display,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'calculation_results'""), ('Dict', ())), ())","('Call', 2, 0)",st,"results_for_display = st.session_state.get('calculation_results', {})"
.\analysis.py,7009,results_for_display,"('Call', ('Name', 'perform_calculations'), (('Name', 'project_inputs'), ('Name', 'texts'), ('Name', 'calculation_errors_for_current_run')), (('electricity_price_increase_user', ('Name', 'sim_price_increase_user_input')), ('simulation_duration_user', ('Name', 'sim_duration_user_input'))))","('Call', 3, 2)","calculation_errors_for_current_run,perform_calculations,project_inputs,sim_duration_user_input,sim_price_increase_user_input,texts",results_for_display = perform_calculations(
.\pdf_generator.py,739,retrieved,"('Call', ('Attr', 'texts_dict', 'get'), (('Name', 'key'), ('Name', 'fallback_text_value')), ())","('Call', 2, 0)","fallback_text_value,key,texts_dict","retrieved = texts_dict.get(key, fallback_text_value)"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_upload.py.insert.py,37,retrieved,"('Call', ('Name', 'get_product_by_id'), (('Name', 'new_id'),), ())","('Call', 1, 0)","get_product_by_id,new_id",retrieved = get_product_by_id(new_id)
.\tests\test_admin_upload.py,37,retrieved,"('Call', ('Name', 'get_product_by_id'), (('Name', 'new_id'),), ())","('Call', 1, 0)","get_product_by_id,new_id",retrieved = get_product_by_id(new_id)
.\tools\portings\patches\test_admin_upload.py.insert.py,37,retrieved,"('Call', ('Name', 'get_product_by_id'), (('Name', 'new_id'),), ())","('Call', 1, 0)","get_product_by_id,new_id",retrieved = get_product_by_id(new_id)
.\dev_tools\kakerlake_ultra_cleaner.py,479,rhs,"('Attr', 'orig', 'value')","('Attr',)",orig,rhs=orig.value
.\dev_tools\kakerlake_ultra_cleaner_v2.py,217,rhs,"('Attr', 'orig', 'value')","('Attr',)",orig,rhs = orig.value
.\dev_tools\kakerlake_ultra_cleaner_v2.py,361,rhs,"('Attr', 'orig', 'value')","('Attr',)",orig,rhs=orig.value
.\dev_tools\kakerlake_ultra_cleaner_v3.py,230,rhs,"('Attr', 'orig', 'value')","('Attr',)",orig,rhs = orig.value
.\dev_tools\kakerlake_ultra_cleaner_v3.py,377,rhs,"('Attr', 'orig', 'value')","('Attr',)",orig,rhs=orig.value
.\mnt\data\kakerlake_ultra_cleaner.py,479,rhs,"('Attr', 'orig', 'value')","('Attr',)",orig,rhs=orig.value
.\mnt\data\kakerlake_ultra_cleaner_v2.py,217,rhs,"('Attr', 'orig', 'value')","('Attr',)",orig,rhs = orig.value
.\mnt\data\kakerlake_ultra_cleaner_v2.py,361,rhs,"('Attr', 'orig', 'value')","('Attr',)",orig,rhs=orig.value
.\tools\kakerlake_ultra_cleaner.py,480,rhs,"('Attr', 'orig', 'value')","('Attr',)",orig,rhs=orig.value
.\notwendig oder nicht\python_function_recipes.py,163,rhs,"('Subscript', ('Name', 'crit'), ('Other', 'Slice'))","('Subscript',)","crit,len,op",rhs = crit[len(op):]
.\notwendig oder nicht\python_function_recipes.py,188,rhs,"('Subscript', ('Name', 'crit'), ('Other', 'Slice'))","('Subscript',)","crit,len,op",rhs = crit[len(op):]
.\analysis.py,8822,roi_20_years,"('Mult', (('Const', '100'), ('Sub', ('Div', ('Mult', (('Const', '20'), ('Name', 'annual_savings'))), ('Name', 'investment')), ('Const', '1'))))","('Mult', (('Const',), ('Sub', ('Div', ('Mult', (('Const',), ('Name',))), ('Name',)), ('Const',))))","annual_savings,investment",roi_20_years = (annual_savings * 20 / investment - 1) * 100
.\analysis.py,2333,roi_20_years,"('Other', 'IfExp')","('Other', 'IfExp')","adjusted_benefit,total_investment_netto_val",roi_20_years = (
.\analysis.py,8353,roi_year_1,"('Mult', (('Const', '100'), ('Div', ('Name', 'annual_pv_benefit'), ('Name', 'initial_investment'))))","('Mult', (('Const',), ('Div', ('Name',), ('Name',))))","annual_pv_benefit,initial_investment",roi_year_1 = (annual_pv_benefit / initial_investment) * 100
.\analysis.py,8375,roi_year_1,"('Name', 'net_annual_benefit')","('Name',)",net_annual_benefit,roi_year_1 = (
.\analysis.py,8362,roi_year_1,"('Other', 'IfExp')","('Other', 'IfExp')","initial_investment,max,net_annual_benefit",roi_year_1 = (
.\pdf_template_engine\placeholders.py,2303,roof_type,"('BoolOp', 'Or', (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'roof_structure'""),), ()), ('Call', ('Attr', 'project_data', 'get'), (('Const', ""'roof_type'""),), ()), ('Call', ('Attr', 'project_details', 'get'), (('Const', ""'roof_structure'""),), ()), ('Call', ('Attr', 'project_details', 'get'), (('Const', ""'roof_type'""),), ())))","('BoolOp', 'Or', 4)","project_data,project_details",roof_type = (
.\crm.py,537,roof_type,"('Call', ('Attr', 'col_roof_type', 'selectbox'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'roof_type_label'""), ('Const', ""'Dachart'"")), ()),), (('index', ('Call', ('Attr', ""['Satteldach', 'Flachdach', 'Sonstiges', '']"", 'index'), (('Call', ('Attr', 'project_data_form', 'get'), (('Const', ""'roof_type'""), ('Const', ""''"")), ()),), ())), ('options', ('List', (('Const', ""'Satteldach'""), ('Const', ""'Flachdach'""), ('Const', ""'Sonstiges'""), ('Const', ""''""))))))","('Call', 1, 2)","col_roof_type,get_text_crm,project_data_form,texts","roof_type = col_roof_type.selectbox(get_text_crm(texts, ""roof_type_label"", ""Dachart""), options=['Satteldach', 'Flachdach', 'Sonstiges', ''], index=['Satteldach', 'Flachdach', 'Sonstiges', ''].index(project_data_form.get('roof_type', '')))"
.\pdf_atomizer.py,294,root,"('BoolOp', 'Or', (('Call', ('Attr', 'pdf.trailer', 'get'), (('Const', ""'/Root'""),), ()), ('Call', ('Name', 'getattr'), (('Name', 'pdf'), ('Const', ""'Root'""), ('Const', 'None')), ())))","('BoolOp', 'Or', 2)","getattr,pdf","root = getattr(pdf, ""Root"", None) or pdf.trailer.get(""/Root"")"
.\notwendig oder nicht\wichtig\repo_to_json.py,259,root,"('Call', ('Attr', 'Path(args.root)', 'resolve'), (), ())","('Call', 0, 0)","Path,args",root = Path(args.root).resolve()
.\tools\repo_to_json.py,259,root,"('Call', ('Attr', 'Path(args.root)', 'resolve'), (), ())","('Call', 0, 0)","Path,args",root = Path(args.root).resolve()
.\notwendig oder nicht\wichtig\repo_porter.py,154,root,"('Call', ('Attr', 'root', 'resolve'), (), ())","('Call', 0, 0)",root,root = root.resolve()
.\tools\repo_porter.py,154,root,"('Call', ('Attr', 'root', 'resolve'), (), ())","('Call', 0, 0)",root,root = root.resolve()
.\tests\test_main_pdf.py,7,root,"('Subscript', ('Attr', 'Path(__file__).resolve()', 'parents'), ('Const', '1'))","('Subscript',)","Path,__file__",root = Path(__file__).resolve().parents[1]
.\tools\schema_extractor.py,96,root,"('Subscript', ('Attr', 'Path(__file__).resolve()', 'parents'), ('Const', '1'))","('Subscript',)","Path,__file__",root = Path(__file__).resolve().parents[1]
.\tools\test_main_pdf.py,7,root,"('Subscript', ('Attr', 'Path(__file__).resolve()', 'parents'), ('Const', '1'))","('Subscript',)","Path,__file__",root = Path(__file__).resolve().parents[1]
.\multi_offer_generator.py,794,rotation_step,"('Call', ('Attr', 'base_settings', 'get'), (('Const', ""'product_rotation_step'""), ('Const', '1')), ())","('Call', 2, 0)",base_settings,"rotation_step = base_settings.get(""product_rotation_step"", 1)"
.\multi_offer_generator.py,789,rotation_step,"('Call', ('Attr', 'base_settings', 'get'), (('Other', 'JoinedStr'), ('Const', '1')), ())","('Call', 2, 0)","base_settings,category","rotation_step = base_settings.get(f""{category}_rotation_step"", 1)"
.\multi_offer_generator.py,792,rotation_step,"('Call', ('Attr', 'random', 'randint'), (('Const', '1'), ('Sub', ('Call', ('Name', 'len'), (('Name', 'available_products'),), ()), ('Const', '1'))), ())","('Call', 2, 0)","available_products,len,random","rotation_step = random.randint(1, len(available_products) - 1)"
.\database.py,140,row,"('Call', ('Attr', 'cur', 'fetchone'), (), ())","('Call', 0, 0)",cur,row = cur.fetchone()
.\database.py,159,row,"('Call', ('Attr', 'cur', 'fetchone'), (), ())","('Call', 0, 0)",cur,row = cur.fetchone()
.\database.py,386,row,"('Call', ('Attr', 'cur', 'fetchone'), (), ())","('Call', 0, 0)",cur,row = cur.fetchone()
.\multi_offer_generator.py,668,row,"('Call', ('Attr', 'cur', 'fetchone'), (), ())","('Call', 0, 0)",cur,row = cur.fetchone()
.\pdf_ui.py,1224,row,"('Call', ('Attr', 'cur', 'fetchone'), (), ())","('Call', 0, 0)",cur,row = cur.fetchone()
.\product_attributes.py,54,row,"('Call', ('Attr', 'cur', 'fetchone'), (), ())","('Call', 0, 0)",cur,row = cur.fetchone()
.\product_attributes.py,95,row,"('Call', ('Attr', 'cur', 'fetchone'), (), ())","('Call', 0, 0)",cur,row = cur.fetchone()
.\check_db.py,20,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\crm.py,189,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\crm.py,234,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\database.py,283,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\database.py,1101,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\database.py,1190,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone(); return dict(row) if row else None
.\database.py,1334,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone(); return dict(row) if row else None
.\database.py,1431,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\database.py,1616,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\database.py,1657,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\database.py,1741,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\database.py,1988,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,row = cursor.fetchone()
.\product_db.py,242,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,"cursor.execute(""SELECT * FROM products WHERE id=?"", (int(product_id),)); row = cursor.fetchone()"
.\product_db.py,253,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,"cursor.execute(""SELECT * FROM products WHERE model_name=? COLLATE NOCASE"", (model_name.strip(),)); row = cursor.fetchone()"
.\product_db.py,266,row,"('Call', ('Attr', 'cursor', 'fetchone'), (), ())","('Call', 0, 0)",cursor,"cursor.execute(""SELECT id FROM products WHERE model_name=? COLLATE NOCASE"", (model_name.strip(),)); row = cursor.fetchone()"
.\database.py,116,rows,"('Call', ('Attr', 'cur', 'fetchall'), (), ())","('Call', 0, 0)",cur,rows = cur.fetchall()
.\product_attributes.py,127,rows,"('Call', ('Attr', 'cur', 'fetchall'), (), ())","('Call', 0, 0)",cur,rows = cur.fetchall()
.\crm.py,202,rows,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,rows = cursor.fetchall()
.\crm.py,246,rows,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,rows = cursor.fetchall()
.\database.py,1730,rows,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,rows = cursor.fetchall()
.\database.py,1836,rows,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,rows = cursor.fetchall()
.\product_db.py,232,rows,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,"cursor.execute(query, params); rows = cursor.fetchall()"
.\product_db.py,283,rows,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,"cursor.execute(""SELECT DISTINCT category FROM products WHERE category IS NOT NULL AND category != '' ORDER BY category COLLATE NOCASE""); rows = cursor.fetchall()"
.\pdf_generator.py,2743,rows,"('Call', ('Attr', 'item', 'get'), (('Const', ""'rows'""), ('List', ())), ())","('Call', 2, 0)",item,"rows = item.get('rows', [])"
.\excel_eval.py,208,rows,"('Call', ('Name', '_evaluate_many'), (('Name', 'path'), ('Name', 'refs')), (('engine', ('Name', 'engine')),))","('Call', 2, 1)","_evaluate_many,engine,path,refs","rows = _evaluate_many(path, refs, engine=engine)"
.\excel_eval.py,225,rows,"('Call', ('Name', '_evaluate_many'), (('Name', 'path'), ('Name', 'refs')), (('engine', ('Name', 'engine')),))","('Call', 2, 1)","_evaluate_many,engine,path,refs","rows = _evaluate_many(path, refs, engine=engine)"
.\dev_tools\kakerlake_ultra_cleaner.py,160,rows,"('List', ())","('List', 0)",,rows=[]
.\dev_tools\kakerlake_ultra_cleaner.py,513,rows,"('List', ())","('List', 0)",,ensure_dir(out); rows=[]
.\dev_tools\kakerlake_ultra_cleaner.py,591,rows,"('List', ())","('List', 0)",,rows=[]
.\dev_tools\kakerlake_ultra_cleaner_v2.py,399,rows,"('List', ())","('List', 0)",,ensure_dir(out); rows=[]
.\excel_eval.py,166,rows,"('List', ())","('List', 0)",,rows: List[FormulaRow] = []
.\mnt\data\kakerlake_ultra_cleaner.py,160,rows,"('List', ())","('List', 0)",,rows=[]
.\mnt\data\kakerlake_ultra_cleaner.py,513,rows,"('List', ())","('List', 0)",,ensure_dir(out); rows=[]
.\mnt\data\kakerlake_ultra_cleaner.py,591,rows,"('List', ())","('List', 0)",,rows=[]
.\mnt\data\kakerlake_ultra_cleaner_v2.py,399,rows,"('List', ())","('List', 0)",,ensure_dir(out); rows=[]
.\notwendig oder nicht\wichtig\repo_porter_select.py,130,rows,"('List', ())","('List', 0)",,"rows: List[Dict[str,str]] = []"
.\tools\kakerlake_ultra_cleaner.py,161,rows,"('List', ())","('List', 0)",,rows=[]
.\tools\kakerlake_ultra_cleaner.py,514,rows,"('List', ())","('List', 0)",,ensure_dir(out); rows=[]
.\tools\kakerlake_ultra_cleaner.py,592,rows,"('List', ())","('List', 0)",,rows=[]
.\tools\repo_porter_select.py,130,rows,"('List', ())","('List', 0)",,"rows: List[Dict[str,str]] = []"
.\notwendig oder nicht\python_function_recipes.py,158,rv,"('Call', ('Attr', 'pd', 'Series'), (('Call', ('Name', 'list'), (('Name', 'range_vals'),), ()),), ())","('Call', 1, 0)","list,pd,range_vals",rv = pd.Series(list(range_vals))
.\notwendig oder nicht\python_function_recipes.py,72,rv,"('Call', ('Attr', 'pd', 'Series'), (('Call', ('Name', 'list'), (('Name', 'result_vector'),), ()),), ())","('Call', 1, 0)","list,pd,result_vector",rv = pd.Series(list(result_vector))
.\analysis.py,1860,s,"('Call', ('Attr', ""re.sub('[^0-9,\\\\.\\\\-]', '', s)"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)","re,s","s = re.sub(r""[^0-9,\.\-]"", """", s).replace("","", ""."")"
.\pdf_template_engine\placeholders.py,435,s,"('Call', ('Attr', ""re.sub('[^0-9,\\\\.\\\\-]', '', s)"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)","re,s","s = re.sub(r""[^0-9,\.\-]"", """", s).replace("","", ""."")"
.\pdf_template_engine\placeholders.py,921,s,"('Call', ('Attr', ""str(val).strip().replace('%', '').replace(',', '.')"", 'replace'), (('Const', ""' '""), ('Const', ""''"")), ())","('Call', 2, 0)","str,val","s = str(val).strip().replace('%', '').replace(',', '.').replace(' ', '')"
.\pdf_template_engine\dynamic_overlay.py,215,s,"('Call', ('Attr', ""str(value).strip().replace('%', '').replace(',', '.')"", 'replace'), (('Const', ""' '""), ('Const', ""''"")), ())","('Call', 2, 0)","str,value","s = str(value).strip().replace('%', '').replace(',', '.').replace(' ', '')"
.\tools\schema_extractor.py,58,s,"('Call', ('Attr', 'defn', 'upper'), (), ())","('Call', 0, 0)",defn,s = defn.upper()
.\notwendig oder nicht\wichtig\repo_porter_select.py,43,s,"('Call', ('Attr', 'line', 'strip'), (), ())","('Call', 0, 0)",line,s = line.strip()
.\tools\repo_porter_select.py,43,s,"('Call', ('Attr', 'line', 'strip'), (), ())","('Call', 0, 0)",line,s = line.strip()
.\notwendig oder nicht\wichtig\repo_porter.py,583,s,"('Call', ('Attr', 'ln', 'lstrip'), (), ())","('Call', 0, 0)",ln,s = ln.lstrip()
.\tools\repo_porter.py,583,s,"('Call', ('Attr', 'ln', 'lstrip'), (), ())","('Call', 0, 0)",ln,s = ln.lstrip()
.\notwendig oder nicht\python_function_recipes.py,77,s,"('Call', ('Attr', 'pd', 'Series'), (('Call', ('Name', 'list'), (('Name', 'lookup_array'),), ()),), ())","('Call', 1, 0)","list,lookup_array,pd",s = pd.Series(list(lookup_array))
.\notwendig oder nicht\python_function_recipes.py,14,s,"('Call', ('Attr', 'pd', 'Series'), (('Name', 'vals'),), (('dtype', ('Const', ""'float64'"")),))","('Call', 1, 1)","pd,vals","s = pd.Series(vals, dtype='float64')"
.\notwendig oder nicht\python_function_recipes.py,153,s,"('Call', ('Attr', 'pd', 'Series'), (('Name', 'vals'),), (('dtype', ('Const', ""'float64'"")),))","('Call', 1, 1)","pd,vals","s = pd.Series(vals, dtype='float64')"
.\pdf_template_engine\placeholders.py,466,s,"('Call', ('Attr', 're', 'sub'), (('Const', ""'[^0-9,\\\\.\\\\-]'""), ('Const', ""''""), ('Name', 's')), ())","('Call', 3, 0)","re,s","s = re.sub(r""[^0-9,\.\-]"", """", s)"
.\tools\import_module_attributes_generic.py,123,s,"('Call', ('Attr', 're', 'sub'), (('Const', ""'[^0-9,\\\\.\\\\-]'""), ('Const', ""''""), ('Name', 's')), ())","('Call', 3, 0)","re,s","s = re.sub(r""[^0-9,\.\-]"", """", s)"
.\pdf_template_engine\placeholders.py,468,s,"('Call', ('Attr', 's', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",s,"s = s.replace("","", ""."")"
.\tools\import_module_attributes_generic.py,124,s,"('Call', ('Attr', 's', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",s,"s = s.replace("","", ""."")"
.\tools\import_module_attributes_generic.py,119,s,"('Call', ('Attr', 's', 'strip'), (), ())","('Call', 0, 0)",s,s = s.strip()
.\analysis.py,1859,s,"('Call', ('Attr', 'str(val)', 'strip'), (), ())","('Call', 0, 0)","str,val",s = str(val).strip()
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,26,s,"('Call', ('Attr', 'str(val)', 'strip'), (), ())","('Call', 0, 0)","str,val",s = str(val).strip()
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,28,s,"('Call', ('Attr', 'str(val)', 'strip'), (), ())","('Call', 0, 0)","str,val",s = str(val).strip()
.\pdf_template_engine\dynamic_overlay.py,58,s,"('Call', ('Attr', 'str(val)', 'strip'), (), ())","('Call', 0, 0)","str,val",s = str(val).strip()
.\pdf_template_engine\placeholders.py,434,s,"('Call', ('Attr', 'str(val)', 'strip'), (), ())","('Call', 0, 0)","str,val",s = str(val).strip()
.\pdf_template_engine\placeholders.py,464,s,"('Call', ('Attr', 'str(val)', 'strip'), (), ())","('Call', 0, 0)","str,val",s = str(val).strip()
.\pdf_template_engine\placeholders.py,1695,s,"('Call', ('Attr', 'str(val)', 'strip'), (), ())","('Call', 0, 0)","str,val",s = str(val).strip()
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,26,s,"('Call', ('Attr', 'str(val)', 'strip'), (), ())","('Call', 0, 0)","str,val",s = str(val).strip()
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,28,s,"('Call', ('Attr', 'str(val)', 'strip'), (), ())","('Call', 0, 0)","str,val",s = str(val).strip()
.\tools\import_module_attributes_generic.py,475,s,"('Call', ('Name', '_process_record'), (('Name', 'flat'),), (('default_category', ('BoolOp', 'Or', (('Const', ""'Modul'""), ('Name', 'default_category')))),))","('Call', 1, 1)","_process_record,default_category,flat","s = _process_record(flat, default_category=(default_category or ""Modul""))"
.\tools\import_module_attributes_generic.py,377,s,"('Call', ('Name', '_process_record'), (('Name', 'rec'),), (('default_category', ('BoolOp', 'Or', (('Const', ""'Modul'""), ('Name', 'default_category')))),))","('Call', 1, 1)","_process_record,default_category,rec","s = _process_record(rec, default_category=(default_category or ""Modul""))"
.\tools\import_module_attributes_generic.py,416,s,"('Call', ('Name', '_process_record'), (('Name', 'rec'),), (('default_category', ('BoolOp', 'Or', (('Const', ""'Modul'""), ('Name', 'default_category')))),))","('Call', 1, 1)","_process_record,default_category,rec","s = _process_record(rec, default_category=(default_category or ""Modul""))"
.\tools\import_module_attributes_generic.py,501,s,"('Call', ('Name', '_process_record'), (('Name', 'rec'),), (('default_category', ('BoolOp', 'Or', (('Const', ""'Modul'""), ('Name', 'default_category')))),))","('Call', 1, 1)","_process_record,default_category,rec","s = _process_record(rec, default_category=(default_category or ""Modul""))"
.\dev_tools\kakerlake_ultra_cleaner.py,75,s,"('Call', ('Name', 'node_signature'), (('Attr', 'node', 'slice'),), ())","('Call', 1, 0)","node,node_signature",try: s=node_signature(node.slice)
.\mnt\data\kakerlake_ultra_cleaner.py,75,s,"('Call', ('Name', 'node_signature'), (('Attr', 'node', 'slice'),), ())","('Call', 1, 0)","node,node_signature",try: s=node_signature(node.slice)
.\tools\kakerlake_ultra_cleaner.py,76,s,"('Call', ('Name', 'node_signature'), (('Attr', 'node', 'slice'),), ())","('Call', 1, 0)","node,node_signature",try: s=node_signature(node.slice)
.\pdf_atomizer.py,346,s,"('Call', ('Name', 'str'), (('Name', 'k'),), ())","('Call', 1, 0)","k,str",s = str(k)
.\tools\import_module_attributes_generic.py,116,s,"('Call', ('Name', 'str'), (('Name', 'val'),), ())","('Call', 1, 0)","str,val",s = str(val)
.\notwendig oder nicht\wichtig\repo_porter.py,105,s,"('Sub', ('Call', ('Name', 'max'), (('Const', '1'), ('Name', 'start')), ()), ('Const', '1'))","('Sub', ('Call', 2, 0), ('Const',))","max,start","s = max(1, start) - 1"
.\tools\repo_porter.py,105,s,"('Sub', ('Call', ('Name', 'max'), (('Const', '1'), ('Name', 'start')), ()), ('Const', '1'))","('Sub', ('Call', 2, 0), ('Const',))","max,start","s = max(1, start) - 1"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,30,s,"('Subscript', ('Call', ('Attr', 's', 'split'), (('Const', ""';base64,'""), ('Const', '1')), ()), ('Const', '1'))","('Subscript',)",s,"s = s.split("";base64,"", 1)[1]"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,32,s,"('Subscript', ('Call', ('Attr', 's', 'split'), (('Const', ""';base64,'""), ('Const', '1')), ()), ('Const', '1'))","('Subscript',)",s,"s = s.split("";base64,"", 1)[1]"
.\pdf_template_engine\dynamic_overlay.py,62,s,"('Subscript', ('Call', ('Attr', 's', 'split'), (('Const', ""';base64,'""), ('Const', '1')), ()), ('Const', '1'))","('Subscript',)",s,"s = s.split("";base64,"", 1)[1]"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,30,s,"('Subscript', ('Call', ('Attr', 's', 'split'), (('Const', ""';base64,'""), ('Const', '1')), ()), ('Const', '1'))","('Subscript',)",s,"s = s.split("";base64,"", 1)[1]"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,32,s,"('Subscript', ('Call', ('Attr', 's', 'split'), (('Const', ""';base64,'""), ('Const', '1')), ()), ('Const', '1'))","('Subscript',)",s,"s = s.split("";base64,"", 1)[1]"
.\dev_tools\kakerlake_ultra_cleaner.py,76,s,"('Tuple', (('Const', ""'Slice'""), ('Const', ""'err'"")))","('Tuple', 2)",,"except Exception: s=('Slice','err')"
.\mnt\data\kakerlake_ultra_cleaner.py,76,s,"('Tuple', (('Const', ""'Slice'""), ('Const', ""'err'"")))","('Tuple', 2)",,"except Exception: s=('Slice','err')"
.\tools\kakerlake_ultra_cleaner.py,77,s,"('Tuple', (('Const', ""'Slice'""), ('Const', ""'err'"")))","('Tuple', 2)",,"except Exception: s=('Slice','err')"
.\multi_offer_generator_old.py,1244,safe_company_name,"('Call', ('Attr', ""''.join((c for c in company_name if c.isalnum() or c in (' ', '-', '_')))"", 'rstrip'), (), ())","('Call', 0, 0)","c,company_name","safe_company_name = """".join(c for c in company_name if c.isalnum() or c in (' ', '-', '_')).rstrip()"
.\multi_offer_generator.py,627,safe_company_name,"('Call', ('Attr', 'locals()', 'get'), (('Const', ""'company_name'""), ('Other', 'JoinedStr')), ())","('Call', 2, 0)","company_id,locals","safe_company_name = locals().get('company_name', f""Firma_{company_id}"")"
.\multi_offer_generator_old.py,1245,safe_customer_name,"('Call', ('Attr', ""''.join((c for c in customer_name if c.isalnum() or c in (' ', '-', '_')))"", 'rstrip'), (), ())","('Call', 0, 0)","c,customer_name","safe_customer_name = """".join(c for c in customer_name if c.isalnum() or c in (' ', '-', '_')).rstrip()"
.\multi_offer_generator_old.py,621,safe_customer_name,"('Call', ('Attr', ""''.join((c for c in customer_name if c.isalnum() or c in (' ', '_')))"", 'rstrip'), (), ())","('Call', 0, 0)","c,customer_name","safe_customer_name = """".join("
.\database.py,1451,safe_filename_base,"('Call', ('Attr', ""''"", 'join'), (('Other', 'GeneratorExp'),), ())","('Call', 1, 0)","c,original_filename,os","safe_filename_base = """".join(c if c.isalnum() else ""_"" for c in os.path.splitext(original_filename)[0])"
.\database.py,1514,safe_filename_base,"('Call', ('Attr', ""''"", 'join'), (('Other', 'GeneratorExp'),), ())","('Call', 1, 0)","c,original_filename,os","safe_filename_base = """".join(c if c.isalnum() else ""_"" for c in os.path.splitext(original_filename)[0])"
.\database.py,1517,safe_filename_base,"('Const', ""'image'"")","('Const',)",,"safe_filename_base = ""image"""
.\central_pdf_system.py,427,safe_inclusion_options,"('Call', ('Attr', ""kwargs.get('inclusion_options', {})"", 'copy'), (), ())","('Call', 0, 0)",kwargs,"safe_inclusion_options = kwargs.get('inclusion_options', {}).copy()"
.\central_pdf_system.py,288,safe_inclusion_options,"('Call', ('Attr', ""safe_kwargs.get('inclusion_options', {})"", 'copy'), (), ())","('Call', 0, 0)",safe_kwargs,"safe_inclusion_options = safe_kwargs.get('inclusion_options', {}).copy()"
.\database.py,74,safe_name,"('BoolOp', 'Or', (('Name', 'suggested_filename'), ('Other', 'JoinedStr')))","('BoolOp', 'Or', 2)","datetime,display_name,suggested_filename","safe_name = suggested_filename or f""{display_name or 'dokument'}_{datetime.now().strftime('%Y%m%d_%H%M%S')}.bin"""
.\admin_panel.py,562,safe_name,"('Call', ('Attr', ""''"", 'join'), (('Other', 'GeneratorExp'),), ())","('Call', 1, 0)","c,orig","safe_name = """".join(c if c.isalnum() or c in ('.','-','_') else '_' for c in orig)"
.\database.py,75,safe_name,"('Call', ('Attr', ""safe_name.replace('/', '_')"", 'replace'), (('Const', ""'\\\\'""), ('Const', ""'_'"")), ())","('Call', 2, 0)",safe_name,"safe_name = safe_name.replace(""/"", ""_"").replace(""\\"", ""_"")"
.\pdf_template_engine\placeholders.py,476,salutation,"('Call', ('Attr', ""as_str(customer.get('salutation') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,customer","salutation = as_str(customer.get(""salutation"") or """").strip()"
.\crm.py,326,salutation,"('Call', ('Attr', 'st', 'selectbox'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'salutation_label'""), ('Const', ""'Anrede'"")), ()),), (('index', ('Call', ('Attr', ""['Herr', 'Frau', 'Familie', 'Divers', '']"", 'index'), (('Call', ('Attr', 'customer_to_edit', 'get'), (('Const', ""'salutation'""), ('Const', ""''"")), ()),), ())), ('options', ('List', (('Const', ""'Herr'""), ('Const', ""'Frau'""), ('Const', ""'Familie'""), ('Const', ""'Divers'""), ('Const', ""''""))))))","('Call', 1, 2)","customer_to_edit,get_text_crm,st,texts","salutation = st.selectbox(get_text_crm(texts, ""salutation_label"", ""Anrede""), options=['Herr', 'Frau', 'Familie', 'Divers', ''], index=['Herr', 'Frau', 'Familie', 'Divers', ''].index(customer_to_edit.get('salutation', '')))"
.\pdf_generator.py,1407,salutation_key_base,"('Const', ""'salutation_female_polite'"")","('Const',)",,"elif sl_lower == ""frau"": salutation_key_base = ""salutation_female_polite"""
.\pdf_generator.py,1406,salutation_key_base,"('Const', ""'salutation_male_polite'"")","('Const',)",,"if sl_lower == ""herr"": salutation_key_base = ""salutation_male_polite"""
.\pdf_generator.py,1403,salutation_key_base,"('Const', ""'salutation_polite'"")","('Const',)",,"salutation_key_base = ""salutation_polite"""
.\admin_panel.py,633,samples,"('BoolOp', 'Or', (('Call', ('Attr', 'd', 'get'), (('Const', ""'samples'""),), ()), ('List', ())))","('BoolOp', 'Or', 2)",d,"samples = d.get(""samples"") or []"
.\tools\import_module_attributes_generic.py,352,samples,"('List', ())","('List', 0)",,"samples: List[Dict[str, Any]] = []"
.\admin_panel.py,1140,saved_id,"('Call', ('Name', 'pa_upsert_attribute'), (('Name', 'current_pid_attr'), ('Name', 'current_category_attr'), ('Call', ('Attr', 'a_key', 'strip'), (), ()), ('Other', 'IfExp'), ('Other', 'IfExp'), ('Call', ('Name', 'int'), (('Name', 'a_order'),), ())), ())","('Call', 6, 0)","a_key,a_order,a_unit,a_val,current_category_attr,current_pid_attr,int,isinstance,pa_upsert_attribute,str","saved_id = pa_upsert_attribute(current_pid_attr, current_category_attr, a_key.strip(), a_val.strip() if isinstance(a_val, str) else a_val, a_unit.strip() if isinstance(a_unit, str) else a_unit, int(a_order))"
.\crm.py,370,saved_id,"('Call', ('Name', 'save_customer'), (('Name', 'conn'), ('Name', 'new_customer_data')), ())","('Call', 2, 0)","conn,new_customer_data,save_customer","saved_id = save_customer(conn, new_customer_data)"
.\financial_tools.py,193,savings,"('Call', ('Name', 'min'), (('Call', ('Attr', 'costs', 'values'), (), ()),), ())","('Call', 1, 0)","costs,min",savings = min(costs.values())
.\calculations.py,4149,savings,"('Sub', ('Name', 'base_cost'), ('Name', 'total_cost'))","('Sub', ('Name',), ('Name',))","base_cost,total_cost",savings = base_cost - total_cost
.\heatpump_ui.py,1000,savings_20_years,"('Sub', ('Mult', (('Const', '20'), ('Name', 'annual_savings'))), ('Subscript', ('Name', 'economics_data'), ('Const', ""'total_investment'"")))","('Sub', ('Mult', (('Const',), ('Name',))), ('Subscript',))","annual_savings,economics_data",savings_20_years = annual_savings * 20 - economics_data['total_investment']
.\analysis.py,559,savings_20_years,"('Sub', ('Name', 'costs_without_pv_20_with_increase'), ('Name', 'costs_with_pv_20_with_increase'))","('Sub', ('Name',), ('Name',))","costs_with_pv_20_with_increase,costs_without_pv_20_with_increase",savings_20_years = costs_without_pv_20_with_increase - costs_with_pv_20_with_increase
.\pdf_template_engine\dynamic_overlay.py,808,scale,"('Call', ('Name', 'min'), (('Div', ('Name', 'max_w'), ('Name', 'iw')), ('Div', ('Name', 'max_h'), ('Name', 'ih'))), ())","('Call', 2, 0)","ih,iw,max_h,max_w,min","scale = min(max_w / iw, max_h / ih)"
.\pdf_template_engine\dynamic_overlay.py,930,scale,"('Const', '0.3')","('Const',)",,scale = 0.3  # 70% kleiner
.\pdf_template_engine\dynamic_overlay.py,957,scale,"('Const', '0.3')","('Const',)",,scale = 0.3
.\notwendig oder nicht\python_function_recipes.py,137,scale,"('Pow', ('Const', '10'), ('Call', ('Name', 'int'), (('Name', 'num_digits'),), ()))","('Pow', ('Const',), ('Call', 1, 0))","int,num_digits",scale = 10 ** int(num_digits)
.\notwendig oder nicht\python_function_recipes.py,142,scale,"('Pow', ('Const', '10'), ('Call', ('Name', 'int'), (('Name', 'num_digits'),), ()))","('Pow', ('Const',), ('Call', 1, 0))","int,num_digits",scale = 10 ** int(num_digits)
.\analysis.py,8261,scenario_names,"('List', (('Const', ""'Niedrig'""), ('Const', ""'Basis'""), ('Const', ""'Hoch'"")))","('List', 3)",,"scenario_names = [""Niedrig"", ""Basis"", ""Hoch""]"
.\analysis_utils.py,256,scenario_names,"('List', (('Const', ""'Pessimistisch'""), ('Const', ""'Konservativ'""), ('Const', ""'Realistisch'""), ('Const', ""'Optimistisch'""), ('Const', ""'Sehr Optimistisch'"")))","('List', 5)",,"scenario_names = [""Pessimistisch"", ""Konservativ"", ""Realistisch"","
.\analysis_utils.py,457,scenarios,"('Call', ('Name', 'create_scenario_variations'), (('Const', '25000'), ('List', (('USub', ('Const', '20')), ('USub', ('Const', '10')), ('Const', '0'), ('Const', '10'), ('Const', '20')))), ())","('Call', 2, 0)",create_scenario_variations,"scenarios = create_scenario_variations(25000, [-20, -10, 0, 10, 20])"
.\calculations.py,1827,scenarios,"('Dict', (('KV', ('Const', ""'Jahr'""), ('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '1'), ('Add', (('Const', '1'), ('Name', 'years')))), ()),), ())), ('KV', ('Const', ""'KfW-Kredit (1%)'""), ('List', ())), ('KV', ('Const', ""'Kombination'""), ('List', ())), ('KV', ('Const', ""'Ohne Förderung'""), ('List', ())), ('KV', ('Const', ""'Zuschuss 10%'""), ('List', ()))))","('Dict', 5)","list,range,years",scenarios = {
.\analysis.py,9140,scenarios,"('Dict', (('KV', ('Const', ""'Optimistisch'""), ('Dict', (('KV', ('Const', ""'beschreibung'""), ('Const', ""'Bessere Erträge, Kostensenkungen'"")), ('KV', ('Const', ""'faktor'""), ('Const', '1.3'))))), ('KV', ('Const', ""'Pessimistisch'""), ('Dict', (('KV', ('Const', ""'beschreibung'""), ('Const', ""'Geringere Erträge, höhere Kosten'"")), ('KV', ('Const', ""'faktor'""), ('Const', '0.7'))))), ('KV', ('Const', ""'Realistisch'""), ('Dict', (('KV', ('Const', ""'beschreibung'""), ('Const', ""'Aktuelle Berechnungsgrundlage'"")), ('KV', ('Const', ""'faktor'""), ('Const', '1.0')))))))","('Dict', 3)",,scenarios = {
.\analysis_utils.py,254,scenarios,"('Dict', ())","('Dict', 0)",,scenarios = {}
.\calculations.py,4006,scenarios,"('Dict', ())","('Dict', 0)",,scenarios = {}
.\analysis.py,2322,scenarios,"('List', (('Const', ""'Konservativ'""), ('Const', ""'Realistisch'""), ('Const', ""'Optimistisch'"")))","('List', 3)",,"scenarios = [""Konservativ"", ""Realistisch"", ""Optimistisch""]"
.\pdf_generator.py,2191,scenarios,"('List', (('Const', ""'conservative'""), ('Const', ""'balanced'""), ('Const', ""'aggressive'"")))","('List', 3)",,"scenarios = ['conservative', 'balanced', 'aggressive']"
.\analysis.py,3343,scenarios_df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Dict', (('KV', ('Const', ""'Amortisation (Jahre)'""), ('List', (('Subscript', ('Subscript', ('Name', 'fin_results'), ('Const', ""'pessimistic_scenario'"")), ('Const', ""'payback_years'"")), ('Subscript', ('Subscript', ('Name', 'fin_results'), ('Const', ""'realistic_scenario'"")), ('Const', ""'payback_years'"")), ('Subscript', ('Subscript', ('Name', 'fin_results'), ('Const', ""'optimistic_scenario'"")), ('Const', ""'payback_years'""))))), ('KV', ('Const', ""'NPV'""), ('List', (('Subscript', ('Subscript', ('Name', 'fin_results'), ('Const', ""'pessimistic_scenario'"")), ('Const', ""'npv'"")), ('Subscript', ('Subscript', ('Name', 'fin_results'), ('Const', ""'realistic_scenario'"")), ('Const', ""'npv'"")), ('Subscript', ('Subscript', ('Name', 'fin_results'), ('Const', ""'optimistic_scenario'"")), ('Const', ""'npv'""))))), ('KV', ('Const', ""'ROI (%)'""), ('List', (('Subscript', ('Subscript', ('Name', 'fin_results'), ('Const', ""'pessimistic_scenario'"")), ('Const', ""'roi_percent'"")), ('Subscript', ('Subscript', ('Name', 'fin_results'), ('Const', ""'realistic_scenario'"")), ('Const', ""'roi_percent'"")), ('Subscript', ('Subscript', ('Name', 'fin_results'), ('Const', ""'optimistic_scenario'"")), ('Const', ""'roi_percent'""))))), ('KV', ('Const', ""'Szenario'""), ('List', (('Const', ""'Pessimistisch'""), ('Const', ""'Realistisch'""), ('Const', ""'Optimistisch'"")))))),), ())","('Call', 1, 0)","fin_results,pd",scenarios_df = pd.DataFrame(
.\analysis.py,6169,scenarios_df,"('Call', ('Attr', 'pd', 'DataFrame'), (('Subscript', ('Name', 'subsidy_scenarios'), ('Const', ""'scenarios'"")),), ())","('Call', 1, 0)","pd,subsidy_scenarios","scenarios_df = pd.DataFrame(subsidy_scenarios[""scenarios""])"
.\analysis.py,1675,secondary_color,"('Call', ('Attr', 'specific_settings', 'get'), (('Const', ""'secondary_chart_color'""), ('Call', ('Name', '_safe_viz_get'), (('Name', 'viz_settings'), ('Const', ""'secondary_chart_color'"")), ())), ())","('Call', 2, 0)","_safe_viz_get,specific_settings,viz_settings",secondary_color = specific_settings.get(
.\admin_panel.py,1570,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Call', ('Name', 'get_text_local'), (('Const', ""'admin_pdf_secondary_color_label'""), ('Const', ""'PDF Sekundärfarbe'"")), ()),), (('key', ('Other', 'JoinedStr')), ('value', ('Call', ('Attr', 'current_design_settings', 'get'), (('Const', ""'secondary_color'""), ('Subscript', ('Name', 'PDF_DESIGN_SETTINGS_DEFAULT'), ('Const', ""'secondary_color'""))), ()))))","('Call', 1, 2)","PDF_DESIGN_SETTINGS_DEFAULT,WIDGET_KEY_SUFFIX,current_design_settings,get_text_local,st","secondary_color = st.color_picker(get_text_local(""admin_pdf_secondary_color_label"", ""PDF Sekundärfarbe""), value=current_design_settings.get('secondary_color', PDF_DESIGN_SETTINGS_DEFAULT['secondary_color']), key=f""pdf_secondary_color{WIDGET_KEY_SUFFIX}"")"
.\admin_panel.py,1477,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Call', ('Name', 'get_text_local'), (('Const', ""'admin_viz_secondary_color_label'""), ('Const', ""'Sekundäre Diagrammfarbe'"")), ()),), (('key', ('Other', 'JoinedStr')), ('value', ('Call', ('Attr', 'viz_settings', 'get'), (('Const', ""'secondary_chart_color'""), ('Call', ('Attr', 'default_viz_settings_fallback', 'get'), (('Const', ""'secondary_chart_color'""),), ())), ()))))","('Call', 1, 2)","WIDGET_KEY_SUFFIX,default_viz_settings_fallback,get_text_local,st,viz_settings","secondary_color = st.color_picker(get_text_local(""admin_viz_secondary_color_label"", ""Sekundäre Diagrammfarbe""), value=viz_settings.get(""secondary_chart_color"", default_viz_settings_fallback.get(""secondary_chart_color"")), key=f""viz_secondary_color_picker{WIDGET_KEY_SUFFIX}"")"
.\doc_output.py,1220,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""' Sekundärfarbe'""),), (('value', ('Const', ""'#764ba2'"")),))","('Call', 1, 1)",st,"secondary_color = st.color_picker("" Sekundärfarbe"", value=""#764ba2"")"
.\components\progress_demo.py,132,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Sekundärfarbe'""), ('Const', ""'#10b981'"")), ())","('Call', 2, 0)",st,"secondary_color = st.color_picker(""Sekundärfarbe"", ""#10b981"")"
.\doc_output.py,265,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Sekundärfarbe'""), ('Const', ""'#A23B72'"")), (('key', ('Const', ""'pdf_secondary_color'"")),))","('Call', 2, 1)",st,"secondary_color = st.color_picker(""Sekundärfarbe"", ""#A23B72"", key=""pdf_secondary_color"")"
.\components\progress_settings.py,56,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Sekundärfarbe'""),), (('help', ('Const', ""'Akzentfarbe für Farbverläufe'"")), ('value', ('Attr', 'current_config', 'color_secondary'))))","('Call', 1, 2)","current_config,st",secondary_color = st.color_picker(
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_settings.py.insert.py,58,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Sekundärfarbe'""),), (('help', ('Const', ""'Akzentfarbe für Farbverläufe'"")), ('value', ('Attr', 'current_config', 'color_secondary'))))","('Call', 1, 2)","current_config,st",secondary_color = st.color_picker(
.\notwendig oder nicht\wichtig\portings\patches\components\progress_settings.py.insert.py,59,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Sekundärfarbe'""),), (('help', ('Const', ""'Akzentfarbe für Farbverläufe'"")), ('value', ('Attr', 'current_config', 'color_secondary'))))","('Call', 1, 2)","current_config,st",secondary_color = st.color_picker(
.\tools\out_selected\patches\components\progress_settings.py.insert.py,58,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Sekundärfarbe'""),), (('help', ('Const', ""'Akzentfarbe für Farbverläufe'"")), ('value', ('Attr', 'current_config', 'color_secondary'))))","('Call', 1, 2)","current_config,st",secondary_color = st.color_picker(
.\tools\portings\patches\components\progress_settings.py.insert.py,59,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Sekundärfarbe'""),), (('help', ('Const', ""'Akzentfarbe für Farbverläufe'"")), ('value', ('Attr', 'current_config', 'color_secondary'))))","('Call', 1, 2)","current_config,st",secondary_color = st.color_picker(
.\central_pdf_system.py,1559,secondary_color,"('Call', ('Attr', 'st', 'color_picker'), (('Const', ""'Sekundärfarbe'""),), (('help', ('Const', ""'Hintergrundfarbe für Boxen und Tabellen'"")), ('value', ('Const', ""'#f6f6f6'""))))","('Call', 1, 2)",st,"secondary_color = st.color_picker(""Sekundärfarbe"", value=""#f6f6f6"", help=""Hintergrundfarbe für Boxen und Tabellen"")"
.\pdf_widgets.py,411,section,"('Call', ('Attr', 'manager.available_sections', 'get'), (('Name', 'section_key'), ('Dict', ())), ())","('Call', 2, 0)","manager,section_key","section = manager.available_sections.get(section_key, {})"
.\pdf_widgets.py,132,section,"('Call', ('Attr', 'self.available_sections', 'get'), (('Name', 'section_key'), ('Dict', ())), ())","('Call', 2, 0)","section_key,self","section = self.available_sections.get(section_key, {})"
.\pdf_widgets.py,150,section,"('Call', ('Attr', 'self.available_sections', 'get'), (('Name', 'section_key'), ('Dict', ())), ())","('Call', 2, 0)","section_key,self","section = self.available_sections.get(section_key, {})"
.\pdf_widgets.py,275,section_key,"('Name', 'base')","('Name',)",base,section_key = base
.\pdf_widgets.py,279,section_key,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","base,n","section_key = f""{base}-{n}"""
.\central_pdf_system.py,1454,section_name,"('Call', ('Attr', 'section_labels', 'get'), (('Name', 'section'), ('Name', 'section')), ())","('Call', 2, 0)","section,section_labels","section_name = section_labels.get(section, section)"
.\pdf_widgets.py,260,section_name,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Sektionsname'""),), (('key', ('Const', ""'new_section_name'"")), ('placeholder', ('Const', ""'z.B. Referenzen'""))))","('Call', 1, 2)",st,"section_name = st.text_input(""Sektionsname"", placeholder=""z.B. Referenzen"", key=""new_section_name"")"
.\pdf_helpers.py,205,section_titles,"('Call', ('Name', 'create_section_title_mapping'), (), ())","('Call', 0, 0)",create_section_title_mapping,section_titles = create_section_title_mapping()
.\notwendig oder nicht\wichtig\portings\patches\test_section_titles_logos.py.insert.py,60,section_titles,"('List', (('Tuple', (('Const', ""'module_section_title'""), ('Const', ""'SOLARMODULE'""))), ('Tuple', (('Const', ""'inverter_section_title'""), ('Const', ""'WECHSELRICHTER'""))), ('Tuple', (('Const', ""'storage_section_title'""), ('Const', ""'BATTERIESPEICHER'"")))))","('List', 3)",,section_titles = [
.\tests\test_section_titles_logos.py,62,section_titles,"('List', (('Tuple', (('Const', ""'module_section_title'""), ('Const', ""'SOLARMODULE'""))), ('Tuple', (('Const', ""'inverter_section_title'""), ('Const', ""'WECHSELRICHTER'""))), ('Tuple', (('Const', ""'storage_section_title'""), ('Const', ""'BATTERIESPEICHER'"")))))","('List', 3)",,section_titles = [
.\tools\portings\patches\test_section_titles_logos.py.insert.py,60,section_titles,"('List', (('Tuple', (('Const', ""'module_section_title'""), ('Const', ""'SOLARMODULE'""))), ('Tuple', (('Const', ""'inverter_section_title'""), ('Const', ""'WECHSELRICHTER'""))), ('Tuple', (('Const', ""'storage_section_title'""), ('Const', ""'BATTERIESPEICHER'"")))))","('List', 3)",,section_titles = [
.\pdf_generator.py,478,segment_order,"('BoolOp', 'Or', (('Call', ('Attr', 'inclusion_options or {}', 'get'), (('Const', ""'segment_order'""),), ()), ('List', ())))","('BoolOp', 'Or', 2)",inclusion_options,segment_order = (inclusion_options or {}).get('segment_order') or []
.\pdf_generator.py,380,segment_order,"('List', (('Const', ""'Photovoltaik'""), ('Const', ""'Wärmepumpe'"")))","('List', 2)",,"segment_order = ['Photovoltaik','Wärmepumpe']"
.\pdf_ui.py,308,segment_order,"('List', (('Const', ""'Photovoltaik'""), ('Const', ""'Wärmepumpe'"")))","('List', 2)",,"segment_order = ['Photovoltaik','Wärmepumpe']"
.\pdf_ui.py,313,segment_order,"('List', (('Const', ""'Photovoltaik'""), ('Const', ""'Wärmepumpe'"")))","('List', 2)",,"segment_order = ['Photovoltaik','Wärmepumpe']"
.\pdf_generator.py,384,segment_order,"('List', (('Const', ""'Photovoltaik'""),))","('List', 1)",,segment_order = ['Photovoltaik']
.\pdf_ui.py,310,segment_order,"('List', (('Const', ""'Wärmepumpe'""), ('Const', ""'Photovoltaik'"")))","('List', 2)",,"segment_order = ['Wärmepumpe','Photovoltaik']"
.\pdf_generator.py,382,segment_order,"('List', (('Const', ""'Wärmepumpe'""),))","('List', 1)",,segment_order = ['Wärmepumpe']
.\pdf_generator.py,370,segment_order,"('List', ())","('List', 0)",,segment_order = []
.\pdf_generator.py,374,segment_order,"('List', ())","('List', 0)",,segment_order = []
.\pdf_generator.py,372,segment_order,"('Other', 'IfExp')","('Other', 'IfExp')","dict,isinstance,project_data","segment_order = (project_data.get('pdf_segment_order') or []) if isinstance(project_data, dict) else []"
.\pdf_ui.py,306,segment_order,"('Other', 'IfExp')","('Other', 'IfExp')","hp_ts,pv_ts","segment_order = ['Photovoltaik','Wärmepumpe'] if pv_ts <= hp_ts else ['Wärmepumpe','Photovoltaik']"
.\analysis.py,4841,selected_chart_type,"('Call', ('Attr', 'st.session_state', 'get'), (('Other', 'JoinedStr'), ('Const', ""'area'"")), ())","('Call', 2, 0)","chart_key_prefix,st","selected_chart_type = st.session_state.get(f""{chart_key_prefix}_type"", ""area"")"
.\analysis.py,4572,selected_chart_type,"('Call', ('Attr', 'st.session_state', 'get'), (('Other', 'JoinedStr'), ('Const', ""'bar'"")), ())","('Call', 2, 0)","chart_key_prefix,st","selected_chart_type = st.session_state.get(f""{chart_key_prefix}_type"", ""bar"")"
.\analysis.py,4741,selected_chart_type,"('Call', ('Attr', 'st.session_state', 'get'), (('Other', 'JoinedStr'), ('Const', ""'line'"")), ())","('Call', 2, 0)","chart_key_prefix,st","selected_chart_type = st.session_state.get(f""{chart_key_prefix}_type"", ""line"")"
.\multi_offer_generator.py,579,selected_companies,"('Attr', 'st.session_state', 'multi_offer_selected_companies')","('Attr',)",st,selected_companies = st.session_state.multi_offer_selected_companies
.\multi_offer_generator_new.py,280,selected_companies,"('Attr', 'st.session_state', 'multi_offer_selected_companies')","('Attr',)",st,selected_companies = st.session_state.multi_offer_selected_companies
.\multi_offer_generator_old.py,1318,selected_companies,"('List', ())","('List', 0)",,selected_companies = []
.\multi_offer_generator_new.py,179,selected_company_names,"('Call', ('Attr', 'st', 'multiselect'), (('Const', ""'Wählen Sie eine oder mehrere Firmen aus:'""),), (('default', ('Other', 'ListComp')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'company_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","cid,company_options,list,name,st",selected_company_names = st.multiselect(
.\multi_offer_generator_old.py,134,selected_company_names,"('Call', ('Attr', 'st', 'multiselect'), (('Const', ""'Wählen Sie eine oder mehrere Firmen aus:'""),), (('default', ('Other', 'ListComp')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'company_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","cid,company_options,list,name,st",selected_company_names = st.multiselect(
.\multi_offer_generator_old.py,487,selected_company_names,"('Call', ('Attr', 'st', 'multiselect'), (('Const', ""'Wählen Sie eine oder mehrere Firmen aus:'""),), (('default', ('Other', 'ListComp')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'company_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","cid,company_options,list,name,st",selected_company_names = st.multiselect(
.\multi_offer_generator.py,187,selected_company_names,"('Call', ('Attr', 'st', 'multiselect'), (('Other', 'JoinedStr'),), (('default', ('Other', 'ListComp')), ('help', ('Other', 'JoinedStr')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'company_options', 'keys'), (), ()),), ()))))","('Call', 1, 3)","all_companies,cid,company_options,len,list,name,st",selected_company_names = st.multiselect(
.\multi_offer_generator.py,1061,selected_cover_letter,"('Const', 'None')","('Const',)",,selected_title_image = selected_offer_title = selected_cover_letter = None
.\multi_offer_generator.py,1056,selected_cover_letter,"('Other', 'IfExp')","('Other', 'IfExp')",cover_letter_templates,selected_cover_letter = cover_letter_templates[0] if cover_letter_templates else None
.\doc_output.py,1952,selected_cover_letter_name,"('Call', ('Attr', 'st', 'selectbox'), (('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_select_cover_letter'""), ('Const', ""'Anschreiben auswählen'"")), ()),), (('index', ('Name', 'idx_cover_letter')), ('key', ('Const', ""'pdf_cover_letter_select_v12_form'"")), ('options', ('Name', 'cover_letter_keys'))))","('Call', 1, 3)","cover_letter_keys,get_text_pdf_ui,idx_cover_letter,st,texts",selected_cover_letter_name = st.selectbox(
.\pdf_ui.py,985,selected_cover_letter_name,"('Call', ('Attr', 'st', 'selectbox'), (('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_select_cover_letter'""), ('Const', ""'Anschreiben auswählen'"")), ()),), (('index', ('Name', 'idx_cover_letter')), ('key', ('Const', ""'pdf_cover_letter_select_v13_form'"")), ('options', ('Name', 'cover_letter_keys'))))","('Call', 1, 3)","cover_letter_keys,get_text_pdf_ui,idx_cover_letter,st,texts","selected_cover_letter_name = st.selectbox(get_text_pdf_ui(texts, ""pdf_select_cover_letter"", ""Anschreiben auswählen""), options=cover_letter_keys, index=idx_cover_letter, key=""pdf_cover_letter_select_v13_form"")"
.\calculations.py,2902,selected_inverter_id,"('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_inverter_id'""),), ())","('Call', 1, 0)",project_details,"selected_inverter_id = project_details.get(""selected_inverter_id"")"
.\crm.py,577,selected_inverter_id,"('Call', ('Name', 'next'), (('Other', 'GeneratorExp'), ('Const', 'None')), ())","('Call', 2, 0)","inverter_products,next,p,selected_inverter_name","selected_inverter_id = next((p['id'] for p in inverter_products if p['model_name'] == selected_inverter_name), None)"
.\crm.py,576,selected_inverter_name,"('Call', ('Attr', 'st', 'selectbox'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'inverter_model_label'""), ('Const', ""'Wechselrichter Modell'"")), ()),), (('index', ('Call', ('Attr', 'inverter_options', 'index'), (('Call', ('Attr', 'project_data_form', 'get'), (('Const', ""'selected_inverter_name'""), ('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'please_select_option'""), ('Const', ""'--- Bitte wählen ---'"")), ())), ()),), ())), ('options', ('Name', 'inverter_options'))))","('Call', 1, 2)","get_text_crm,inverter_options,project_data_form,st,texts","selected_inverter_name = st.selectbox(get_text_crm(texts, ""inverter_model_label"", ""Wechselrichter Modell""), options=inverter_options, index=inverter_options.index(project_data_form.get('selected_inverter_name', get_text_crm(texts, ""please_select_option"", ""--- Bitte wählen ---""))))"
.\multi_offer_generator.py,448,selected_inverter_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""' Wechselrichter (Basis)'""),), (('help', ('Const', ""'Erste Firma erhält diesen Wechselrichter, weitere automatisch andere (falls Rotation aktiv)'"")), ('index', ('Name', 'default_inverter_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'inverter_options', 'keys'), (), ()),), ()))))","('Call', 1, 3)","default_inverter_index,inverter_options,list,st",selected_inverter_name = st.selectbox(
.\multi_offer_generator_new.py,245,selected_inverter_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Wechselrichter auswählen'""),), (('index', ('Name', 'default_inverter_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'inverter_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","default_inverter_index,inverter_options,list,st",selected_inverter_name = st.selectbox(
.\multi_offer_generator_old.py,184,selected_inverter_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Wechselrichter auswählen'""),), (('index', ('Name', 'default_inverter_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'inverter_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","default_inverter_index,inverter_options,list,st",selected_inverter_name = st.selectbox(
.\multi_offer_generator_old.py,537,selected_inverter_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Wechselrichter auswählen'""),), (('index', ('Name', 'default_inverter_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'inverter_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","default_inverter_index,inverter_options,list,st",selected_inverter_name = st.selectbox(
.\central_pdf_system.py,1996,selected_layout,"('Call', ('Attr', 'self', 'render_layout_selector'), (('Name', 'texts'),), ())","('Call', 1, 0)","self,texts",selected_layout = self.render_layout_selector(texts)
.\central_pdf_system.py,833,selected_layout,"('Call', ('Attr', 'st', 'radio'), (('Const', ""'PDF-Layout auswählen:'""),), (('format_func', ('Other', 'Lambda')), ('help', ('Const', '""Wählen Sie das gewünschte PDF-Layout. \'Automatisch\' wählt die beste verfügbare Option.""')), ('key', ('Const', ""'central_pdf_layout_selector_unique'"")), ('options', ('Name', 'layout_options'))))","('Call', 1, 4)","layout_descriptions,layout_options,st,x",selected_layout = st.radio(
.\pdf_styles.py,849,selected_layout,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Layout auswählen'""),), (('format_func', ('Other', 'Lambda')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'layouts', 'keys'), (), ()),), ()))))","('Call', 1, 2)","layouts,list,st,x",selected_layout = st.selectbox(
.\central_pdf_system.py,1872,selected_letter_text,"('Call', ('Attr', 'template', 'get'), (('Const', ""'content'""), ('Name', 'selected_letter_text')), ())","('Call', 2, 0)","selected_letter_text,template","selected_letter_text = template.get('content', selected_letter_text)"
.\central_pdf_system.py,1827,selected_letter_text,"('Const', ""'Sehr geehrte Damen und Herren,\\n\\nvielen Dank für Ihr Interesse.'"")","('Const',)",,"selected_letter_text = ""Sehr geehrte Damen und Herren,\n\nvielen Dank für Ihr Interesse."""
.\calculations.py,2476,selected_module_id,"('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_module_id'""),), ())","('Call', 1, 0)",project_details,"selected_module_id = project_details.get(""selected_module_id"")"
.\crm.py,569,selected_module_id,"('Call', ('Name', 'next'), (('Other', 'GeneratorExp'), ('Const', 'None')), ())","('Call', 2, 0)","module_products,next,p,selected_module_name","selected_module_id = next((p['id'] for p in module_products if p['model_name'] == selected_module_name), None)"
.\crm.py,568,selected_module_name,"('Call', ('Attr', 'col_inverter', 'selectbox'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'module_model_label'""), ('Const', ""'PV Modul Modell'"")), ()),), (('index', ('Call', ('Attr', 'module_options', 'index'), (('Call', ('Attr', 'project_data_form', 'get'), (('Const', ""'selected_module_name'""), ('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'please_select_option'""), ('Const', ""'--- Bitte wählen ---'"")), ())), ()),), ())), ('options', ('Name', 'module_options'))))","('Call', 1, 2)","col_inverter,get_text_crm,module_options,project_data_form,texts","selected_module_name = col_inverter.selectbox(get_text_crm(texts, ""module_model_label"", ""PV Modul Modell""), options=module_options, index=module_options.index(project_data_form.get('selected_module_name', get_text_crm(texts, ""please_select_option"", ""--- Bitte wählen ---""))))"
.\multi_offer_generator.py,427,selected_module_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""' Photovoltaik-Modul (Basis)'""),), (('help', ('Const', ""'Erste Firma erhält dieses Modul, weitere automatisch andere (falls Rotation aktiv)'"")), ('index', ('Name', 'default_module_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'module_options', 'keys'), (), ()),), ()))))","('Call', 1, 3)","default_module_index,list,module_options,st",selected_module_name = st.selectbox(
.\multi_offer_generator_new.py,226,selected_module_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Photovoltaik-Modul auswählen'""),), (('index', ('Name', 'default_module_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'module_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","default_module_index,list,module_options,st",selected_module_name = st.selectbox(
.\multi_offer_generator_old.py,167,selected_module_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Photovoltaik-Modul auswählen'""),), (('index', ('Name', 'default_module_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'module_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","default_module_index,list,module_options,st",selected_module_name = st.selectbox(
.\multi_offer_generator_old.py,520,selected_module_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Photovoltaik-Modul auswählen'""),), (('index', ('Name', 'default_module_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'module_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","default_module_index,list,module_options,st",selected_module_name = st.selectbox(
.\central_pdf_system.py,1856,selected_offer_text,"('Call', ('Attr', 'template', 'get'), (('Const', ""'content'""), ('Name', 'selected_offer_text')), ())","('Call', 2, 0)","selected_offer_text,template","selected_offer_text = template.get('content', selected_offer_text)"
.\central_pdf_system.py,1826,selected_offer_text,"('Const', ""'Ihr Angebot für eine moderne Photovoltaikanlage'"")","('Const',)",,"selected_offer_text = ""Ihr Angebot für eine moderne Photovoltaikanlage"""
.\multi_offer_generator.py,1061,selected_offer_title,"('Const', 'None')","('Const',)",,selected_title_image = selected_offer_title = selected_cover_letter = None
.\multi_offer_generator.py,1055,selected_offer_title,"('Other', 'IfExp')","('Other', 'IfExp')",offer_title_templates,selected_offer_title = offer_title_templates[0] if offer_title_templates else None
.\doc_output.py,1934,selected_offer_title_name,"('Call', ('Attr', 'st', 'selectbox'), (('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_select_offer_title'""), ('Const', ""'Überschrift/Titel auswählen'"")), ()),), (('index', ('Name', 'idx_offer_title')), ('key', ('Const', ""'pdf_offer_title_select_v12_form'"")), ('options', ('Name', 'offer_title_keys'))))","('Call', 1, 3)","get_text_pdf_ui,idx_offer_title,offer_title_keys,st,texts",selected_offer_title_name = st.selectbox(
.\pdf_ui.py,980,selected_offer_title_name,"('Call', ('Attr', 'st', 'selectbox'), (('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_select_offer_title'""), ('Const', ""'Überschrift/Titel auswählen'"")), ()),), (('index', ('Name', 'idx_offer_title')), ('key', ('Const', ""'pdf_offer_title_select_v13_form'"")), ('options', ('Name', 'offer_title_keys'))))","('Call', 1, 3)","get_text_pdf_ui,idx_offer_title,offer_title_keys,st,texts","selected_offer_title_name = st.selectbox(get_text_pdf_ui(texts, ""pdf_select_offer_title"", ""Überschrift/Titel auswählen""), options=offer_title_keys, index=idx_offer_title, key=""pdf_offer_title_select_v13_form"")"
.\admin_panel.py,824,selected_prod,"('Const', 'None')","('Const',)",,selected_prod = None
.\admin_panel.py,822,selected_prod,"('Other', 'IfExp')","('Other', 'IfExp')","callable,get_product_by_id_func,selected_pid",selected_prod = get_product_by_id_func(selected_pid) if callable(get_product_by_id_func) else None
.\multi_offer_generator.py,1067,selected_sections,"('Call', ('Attr', 'pdf_options', 'get'), (('Const', ""'selected_sections'""), ('List', (('Const', ""'ProjectOverview'""), ('Const', ""'TechnicalComponents'""), ('Const', ""'CostDetails'""), ('Const', ""'Economics'""), ('Const', ""'SimulationDetails'""), ('Const', ""'CO2Savings'""), ('Const', ""'Visualizations'""), ('Const', ""'FutureAspects'"")))), ())","('Call', 2, 0)",pdf_options,"selected_sections = pdf_options.get(""selected_sections"", ["
.\multi_offer_generator.py,559,selected_sections,"('Call', ('Attr', 'st', 'multiselect'), (('Const', ""'Sektionen auswählen'""),), (('default', ('Call', ('Attr', 'pdf_options', 'get'), (('Const', ""'selected_sections'""), ('Call', ('Name', 'list'), (('Call', ('Attr', 'available_sections', 'keys'), (), ()),), ())), ())), ('format_func', ('Other', 'Lambda')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'available_sections', 'keys'), (), ()),), ()))))","('Call', 1, 3)","available_sections,list,pdf_options,st,x",selected_sections = st.multiselect(
.\central_pdf_system.py,1402,selected_sections,"('List', ())","('List', 0)",,selected_sections = []
.\multi_offer_generator_old.py,1019,selected_sections,"('List', ())","('List', 0)",,selected_sections = []
.\crm.py,590,selected_storage_id,"('Call', ('Name', 'next'), (('Other', 'GeneratorExp'), ('Const', 'None')), ())","('Call', 2, 0)","next,p,selected_storage_name,storage_products","selected_storage_id = next((p['id'] for p in storage_products if p['model_name'] == selected_storage_name), None)"
.\crm.py,580,selected_storage_id,"('Const', 'None')","('Const',)",,selected_storage_id = None
.\calculations.py,2757,selected_storage_id,"('Other', 'IfExp')","('Other', 'IfExp')","include_storage,project_details",selected_storage_id = (
.\crm.py,589,selected_storage_name,"('Call', ('Attr', 'st', 'selectbox'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'storage_model_label'""), ('Const', ""'Speicher Modell'"")), ()),), (('index', ('Call', ('Attr', 'storage_options', 'index'), (('Call', ('Attr', 'project_data_form', 'get'), (('Const', ""'selected_storage_name'""), ('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'please_select_option'""), ('Const', ""'--- Bitte wählen ---'"")), ())), ()),), ())), ('options', ('Name', 'storage_options'))))","('Call', 1, 2)","get_text_crm,project_data_form,st,storage_options,texts","selected_storage_name = st.selectbox(get_text_crm(texts, ""storage_model_label"", ""Speicher Modell""), options=storage_options, index=storage_options.index(project_data_form.get('selected_storage_name', get_text_crm(texts, ""please_select_option"", ""--- Bitte wählen ---""))))"
.\multi_offer_generator.py,469,selected_storage_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""' Batteriespeicher (Basis)'""),), (('help', ('Const', ""'Erste Firma erhält diesen Speicher, weitere automatisch andere (falls Rotation aktiv)'"")), ('index', ('Name', 'default_storage_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'storage_options', 'keys'), (), ()),), ()))))","('Call', 1, 3)","default_storage_index,list,st,storage_options",selected_storage_name = st.selectbox(
.\multi_offer_generator_new.py,264,selected_storage_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Batteriespeicher auswählen'""),), (('index', ('Name', 'default_storage_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'storage_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","default_storage_index,list,st,storage_options",selected_storage_name = st.selectbox(
.\multi_offer_generator_old.py,203,selected_storage_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Speicher auswählen'""),), (('index', ('Name', 'default_storage_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'storage_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","default_storage_index,list,st,storage_options",selected_storage_name = st.selectbox(
.\multi_offer_generator_old.py,556,selected_storage_name,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Speicher auswählen'""),), (('index', ('Name', 'default_storage_index')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'storage_options', 'keys'), (), ()),), ()))))","('Call', 1, 2)","default_storage_index,list,st,storage_options",selected_storage_name = st.selectbox(
.\crm.py,592,selected_storage_storage_power_kw,"('Call', ('Attr', 'st', 'number_input'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'storage_capacity_manual_label'""), ('Const', ""'Gewünschte Gesamtkapazität (kWh)'"")), ()),), (('min_value', ('Const', '0.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'project_data_form', 'get'), (('Const', ""'selected_storage_storage_power_kw'""), ('Const', '0.0')), ()),), ()))))","('Call', 1, 2)","float,get_text_crm,project_data_form,st,texts","selected_storage_storage_power_kw = st.number_input(get_text_crm(texts, ""storage_capacity_manual_label"", ""Gewünschte Gesamtkapazität (kWh)""), min_value=0.0, value=float(project_data_form.get('selected_storage_storage_power_kw', 0.0)))"
.\crm.py,581,selected_storage_storage_power_kw,"('Const', '0.0')","('Const',)",,selected_storage_storage_power_kw = 0.0
.\central_pdf_system.py,1540,selected_theme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Design-Vorlage:'""),), (('help', ('Const', ""'Wählen Sie das Farbschema für die PDF'"")), ('index', ('Other', 'IfExp')), ('options', ('Name', 'theme_options'))))","('Call', 1, 3)","current_theme,st,theme_options",selected_theme = st.selectbox(
.\pdf_styles.py,875,selected_theme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Theme auswählen'""),), (('format_func', ('Other', 'Lambda')), ('index', ('Other', 'IfExp')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'all_themes', 'keys'), (), ()),), ()))))","('Call', 1, 3)","all_themes,list,st,x",selected_theme = st.selectbox(
.\options.py,43,selected_theme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Wählen Sie ein Design-Theme für Ihre PDF-Angebote:'""),), (('index', ('Name', 'current_index')), ('key', ('Const', ""'pdf_theme_selector'"")), ('options', ('Name', 'theme_names'))))","('Call', 1, 3)","current_index,st,theme_names",selected_theme = st.selectbox(
.\options.py,219,selected_theme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Wählen Sie eine Design Vorlage für Ihre PDF-Angebote:'""),), (('index', ('Name', 'current_index')), ('key', ('Const', ""'pdf_theme_selector'"")), ('options', ('Name', 'theme_names'))))","('Call', 1, 3)","current_index,st,theme_names",selected_theme = st.selectbox(
.\central_pdf_system.py,1840,selected_title_b64,"('Call', ('Attr', 'template', 'get'), (('Const', ""'data'""),), ())","('Call', 1, 0)",template,selected_title_b64 = template.get('data')
.\central_pdf_system.py,1825,selected_title_b64,"('Const', 'None')","('Const',)",,selected_title_b64 = None
.\multi_offer_generator.py,1061,selected_title_image,"('Const', 'None')","('Const',)",,selected_title_image = selected_offer_title = selected_cover_letter = None
.\multi_offer_generator.py,1054,selected_title_image,"('Other', 'IfExp')","('Other', 'IfExp')",title_image_templates,selected_title_image = title_image_templates[0] if title_image_templates else None
.\doc_output.py,1916,selected_title_image_name,"('Call', ('Attr', 'st', 'selectbox'), (('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_select_title_image'""), ('Const', ""'Titelbild auswählen'"")), ()),), (('index', ('Name', 'idx_title_img')), ('key', ('Const', ""'pdf_title_image_select_v12_form'"")), ('options', ('Name', 'title_image_keys'))))","('Call', 1, 3)","get_text_pdf_ui,idx_title_img,st,texts,title_image_keys",selected_title_image_name = st.selectbox(
.\pdf_ui.py,975,selected_title_image_name,"('Call', ('Attr', 'st', 'selectbox'), (('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'pdf_select_title_image'""), ('Const', ""'Titelbild auswählen'"")), ()),), (('index', ('Name', 'idx_title_img')), ('key', ('Const', ""'pdf_title_image_select_v13_form'"")), ('options', ('Name', 'title_image_keys'))))","('Call', 1, 3)","get_text_pdf_ui,idx_title_img,st,texts,title_image_keys","selected_title_image_name = st.selectbox(get_text_pdf_ui(texts, ""pdf_select_title_image"", ""Titelbild auswählen""), options=title_image_keys, index=idx_title_img, key=""pdf_title_image_select_v13_form"")"
.\components\progress_manager.py,326,self._placeholder,"('Call', ('Attr', 'st', 'empty'), (), ())","('Call', 0, 0)",st,self._placeholder = st.empty()
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,386,self._placeholder,"('Call', ('Attr', 'st', 'empty'), (), ())","('Call', 0, 0)",st,self._placeholder = st.empty()
.\tools\out_selected\patches\components\progress_manager.py.insert.py,386,self._placeholder,"('Call', ('Attr', 'st', 'empty'), (), ())","('Call', 0, 0)",st,self._placeholder = st.empty()
.\components\progress_manager.py,320,self._placeholder,"('Const', 'None')","('Const',)",,self._placeholder = None
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,380,self._placeholder,"('Const', 'None')","('Const',)",,self._placeholder = None
.\tools\out_selected\patches\components\progress_manager.py.insert.py,380,self._placeholder,"('Const', 'None')","('Const',)",,self._placeholder = None
.\excel_eval.py,100,self._wb,"('Call', ('Attr', 'self._app.books', 'open'), (('Call', ('Name', 'str'), (('Name', 'path'),), ()),), (('read_only', ('Const', 'True')), ('update_links', ('Const', 'False'))))","('Call', 1, 2)","path,self,str","self._wb = self._app.books.open(str(path), read_only=True, update_links=False)"
.\excel_eval.py,102,self._wb,"('Call', ('Attr', 'self._app.books', 'open'), (('Call', ('Name', 'str'), (('Name', 'path'),), ()),), (('update_links', ('Const', 'False')),))","('Call', 1, 1)","path,self,str","self._wb = self._app.books.open(str(path), update_links=False)"
.\ai_companion.py,17,self.api_key,"('Const', 'None')","('Const',)",,self.api_key = None
.\ai_companion.py,35,self.api_key,"('Name', 'api_key')","('Name',)",api_key,self.api_key = api_key
.\dev_tools\kakerlake_ultra_cleaner.py,336,self.changed,"('Const', 'False')","('Const',)",,def __init__(self): self.changed=False
.\dev_tools\kakerlake_ultra_cleaner.py,462,self.changed,"('Const', 'False')","('Const',)",,def __init__(self): self.changed=False
.\dev_tools\kakerlake_ultra_cleaner_v2.py,203,self.changed,"('Const', 'False')","('Const',)",,def __init__(self): self.changed=False
.\dev_tools\kakerlake_ultra_cleaner_v2.py,344,self.changed,"('Const', 'False')","('Const',)",,def __init__(self): self.changed=False
.\dev_tools\kakerlake_ultra_cleaner_v3.py,217,self.changed,"('Const', 'False')","('Const',)",,def __init__(self): self.changed=False
.\dev_tools\kakerlake_ultra_cleaner_v3.py,360,self.changed,"('Const', 'False')","('Const',)",,def __init__(self): self.changed=False
.\mnt\data\kakerlake_ultra_cleaner.py,336,self.changed,"('Const', 'False')","('Const',)",,def __init__(self): self.changed=False
.\mnt\data\kakerlake_ultra_cleaner.py,462,self.changed,"('Const', 'False')","('Const',)",,def __init__(self): self.changed=False
.\mnt\data\kakerlake_ultra_cleaner_v2.py,203,self.changed,"('Const', 'False')","('Const',)",,def __init__(self): self.changed=False
.\mnt\data\kakerlake_ultra_cleaner_v2.py,344,self.changed,"('Const', 'False')","('Const',)",,def __init__(self): self.changed=False
.\tools\kakerlake_ultra_cleaner.py,337,self.changed,"('Const', 'False')","('Const',)",,def __init__(self): self.changed=False
.\tools\kakerlake_ultra_cleaner.py,463,self.changed,"('Const', 'False')","('Const',)",,def __init__(self): self.changed=False
.\dev_tools\kakerlake_ultra_cleaner.py,359,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig_code, after=new_call.code, reason=""results_get_to_compute""))"
.\dev_tools\kakerlake_ultra_cleaner.py,369,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig_code, after=new_call.code, reason=""dict_index_to_compute""))"
.\dev_tools\kakerlake_ultra_cleaner.py,388,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig_code, after=new_call.code, reason=""feedin_plus_consumption""))"
.\dev_tools\kakerlake_ultra_cleaner.py,402,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig_code, after=new_call.code, reason=""old_minus_hp""))"
.\dev_tools\kakerlake_ultra_cleaner.py,418,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig.value.code, after=new_call.code, reason=""without_with_difference""))"
.\dev_tools\kakerlake_ultra_cleaner.py,425,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig.value.code, after=new_call.code, reason=""diff_plus_feedin""))"
.\dev_tools\kakerlake_ultra_cleaner.py,430,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig.value.code, after=new_call.code, reason=""feedin_plus_diff""))"
.\dev_tools\kakerlake_ultra_cleaner.py,474,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=call.code, after=repl.code.strip(), reason=""project_data.update""))"
.\dev_tools\kakerlake_ultra_cleaner.py,481,self.changed,"('Const', 'True')","('Const',)",,"new=cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\dev_tools\kakerlake_ultra_cleaner.py,485,self.changed,"('Const', 'True')","('Const',)",,"new=cst.parse_expression(f""build_project_data({rhs.left.code}, {rhs.right.code})""); self.changed=True"
.\dev_tools\kakerlake_ultra_cleaner.py,490,self.changed,"('Const', 'True')","('Const',)",,"new=cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,228,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), orig_code, new_call.code, ""results_get_to_compute"")"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,238,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), orig_code, new_call.code, ""dict_index_to_compute"")"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,258,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), orig_code, new_call.code, ""feedin_plus_consumption"")"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,271,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), orig_code, new_call.code, ""old_minus_hp"")"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,287,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), orig_code, new_call.code, ""without_with_difference"")"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,294,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), orig_code, new_call.code, ""diff_plus_feedin"")"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,299,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), orig_code, new_call.code, ""feedin_plus_diff"")"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,356,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), call.code, repl.code.strip(), ""project_data.update"")"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,363,self.changed,"('Const', 'True')","('Const',)",,"new = cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,367,self.changed,"('Const', 'True')","('Const',)",,"new = cst.parse_expression(f""build_project_data({rhs.left.code}, {rhs.right.code})""); self.changed=True"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,372,self.changed,"('Const', 'True')","('Const',)",,"new = cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,241,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), rhs_code, code_for(new_call), ""results_get_to_compute"")"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,252,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), rhs_code, code_for(new_call), ""dict_index_to_compute"")"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,274,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), rhs_code, code_for(new_call), ""feedin_plus_consumption"")"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,288,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), rhs_code, code_for(new_call), ""old_minus_hp"")"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,305,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), rhs_code, code_for(new_call), ""without_with_difference"")"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,312,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), rhs_code, code_for(new_call), ""diff_plus_feedin"")"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,317,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), rhs_code, code_for(new_call), ""feedin_plus_diff"")"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,372,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), code_for(call), repl.code.strip(), ""project_data.update"")"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,379,self.changed,"('Const', 'True')","('Const',)",,"new = cst.parse_expression(f""build_project_data({code_for(rhs)})""); self.changed=True"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,383,self.changed,"('Const', 'True')","('Const',)",,"new = cst.parse_expression(f""build_project_data({code_for(rhs.left)}, {code_for(rhs.right)})""); self.changed=True"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,387,self.changed,"('Const', 'True')","('Const',)",,"new = cst.parse_expression(f""build_project_data({code_for(rhs)})""); self.changed=True"
.\mnt\data\kakerlake_ultra_cleaner.py,359,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig_code, after=new_call.code, reason=""results_get_to_compute""))"
.\mnt\data\kakerlake_ultra_cleaner.py,369,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig_code, after=new_call.code, reason=""dict_index_to_compute""))"
.\mnt\data\kakerlake_ultra_cleaner.py,388,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig_code, after=new_call.code, reason=""feedin_plus_consumption""))"
.\mnt\data\kakerlake_ultra_cleaner.py,402,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig_code, after=new_call.code, reason=""old_minus_hp""))"
.\mnt\data\kakerlake_ultra_cleaner.py,418,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig.value.code, after=new_call.code, reason=""without_with_difference""))"
.\mnt\data\kakerlake_ultra_cleaner.py,425,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig.value.code, after=new_call.code, reason=""diff_plus_feedin""))"
.\mnt\data\kakerlake_ultra_cleaner.py,430,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig.value.code, after=new_call.code, reason=""feedin_plus_diff""))"
.\mnt\data\kakerlake_ultra_cleaner.py,474,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=call.code, after=repl.code.strip(), reason=""project_data.update""))"
.\mnt\data\kakerlake_ultra_cleaner.py,481,self.changed,"('Const', 'True')","('Const',)",,"new=cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\mnt\data\kakerlake_ultra_cleaner.py,485,self.changed,"('Const', 'True')","('Const',)",,"new=cst.parse_expression(f""build_project_data({rhs.left.code}, {rhs.right.code})""); self.changed=True"
.\mnt\data\kakerlake_ultra_cleaner.py,490,self.changed,"('Const', 'True')","('Const',)",,"new=cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,228,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), orig_code, new_call.code, ""results_get_to_compute"")"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,238,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), orig_code, new_call.code, ""dict_index_to_compute"")"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,258,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), orig_code, new_call.code, ""feedin_plus_consumption"")"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,271,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), orig_code, new_call.code, ""old_minus_hp"")"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,287,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), orig_code, new_call.code, ""without_with_difference"")"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,294,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), orig_code, new_call.code, ""diff_plus_feedin"")"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,299,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), orig_code, new_call.code, ""feedin_plus_diff"")"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,356,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; log(path, getattr(orig,'ln','?'), call.code, repl.code.strip(), ""project_data.update"")"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,363,self.changed,"('Const', 'True')","('Const',)",,"new = cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,367,self.changed,"('Const', 'True')","('Const',)",,"new = cst.parse_expression(f""build_project_data({rhs.left.code}, {rhs.right.code})""); self.changed=True"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,372,self.changed,"('Const', 'True')","('Const',)",,"new = cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\tools\kakerlake_ultra_cleaner.py,360,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig_code, after=new_call.code, reason=""results_get_to_compute""))"
.\tools\kakerlake_ultra_cleaner.py,370,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig_code, after=new_call.code, reason=""dict_index_to_compute""))"
.\tools\kakerlake_ultra_cleaner.py,389,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig_code, after=new_call.code, reason=""feedin_plus_consumption""))"
.\tools\kakerlake_ultra_cleaner.py,403,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig_code, after=new_call.code, reason=""old_minus_hp""))"
.\tools\kakerlake_ultra_cleaner.py,419,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig.value.code, after=new_call.code, reason=""without_with_difference""))"
.\tools\kakerlake_ultra_cleaner.py,426,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig.value.code, after=new_call.code, reason=""diff_plus_feedin""))"
.\tools\kakerlake_ultra_cleaner.py,431,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=orig.value.code, after=new_call.code, reason=""feedin_plus_diff""))"
.\tools\kakerlake_ultra_cleaner.py,475,self.changed,"('Const', 'True')","('Const',)",,"self.changed=True; report.append(dict(file=path, lineno=str(getattr(orig,'ln','?')), before=call.code, after=repl.code.strip(), reason=""project_data.update""))"
.\tools\kakerlake_ultra_cleaner.py,482,self.changed,"('Const', 'True')","('Const',)",,"new=cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\tools\kakerlake_ultra_cleaner.py,486,self.changed,"('Const', 'True')","('Const',)",,"new=cst.parse_expression(f""build_project_data({rhs.left.code}, {rhs.right.code})""); self.changed=True"
.\tools\kakerlake_ultra_cleaner.py,491,self.changed,"('Const', 'True')","('Const',)",,"new=cst.parse_expression(f""build_project_data({rhs.code})""); self.changed=True"
.\components\progress_manager.py,38,self.config,"('Call', ('Name', 'ProgressConfig'), (), ())","('Call', 0, 0)",ProgressConfig,self.config = ProgressConfig()
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,95,self.config,"('Call', ('Name', 'ProgressConfig'), (), ())","('Call', 0, 0)",ProgressConfig,self.config = ProgressConfig()
.\tools\out_selected\patches\components\progress_manager.py.insert.py,95,self.config,"('Call', ('Name', 'ProgressConfig'), (), ())","('Call', 0, 0)",ProgressConfig,self.config = ProgressConfig()
.\components\progress_manager.py,317,self.config,"('Name', 'config')","('Name',)",config,self.config = config
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,377,self.config,"('Name', 'config')","('Name',)",config,self.config = config
.\tools\out_selected\patches\components\progress_manager.py.insert.py,377,self.config,"('Name', 'config')","('Name',)",config,self.config = config
.\central_pdf_system.py,686,self.current_layout,"('Const', 'None')","('Const',)",,self.current_layout = None
.\central_pdf_system.py,841,self.current_layout,"('Name', 'selected_layout')","('Name',)",selected_layout,self.current_layout = selected_layout
.\components\progress_manager.py,331,self.current_value,"('Call', ('Name', 'min'), (('Call', ('Name', 'max'), (('Const', '0'), ('Name', 'value')), ()), ('Attr', 'self', 'max_value')), ())","('Call', 2, 0)","max,min,self,value","self.current_value = min(max(0, value), self.max_value)"
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,391,self.current_value,"('Call', ('Name', 'min'), (('Call', ('Name', 'max'), (('Const', '0'), ('Name', 'value')), ()), ('Attr', 'self', 'max_value')), ())","('Call', 2, 0)","max,min,self,value","self.current_value = min(max(0, value), self.max_value)"
.\tools\out_selected\patches\components\progress_manager.py.insert.py,391,self.current_value,"('Call', ('Name', 'min'), (('Call', ('Name', 'max'), (('Const', '0'), ('Name', 'value')), ()), ('Attr', 'self', 'max_value')), ())","('Call', 2, 0)","max,min,self,value","self.current_value = min(max(0, value), self.max_value)"
.\components\progress_manager.py,318,self.current_value,"('Const', '0')","('Const',)",,self.current_value = 0
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,378,self.current_value,"('Const', '0')","('Const',)",,self.current_value = 0
.\tools\out_selected\patches\components\progress_manager.py.insert.py,378,self.current_value,"('Const', '0')","('Const',)",,self.current_value = 0
.\excel_eval.py,106,self.date1904,"('Call', ('Name', 'bool'), (('Attr', 'self._wb.api', 'Date1904'),), ())","('Call', 1, 0)","bool,self",self.date1904 = bool(self._wb.api.Date1904)
.\excel_eval.py,108,self.date1904,"('Const', 'False')","('Const',)",,self.date1904 = False
.\pdf_generator.py,1046,self.drawWidth,"('Attr', 'self', 'width_spec')","('Attr',)",self,self.drawWidth = self.width_spec
.\pdf_generator.py,1044,self.drawWidth,"('Mult', (('Div', ('Call', ('Name', 'float'), (('Subscript', ('Attr', 'self', 'width_spec'), ('Other', 'Slice')),), ()), ('Const', '100.0')), ('Name', 'availWidth')))","('Mult', (('Div', ('Call', 1, 0), ('Const',)), ('Name',)))","availWidth,float,self",self.drawWidth = availWidth * (float(self.width_spec[:-1]) / 100.0)
.\pdf_generator.py,1042,self.drawWidth,"('Name', 'availWidth')","('Name',)",availWidth,self.drawWidth = availWidth # Nutze die verfügbare Breite
.\dev_tools\kakerlake_ultra_cleaner.py,280,self.found,"('Const', 'False')","('Const',)",,def __init__(self): self.found=False
.\dev_tools\kakerlake_ultra_cleaner.py,296,self.found,"('Const', 'False')","('Const',)",,def __init__(self): self.found=False
.\dev_tools\kakerlake_ultra_cleaner_v2.py,52,self.found,"('Const', 'False')","('Const',)",,def __init__(self): self.found=False
.\dev_tools\kakerlake_ultra_cleaner_v2.py,68,self.found,"('Const', 'False')","('Const',)",,def __init__(self): self.found=False
.\dev_tools\kakerlake_ultra_cleaner_v3.py,65,self.found,"('Const', 'False')","('Const',)",,def __init__(self): self.found=False
.\dev_tools\kakerlake_ultra_cleaner_v3.py,81,self.found,"('Const', 'False')","('Const',)",,def __init__(self): self.found=False
.\mnt\data\kakerlake_ultra_cleaner.py,280,self.found,"('Const', 'False')","('Const',)",,def __init__(self): self.found=False
.\mnt\data\kakerlake_ultra_cleaner.py,296,self.found,"('Const', 'False')","('Const',)",,def __init__(self): self.found=False
.\mnt\data\kakerlake_ultra_cleaner_v2.py,52,self.found,"('Const', 'False')","('Const',)",,def __init__(self): self.found=False
.\mnt\data\kakerlake_ultra_cleaner_v2.py,68,self.found,"('Const', 'False')","('Const',)",,def __init__(self): self.found=False
.\tools\kakerlake_ultra_cleaner.py,281,self.found,"('Const', 'False')","('Const',)",,def __init__(self): self.found=False
.\tools\kakerlake_ultra_cleaner.py,297,self.found,"('Const', 'False')","('Const',)",,def __init__(self): self.found=False
.\dev_tools\kakerlake_ultra_cleaner.py,282,self.found,"('Const', 'True')","('Const',)",,if node.name.value == func_name: self.found=True
.\dev_tools\kakerlake_ultra_cleaner.py,301,self.found,"('Const', 'True')","('Const',)",,self.found=True
.\dev_tools\kakerlake_ultra_cleaner_v2.py,54,self.found,"('Const', 'True')","('Const',)",,if node.name.value == func_name: self.found=True
.\dev_tools\kakerlake_ultra_cleaner_v2.py,73,self.found,"('Const', 'True')","('Const',)",,self.found=True
.\dev_tools\kakerlake_ultra_cleaner_v3.py,67,self.found,"('Const', 'True')","('Const',)",,if node.name.value == func_name: self.found=True
.\dev_tools\kakerlake_ultra_cleaner_v3.py,86,self.found,"('Const', 'True')","('Const',)",,self.found=True
.\mnt\data\kakerlake_ultra_cleaner.py,282,self.found,"('Const', 'True')","('Const',)",,if node.name.value == func_name: self.found=True
.\mnt\data\kakerlake_ultra_cleaner.py,301,self.found,"('Const', 'True')","('Const',)",,self.found=True
.\mnt\data\kakerlake_ultra_cleaner_v2.py,54,self.found,"('Const', 'True')","('Const',)",,if node.name.value == func_name: self.found=True
.\mnt\data\kakerlake_ultra_cleaner_v2.py,73,self.found,"('Const', 'True')","('Const',)",,self.found=True
.\tools\kakerlake_ultra_cleaner.py,283,self.found,"('Const', 'True')","('Const',)",,if node.name.value == func_name: self.found=True
.\tools\kakerlake_ultra_cleaner.py,302,self.found,"('Const', 'True')","('Const',)",,self.found=True
.\components\progress_manager.py,319,self.max_value,"('Const', '100')","('Const',)",,self.max_value = 100
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,379,self.max_value,"('Const', '100')","('Const',)",,self.max_value = 100
.\tools\out_selected\patches\components\progress_manager.py.insert.py,379,self.max_value,"('Const', '100')","('Const',)",,self.max_value = 100
.\components\progress_manager.py,338,self.max_value,"('Name', 'max_value')","('Name',)",max_value,self.max_value = max_value
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,398,self.max_value,"('Name', 'max_value')","('Name',)",max_value,self.max_value = max_value
.\tools\out_selected\patches\components\progress_manager.py.insert.py,398,self.max_value,"('Name', 'max_value')","('Name',)",max_value,self.max_value = max_value
.\components\progress_manager.py,333,self.title,"('Name', 'text')","('Name',)",text,self.title = text
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,393,self.title,"('Name', 'text')","('Name',)",text,self.title = text
.\tools\out_selected\patches\components\progress_manager.py.insert.py,393,self.title,"('Name', 'text')","('Name',)",text,self.title = text
.\components\progress_manager.py,315,self.title,"('Name', 'title')","('Name',)",title,self.title = title
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,375,self.title,"('Name', 'title')","('Name',)",title,self.title = title
.\pdf_generator.py,1010,self.title,"('Name', 'title')","('Name',)",title,"def __init__(self, title): Flowable.__init__(self); self.title = title"
.\pdf_generator.py,1056,self.title,"('Name', 'title')","('Name',)",title,"def __init__(self, title): Flowable.__init__(self); self.title = title"
.\pdf_helpers.py,19,self.title,"('Name', 'title')","('Name',)",title,self.title = title
.\tools\out_selected\patches\components\progress_manager.py.insert.py,375,self.title,"('Name', 'title')","('Name',)",title,self.title = title
.\pdf_generator.py,1001,self.total_pages,"('Call', ('Name', 'len'), (('Attr', 'self', '_saved_page_states'),), ())","('Call', 1, 0)","len,self",self.total_pages = len(self._saved_page_states)
.\pdf_generator.py,994,self.total_pages,"('Const', '0')","('Const',)",,self.total_pages = 0
.\pdf_helpers.py,38,self.total_pages,"('Name', 'total_pages')","('Name',)",total_pages,self.total_pages = total_pages
.\calculations.py,3268,self_consumption_ratio,"('Const', '0.0')","('Const',)",,self_consumption_ratio = 0.0
.\calculations.py,3265,self_consumption_ratio,"('Div', ('Name', 'eigenverbrauch_pro_jahr_kwh'), ('Name', 'annual_pv_production_kwh'))","('Div', ('Name',), ('Name',))","annual_pv_production_kwh,eigenverbrauch_pro_jahr_kwh",self_consumption_ratio = eigenverbrauch_pro_jahr_kwh / annual_pv_production_kwh
.\analysis.py,7311,series_no_inc,"('BoolOp', 'Or', (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'page3_20y_series_no_inc'""),), ()), ('List', ())))","('BoolOp', 'Or', 2)",st,"series_no_inc = st.session_state.get(""page3_20y_series_no_inc"") or []"
.\analysis.py,602,series_no_inc,"('Call', ('Name', '_compute_annual_cost_series'), (('Name', 'base_annual_cost'), ('Name', 'years'), ('Const', '0.0')), ())","('Call', 3, 0)","_compute_annual_cost_series,base_annual_cost,years","series_no_inc = _compute_annual_cost_series(base_annual_cost, years, 0.0)"
.\analysis.py,7312,series_with_inc,"('BoolOp', 'Or', (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'page3_20y_series_with_inc'""),), ()), ('List', ())))","('BoolOp', 'Or', 2)",st,"series_with_inc = st.session_state.get(""page3_20y_series_with_inc"") or []"
.\analysis.py,603,series_with_inc,"('Call', ('Name', '_compute_annual_cost_series'), (('Name', 'base_annual_cost'), ('Name', 'years'), ('Name', 'inc_pct')), ())","('Call', 3, 0)","_compute_annual_cost_series,base_annual_cost,inc_pct,years","series_with_inc = _compute_annual_cost_series(base_annual_cost, years, inc_pct)"
.\multi_offer_generator.py,290,settings,"('Attr', 'st.session_state', 'multi_offer_settings')","('Attr',)",st,settings = st.session_state.multi_offer_settings
.\multi_offer_generator.py,580,settings,"('Attr', 'st.session_state', 'multi_offer_settings')","('Attr',)",st,settings = st.session_state.multi_offer_settings
.\multi_offer_generator_new.py,204,settings,"('Attr', 'st.session_state', 'multi_offer_settings')","('Attr',)",st,settings = st.session_state.multi_offer_settings
.\multi_offer_generator_new.py,281,settings,"('Attr', 'st.session_state', 'multi_offer_settings')","('Attr',)",st,settings = st.session_state.multi_offer_settings
.\multi_offer_generator_old.py,149,settings,"('Attr', 'st.session_state', 'multi_offer_settings')","('Attr',)",st,settings = st.session_state.multi_offer_settings
.\multi_offer_generator_old.py,216,settings,"('Attr', 'st.session_state', 'multi_offer_settings')","('Attr',)",st,settings = st.session_state.multi_offer_settings
.\multi_offer_generator_old.py,502,settings,"('Attr', 'st.session_state', 'multi_offer_settings')","('Attr',)",st,settings = st.session_state.multi_offer_settings
.\multi_offer_generator_old.py,569,settings,"('Attr', 'st.session_state', 'multi_offer_settings')","('Attr',)",st,settings = st.session_state.multi_offer_settings
.\analysis.py,980,settings,"('Call', ('Attr', 'VIZ_DEFAULTS', 'copy'), (), ())","('Call', 0, 0)",VIZ_DEFAULTS,settings = VIZ_DEFAULTS.copy()
.\database.py,327,settings,"('Dict', ())","('Dict', 0)",,settings = {}
.\analysis.py,5787,shading_matrix,"('Call', ('Attr', 'shading_analysis', 'get'), (('Const', ""'shading_matrix'""), ('Other', 'ListComp')), ())","('Call', 2, 0)","_,range,shading_analysis",shading_matrix = shading_analysis.get(
.\calculations.py,681,shading_matrix,"('List', ())","('List', 0)",,shading_matrix = []
.\calculations.py,1591,shading_matrix,"('List', ())","('List', 0)",,shading_matrix = []
.\doc_output.py,290,show_legend,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""' Legende anzeigen'""),), (('key', ('Const', ""'pdf_show_legend'"")), ('value', ('Const', 'True'))))","('Call', 1, 2)",st,"show_legend = st.checkbox("" Legende anzeigen"", value=True, key=""pdf_show_legend"")"
.\doc_output.py,1700,show_legend,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""' Legende anzeigen'""),), (('value', ('Const', 'True')),))","('Call', 1, 1)",st,"show_legend = st.checkbox("" Legende anzeigen"", value=True)"
.\components\progress_settings.py,80,show_percentage,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""'Prozentanzeige'""),), (('help', ('Const', ""'Zeigt den Fortschritt in Prozent an'"")), ('value', ('Attr', 'current_config', 'show_percentage'))))","('Call', 1, 2)","current_config,st",show_percentage = st.checkbox(
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_settings.py.insert.py,82,show_percentage,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""'Prozentanzeige'""),), (('help', ('Const', ""'Zeigt den Fortschritt in Prozent an'"")), ('value', ('Attr', 'current_config', 'show_percentage'))))","('Call', 1, 2)","current_config,st",show_percentage = st.checkbox(
.\notwendig oder nicht\wichtig\portings\patches\components\progress_settings.py.insert.py,83,show_percentage,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""'Prozentanzeige'""),), (('help', ('Const', ""'Zeigt den Fortschritt in Prozent an'"")), ('value', ('Attr', 'current_config', 'show_percentage'))))","('Call', 1, 2)","current_config,st",show_percentage = st.checkbox(
.\tools\out_selected\patches\components\progress_settings.py.insert.py,82,show_percentage,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""'Prozentanzeige'""),), (('help', ('Const', ""'Zeigt den Fortschritt in Prozent an'"")), ('value', ('Attr', 'current_config', 'show_percentage'))))","('Call', 1, 2)","current_config,st",show_percentage = st.checkbox(
.\tools\portings\patches\components\progress_settings.py.insert.py,83,show_percentage,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""'Prozentanzeige'""),), (('help', ('Const', ""'Zeigt den Fortschritt in Prozent an'"")), ('value', ('Attr', 'current_config', 'show_percentage'))))","('Call', 1, 2)","current_config,st",show_percentage = st.checkbox(
.\components\progress_manager.py,28,show_percentage,"('Const', 'True')","('Const',)",,show_percentage: bool = True
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,82,show_percentage,"('Const', 'True')","('Const',)",,show_percentage: bool = True
.\tools\out_selected\patches\components\progress_manager.py.insert.py,82,show_percentage,"('Const', 'True')","('Const',)",,show_percentage: bool = True
.\components\progress_settings.py,86,show_text,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""'Textanzeige'""),), (('help', ('Const', ""'Zeigt beschreibenden Text über dem Ladebalken'"")), ('value', ('Attr', 'current_config', 'show_text'))))","('Call', 1, 2)","current_config,st",show_text = st.checkbox(
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_settings.py.insert.py,88,show_text,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""'Textanzeige'""),), (('help', ('Const', ""'Zeigt beschreibenden Text über dem Ladebalken'"")), ('value', ('Attr', 'current_config', 'show_text'))))","('Call', 1, 2)","current_config,st",show_text = st.checkbox(
.\notwendig oder nicht\wichtig\portings\patches\components\progress_settings.py.insert.py,89,show_text,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""'Textanzeige'""),), (('help', ('Const', ""'Zeigt beschreibenden Text über dem Ladebalken'"")), ('value', ('Attr', 'current_config', 'show_text'))))","('Call', 1, 2)","current_config,st",show_text = st.checkbox(
.\tools\out_selected\patches\components\progress_settings.py.insert.py,88,show_text,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""'Textanzeige'""),), (('help', ('Const', ""'Zeigt beschreibenden Text über dem Ladebalken'"")), ('value', ('Attr', 'current_config', 'show_text'))))","('Call', 1, 2)","current_config,st",show_text = st.checkbox(
.\tools\portings\patches\components\progress_settings.py.insert.py,89,show_text,"('Call', ('Attr', 'st', 'checkbox'), (('Const', ""'Textanzeige'""),), (('help', ('Const', ""'Zeigt beschreibenden Text über dem Ladebalken'"")), ('value', ('Attr', 'current_config', 'show_text'))))","('Call', 1, 2)","current_config,st",show_text = st.checkbox(
.\components\progress_manager.py,29,show_text,"('Const', 'True')","('Const',)",,show_text: bool = True
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,83,show_text,"('Const', 'True')","('Const',)",,show_text: bool = True
.\tools\out_selected\patches\components\progress_manager.py.insert.py,83,show_text,"('Const', 'True')","('Const',)",,show_text: bool = True
.\pdf_atomizer.py,310,sigs,"('Call', ('Name', 'list'), (('Attr', 'pdf', 'pike_signatures'),), ())","('Call', 1, 0)","list,pdf",sigs = list(pdf.pike_signatures)
.\pdf_atomizer.py,308,sigs,"('Call', ('Name', 'list'), (('Attr', 'pdf', 'signatures'),), ())","('Call', 1, 0)","list,pdf",sigs = list(pdf.signatures)
.\pdf_atomizer.py,306,sigs,"('List', ())","('List', 0)",,sigs = []
.\pv_visuals.py,134,simulation_years,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'simulation_period_years_effective'""), ('Const', '0')), ())","('Call', 2, 0)",analysis_results,"simulation_years = analysis_results.get('simulation_period_years_effective', 0)"
.\pv_visuals.py,186,simulation_years,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'simulation_period_years_effective'""), ('Const', '0')), ())","('Call', 2, 0)",analysis_results,"simulation_years = analysis_results.get('simulation_period_years_effective', 0)"
.\analysis.py,503,simulation_years,"('Call', ('Attr', 'results', 'get'), (('Const', ""'simulation_period_years_effective'""), ('Const', '20')), ())","('Call', 2, 0)",results,"simulation_years = results.get('simulation_period_years_effective', 20)"
.\live_calculation_engine.py,22,simulation_years,"('Call', ('Attr', 'results', 'get'), (('Const', ""'simulation_period_years_effective'""), ('Const', '20')), ())","('Call', 2, 0)",results,"simulation_years = results.get('simulation_period_years_effective', 20)"
.\notwendig oder nicht\wichtig\repo_to_json.py,159,size,"('Attr', 'path.stat()', 'st_size')","('Attr',)",path,size = path.stat().st_size
.\tools\repo_to_json.py,159,size,"('Attr', 'path.stat()', 'st_size')","('Attr',)",path,size = path.stat().st_size
.\pdf_generator.py,2713,size,"('Call', ('Attr', 'item', 'get'), (('Const', ""'size'""), ('Const', ""'medium'"")), ())","('Call', 2, 0)",item,"size = item.get('size', 'medium')"
.\pdf_generator.py,594,size,"('Const', '36.0')","('Const',)",,size = 36.0
.\dev_tools\kakerlake_ultra_cleaner.py,517,size,"('Other', 'IfExp')","('Other', 'IfExp')","os,p",size=os.path.getsize(p) if os.path.exists(p) else None
.\dev_tools\kakerlake_ultra_cleaner_v2.py,403,size,"('Other', 'IfExp')","('Other', 'IfExp')","os,p",size=os.path.getsize(p) if os.path.exists(p) else None
.\mnt\data\kakerlake_ultra_cleaner.py,517,size,"('Other', 'IfExp')","('Other', 'IfExp')","os,p",size=os.path.getsize(p) if os.path.exists(p) else None
.\mnt\data\kakerlake_ultra_cleaner_v2.py,403,size,"('Other', 'IfExp')","('Other', 'IfExp')","os,p",size=os.path.getsize(p) if os.path.exists(p) else None
.\tools\kakerlake_ultra_cleaner.py,518,size,"('Other', 'IfExp')","('Other', 'IfExp')","os,p",size=os.path.getsize(p) if os.path.exists(p) else None
.\heatpump_ui.py,367,sizing_factor,"('Call', ('Attr', 'st', 'slider'), (('Const', ""'Dimensionierungsfaktor'""),), (('help', ('Const', ""'1.0 = monovalent, <1.0 = bivalent'"")), ('max_value', ('Const', '1.3')), ('min_value', ('Const', '0.8')), ('step', ('Const', '0.05')), ('value', ('Const', '1.0'))))","('Call', 1, 5)",st,sizing_factor = st.slider(
.\heatpump_ui.py,859,sizing_factor,"('Const', '1.0')","('Const',)",,sizing_factor = 1.0
.\calculations.py,1741,sizing_factor,"('Other', 'IfExp')","('Other', 'IfExp')","ac_power,dc_power",sizing_factor = (dc_power / ac_power * 100) if ac_power > 0 else 110
.\pdf_atomizer.py,126,slug,"('Subscript', ('Call', ('Attr', ""re.sub('[^a-z0-9]+', '_', item['text'].lower())"", 'strip'), (('Const', ""'_'""),), ()), ('Other', 'Slice'))","('Subscript',)","item,re","slug = re.sub(r""[^a-z0-9]+"", ""_"", item[""text""].lower()).strip(""_"")[:60]"
.\utils\export_coords.py,27,slug,"('Subscript', ('Call', ('Attr', ""re.sub('[^a-z0-9]+', '_', text.lower())"", 'strip'), (('Const', ""'_'""),), ()), ('Other', 'Slice'))","('Subscript',)","re,text","slug = re.sub(r""[^a-z0-9]+"", ""_"", text.lower()).strip(""_"")[:60]"
.\gui.py,747,solar_calculator_module,"('Call', ('Name', 'import_module_with_fallback'), (('Const', ""'solar_calculator'""), ('Name', 'import_errors')), ())","('Call', 2, 0)","import_errors,import_module_with_fallback","solar_calculator_module = import_module_with_fallback(""solar_calculator"", import_errors)"
.\gui.py,98,solar_calculator_module,"('Const', 'None')","('Const',)",,solar_calculator_module: Optional[Any] = None
.\admin_panel.py,1689,something_changed_and_saved,"('Const', 'False')","('Const',)",,something_changed_and_saved = False
.\admin_panel.py,1695,something_changed_and_saved,"('Const', 'True')","('Const',)",,"if reloaded_value == value_to_save: st.success(f""'{api_keys_to_manage[key_name]}' erfolgreich gespeichert...""); something_changed_and_saved = True"
.\crm_pipeline_ui.py,504,source_data,"('Call', ('Attr', 'analytics_data', 'get'), (('Const', ""'source_performance'""), ('Dict', ())), ())","('Call', 2, 0)",analytics_data,"source_data = analytics_data.get('source_performance', {})"
.\doc_output.py,200,source_data,"('Call', ('Attr', 'st.session_state', 'get'), (('Name', 'source'),), ())","('Call', 1, 0)","source,st",source_data = st.session_state.get(source)
.\analysis.py,323,special_costs_eur,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Sonderkosten (€)'""),), (('help', ('Const', ""'Besondere Zusatzkosten (z.B. Gerüst, Kran)'"")), ('key', ('Const', ""'pricing_modifications_special_costs_slider'"")), ('max_value', ('Const', '50000.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '50.0')), ('value', ('Const', '0.0'))))","('Call', 1, 6)",st,special_costs_eur = st.number_input(
.\analysis.py,5233,special_costs_eur,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_special_costs_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,special_costs_eur = st.session_state.get(
.\gui.py,155,special_costs_eur,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_special_costs_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,"special_costs_eur = st.session_state.get(""pricing_modifications_special_costs_slider"", 0.0)"
.\pdf_ui.py,103,special_costs_eur,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_special_costs_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,"special_costs_eur = st.session_state.get(""pricing_modifications_special_costs_slider"", 0.0)"
.\calculations.py,2443,specific_yields_by_orientation_tilt,"('Call', ('Attr', 'global_constants', 'get'), (('Const', ""'specific_yields_by_orientation_tilt'""), ('Dict', ())), ())","('Call', 2, 0)",global_constants,specific_yields_by_orientation_tilt = global_constants.get(
.\calculations.py,2449,specific_yields_by_orientation_tilt,"('Subscript', ('Call', ('Name', 'Dummy_load_admin_setting_calc'), (('Const', ""'global_constants'""),), ()), ('Const', ""'specific_yields_by_orientation_tilt'""))","('Subscript',)",Dummy_load_admin_setting_calc,specific_yields_by_orientation_tilt = Dummy_load_admin_setting_calc(
.\calculations.py,2641,specific_yields_map,"('Call', ('Attr', 'global_constants', 'get'), (('Const', ""'specific_yields_by_orientation_tilt'""), ('Dict', ())), ())","('Call', 2, 0)",global_constants,specific_yields_map = global_constants.get(
.\calculations.py,2647,specific_yields_map,"('Subscript', ('Call', ('Name', 'Dummy_load_admin_setting_calc'), (('Const', ""'global_constants'""),), ()), ('Const', ""'specific_yields_by_orientation_tilt'""))","('Subscript',)",Dummy_load_admin_setting_calc,"specific_yields_map = Dummy_load_admin_setting_calc(""global_constants"")["
.\pdf_template_engine\placeholders.py,1140,speicher_ladung_kwh,"('Name', 'v')","('Name',)",v,if v: speicher_ladung_kwh = v
.\pdf_template_engine\placeholders.py,1134,speicher_ladung_kwh,"('Other', 'IfExp')","('Other', 'IfExp')","float,monthly_storage_charge,sum,x",speicher_ladung_kwh   = sum(float(x or 0) for x in monthly_storage_charge) if monthly_storage_charge else 0.0
.\calculations.py,2829,speicher_nutzung,"('Call', ('Name', 'min'), (('Name', 'speicher_ladung_netto'), ('Name', 'discharge_potential')), ())","('Call', 2, 0)","discharge_potential,min,speicher_ladung_netto","speicher_nutzung = min(speicher_ladung_netto, discharge_potential)"
.\calculations.py,2842,speicher_nutzung,"('Name', 'min_usage')","('Name',)",min_usage,speicher_nutzung = min_usage
.\pdf_template_engine\placeholders.py,1143,speicher_nutzung_kwh,"('Name', 'v')","('Name',)",v,if v: speicher_nutzung_kwh = v
.\pdf_template_engine\placeholders.py,1135,speicher_nutzung_kwh,"('Other', 'IfExp')","('Other', 'IfExp')","float,monthly_storage_discharge,sum,x",speicher_nutzung_kwh  = sum(float(x or 0) for x in monthly_storage_discharge) if monthly_storage_discharge else 0.0
.\database.py,624,sql,"('Const', ""' INSERT INTO heat_pumps(model_name, manufacturer, heating_output_kw, power_consumption_kw, scop, price)\\n              VALUES(?,?,?,?,?,?) '"")","('Const',)",,"sql = ''' INSERT INTO heat_pumps(model_name, manufacturer, heating_output_kw, power_consumption_kw, scop, price)"
.\database.py,633,sql,"('Const', ""' UPDATE heat_pumps\\n              SET model_name = ?, manufacturer = ?, heating_output_kw = ?, power_consumption_kw = ?, scop = ?, price = ?\\n              WHERE id = ?'"")","('Const',)",,sql = ''' UPDATE heat_pumps
.\database.py,642,sql,"('Const', ""'DELETE FROM heat_pumps WHERE id = ?'"")","('Const',)",,sql = 'DELETE FROM heat_pumps WHERE id = ?'
.\database.py,1723,sql_query,"('Const', ""'SELECT id, company_id, document_type, display_name, file_name, absolute_file_path as relative_db_path, uploaded_at FROM company_documents WHERE company_id = ?'"")","('Const',)",,"sql_query = ""SELECT id, company_id, document_type, display_name, file_name, absolute_file_path as relative_db_path, uploaded_at FROM company_documents WHERE company_id = ?"""
.\database.py,1135,sql_query,"('Const', ""'\\n        INSERT INTO admin_settings (key, value, last_modified) \\n        VALUES (?, ?, CURRENT_TIMESTAMP) \\n        ON CONFLICT(key) DO UPDATE SET \\n        value=excluded.value, \\n        last_modified=CURRENT_TIMESTAMP \\n        '"")","('Const',)",,"sql_query = """""""
.\notwendig oder nicht\python_function_recipes.py,181,sr,"('Call', ('Attr', 'pd', 'Series'), (('Call', ('Name', 'list'), (('Name', 'sum_range'),), ()),), ())","('Call', 1, 0)","list,pd,sum_range",sr = pd.Series(list(sum_range))
.\notwendig oder nicht\python_function_recipes.py,159,sr,"('Other', 'IfExp')","('Other', 'IfExp')","list,pd,rv,sum_range",sr = pd.Series(list(sum_range)) if sum_range is not None else rv
.\notwendig oder nicht\wichtig\repo_porter_select.py,119,src,"('Call', ('Attr', 'Path(args.from_out)', 'resolve'), (), ())","('Call', 0, 0)","Path,args",src = Path(args.from_out).resolve()
.\tools\repo_porter_select.py,119,src,"('Call', ('Attr', 'Path(args.from_out)', 'resolve'), (), ())","('Call', 0, 0)","Path,args",src = Path(args.from_out).resolve()
.\admin_module_alias_mapping_ui.py,59,src,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'PDF-Spaltenname (Variante)'""),), ())","('Call', 1, 0)",st,"src = st.text_input(""PDF-Spaltenname (Variante)"")"
.\dev_tools\kakerlake_ultra_cleaner.py,124,src,"('Call', ('Name', 'read_text'), (('Name', 'p'),), ())","('Call', 1, 0)","p,read_text","src=read_text(p); tree=ast.parse(src, filename=p); lines=src.splitlines()"
.\mnt\data\kakerlake_ultra_cleaner.py,124,src,"('Call', ('Name', 'read_text'), (('Name', 'p'),), ())","('Call', 1, 0)","p,read_text","src=read_text(p); tree=ast.parse(src, filename=p); lines=src.splitlines()"
.\tools\kakerlake_ultra_cleaner.py,125,src,"('Call', ('Name', 'read_text'), (('Name', 'p'),), ())","('Call', 1, 0)","p,read_text","src=read_text(p); tree=ast.parse(src, filename=p); lines=src.splitlines()"
.\pdf_template_engine\placeholders.py,1191,st,"('Call', ('Attr', 're', 'sub'), (('Const', ""'\\\\s+'""), ('Const', ""' '""), ('Name', 'st')), ())","('Call', 3, 0)","re,st","st = re.sub(r""\s+"", "" "", st)"
.\pdf_template_engine\placeholders.py,1189,st,"('Call', ('Attr', 'str(s).strip()', 'lower'), (), ())","('Call', 0, 0)","s,str",st = str(s).strip().lower()
.\pdf_template_engine\placeholders.py,1198,st,"('Call', ('Attr', 'str(s).strip()', 'lower'), (), ())","('Call', 0, 0)","s,str",st = str(s).strip().lower()
.\calculations.py,111,st,"('Call', ('Name', 'DummySt'), (), ())","('Call', 0, 0)",DummySt,st = DummySt()
.\analysis.py,138,st.plotly_chart,"('Name', '_plotly_chart_collapsible')","('Name',)",_plotly_chart_collapsible,st.plotly_chart = _plotly_chart_collapsible  # type: ignore[assignment]
.\analysis.py,155,st.plotly_chart,"('Name', 'orig')","('Name',)",orig,st.plotly_chart = orig  # type: ignore[assignment]
.\ai_companion.py,29,st.session_state.ai_companion_api_key,"('Const', ""''"")","('Const',)",,"st.session_state.ai_companion_api_key = """""
.\ai_companion.py,279,st.session_state.ai_companion_api_key,"('Const', ""''"")","('Const',)",,"st.session_state.ai_companion_api_key = """""
.\ai_companion.py,36,st.session_state.ai_companion_api_key,"('Name', 'api_key')","('Name',)",api_key,st.session_state.ai_companion_api_key = api_key
.\ai_companion.py,25,st.session_state.ai_companion_visible,"('Const', 'False')","('Const',)",,st.session_state.ai_companion_visible = False
.\ai_companion.py,142,st.session_state.ai_companion_visible,"('Const', 'False')","('Const',)",,st.session_state.ai_companion_visible = False
.\ai_companion.py,137,st.session_state.ai_companion_visible,"('Not', ('Attr', 'st.session_state', 'ai_companion_visible'))","('Not', ('Attr',))",st,st.session_state.ai_companion_visible = not st.session_state.ai_companion_visible
.\calculations.py,3958,st.session_state.calculation_results,"('Call', ('Attr', 'results', 'copy'), (), ())","('Call', 0, 0)",results,st.session_state.calculation_results = results.copy()
.\analysis.py,7025,st.session_state.calculation_results,"('Call', ('Attr', 'results_for_display', 'copy'), (), ())","('Call', 0, 0)",results_for_display,st.session_state.calculation_results = results_for_display.copy()
.\gui.py,230,st.session_state.calculation_results,"('Dict', ())","('Dict', 0)",,st.session_state.calculation_results = {}
.\gui.py,238,st.session_state.calculation_results_backup,"('Dict', ())","('Dict', 0)",,st.session_state.calculation_results_backup = {}
.\analysis.py,7092,st.session_state.calculation_results_backup,"('Name', 'backup_data')","('Name',)",backup_data,st.session_state.calculation_results_backup = backup_data
.\calculations.py,3974,st.session_state.calculation_results_backup,"('Name', 'backup_data')","('Name',)",backup_data,st.session_state.calculation_results_backup = backup_data
.\crm_calendar_ui.py,62,st.session_state.calendar_date,"('Call', ('Attr', 'datetime.now()', 'replace'), (), (('day', ('Const', '1')),))","('Call', 0, 1)",datetime,st.session_state.calendar_date = datetime.now().replace(day=1)
.\crm_calendar_ui.py,77,st.session_state.calendar_date,"('Call', ('Attr', 'datetime.now()', 'replace'), (), (('day', ('Const', '1')),))","('Call', 0, 1)",datetime,st.session_state.calendar_date = datetime.now().replace(day=1)
.\crm_calendar_ui.py,85,st.session_state.calendar_date,"('Call', ('Attr', 'datetime.now()', 'replace'), (), (('day', ('Const', '1')),))","('Call', 0, 1)",datetime,st.session_state.calendar_date = datetime.now().replace(day=1)
.\crm_calendar_ui.py,103,st.session_state.calendar_date,"('Call', ('Attr', 'datetime.now()', 'replace'), (), (('day', ('Const', '1')),))","('Call', 0, 1)",datetime,st.session_state.calendar_date = datetime.now().replace(day=1)
.\crm_calendar_ui.py,93,st.session_state.calendar_date,"('Call', ('Attr', 'st.session_state.calendar_date', 'replace'), (), (('month', ('Add', (('Attr', 'st.session_state.calendar_date', 'month'), ('Const', '1')))),))","('Call', 0, 1)",st,st.session_state.calendar_date = st.session_state.calendar_date.replace(
.\crm_calendar_ui.py,89,st.session_state.calendar_date,"('Call', ('Attr', 'st.session_state.calendar_date', 'replace'), (), (('month', ('Const', '1')), ('year', ('Add', (('Attr', 'st.session_state.calendar_date', 'year'), ('Const', '1'))))))","('Call', 0, 2)",st,st.session_state.calendar_date = st.session_state.calendar_date.replace(
.\crm_calendar_ui.py,66,st.session_state.calendar_date,"('Call', ('Attr', 'st.session_state.calendar_date', 'replace'), (), (('month', ('Const', '12')), ('year', ('Sub', ('Attr', 'st.session_state.calendar_date', 'year'), ('Const', '1')))))","('Call', 0, 2)",st,st.session_state.calendar_date = st.session_state.calendar_date.replace(
.\crm_calendar_ui.py,70,st.session_state.calendar_date,"('Call', ('Attr', 'st.session_state.calendar_date', 'replace'), (), (('month', ('Sub', ('Attr', 'st.session_state.calendar_date', 'month'), ('Const', '1'))),))","('Call', 0, 1)",st,st.session_state.calendar_date = st.session_state.calendar_date.replace(
.\data_input.py,192,st.session_state.demand_mode_selection,"('Const', ""'Nur Photovoltaik'"")","('Const',)",,"st.session_state.demand_mode_selection = ""Nur Photovoltaik"""
.\data_input.py,198,st.session_state.demand_mode_selection,"('Const', ""'Nur Wärmepumpe'"")","('Const',)",,"st.session_state.demand_mode_selection = ""Nur Wärmepumpe"""
.\data_input.py,204,st.session_state.demand_mode_selection,"('Const', ""'pv_wp_combined'"")","('Const',)",,"st.session_state.demand_mode_selection = ""pv_wp_combined"""
.\data_input.py,186,st.session_state.demand_mode_selection,"('Const', 'None')","('Const',)",,st.session_state.demand_mode_selection = None
.\heatpump_ui.py,917,st.session_state.economics_data,"('Dict', (('KV', ('Const', ""'annual_hp_cost'""), ('Name', 'annual_hp_cost')), ('KV', ('Const', ""'annual_old_cost'""), ('Name', 'annual_old_cost')), ('KV', ('Const', ""'annual_savings'""), ('Name', 'annual_savings')), ('KV', ('Const', ""'electricity_price'""), ('Name', 'electricity_price')), ('KV', ('Const', ""'heat_demand_kwh'""), ('Name', 'heat_demand_kwh')), ('KV', ('Const', ""'hp_electricity_consumption'""), ('Name', 'hp_electricity_consumption')), ('KV', ('Const', ""'payback_time'""), ('Name', 'payback_time')), ('KV', ('Const', ""'subsidy_amount'""), ('Name', 'subsidy_amount')), ('KV', ('Const', ""'total_investment'""), ('Name', 'total_investment'))))","('Dict', 9)","annual_hp_cost,annual_old_cost,annual_savings,electricity_price,heat_demand_kwh,hp_electricity_consumption,payback_time,subsidy_amount,total_investment",st.session_state.economics_data = {
.\heatpump_ui.py,682,st.session_state.economics_data,"('Name', 'economics_data')","('Name',)",economics_data,st.session_state.economics_data = economics_data
.\admin_panel.py,218,st.session_state.editing_company_id,"('Const', 'None')","('Const',)",,st.session_state.editing_company_id = None
.\admin_panel.py,249,st.session_state.editing_company_id,"('Const', 'None')","('Const',)",,st.session_state.editing_company_id = None
.\admin_panel.py,311,st.session_state.editing_company_id,"('Const', 'None')","('Const',)",,st.session_state.editing_company_id = None
.\admin_panel.py,325,st.session_state.editing_company_id,"('Const', 'None')","('Const',)",,st.session_state.editing_company_id = None
.\admin_panel.py,333,st.session_state.editing_company_id,"('Const', 'None')","('Const',)",,st.session_state.editing_company_id = None
.\admin_panel.py,490,st.session_state.editing_company_id,"('Const', 'None')","('Const',)",,st.session_state.editing_company_id = None
.\admin_panel.py,480,st.session_state.editing_company_id,"('Name', 'company_id_item_int_crud')","('Name',)",company_id_item_int_crud,st.session_state.editing_company_id = company_id_item_int_crud
.\doc_output.py,2355,st.session_state.generated_pdf_bytes_for_download_v1,"('Const', 'None')","('Const',)",,st.session_state.generated_pdf_bytes_for_download_v1 = None
.\pdf_ui.py,1163,st.session_state.generated_pdf_bytes_for_download_v1,"('Const', 'None')","('Const',)",,st.session_state.generated_pdf_bytes_for_download_v1 = None
.\doc_output.py,2229,st.session_state.generated_pdf_bytes_for_download_v1,"('Name', 'pdf_bytes')","('Name',)",pdf_bytes,st.session_state.generated_pdf_bytes_for_download_v1 = pdf_bytes
.\doc_output.py,2351,st.session_state.generated_pdf_bytes_for_download_v1,"('Name', 'pdf_bytes')","('Name',)",pdf_bytes,st.session_state.generated_pdf_bytes_for_download_v1 = pdf_bytes
.\pdf_ui.py,1110,st.session_state.generated_pdf_bytes_for_download_v1,"('Name', 'pdf_bytes')","('Name',)",pdf_bytes,st.session_state.generated_pdf_bytes_for_download_v1 = pdf_bytes
.\pdf_ui.py,1159,st.session_state.generated_pdf_bytes_for_download_v1,"('Name', 'pdf_bytes')","('Name',)",pdf_bytes,st.session_state.generated_pdf_bytes_for_download_v1 = pdf_bytes
.\heatpump_ui.py,873,st.session_state.heatpump_data,"('Dict', (('KV', ('Const', ""'alternatives'""), ('List', ())), ('KV', ('Const', ""'auto_selected'""), ('Const', 'True')), ('KV', ('Const', ""'backup_heating'""), ('Const', 'True')), ('KV', ('Const', ""'building_data'""), ('Name', 'building_data')), ('KV', ('Const', ""'hot_water_storage'""), ('Const', '300')), ('KV', ('Const', ""'selected_heatpump'""), ('Name', 'top')), ('KV', ('Const', ""'sizing_factor'""), ('Name', 'sizing_factor')), ('KV', ('Const', ""'smart_control'""), ('Const', 'True'))))","('Dict', 8)","building_data,sizing_factor,top",st.session_state.heatpump_data = {
.\heatpump_ui.py,460,st.session_state.heatpump_data,"('Name', 'heatpump_data')","('Name',)",heatpump_data,st.session_state.heatpump_data = heatpump_data
.\multi_offer_generator.py,75,st.session_state.multi_offer_company_extended,"('Dict', ())","('Dict', 0)",,st.session_state.multi_offer_company_extended = {}
.\multi_offer_generator.py,214,st.session_state.multi_offer_company_extended,"('Other', 'DictComp')","('Other', 'DictComp')","cid,current_ids,st,val",st.session_state.multi_offer_company_extended = {
.\multi_offer_generator.py,130,st.session_state.multi_offer_customer_data,"('Call', ('Attr', 'customer_data', 'copy'), (), ())","('Call', 0, 0)",customer_data,st.session_state.multi_offer_customer_data = customer_data.copy()
.\multi_offer_generator_new.py,125,st.session_state.multi_offer_customer_data,"('Call', ('Attr', 'customer_data', 'copy'), (), ())","('Call', 0, 0)",customer_data,st.session_state.multi_offer_customer_data = customer_data.copy()
.\multi_offer_generator.py,65,st.session_state.multi_offer_customer_data,"('Dict', ())","('Dict', 0)",,st.session_state.multi_offer_customer_data = {}
.\multi_offer_generator_new.py,65,st.session_state.multi_offer_customer_data,"('Dict', ())","('Dict', 0)",,st.session_state.multi_offer_customer_data = {}
.\multi_offer_generator_old.py,66,st.session_state.multi_offer_customer_data,"('Dict', ())","('Dict', 0)",,st.session_state.multi_offer_customer_data = {}
.\multi_offer_generator_old.py,427,st.session_state.multi_offer_customer_data,"('Dict', ())","('Dict', 0)",,st.session_state.multi_offer_customer_data = {}
.\multi_offer_generator.py,1211,st.session_state.multi_offer_customer_data,"('Subscript', ('Name', 'project_data_doc'), ('Const', ""'customer_data'""))","('Subscript',)",project_data_doc,"st.session_state.multi_offer_customer_data = project_data_doc[""customer_data""]"
.\multi_offer_generator_old.py,373,st.session_state.multi_offer_customer_data,"('Subscript', ('Name', 'project_data_doc'), ('Const', ""'customer_data'""))","('Subscript',)",project_data_doc,"st.session_state.multi_offer_customer_data = project_data_doc[""customer_data""]"
.\multi_offer_generator.py,77,st.session_state.multi_offer_extend_all,"('Const', 'False')","('Const',)",,st.session_state.multi_offer_extend_all = False
.\multi_offer_generator.py,263,st.session_state.multi_offer_extend_all,"('Name', 'master')","('Name',)",master,st.session_state.multi_offer_extend_all = master
.\multi_offer_generator.py,139,st.session_state.multi_offer_project_data,"('Call', ('Attr', 'project_data', 'copy'), (), ())","('Call', 0, 0)",project_data,st.session_state.multi_offer_project_data = project_data.copy()
.\multi_offer_generator_new.py,135,st.session_state.multi_offer_project_data,"('Call', ('Attr', 'project_data', 'copy'), (), ())","('Call', 0, 0)",project_data,st.session_state.multi_offer_project_data = project_data.copy()
.\multi_offer_generator_old.py,1280,st.session_state.multi_offer_project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'address'""), ('Const', ""'Musterstraße'"")), ('KV', ('Const', ""'city'""), ('Const', ""'Musterstadt'"")), ('KV', ('Const', ""'first_name'""), ('Const', ""'Max'"")), ('KV', ('Const', ""'house_number'""), ('Const', ""'123'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Mustermann'"")), ('KV', ('Const', ""'salutation'""), ('Const', ""'Herr'"")), ('KV', ('Const', ""'zip_code'""), ('Const', ""'12345'""))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'include_storage'""), ('Const', 'True')), ('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'selected_inverter_id'""), ('Const', '1145')), ('KV', ('Const', ""'selected_module_id'""), ('Const', '1144')), ('KV', ('Const', ""'selected_storage_id'""), ('Const', '1146')))))))","('Dict', 2)",,st.session_state.multi_offer_project_data = {
.\multi_offer_generator.py,1212,st.session_state.multi_offer_project_data,"('Name', 'project_data_doc')","('Name',)",project_data_doc,st.session_state.multi_offer_project_data = project_data_doc
.\multi_offer_generator.py,201,st.session_state.multi_offer_selected_companies,"('Call', ('Name', 'list'), (('Call', ('Attr', 'company_options', 'values'), (), ()),), ())","('Call', 1, 0)","company_options,list",st.session_state.multi_offer_selected_companies = list(company_options.values())
.\multi_offer_generator.py,67,st.session_state.multi_offer_selected_companies,"('List', ())","('List', 0)",,st.session_state.multi_offer_selected_companies = []
.\multi_offer_generator.py,204,st.session_state.multi_offer_selected_companies,"('List', ())","('List', 0)",,st.session_state.multi_offer_selected_companies = []
.\multi_offer_generator_new.py,67,st.session_state.multi_offer_selected_companies,"('List', ())","('List', 0)",,st.session_state.multi_offer_selected_companies = []
.\multi_offer_generator_old.py,68,st.session_state.multi_offer_selected_companies,"('List', ())","('List', 0)",,st.session_state.multi_offer_selected_companies = []
.\multi_offer_generator_old.py,429,st.session_state.multi_offer_selected_companies,"('List', ())","('List', 0)",,st.session_state.multi_offer_selected_companies = []
.\multi_offer_generator.py,207,st.session_state.multi_offer_selected_companies,"('Other', 'ListComp')","('Other', 'ListComp')","company_options,name,selected_company_names",st.session_state.multi_offer_selected_companies = [
.\multi_offer_generator_new.py,189,st.session_state.multi_offer_selected_companies,"('Other', 'ListComp')","('Other', 'ListComp')","company_options,name,selected_company_names",st.session_state.multi_offer_selected_companies = [
.\multi_offer_generator_old.py,143,st.session_state.multi_offer_selected_companies,"('Other', 'ListComp')","('Other', 'ListComp')","company_options,name,selected_company_names",st.session_state.multi_offer_selected_companies = [
.\multi_offer_generator_old.py,496,st.session_state.multi_offer_selected_companies,"('Other', 'ListComp')","('Other', 'ListComp')","company_options,name,selected_company_names",st.session_state.multi_offer_selected_companies = [
.\multi_offer_generator_old.py,933,st.session_state.multi_offer_settings,"('Dict', (('KV', ('Const', ""'enable_preview'""), ('Const', 'True')), ('KV', ('Const', ""'include_all_pdf_features'""), ('Const', 'True')), ('KV', ('Const', ""'parallel_generation'""), ('Const', 'True')), ('KV', ('Const', ""'use_individual_pricing'""), ('Const', 'True')), ('KV', ('Const', ""'use_same_products'""), ('Const', 'False'))))","('Dict', 5)",,st.session_state.multi_offer_settings = {
.\multi_offer_generator.py,69,st.session_state.multi_offer_settings,"('Dict', (('KV', ('Const', ""'include_storage'""), ('Const', 'True')), ('KV', ('Const', ""'module_quantity'""), ('Const', '20'))))","('Dict', 2)",,st.session_state.multi_offer_settings = {
.\multi_offer_generator_new.py,69,st.session_state.multi_offer_settings,"('Dict', (('KV', ('Const', ""'include_storage'""), ('Const', 'True')), ('KV', ('Const', ""'module_quantity'""), ('Const', '20'))))","('Dict', 2)",,st.session_state.multi_offer_settings = {
.\multi_offer_generator_old.py,70,st.session_state.multi_offer_settings,"('Dict', (('KV', ('Const', ""'include_storage'""), ('Const', 'True')), ('KV', ('Const', ""'module_quantity'""), ('Const', '20'))))","('Dict', 2)",,st.session_state.multi_offer_settings = {
.\multi_offer_generator_old.py,431,st.session_state.multi_offer_settings,"('Dict', (('KV', ('Const', ""'include_storage'""), ('Const', 'True')), ('KV', ('Const', ""'module_quantity'""), ('Const', '20'))))","('Dict', 2)",,st.session_state.multi_offer_settings = {
.\gui.py,244,st.session_state.nav_event,"('Const', 'False')","('Const',)",,st.session_state.nav_event = False
.\gui.py,315,st.session_state.nav_event,"('Const', 'False')","('Const',)",,st.session_state.nav_event = False
.\gui.py,282,st.session_state.nav_event,"('Const', 'True')","('Const',)",,st.session_state.nav_event = True
.\gui.py,288,st.session_state.nav_event,"('Const', 'True')","('Const',)",,st.session_state.nav_event = True
.\gui.py,297,st.session_state.nav_event,"('Const', 'True')","('Const',)",,st.session_state.nav_event = True
.\admin_panel.py,1340,st.session_state.parsed_csv_df_for_preview_admin,"('Const', 'None')","('Const',)",,if 'parsed_csv_df_for_preview_admin' not in st.session_state: st.session_state.parsed_csv_df_for_preview_admin = None
.\admin_panel.py,1398,st.session_state.parsed_csv_df_for_preview_admin,"('Const', 'None')","('Const',)",,"else: st.error(get_text_local(""admin_csv_parse_error_empty"", ""CSV geparst, aber leer."")); st.session_state.uploaded_csv_content_for_save_admin = None; st.session_state.parsed_csv_df_for_preview_admin = None"
.\admin_panel.py,1399,st.session_state.parsed_csv_df_for_preview_admin,"('Const', 'None')","('Const',)",,"except Exception as e_upload_process_csv: st.error(f""Fehler Verarbeitung CSV: {e_upload_process_csv}""); traceback.print_exc(); st.session_state.uploaded_csv_content_for_save_admin = None; st.session_state.parsed_csv_df_for_preview_admin = None"
.\admin_panel.py,1405,st.session_state.parsed_csv_df_for_preview_admin,"('Const', 'None')","('Const',)",,"st.success(""Preis-Matrix (CSV) gespeichert!""); st.session_state.uploaded_csv_content_for_save_admin = None; st.session_state.parsed_csv_df_for_preview_admin = None"
.\admin_panel.py,1396,st.session_state.parsed_csv_df_for_preview_admin,"('Name', 'parsed_df_temp_csv')","('Name',)",parsed_df_temp_csv,st.session_state.uploaded_csv_content_for_save_admin = csv_content_temp; st.session_state.parsed_csv_df_for_preview_admin = parsed_df_temp_csv
.\admin_panel.py,1338,st.session_state.parsed_excel_df_for_preview_admin,"('Const', 'None')","('Const',)",,if 'parsed_excel_df_for_preview_admin' not in st.session_state: st.session_state.parsed_excel_df_for_preview_admin = None
.\admin_panel.py,1355,st.session_state.parsed_excel_df_for_preview_admin,"('Const', 'None')","('Const',)",,"st.error(get_text_local(""admin_xlsx_parse_error_empty"", ""Excel geparst, aber leer."")); st.session_state.uploaded_excel_bytes_for_save_admin = None; st.session_state.parsed_excel_df_for_preview_admin = None"
.\admin_panel.py,1356,st.session_state.parsed_excel_df_for_preview_admin,"('Const', 'None')","('Const',)",,"except Exception as e_upload_process_excel: st.error(f""Fehler Verarbeitung Excel: {e_upload_process_excel}""); traceback.print_exc(); st.session_state.uploaded_excel_bytes_for_save_admin = None; st.session_state.parsed_excel_df_for_preview_admin = None"
.\admin_panel.py,1362,st.session_state.parsed_excel_df_for_preview_admin,"('Const', 'None')","('Const',)",,"st.success(""Preis-Matrix (Excel) gespeichert!""); st.session_state.uploaded_excel_bytes_for_save_admin = None; st.session_state.parsed_excel_df_for_preview_admin = None"
.\admin_panel.py,1352,st.session_state.parsed_excel_df_for_preview_admin,"('Name', 'parsed_df_temp_excel')","('Name',)",parsed_df_temp_excel,st.session_state.uploaded_excel_bytes_for_save_admin = excel_bytes_content; st.session_state.parsed_excel_df_for_preview_admin = parsed_df_temp_excel
.\pdf_ui.py,176,st.session_state.pdf_auto_generate_type,"('Const', ""'combo'"")","('Const',)",,st.session_state.pdf_auto_generate_type = 'combo'
.\pdf_ui.py,170,st.session_state.pdf_auto_generate_type,"('Const', ""'hp'"")","('Const',)",,st.session_state.pdf_auto_generate_type = 'hp'
.\pdf_ui.py,164,st.session_state.pdf_auto_generate_type,"('Const', ""'pv'"")","('Const',)",,st.session_state.pdf_auto_generate_type = 'pv'
.\pdf_widgets.py,87,st.session_state.pdf_custom_sections,"('Dict', ())","('Dict', 0)",,st.session_state.pdf_custom_sections = {}
.\pdf_widgets.py,322,st.session_state.pdf_custom_sections,"('Subscript', ('Name', 'config'), ('Const', ""'custom_sections'""))","('Subscript',)",config,st.session_state.pdf_custom_sections = config['custom_sections']
.\doc_output.py,1153,st.session_state.pdf_design_config,"('Dict', (('KV', ('Const', ""'color_scheme'""), ('Const', ""'blue_gradient'"")), ('KV', ('Const', ""'footer_style'""), ('Const', ""'minimal'"")), ('KV', ('Const', ""'header_style'""), ('Const', ""'modern'"")), ('KV', ('Const', ""'layout_style'""), ('Const', ""'clean'"")), ('KV', ('Const', ""'page_margins'""), ('Const', ""'standard'"")), ('KV', ('Const', ""'spacing'""), ('Const', ""'comfortable'"")), ('KV', ('Const', ""'theme'""), ('Const', ""'professional'"")), ('KV', ('Const', ""'typography'""), ('Const', ""'modern'""))))","('Dict', 8)",,st.session_state.pdf_design_config = {
.\doc_output.py,1526,st.session_state.pdf_design_config,"('Dict', (('KV', ('Const', ""'color_scheme'""), ('Const', ""'blue_gradient'"")), ('KV', ('Const', ""'layout_style'""), ('Const', ""'clean'"")), ('KV', ('Const', ""'theme'""), ('Const', ""'professional'"")), ('KV', ('Const', ""'typography'""), ('Const', ""'modern'""))))","('Dict', 4)",,st.session_state.pdf_design_config = {
.\doc_output.py,1841,st.session_state.pdf_generating_lock_v1,"('Const', 'False')","('Const',)",,st.session_state.pdf_generating_lock_v1 = False
.\doc_output.py,2357,st.session_state.pdf_generating_lock_v1,"('Const', 'False')","('Const',)",,st.session_state.pdf_generating_lock_v1 = False
.\pdf_ui.py,186,st.session_state.pdf_generating_lock_v1,"('Const', 'False')","('Const',)",,if 'pdf_generating_lock_v1' not in st.session_state: st.session_state.pdf_generating_lock_v1 = False
.\pdf_ui.py,1165,st.session_state.pdf_generating_lock_v1,"('Const', 'False')","('Const',)",,st.session_state.pdf_generating_lock_v1 = False
.\doc_output.py,2203,st.session_state.pdf_generating_lock_v1,"('Const', 'True')","('Const',)",,st.session_state.pdf_generating_lock_v1 = True
.\pdf_ui.py,1080,st.session_state.pdf_generating_lock_v1,"('Const', 'True')","('Const',)",,st.session_state.pdf_generating_lock_v1 = True
.\pdf_ui.py,188,st.session_state.pdf_inclusion_options,"('Dict', (('KV', ('Const', ""'append_additional_pages_after_main6'""), ('Const', 'False')), ('KV', ('Const', ""'append_additional_pages_after_main7'""), ('Const', 'False')), ('KV', ('Const', ""'company_document_ids_to_include'""), ('List', ())), ('KV', ('Const', ""'include_all_documents'""), ('Const', 'False')), ('KV', ('Const', ""'include_company_logo'""), ('Const', 'True')), ('KV', ('Const', ""'include_hp_benefits_bullets'""), ('Const', 'True')), ('KV', ('Const', ""'include_hp_custom_texts'""), ('Const', 'True')), ('KV', ('Const', ""'include_hp_financing_block'""), ('Const', 'True')), ('KV', ('Const', ""'include_hp_line_items'""), ('Const', 'True')), ('KV', ('Const', ""'include_hp_subsidy_block'""), ('Const', 'True')), ('KV', ('Const', ""'include_hp_total_price_block'""), ('Const', 'True')), ('KV', ('Const', ""'include_optional_component_details'""), ('Const', 'True')), ('KV', ('Const', ""'include_product_images'""), ('Const', 'True')), ('KV', ('Const', ""'selected_charts_for_pdf'""), ('List', ()))))","('Dict', 14)",,st.session_state.pdf_inclusion_options = {
.\doc_output.py,1881,st.session_state.pdf_inclusion_options,"('Dict', (('KV', ('Const', ""'append_additional_pages_after_main6'""), ('Const', 'False')), ('KV', ('Const', ""'company_document_ids_to_include'""), ('List', ())), ('KV', ('Const', ""'include_all_documents'""), ('Const', 'False')), ('KV', ('Const', ""'include_company_logo'""), ('Const', 'True')), ('KV', ('Const', ""'include_optional_component_details'""), ('Const', 'True')), ('KV', ('Const', ""'include_product_images'""), ('Const', 'True')), ('KV', ('Const', ""'selected_charts_for_pdf'""), ('List', ()))))","('Dict', 7)",,st.session_state.pdf_inclusion_options = {
.\central_pdf_system.py,116,st.session_state.pdf_mega_hybrid_available,"('Const', 'False')","('Const',)",,st.session_state.pdf_mega_hybrid_available = False
.\central_pdf_system.py,127,st.session_state.pdf_mega_hybrid_available,"('Const', 'False')","('Const',)",,st.session_state.pdf_mega_hybrid_available = False
.\central_pdf_system.py,111,st.session_state.pdf_mega_hybrid_available,"('Const', 'True')","('Const',)",,st.session_state.pdf_mega_hybrid_available = True
.\central_pdf_system.py,123,st.session_state.pdf_mega_hybrid_available,"('Const', 'True')","('Const',)",,st.session_state.pdf_mega_hybrid_available = True
.\pdf_ui.py,175,st.session_state.pdf_offer_type,"('Const', ""'Kombiniert Photovoltaik + Wärmepumpe'"")","('Const',)",,"st.session_state.pdf_offer_type = ""Kombiniert Photovoltaik + Wärmepumpe"""
.\pdf_ui.py,163,st.session_state.pdf_offer_type,"('Const', ""'Photovoltaik'"")","('Const',)",,"st.session_state.pdf_offer_type = ""Photovoltaik"""
.\pdf_ui.py,169,st.session_state.pdf_offer_type,"('Const', ""'Wärmepumpe'"")","('Const',)",,"st.session_state.pdf_offer_type = ""Wärmepumpe"""
.\pdf_widgets.py,89,st.session_state.pdf_section_contents,"('Dict', ())","('Dict', 0)",,st.session_state.pdf_section_contents = {}
.\pdf_widgets.py,335,st.session_state.pdf_section_contents,"('Subscript', ('Name', 'config'), ('Const', ""'section_contents'""))","('Subscript',)",config,st.session_state.pdf_section_contents = config['section_contents']
.\pdf_widgets.py,414,st.session_state.pdf_section_order,"('Call', ('Attr', ""template['sections']"", 'copy'), (), ())","('Call', 0, 0)",template,"st.session_state.pdf_section_order = template[""sections""].copy()"
.\pdf_widgets.py,83,st.session_state.pdf_section_order,"('Other', 'ListComp')","('Other', 'ListComp')","key,section,self,sorted,x",st.session_state.pdf_section_order = [
.\pdf_widgets.py,138,st.session_state.pdf_section_order,"('Other', 'ListComp')","('Other', 'ListComp')","label_to_key,lbl,sorted_labels","st.session_state.pdf_section_order = [label_to_key.get(lbl, lbl) for lbl in sorted_labels]"
.\pdf_widgets.py,319,st.session_state.pdf_section_order,"('Subscript', ('Name', 'config'), ('Const', ""'section_order'""))","('Subscript',)",config,st.session_state.pdf_section_order = config['section_order']
.\pdf_ui.py,413,st.session_state.pdf_selected_main_sections,"('Call', ('Attr', 'selections', 'get'), (('Const', ""'pdf_selected_main_sections'""), ('Subscript', ('Name', 'all_main_section_keys'), ('Other', 'Slice'))), ())","('Call', 2, 0)","all_main_section_keys,selections","st.session_state.pdf_selected_main_sections = selections.get(""pdf_selected_main_sections"", all_main_section_keys[:])"
.\pdf_ui.py,1068,st.session_state.pdf_selected_main_sections,"('Call', ('Attr', 'st.session_state', 'pop'), (('Const', ""'_temp_pdf_selected_main_sections'""), ('List', ())), ())","('Call', 2, 0)",st,"st.session_state.pdf_selected_main_sections = st.session_state.pop(""_temp_pdf_selected_main_sections"", [])"
.\doc_output.py,2063,st.session_state.pdf_selected_main_sections,"('Call', ('Name', 'list'), (('Call', ('Attr', 'default_pdf_sections_map', 'keys'), (), ()),), ())","('Call', 1, 0)","default_pdf_sections_map,list",st.session_state.pdf_selected_main_sections = list(default_pdf_sections_map.keys())
.\doc_output.py,2067,st.session_state.pdf_selected_main_sections,"('List', (('Const', ""'ProjectOverview'""), ('Const', ""'CostDetails'""), ('Const', ""'Economics'""), ('Const', ""'SimulationDetails'"")))","('List', 4)",,"st.session_state.pdf_selected_main_sections = [""ProjectOverview"", ""CostDetails"", ""Economics"", ""SimulationDetails""]"
.\doc_output.py,2059,st.session_state.pdf_selected_main_sections,"('List', (('Const', ""'ProjectOverview'""), ('Const', ""'TechnicalComponents'""), ('Const', ""'CostDetails'""), ('Const', ""'Economics'"")))","('List', 4)",,"st.session_state.pdf_selected_main_sections = [""ProjectOverview"", ""TechnicalComponents"", ""CostDetails"", ""Economics""]"
.\doc_output.py,1892,st.session_state.pdf_selected_main_sections,"('List', (('Const', ""'ProjectOverview'""), ('Const', ""'TechnicalComponents'""), ('Const', ""'CostDetails'""), ('Const', ""'Economics'""), ('Const', ""'SimulationDetails'""), ('Const', ""'CO2Savings'""), ('Const', ""'Visualizations'""), ('Const', ""'FutureAspects'"")))","('List', 8)",,"st.session_state.pdf_selected_main_sections = [""ProjectOverview"", ""TechnicalComponents"", ""CostDetails"", ""Economics"", ""SimulationDetails"", ""CO2Savings"", ""Visualizations"", ""FutureAspects""]"
.\pdf_ui.py,204,st.session_state.pdf_selected_main_sections,"('List', (('Const', ""'ProjectOverview'""), ('Const', ""'TechnicalComponents'""), ('Const', ""'CostDetails'""), ('Const', ""'Economics'""), ('Const', ""'SimulationDetails'""), ('Const', ""'CO2Savings'""), ('Const', ""'Visualizations'""), ('Const', ""'FutureAspects'"")))","('List', 8)",,"st.session_state.pdf_selected_main_sections = [""ProjectOverview"", ""TechnicalComponents"", ""CostDetails"", ""Economics"", ""SimulationDetails"", ""CO2Savings"", ""Visualizations"", ""FutureAspects""]"
.\pdf_ui.py,401,st.session_state.pdf_selected_main_sections,"('List', ())","('List', 0)",,"st.session_state.pdf_inclusion_options[""include_company_logo""] = False; st.session_state.pdf_inclusion_options[""include_product_images""] = False; st.session_state.pdf_inclusion_options[""include_all_documents""] = False; st.session_state.pdf_inclusion_options[""company_document_ids_to_include""] = []; st.session_state.pdf_inclusion_options[""selected_charts_for_pdf""] = []; st.session_state.pdf_inclusion_options[""include_optional_component_details""] = False; st.session_state.pdf_selected_main_sections = []"
.\pdf_ui.py,1076,st.session_state.pdf_selected_main_sections,"('List', ())","('List', 0)",,st.session_state.pdf_selected_main_sections = []
.\doc_output.py,2048,st.session_state.pdf_selected_main_sections,"('Name', 'temp_selected_main_sections_ui_col2')","('Name',)",temp_selected_main_sections_ui_col2,st.session_state.pdf_selected_main_sections = temp_selected_main_sections_ui_col2
.\pdf_ui.py,398,st.session_state.pdf_selected_main_sections,"('Subscript', ('Name', 'all_main_section_keys'), ('Other', 'Slice'))","('Subscript',)",all_main_section_keys,"st.session_state.pdf_inclusion_options[""include_company_logo""] = True; st.session_state.pdf_inclusion_options[""include_product_images""] = True; st.session_state.pdf_inclusion_options[""include_all_documents""] = True; st.session_state.pdf_inclusion_options[""company_document_ids_to_include""] = all_available_company_doc_ids_for_selection[:]; st.session_state.pdf_inclusion_options[""selected_charts_for_pdf""] = all_available_chart_keys_for_selection[:]; st.session_state.pdf_inclusion_options[""include_optional_component_details""] = True; st.session_state.pdf_selected_main_sections = all_main_section_keys[:]"
.\central_pdf_system.py,92,st.session_state.pdf_standard_available,"('Const', 'False')","('Const',)",,st.session_state.pdf_standard_available = False
.\central_pdf_system.py,84,st.session_state.pdf_standard_available,"('Const', 'True')","('Const',)",,st.session_state.pdf_standard_available = True
.\central_pdf_system.py,103,st.session_state.pdf_tom90_available,"('Const', 'False')","('Const',)",,st.session_state.pdf_tom90_available = False
.\central_pdf_system.py,99,st.session_state.pdf_tom90_available,"('Const', 'True')","('Const',)",,st.session_state.pdf_tom90_available = True
.\pdf_preview.py,278,st.session_state.preview_current_page,"('Const', '0')","('Const',)",,st.session_state.preview_current_page = 0
.\pdf_preview.py,294,st.session_state.preview_current_page,"('Sub', ('Name', 'page_num'), ('Const', '1'))","('Sub', ('Name',), ('Const',))",page_num,st.session_state.preview_current_page = page_num - 1
.\admin_panel.py,889,st.session_state.product_to_edit_id_manual,"('Const', 'None')","('Const',)",,st.session_state.product_to_edit_id_manual = None
.\admin_panel.py,906,st.session_state.product_to_edit_id_manual,"('Const', 'None')","('Const',)",,st.session_state.product_to_edit_id_manual = None
.\admin_panel.py,1179,st.session_state.product_to_edit_id_manual,"('Const', 'None')","('Const',)",,st.session_state.product_to_edit_id_manual = None
.\admin_panel.py,1242,st.session_state.product_to_edit_id_manual,"('Const', 'None')","('Const',)",,st.session_state.product_to_edit_id_manual = None
.\admin_panel.py,1078,st.session_state.product_to_edit_id_manual,"('Name', 'new_product_id')","('Name',)",new_product_id,st.session_state.product_to_edit_id_manual = new_product_id
.\admin_panel.py,1228,st.session_state.product_to_edit_id_manual,"('Name', 'prod_id_in_list')","('Name',)",prod_id_in_list,st.session_state.product_to_edit_id_manual = prod_id_in_list
.\components\progress_manager.py,45,st.session_state.progress_config,"('Attr', 'self', 'config')","('Attr',)",self,st.session_state.progress_config = self.config
.\components\progress_manager.py,61,st.session_state.progress_config,"('Attr', 'self', 'config')","('Attr',)",self,st.session_state.progress_config = self.config
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,102,st.session_state.progress_config,"('Attr', 'self', 'config')","('Attr',)",self,st.session_state.progress_config = self.config
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,118,st.session_state.progress_config,"('Attr', 'self', 'config')","('Attr',)",self,st.session_state.progress_config = self.config
.\tools\out_selected\patches\components\progress_manager.py.insert.py,102,st.session_state.progress_config,"('Attr', 'self', 'config')","('Attr',)",self,st.session_state.progress_config = self.config
.\tools\out_selected\patches\components\progress_manager.py.insert.py,118,st.session_state.progress_config,"('Attr', 'self', 'config')","('Attr',)",self,st.session_state.progress_config = self.config
.\components\progress_settings.py,120,st.session_state.progress_config,"('Name', 'current_config')","('Name',)",current_config,st.session_state.progress_config = current_config
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_settings.py.insert.py,122,st.session_state.progress_config,"('Name', 'current_config')","('Name',)",current_config,st.session_state.progress_config = current_config
.\notwendig oder nicht\wichtig\portings\patches\components\progress_settings.py.insert.py,123,st.session_state.progress_config,"('Name', 'current_config')","('Name',)",current_config,st.session_state.progress_config = current_config
.\tools\out_selected\patches\components\progress_settings.py.insert.py,122,st.session_state.progress_config,"('Name', 'current_config')","('Name',)",current_config,st.session_state.progress_config = current_config
.\tools\portings\patches\components\progress_settings.py.insert.py,123,st.session_state.progress_config,"('Name', 'current_config')","('Name',)",current_config,st.session_state.progress_config = current_config
.\gui.py,228,st.session_state.project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', ())), ('KV', ('Const', ""'economic_data'""), ('Dict', ())), ('KV', ('Const', ""'project_details'""), ('Dict', ()))))","('Dict', 3)",,"st.session_state.project_data = {'customer_data': {}, 'project_details': {}, 'economic_data': {}}"
.\solar_calculator.py,39,st.session_state.project_data,"('Dict', ())","('Dict', 0)",,st.session_state.project_data = {}
.\doc_output.py,193,st.session_state.project_data,"('Name', 'project_data')","('Name',)",project_data,st.session_state.project_data = project_data
.\data_input.py,315,st.session_state.satellite_image_url_di,"('Call', ('Name', 'get_Maps_satellite_image_url'), (('Name', 'current_lat'), ('Name', 'current_lon'), ('Name', 'EFFECTIVE_GOOGLE_API_KEY'), ('Name', 'texts')), ())","('Call', 4, 0)","EFFECTIVE_GOOGLE_API_KEY,current_lat,current_lon,get_Maps_satellite_image_url,texts","st.session_state.satellite_image_url_di = get_Maps_satellite_image_url(current_lat, current_lon, EFFECTIVE_GOOGLE_API_KEY, texts)"
.\data_input.py,268,st.session_state.satellite_image_url_di,"('Const', 'None')","('Const',)",,st.session_state.satellite_image_url_di = None
.\data_input.py,304,st.session_state.satellite_image_url_di,"('Const', 'None')","('Const',)",,st.session_state.satellite_image_url_di = None
.\data_input.py,311,st.session_state.satellite_image_url_di,"('Const', 'None')","('Const',)",,if 'satellite_image_url_di' not in st.session_state: st.session_state.satellite_image_url_di = None
.\doc_output.py,1877,st.session_state.selected_cover_letter_name_doc_output,"('Const', 'None')","('Const',)",,"if ""selected_cover_letter_name_doc_output"" not in st.session_state: st.session_state.selected_cover_letter_name_doc_output = None"
.\doc_output.py,1958,st.session_state.selected_cover_letter_name_doc_output,"('Name', 'selected_cover_letter_name')","('Name',)",selected_cover_letter_name,st.session_state.selected_cover_letter_name_doc_output = selected_cover_letter_name
.\pdf_ui.py,986,st.session_state.selected_cover_letter_name_doc_output,"('Name', 'selected_cover_letter_name')","('Name',)",selected_cover_letter_name,"if selected_cover_letter_name != st.session_state.selected_cover_letter_name_doc_output: st.session_state.selected_cover_letter_name_doc_output = selected_cover_letter_name; st.session_state.selected_cover_letter_text_content_doc_output = cover_letter_options.get(selected_cover_letter_name, """")"
.\pdf_ui.py,388,st.session_state.selected_cover_letter_name_doc_output,"('Other', 'IfExp')","('Other', 'IfExp')","cover_letter_templates,dict,isinstance","if ""selected_cover_letter_name_doc_output"" not in st.session_state: st.session_state.selected_cover_letter_name_doc_output = cover_letter_templates[0]['name'] if cover_letter_templates and isinstance(cover_letter_templates[0], dict) else None"
.\doc_output.py,1951,st.session_state.selected_cover_letter_name_doc_output,"('Subscript', ('Name', 'cover_letter_keys'), ('Const', '0'))","('Subscript',)",cover_letter_keys,st.session_state.selected_cover_letter_name_doc_output = cover_letter_keys[0]
.\doc_output.py,1959,st.session_state.selected_cover_letter_text_content_doc_output,"('Call', ('Attr', 'cover_letter_options', 'get'), (('Name', 'selected_cover_letter_name'), ('Const', ""''"")), ())","('Call', 2, 0)","cover_letter_options,selected_cover_letter_name","st.session_state.selected_cover_letter_text_content_doc_output = cover_letter_options.get(selected_cover_letter_name, """")"
.\pdf_ui.py,986,st.session_state.selected_cover_letter_text_content_doc_output,"('Call', ('Attr', 'cover_letter_options', 'get'), (('Name', 'selected_cover_letter_name'), ('Const', ""''"")), ())","('Call', 2, 0)","cover_letter_options,selected_cover_letter_name","if selected_cover_letter_name != st.session_state.selected_cover_letter_name_doc_output: st.session_state.selected_cover_letter_name_doc_output = selected_cover_letter_name; st.session_state.selected_cover_letter_text_content_doc_output = cover_letter_options.get(selected_cover_letter_name, """")"
.\doc_output.py,1878,st.session_state.selected_cover_letter_text_content_doc_output,"('Const', ""''"")","('Const',)",,"if ""selected_cover_letter_text_content_doc_output"" not in st.session_state: st.session_state.selected_cover_letter_text_content_doc_output = """""
.\pdf_ui.py,389,st.session_state.selected_cover_letter_text_content_doc_output,"('Other', 'IfExp')","('Other', 'IfExp')","cover_letter_templates,dict,isinstance","if ""selected_cover_letter_text_content_doc_output"" not in st.session_state: st.session_state.selected_cover_letter_text_content_doc_output = cover_letter_templates[0]['content'] if cover_letter_templates and isinstance(cover_letter_templates[0], dict) else """""
.\doc_output.py,1875,st.session_state.selected_offer_title_name_doc_output,"('Const', 'None')","('Const',)",,"if ""selected_offer_title_name_doc_output"" not in st.session_state: st.session_state.selected_offer_title_name_doc_output = None"
.\doc_output.py,1940,st.session_state.selected_offer_title_name_doc_output,"('Name', 'selected_offer_title_name')","('Name',)",selected_offer_title_name,st.session_state.selected_offer_title_name_doc_output = selected_offer_title_name
.\pdf_ui.py,981,st.session_state.selected_offer_title_name_doc_output,"('Name', 'selected_offer_title_name')","('Name',)",selected_offer_title_name,"if selected_offer_title_name != st.session_state.selected_offer_title_name_doc_output: st.session_state.selected_offer_title_name_doc_output = selected_offer_title_name; st.session_state.selected_offer_title_text_content_doc_output = offer_title_options.get(selected_offer_title_name, """")"
.\pdf_ui.py,386,st.session_state.selected_offer_title_name_doc_output,"('Other', 'IfExp')","('Other', 'IfExp')","dict,isinstance,offer_title_templates","if ""selected_offer_title_name_doc_output"" not in st.session_state: st.session_state.selected_offer_title_name_doc_output = offer_title_templates[0]['name'] if offer_title_templates and isinstance(offer_title_templates[0], dict) else None"
.\doc_output.py,1933,st.session_state.selected_offer_title_name_doc_output,"('Subscript', ('Name', 'offer_title_keys'), ('Const', '0'))","('Subscript',)",offer_title_keys,st.session_state.selected_offer_title_name_doc_output = offer_title_keys[0]
.\doc_output.py,1941,st.session_state.selected_offer_title_text_content_doc_output,"('Call', ('Attr', 'offer_title_options', 'get'), (('Name', 'selected_offer_title_name'), ('Const', ""''"")), ())","('Call', 2, 0)","offer_title_options,selected_offer_title_name","st.session_state.selected_offer_title_text_content_doc_output = offer_title_options.get(selected_offer_title_name, """")"
.\pdf_ui.py,981,st.session_state.selected_offer_title_text_content_doc_output,"('Call', ('Attr', 'offer_title_options', 'get'), (('Name', 'selected_offer_title_name'), ('Const', ""''"")), ())","('Call', 2, 0)","offer_title_options,selected_offer_title_name","if selected_offer_title_name != st.session_state.selected_offer_title_name_doc_output: st.session_state.selected_offer_title_name_doc_output = selected_offer_title_name; st.session_state.selected_offer_title_text_content_doc_output = offer_title_options.get(selected_offer_title_name, """")"
.\doc_output.py,1876,st.session_state.selected_offer_title_text_content_doc_output,"('Const', ""''"")","('Const',)",,"if ""selected_offer_title_text_content_doc_output"" not in st.session_state: st.session_state.selected_offer_title_text_content_doc_output = """""
.\pdf_ui.py,387,st.session_state.selected_offer_title_text_content_doc_output,"('Other', 'IfExp')","('Other', 'IfExp')","dict,isinstance,offer_title_templates","if ""selected_offer_title_text_content_doc_output"" not in st.session_state: st.session_state.selected_offer_title_text_content_doc_output = offer_title_templates[0]['content'] if offer_title_templates and isinstance(offer_title_templates[0], dict) else """""
.\gui.py,269,st.session_state.selected_page_key_prev,"('Attr', 'st.session_state', 'selected_page_key_sui')","('Attr',)",st,st.session_state.selected_page_key_prev = st.session_state.selected_page_key_sui
.\gui.py,316,st.session_state.selected_page_key_prev,"('Name', 'selected_page_key')","('Name',)",selected_page_key,st.session_state.selected_page_key_prev = selected_page_key
.\gui.py,321,st.session_state.selected_page_key_prev,"('Name', 'selected_page_key')","('Name',)",selected_page_key,st.session_state.selected_page_key_prev = selected_page_key
.\admin_panel.py,312,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,326,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,334,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,395,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,419,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,426,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,481,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,491,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,498,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,504,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,752,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,850,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,881,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,1047,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,1079,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,1112,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,1143,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,1172,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,1180,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,1229,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,1243,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,1250,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,1310,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1332,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1363,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1376,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"if save_admin_setting_func('price_matrix_excel_bytes', None): st.success(""Excel Preis-Matrix gelöscht.""); st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1406,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1419,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"if save_admin_setting_func('price_matrix_csv_data', None): st.success(""CSV Preis-Matrix gelöscht.""); st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1444,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.success(get_text_local(""admin_tariffs_saved_success_parts"", ""Teileinspeisungstarife gespeichert."")); st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1460,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.success(get_text_local(""admin_tariffs_saved_success_full"", ""Volleinspeisungstarife gespeichert."")); st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1490,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1520,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1535,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin"""
.\admin_panel.py,1576,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1596,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state[edit_mode_session_key] = False; st.session_state[edit_index_session_key] = -1; st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1601,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state[edit_mode_session_key] = True; st.session_state[edit_index_session_key] = selected_idx; st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1605,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state[edit_mode_session_key] = False; st.session_state[edit_index_session_key] = -1; st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1613,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.warning(get_text_local(""admin_template_edit_invalid_index_warning"", ""Die ausgewählte Vorlage...existiert nicht mehr..."")); st.session_state[edit_mode_session_key] = False; st.session_state[edit_index_session_key] = -1; st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1644,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.success(get_text_local(""admin_template_saved_success"", ""Vorlage gespeichert."")); st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1659,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1665,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1670,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1673,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"st.session_state[confirm_delete_session_key] = True; st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\admin_panel.py,1698,st.session_state.selected_page_key_sui,"('Const', ""'admin'"")","('Const',)",,"if something_changed_and_saved: st.info(""Änderungen verarbeitet...""); st.session_state.selected_page_key_sui = ""admin""; st.rerun()"
.\doc_output.py,2358,st.session_state.selected_page_key_sui,"('Const', ""'doc_output'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""doc_output"" # KORREKTUR: Sicherstellen, dass Seite erhalten bleibt"
.\pdf_ui.py,1166,st.session_state.selected_page_key_sui,"('Const', ""'doc_output'"")","('Const',)",,"st.session_state.selected_page_key_sui = ""doc_output"""
.\gui.py,283,st.session_state.selected_page_key_sui,"('Name', 'key')","('Name',)",key,st.session_state.selected_page_key_sui = key
.\gui.py,289,st.session_state.selected_page_key_sui,"('Name', 'key')","('Name',)",key,st.session_state.selected_page_key_sui = key
.\gui.py,298,st.session_state.selected_page_key_sui,"('Name', 'key')","('Name',)",key,st.session_state.selected_page_key_sui = key
.\gui.py,266,st.session_state.selected_page_key_sui,"('Subscript', ('Subscript', ('Name', 'page_options_list'), ('Const', '0')), ('Const', '1'))","('Subscript',)",page_options_list,st.session_state.selected_page_key_sui = page_options_list[0][1]
.\doc_output.py,1923,st.session_state.selected_title_image_b64_data_doc_output,"('Call', ('Attr', 'title_image_options', 'get'), (('Name', 'selected_title_image_name'),), ())","('Call', 1, 0)","selected_title_image_name,title_image_options",st.session_state.selected_title_image_b64_data_doc_output = title_image_options.get(selected_title_image_name)
.\pdf_ui.py,976,st.session_state.selected_title_image_b64_data_doc_output,"('Call', ('Attr', 'title_image_options', 'get'), (('Name', 'selected_title_image_name'),), ())","('Call', 1, 0)","selected_title_image_name,title_image_options",if selected_title_image_name != st.session_state.selected_title_image_name_doc_output : st.session_state.selected_title_image_name_doc_output = selected_title_image_name; st.session_state.selected_title_image_b64_data_doc_output = title_image_options.get(selected_title_image_name)
.\doc_output.py,1874,st.session_state.selected_title_image_b64_data_doc_output,"('Const', 'None')","('Const',)",,"if ""selected_title_image_b64_data_doc_output"" not in st.session_state: st.session_state.selected_title_image_b64_data_doc_output = None"
.\pdf_ui.py,385,st.session_state.selected_title_image_b64_data_doc_output,"('Other', 'IfExp')","('Other', 'IfExp')","dict,isinstance,title_image_templates","if ""selected_title_image_b64_data_doc_output"" not in st.session_state: st.session_state.selected_title_image_b64_data_doc_output = title_image_templates[0]['data'] if title_image_templates and isinstance(title_image_templates[0], dict) else None"
.\doc_output.py,1873,st.session_state.selected_title_image_name_doc_output,"('Const', 'None')","('Const',)",,"if ""selected_title_image_name_doc_output"" not in st.session_state: st.session_state.selected_title_image_name_doc_output = None"
.\doc_output.py,1922,st.session_state.selected_title_image_name_doc_output,"('Name', 'selected_title_image_name')","('Name',)",selected_title_image_name,st.session_state.selected_title_image_name_doc_output = selected_title_image_name
.\pdf_ui.py,976,st.session_state.selected_title_image_name_doc_output,"('Name', 'selected_title_image_name')","('Name',)",selected_title_image_name,if selected_title_image_name != st.session_state.selected_title_image_name_doc_output : st.session_state.selected_title_image_name_doc_output = selected_title_image_name; st.session_state.selected_title_image_b64_data_doc_output = title_image_options.get(selected_title_image_name)
.\pdf_ui.py,384,st.session_state.selected_title_image_name_doc_output,"('Other', 'IfExp')","('Other', 'IfExp')","dict,isinstance,title_image_templates","if ""selected_title_image_name_doc_output"" not in st.session_state: st.session_state.selected_title_image_name_doc_output = title_image_templates[0]['name'] if title_image_templates and isinstance(title_image_templates[0], dict) else None"
.\doc_output.py,1915,st.session_state.selected_title_image_name_doc_output,"('Subscript', ('Name', 'title_image_keys'), ('Const', '0'))","('Subscript',)",title_image_keys,st.session_state.selected_title_image_name_doc_output = title_image_keys[0]
.\admin_panel.py,1339,st.session_state.uploaded_csv_content_for_save_admin,"('Const', 'None')","('Const',)",,if 'uploaded_csv_content_for_save_admin' not in st.session_state: st.session_state.uploaded_csv_content_for_save_admin = None
.\admin_panel.py,1398,st.session_state.uploaded_csv_content_for_save_admin,"('Const', 'None')","('Const',)",,"else: st.error(get_text_local(""admin_csv_parse_error_empty"", ""CSV geparst, aber leer."")); st.session_state.uploaded_csv_content_for_save_admin = None; st.session_state.parsed_csv_df_for_preview_admin = None"
.\admin_panel.py,1399,st.session_state.uploaded_csv_content_for_save_admin,"('Const', 'None')","('Const',)",,"except Exception as e_upload_process_csv: st.error(f""Fehler Verarbeitung CSV: {e_upload_process_csv}""); traceback.print_exc(); st.session_state.uploaded_csv_content_for_save_admin = None; st.session_state.parsed_csv_df_for_preview_admin = None"
.\admin_panel.py,1405,st.session_state.uploaded_csv_content_for_save_admin,"('Const', 'None')","('Const',)",,"st.success(""Preis-Matrix (CSV) gespeichert!""); st.session_state.uploaded_csv_content_for_save_admin = None; st.session_state.parsed_csv_df_for_preview_admin = None"
.\admin_panel.py,1396,st.session_state.uploaded_csv_content_for_save_admin,"('Name', 'csv_content_temp')","('Name',)",csv_content_temp,st.session_state.uploaded_csv_content_for_save_admin = csv_content_temp; st.session_state.parsed_csv_df_for_preview_admin = parsed_df_temp_csv
.\admin_panel.py,1337,st.session_state.uploaded_excel_bytes_for_save_admin,"('Const', 'None')","('Const',)",,if 'uploaded_excel_bytes_for_save_admin' not in st.session_state: st.session_state.uploaded_excel_bytes_for_save_admin = None
.\admin_panel.py,1355,st.session_state.uploaded_excel_bytes_for_save_admin,"('Const', 'None')","('Const',)",,"st.error(get_text_local(""admin_xlsx_parse_error_empty"", ""Excel geparst, aber leer."")); st.session_state.uploaded_excel_bytes_for_save_admin = None; st.session_state.parsed_excel_df_for_preview_admin = None"
.\admin_panel.py,1356,st.session_state.uploaded_excel_bytes_for_save_admin,"('Const', 'None')","('Const',)",,"except Exception as e_upload_process_excel: st.error(f""Fehler Verarbeitung Excel: {e_upload_process_excel}""); traceback.print_exc(); st.session_state.uploaded_excel_bytes_for_save_admin = None; st.session_state.parsed_excel_df_for_preview_admin = None"
.\admin_panel.py,1362,st.session_state.uploaded_excel_bytes_for_save_admin,"('Const', 'None')","('Const',)",,"st.success(""Preis-Matrix (Excel) gespeichert!""); st.session_state.uploaded_excel_bytes_for_save_admin = None; st.session_state.parsed_excel_df_for_preview_admin = None"
.\admin_panel.py,1352,st.session_state.uploaded_excel_bytes_for_save_admin,"('Name', 'excel_bytes_content')","('Name',)",excel_bytes_content,st.session_state.uploaded_excel_bytes_for_save_admin = excel_bytes_content; st.session_state.parsed_excel_df_for_preview_admin = parsed_df_temp_excel
.\crm_pipeline_ui.py,471,stage_info,"('Subscript', ('Attr', 'self', 'pipeline_stages'), ('Name', 'stage'))","('Subscript',)","self,stage",stage_info = self.pipeline_stages[stage]
.\crm_pipeline_ui.py,332,stage_info,"('Subscript', ('Attr', 'self', 'pipeline_stages'), ('Subscript', ('Name', 'lead'), ('Const', ""'stage'"")))","('Subscript',)","lead,self",stage_info = self.pipeline_stages[lead['stage']]
.\crm_pipeline_ui.py,135,stages,"('Call', ('Name', 'sorted'), (('Call', ('Attr', 'self.pipeline_stages', 'items'), (), ()),), (('key', ('Other', 'Lambda')),))","('Call', 1, 1)","self,sorted,x","stages = sorted(self.pipeline_stages.items(), key=lambda x: x[1]['order'])"
.\crm_pipeline_ui.py,468,stages,"('List', (('Const', ""'lead'""), ('Const', ""'qualified'""), ('Const', ""'proposal'""), ('Const', ""'negotiation'""), ('Const', ""'won'"")))","('List', 5)",,"stages = ['lead', 'qualified', 'proposal', 'negotiation', 'won']"
.\dev_tools\kakerlake_ultra_cleaner.py,145,start,"('Attr', 'node', 'lineno')","('Attr',)",node,"start=node.lineno; end=getattr(node,'end_lineno',start); body_src=""\n"".join(lines[start-1:end])"
.\mnt\data\kakerlake_ultra_cleaner.py,145,start,"('Attr', 'node', 'lineno')","('Attr',)",node,"start=node.lineno; end=getattr(node,'end_lineno',start); body_src=""\n"".join(lines[start-1:end])"
.\tools\kakerlake_ultra_cleaner.py,146,start,"('Attr', 'node', 'lineno')","('Attr',)",node,"start=node.lineno; end=getattr(node,'end_lineno',start); body_src=""\n"".join(lines[start-1:end])"
.\notwendig oder nicht\wichtig\repo_porter.py,330,start,"('Other', 'IfExp')","('Other', 'IfExp')","di,min",start = min(di.decorators) if di.decorators else di.lineno
.\tools\repo_porter.py,330,start,"('Other', 'IfExp')","('Other', 'IfExp')","di,min",start = min(di.decorators) if di.decorators else di.lineno
.\pdf_styles.py,527,start,"('Subscript', ('Subscript', ('Name', 'components'), ('Name', 'source')), ('Const', ""'pos'""))","('Subscript',)","components,source",start = components[source]['pos']
.\crm_calendar_ui.py,454,start_of_week,"('Call', ('Attr', 'start_of_week', 'replace'), (), (('hour', ('Const', '0')), ('microsecond', ('Const', '0')), ('minute', ('Const', '0')), ('second', ('Const', '0'))))","('Call', 0, 4)",start_of_week,"start_of_week = start_of_week.replace(hour=0, minute=0, second=0, microsecond=0)"
.\crm_calendar_ui.py,453,start_of_week,"('Sub', ('Name', 'now'), ('Call', ('Name', 'timedelta'), (), (('days', ('Call', ('Attr', 'now', 'weekday'), (), ())),)))","('Sub', ('Name',), ('Call', 0, 1))","now,timedelta",start_of_week = now - timedelta(days=now.weekday())
.\crm_pipeline_ui.py,100,stats,"('Call', ('Attr', 'self', '_get_pipeline_statistics'), (), ())","('Call', 0, 0)",self,stats = self._get_pipeline_statistics()
.\analysis_utils.py,394,stats,"('Dict', (('KV', ('Const', ""'count'""), ('Name', 'n')), ('KV', ('Const', ""'max'""), ('Call', ('Name', 'max'), (('Name', 'data'),), ())), ('KV', ('Const', ""'mean'""), ('Div', ('Call', ('Name', 'sum'), (('Name', 'data'),), ()), ('Name', 'n'))), ('KV', ('Const', ""'median'""), ('Other', 'IfExp')), ('KV', ('Const', ""'min'""), ('Call', ('Name', 'min'), (('Name', 'data'),), ())), ('KV', ('Const', ""'range'""), ('Sub', ('Call', ('Name', 'max'), (('Name', 'data'),), ()), ('Call', ('Name', 'min'), (('Name', 'data'),), ())))))","('Dict', 6)","data,max,min,n,sorted_data,sum",stats = {
.\database.py,465,stats,"('Dict', ())","('Dict', 0)",,stats = {}
.\central_pdf_system.py,785,status,"('Call', ('Attr', 'PDF_MANAGER', 'get_system_status'), (), ())","('Call', 0, 0)",PDF_MANAGER,status = PDF_MANAGER.get_system_status()
.\central_pdf_system.py,543,status,"('Call', ('Attr', 'self', 'get_system_status'), (), ())","('Call', 0, 0)",self,status = self.get_system_status()
.\central_pdf_system.py,2163,status,"('Call', ('Name', 'get_central_pdf_status'), (), ())","('Call', 0, 0)",get_central_pdf_status,status = get_central_pdf_status()
.\ai_companion.py,297,status,"('Const', ""' API-Key fehlt'"")","('Const',)",,"status = "" API-Key fehlt"""
.\ai_companion.py,295,status,"('Const', ""'🟢 AI Bereit'"")","('Const',)",,"status = ""🟢 AI Bereit"""
.\central_pdf_system.py,622,status,"('Dict', (('KV', ('Const', ""'mega_hybrid'""), ('Const', 'False')), ('KV', ('Const', ""'preview'""), ('Const', 'False')), ('KV', ('Const', ""'standard'""), ('Const', 'True')), ('KV', ('Const', ""'tom90'""), ('Const', 'False'))))","('Dict', 4)",,status = {
.\check_product_images.py,20,status,"('Other', 'IfExp')","('Other', 'IfExp')",r,"status = ""Ja"" if r[2] else ""Nein"""
.\notwendig oder nicht\wichtig\portings\patches\check_product_images.py.insert.py,25,status,"('Other', 'IfExp')","('Other', 'IfExp')",r,"status = ""Ja"" if r[2] else ""Nein"""
.\notwendig oder nicht\wichtig\portings\patches\test_admin_fix.py.insert.py,41,status,"('Other', 'IfExp')","('Other', 'IfExp')","expected,result","status = ""✅"" if result == expected else ""❌"""
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,212,status,"('Other', 'IfExp')","('Other', 'IfExp')",result,"status = ""✅ BESTANDEN"" if result else ""❌ FEHLGESCHLAGEN"""
.\pdf_ui.py,1433,status,"('Other', 'IfExp')","('Other', 'IfExp')","doc_path,os","status = """" if os.path.exists(doc_path) else """""
.\pdf_ui.py,1456,status,"('Other', 'IfExp')","('Other', 'IfExp')","full_path,os","status = """" if os.path.exists(full_path) else """""
.\tests\test_admin_fix.py,37,status,"('Other', 'IfExp')","('Other', 'IfExp')","expected,result","status = ""✅"" if result == expected else ""❌"""
.\tests\test_logo_integration.py,185,status,"('Other', 'IfExp')","('Other', 'IfExp')",result,"status = ""✅ BESTANDEN"" if result else ""❌ FEHLGESCHLAGEN"""
.\tools\portings\patches\check_product_images.py.insert.py,25,status,"('Other', 'IfExp')","('Other', 'IfExp')",r,"status = ""Ja"" if r[2] else ""Nein"""
.\tools\portings\patches\test_admin_fix.py.insert.py,41,status,"('Other', 'IfExp')","('Other', 'IfExp')","expected,result","status = ""✅"" if result == expected else ""❌"""
.\tools\portings\patches\test_logo_integration.py.insert.py,212,status,"('Other', 'IfExp')","('Other', 'IfExp')",result,"status = ""✅ BESTANDEN"" if result else ""❌ FEHLGESCHLAGEN"""
.\add_test_product_images.py,81,status,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","image_data,len","status = f""✓ {len(image_data)} Zeichen"""
.\add_test_product_images.py,84,status,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","image_data,len","status = f""✗ {len(image_data) if image_data else 0} Zeichen"""
.\notwendig oder nicht\wichtig\portings\patches\add_test_product_images.py.insert.py,108,status,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","image_data,len","status = f""✓ {len(image_data)} Zeichen"""
.\notwendig oder nicht\wichtig\portings\patches\add_test_product_images.py.insert.py,111,status,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","image_data,len","status = f""✗ {len(image_data) if image_data else 0} Zeichen"""
.\tools\portings\patches\add_test_product_images.py.insert.py,108,status,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","image_data,len","status = f""✓ {len(image_data)} Zeichen"""
.\tools\portings\patches\add_test_product_images.py.insert.py,111,status,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","image_data,len","status = f""✗ {len(image_data) if image_data else 0} Zeichen"""
.\tools\import_module_attributes_generic.py,507,stem,"('Attr', 'Path(path)', 'stem')","('Attr',)","Path,path",stem = Path(path).stem
.\excel_eval.py,263,stem,"('Attr', 'p', 'stem')","('Attr',)",p,stem = p.stem
.\pdf_template_engine\placeholders.py,1068,step,"('Call', ('Name', 'nice_step'), (('Div', ('Name', 'max_val'), ('Const', '5.0')),), ())","('Call', 1, 0)","max_val,nice_step",step = nice_step(max_val / 5.0)
.\pdf_template_engine\placeholders.py,1063,step,"('Mult', (('Name', 'm'), ('Pow', ('Const', '10'), ('Name', 'exp'))))","('Mult', (('Name',), ('Pow', ('Const',), ('Name',))))","exp,m",step = m * (10 ** exp)
.\pdf_template_engine\placeholders.py,1917,sto_id,"('Call', ('Attr', 'project_details', 'get'), (('Const', ""'selected_storage_id'""),), ())","('Call', 1, 0)",project_details,"sto_id = project_details.get(""selected_storage_id"")"
.\pdf_template_engine\placeholders.py,1920,sto_id,"('Call', ('Name', '_get_pid_sto'), (('Name', 'storage_name'),), ())","('Call', 1, 0)","_get_pid_sto,storage_name",sto_id = _get_pid_sto(storage_name)
.\pdf_template_engine\placeholders.py,1922,sto_id,"('Const', 'None')","('Const',)",,sto_id = None
.\pdf_template_engine\placeholders.py,1803,sto_kwh,"('Const', 'None')","('Const',)",,sto_kwh = None
.\pdf_template_engine\placeholders.py,1807,sto_kwh,"('Name', 'v')","('Name',)",v,sto_kwh = v
.\solar_calculator.py,218,storage_capacity_from_model,"('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'std', 'get'), (('Const', ""'storage_power_kw'""), ('Const', '0.0')), ()), ('Const', '0.0'))),), ())","('Call', 1, 0)","float,std","storage_capacity_from_model = float(std.get('storage_power_kw', 0.0) or 0.0)"
.\solar_calculator.py,213,storage_capacity_from_model,"('Const', '0.0')","('Const',)",,storage_capacity_from_model = 0.0
.\calculations.py,3889,storage_max_cycles_calc,"('Const', '0.0')","('Const',)",,storage_max_cycles_calc = 0.0
.\calculations.py,3910,storage_max_cycles_calc,"('Name', 'calculated_default_max_cycles_val')","('Name',)",calculated_default_max_cycles_val,storage_max_cycles_calc = calculated_default_max_cycles_val
.\calculations.py,3920,storage_max_cycles_calc,"('Name', 'calculated_default_max_cycles_val')","('Name',)",calculated_default_max_cycles_val,storage_max_cycles_calc = calculated_default_max_cycles_val
.\calculations.py,3914,storage_max_cycles_calc,"('Other', 'IfExp')","('Other', 'IfExp')","calculated_default_max_cycles_val,storage_max_cycles_val_conv",storage_max_cycles_calc = (
.\calculations.py,2922,storage_name_for_matrix_lookup,"('Call', ('Attr', 'storage_details_from_db', 'get'), (('Const', ""'model_name'""),), ())","('Call', 1, 0)",storage_details_from_db,"storage_name_for_matrix_lookup = storage_details_from_db.get(""model_name"")"
.\calculations.py,2914,storage_name_for_matrix_lookup,"('Call', ('Attr', 'texts', 'get'), (('Const', ""'no_storage_option_for_matrix'""), ('Const', ""'Ohne Speicher'"")), ())","('Call', 2, 0)",texts,storage_name_for_matrix_lookup = texts.get(
.\crm.py,587,storage_options,"('Add', (('List', (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'please_select_option'""), ('Const', ""'--- Bitte wählen ---'"")), ()),)), ('Other', 'ListComp')))","('Add', (('List', 1), ('Other', 'ListComp')))","get_text_crm,p,storage_products,texts","storage_options = [get_text_crm(texts, ""please_select_option"", ""--- Bitte wählen ---"")] + [p['model_name'] for p in storage_products if p.get('model_name')]"
.\multi_offer_generator.py,462,storage_options,"('Other', 'DictComp')","('Other', 'DictComp')","p,products","storage_options = {p[""model_name""]: p[""id""] for p in products[""storage""]}"
.\multi_offer_generator_new.py,257,storage_options,"('Other', 'DictComp')","('Other', 'DictComp')","p,products","storage_options = {p[""model_name""]: p[""id""] for p in products[""storage""]}"
.\multi_offer_generator_old.py,196,storage_options,"('Other', 'DictComp')","('Other', 'DictComp')","p,products","storage_options = {p[""model_name""]: p[""id""] for p in products[""storage""]}"
.\multi_offer_generator_old.py,549,storage_options,"('Other', 'DictComp')","('Other', 'DictComp')","p,products","storage_options = {p[""model_name""]: p[""id""] for p in products[""storage""]}"
.\crm.py,586,storage_products,"('Call', ('Attr', 'st.session_state.product_db_module', 'list_products'), (), (('category', ('Const', ""'Batteriespeicher'"")),))","('Call', 0, 1)",st,storage_products = st.session_state.product_db_module.list_products(category='Batteriespeicher')
.\crm.py,584,storage_products,"('List', ())","('List', 0)",,storage_products = []
.\components\progress_manager.py,24,style,"('Attr', 'ProgressStyle', 'SHADCN_DEFAULT')","('Attr',)",ProgressStyle,style: ProgressStyle = ProgressStyle.SHADCN_DEFAULT
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_manager.py.insert.py,78,style,"('Attr', 'ProgressStyle', 'SHADCN_DEFAULT')","('Attr',)",ProgressStyle,style: ProgressStyle = ProgressStyle.SHADCN_DEFAULT
.\tools\out_selected\patches\components\progress_manager.py.insert.py,78,style,"('Attr', 'ProgressStyle', 'SHADCN_DEFAULT')","('Attr',)",ProgressStyle,style: ProgressStyle = ProgressStyle.SHADCN_DEFAULT
.\pdf_generator.py,2690,style,"('Call', ('Attr', 'item', 'get'), (('Const', ""'style'""), ('Const', ""'normal'"")), ())","('Call', 2, 0)",item,"style = item.get('style', 'normal')"
.\pdf_generator.py,223,style,"('Call', ('Name', 'TableStyle'), (('List', (('Tuple', (('Const', ""'BACKGROUND'""), ('Tuple', (('Const', '0'), ('Const', '0'))), ('Tuple', (('USub', ('Const', '1')), ('Const', '0'))), ('Call', ('Name', 'HexColor'), (('Subscript', ('Subscript', ('Attr', 'self', 'theme'), ('Const', ""'colors'"")), ('Const', ""'table_header_bg'"")),), ()))), ('Tuple', (('Const', ""'TEXTCOLOR'""), ('Tuple', (('Const', '0'), ('Const', '0'))), ('Tuple', (('USub', ('Const', '1')), ('Const', '0'))), ('Call', ('Name', 'HexColor'), (('Subscript', ('Subscript', ('Attr', 'self', 'theme'), ('Const', ""'colors'"")), ('Const', ""'header_text'"")),), ()))), ('Tuple', (('Const', ""'ALIGN'""), ('Tuple', (('Const', '0'), ('Const', '0'))), ('Tuple', (('USub', ('Const', '1')), ('USub', ('Const', '1')))), ('Const', ""'CENTER'""))), ('Tuple', (('Const', ""'FONTNAME'""), ('Tuple', (('Const', '0'), ('Const', '0'))), ('Tuple', (('USub', ('Const', '1')), ('Const', '0'))), ('Subscript', ('Subscript', ('Attr', 'self', 'theme'), ('Const', ""'fonts'"")), ('Const', ""'family_bold'"")))), ('Tuple', (('Const', ""'BOTTOMPADDING'""), ('Tuple', (('Const', '0'), ('Const', '0'))), ('Tuple', (('USub', ('Const', '1')), ('Const', '0'))), ('Const', '12'))), ('Tuple', (('Const', ""'BACKGROUND'""), ('Tuple', (('Const', '0'), ('Const', '1'))), ('Tuple', (('USub', ('Const', '1')), ('USub', ('Const', '4')))), ('Call', ('Name', 'HexColor'), (('Subscript', ('Subscript', ('Attr', 'self', 'theme'), ('Const', ""'colors'"")), ('Const', ""'table_row_bg_odd'"")),), ()))), ('Tuple', (('Const', ""'GRID'""), ('Tuple', (('Const', '0'), ('Const', '0'))), ('Tuple', (('USub', ('Const', '1')), ('USub', ('Const', '3')))), ('Const', '1'), ('Call', ('Name', 'HexColor'), (('Subscript', ('Subscript', ('Attr', 'self', 'theme'), ('Const', ""'colors'"")), ('Const', ""'primary'"")),), ()))), ('Tuple', (('Const', ""'ALIGN'""), ('Tuple', (('Const', '1'), ('Const', '1'))), ('Tuple', (('Const', '1'), ('USub', ('Const', '1')))), ('Const', ""'LEFT'""))))),), ())","('Call', 1, 0)","HexColor,TableStyle,self",style = TableStyle([
.\pdf_generator.py,951,style,"('List', (('Tuple', (('Const', ""'BACKGROUND'""), ('Tuple', (('Const', '0'), ('Const', '0'))), ('Tuple', (('USub', ('Const', '1')), ('Const', '0'))), ('Call', ('Attr', 'colors', 'HexColor'), (('Name', 'header_bg'),), ()))), ('Tuple', (('Const', ""'TEXTCOLOR'""), ('Tuple', (('Const', '0'), ('Const', '0'))), ('Tuple', (('USub', ('Const', '1')), ('Const', '0'))), ('Attr', 'colors', 'white'))), ('Tuple', (('Const', ""'FONTNAME'""), ('Tuple', (('Const', '0'), ('Const', '0'))), ('Tuple', (('USub', ('Const', '1')), ('Const', '0'))), ('Name', 'FONT_BOLD'))), ('Tuple', (('Const', ""'ALIGN'""), ('Tuple', (('Const', '0'), ('Const', '0'))), ('Tuple', (('USub', ('Const', '1')), ('Const', '0'))), ('Const', ""'CENTER'""))), ('Tuple', (('Const', ""'VALIGN'""), ('Tuple', (('Const', '0'), ('Const', '0'))), ('Tuple', (('USub', ('Const', '1')), ('USub', ('Const', '1')))), ('Const', ""'MIDDLE'""))), ('Tuple', (('Const', ""'FONTNAME'""), ('Tuple', (('Const', '0'), ('Const', '1'))), ('Tuple', (('USub', ('Const', '1')), ('USub', ('Const', '1')))), ('Name', 'FONT_NORMAL'))), ('Tuple', (('Const', ""'TEXTCOLOR'""), ('Tuple', (('Const', '0'), ('Const', '1'))), ('Tuple', (('USub', ('Const', '1')), ('USub', ('Const', '1')))), ('Call', ('Attr', 'colors', 'HexColor'), (('Name', 'TEXT_COLOR_HEX'),), ()))), ('Tuple', (('Const', ""'LEFTPADDING'""), ('Tuple', (('Const', '0'), ('Const', '0'))), ('Tuple', (('USub', ('Const', '1')), ('USub', ('Const', '1')))), ('Mult', (('Const', '3'), ('Name', 'mm'))))), ('Tuple', (('Const', ""'RIGHTPADDING'""), ('Tuple', (('Const', '0'), ('Const', '0'))), ('Tuple', (('USub', ('Const', '1')), ('USub', ('Const', '1')))), ('Mult', (('Const', '3'), ('Name', 'mm'))))), ('Tuple', (('Const', ""'TOPPADDING'""), ('Tuple', (('Const', '0'), ('Const', '0'))), ('Tuple', (('USub', ('Const', '1')), ('USub', ('Const', '1')))), ('Mult', (('Const', '2.5'), ('Name', 'mm'))))), ('Tuple', (('Const', ""'BOTTOMPADDING'""), ('Tuple', (('Const', '0'), ('Const', '0'))), ('Tuple', (('USub', ('Const', '1')), ('USub', ('Const', '1')))), ('Mult', (('Const', '2.5'), ('Name', 'mm'))))), ('Tuple', (('Const', ""'GRID'""), ('Tuple', (('Const', '0'), ('Const', '0'))), ('Tuple', (('USub', ('Const', '1')), ('USub', ('Const', '1')))), ('Const', '0.5'), ('Call', ('Attr', 'colors', 'HexColor'), (('Name', 'SEPARATOR_LINE_COLOR_HEX'),), ())))))","('List', 12)","FONT_BOLD,FONT_NORMAL,SEPARATOR_LINE_COLOR_HEX,TEXT_COLOR_HEX,colors,header_bg,mm",style = [
.\components\progress_demo.py,57,style_options,"('Dict', (('KV', ('Const', ""'Animiert'""), ('Attr', 'ProgressStyle', 'SHADCN_ANIMATED')), ('KV', ('Const', ""'Classic'""), ('Attr', 'ProgressStyle', 'SHADCN_MODERN')), ('KV', ('Const', ""'Gradient'""), ('Attr', 'ProgressStyle', 'SHADCN_GRADIENT')), ('KV', ('Const', ""'Minimal'""), ('Attr', 'ProgressStyle', 'SHADCN_MINIMAL')), ('KV', ('Const', ""'Modern (Standard)'""), ('Attr', 'ProgressStyle', 'SHADCN_DEFAULT'))))","('Dict', 5)",ProgressStyle,style_options = {
.\components\progress_settings.py,18,style_options,"('Dict', (('KV', ('Const', ""'Animiert'""), ('Attr', 'ProgressStyle', 'SHADCN_ANIMATED')), ('KV', ('Const', ""'Gradient'""), ('Attr', 'ProgressStyle', 'SHADCN_GRADIENT')), ('KV', ('Const', ""'Minimal'""), ('Attr', 'ProgressStyle', 'SHADCN_MINIMAL')), ('KV', ('Const', ""'Modern'""), ('Attr', 'ProgressStyle', 'SHADCN_MODERN')), ('KV', ('Const', ""'Standard (shadcn)'""), ('Attr', 'ProgressStyle', 'SHADCN_DEFAULT'))))","('Dict', 5)",ProgressStyle,style_options = {
.\notwendig oder nicht\wichtig\out_selected\patches\components\progress_settings.py.insert.py,20,style_options,"('Dict', (('KV', ('Const', ""'Animiert'""), ('Attr', 'ProgressStyle', 'SHADCN_ANIMATED')), ('KV', ('Const', ""'Gradient'""), ('Attr', 'ProgressStyle', 'SHADCN_GRADIENT')), ('KV', ('Const', ""'Minimal'""), ('Attr', 'ProgressStyle', 'SHADCN_MINIMAL')), ('KV', ('Const', ""'Modern'""), ('Attr', 'ProgressStyle', 'SHADCN_MODERN')), ('KV', ('Const', ""'Standard (shadcn)'""), ('Attr', 'ProgressStyle', 'SHADCN_DEFAULT'))))","('Dict', 5)",ProgressStyle,style_options = {
.\notwendig oder nicht\wichtig\portings\patches\components\progress_settings.py.insert.py,21,style_options,"('Dict', (('KV', ('Const', ""'Animiert'""), ('Attr', 'ProgressStyle', 'SHADCN_ANIMATED')), ('KV', ('Const', ""'Gradient'""), ('Attr', 'ProgressStyle', 'SHADCN_GRADIENT')), ('KV', ('Const', ""'Minimal'""), ('Attr', 'ProgressStyle', 'SHADCN_MINIMAL')), ('KV', ('Const', ""'Modern'""), ('Attr', 'ProgressStyle', 'SHADCN_MODERN')), ('KV', ('Const', ""'Standard (shadcn)'""), ('Attr', 'ProgressStyle', 'SHADCN_DEFAULT'))))","('Dict', 5)",ProgressStyle,style_options = {
.\tools\out_selected\patches\components\progress_settings.py.insert.py,20,style_options,"('Dict', (('KV', ('Const', ""'Animiert'""), ('Attr', 'ProgressStyle', 'SHADCN_ANIMATED')), ('KV', ('Const', ""'Gradient'""), ('Attr', 'ProgressStyle', 'SHADCN_GRADIENT')), ('KV', ('Const', ""'Minimal'""), ('Attr', 'ProgressStyle', 'SHADCN_MINIMAL')), ('KV', ('Const', ""'Modern'""), ('Attr', 'ProgressStyle', 'SHADCN_MODERN')), ('KV', ('Const', ""'Standard (shadcn)'""), ('Attr', 'ProgressStyle', 'SHADCN_DEFAULT'))))","('Dict', 5)",ProgressStyle,style_options = {
.\tools\portings\patches\components\progress_settings.py.insert.py,21,style_options,"('Dict', (('KV', ('Const', ""'Animiert'""), ('Attr', 'ProgressStyle', 'SHADCN_ANIMATED')), ('KV', ('Const', ""'Gradient'""), ('Attr', 'ProgressStyle', 'SHADCN_GRADIENT')), ('KV', ('Const', ""'Minimal'""), ('Attr', 'ProgressStyle', 'SHADCN_MINIMAL')), ('KV', ('Const', ""'Modern'""), ('Attr', 'ProgressStyle', 'SHADCN_MODERN')), ('KV', ('Const', ""'Standard (shadcn)'""), ('Attr', 'ProgressStyle', 'SHADCN_DEFAULT'))))","('Dict', 5)",ProgressStyle,style_options = {
.\analysis.py,6221,styled_comparison,"('Call', ('Attr', 'comparison_df.style', 'format'), (('Name', 'format_dict'),), ())","('Call', 1, 0)","comparison_df,format_dict",styled_comparison = comparison_df.style.format(format_dict)
.\analysis.py,6225,styled_comparison,"('Call', ('Attr', 'styled_comparison', 'background_gradient'), (), (('cmap', ('Const', ""'Greens'"")), ('subset', ('List', (('Const', ""'NPV'""),)))))","('Call', 0, 2)",styled_comparison,styled_comparison = styled_comparison.background_gradient(
.\analysis.py,6229,styled_comparison,"('Name', 'comparison_df')","('Name',)",comparison_df,styled_comparison = comparison_df
.\dev_tools\kakerlake_ultra_cleaner.py,363,sub,"('Attr', 'orig', 'value')","('Attr',)",orig,sub=orig.value
.\mnt\data\kakerlake_ultra_cleaner.py,363,sub,"('Attr', 'orig', 'value')","('Attr',)",orig,sub=orig.value
.\tools\kakerlake_ultra_cleaner.py,364,sub,"('Attr', 'orig', 'value')","('Attr',)",orig,sub=orig.value
.\dev_tools\kakerlake_ultra_cleaner.py,603,sub,"('Call', ('Attr', 'ap', 'add_subparsers'), (), (('dest', ('Const', ""'cmd'"")), ('required', ('Const', 'True'))))","('Call', 0, 2)",ap,"sub=ap.add_subparsers(dest=""cmd"", required=True)"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,421,sub,"('Call', ('Attr', 'ap', 'add_subparsers'), (), (('dest', ('Const', ""'cmd'"")), ('required', ('Const', 'True'))))","('Call', 0, 2)",ap,"sub=ap.add_subparsers(dest=""cmd"", required=True)"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,411,sub,"('Call', ('Attr', 'ap', 'add_subparsers'), (), (('dest', ('Const', ""'cmd'"")), ('required', ('Const', 'True'))))","('Call', 0, 2)",ap,"sub=ap.add_subparsers(dest=""cmd"", required=True)"
.\mnt\data\kakerlake_ultra_cleaner.py,603,sub,"('Call', ('Attr', 'ap', 'add_subparsers'), (), (('dest', ('Const', ""'cmd'"")), ('required', ('Const', 'True'))))","('Call', 0, 2)",ap,"sub=ap.add_subparsers(dest=""cmd"", required=True)"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,421,sub,"('Call', ('Attr', 'ap', 'add_subparsers'), (), (('dest', ('Const', ""'cmd'"")), ('required', ('Const', 'True'))))","('Call', 0, 2)",ap,"sub=ap.add_subparsers(dest=""cmd"", required=True)"
.\notwendig oder nicht\wichtig\repo_porter.py,603,sub,"('Call', ('Attr', 'ap', 'add_subparsers'), (), (('dest', ('Const', ""'cmd'"")), ('required', ('Const', 'True'))))","('Call', 0, 2)",ap,"sub = ap.add_subparsers(dest=""cmd"", required=True)"
.\tools\kakerlake_ultra_cleaner.py,604,sub,"('Call', ('Attr', 'ap', 'add_subparsers'), (), (('dest', ('Const', ""'cmd'"")), ('required', ('Const', 'True'))))","('Call', 0, 2)",ap,"sub=ap.add_subparsers(dest=""cmd"", required=True)"
.\tools\repo_porter.py,603,sub,"('Call', ('Attr', 'ap', 'add_subparsers'), (), (('dest', ('Const', ""'cmd'"")), ('required', ('Const', 'True'))))","('Call', 0, 2)",ap,"sub = ap.add_subparsers(dest=""cmd"", required=True)"
.\excel_eval.py,372,sub,"('Call', ('Attr', 'p', 'add_subparsers'), (), (('dest', ('Const', ""'cmd'"")), ('required', ('Const', 'True'))))","('Call', 0, 2)",p,"sub = p.add_subparsers(dest=""cmd"", required=True)"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,232,sub,"('Name', 'rhs')","('Name',)",rhs,sub = rhs
.\dev_tools\kakerlake_ultra_cleaner_v3.py,246,sub,"('Name', 'rhs')","('Name',)",rhs,sub = rhs
.\mnt\data\kakerlake_ultra_cleaner_v2.py,232,sub,"('Name', 'rhs')","('Name',)",rhs,sub = rhs
.\admin_panel.py,239,submit_button_label,"('Call', ('Name', 'get_text_local'), (('Const', ""'admin_add_company_button'""), ('Const', ""'Firma anlegen'"")), ())","('Call', 2, 0)",get_text_local,"submit_button_label = get_text_local(""admin_add_company_button"", ""Firma anlegen"")"
.\admin_panel.py,246,submit_button_label,"('Call', ('Name', 'get_text_local'), (('Const', ""'admin_save_company_button'""), ('Const', ""'Änderungen speichern'"")), ())","('Call', 2, 0)",get_text_local,"submit_button_label = get_text_local(""admin_save_company_button"", ""Änderungen speichern"")"
.\admin_panel.py,1625,submit_button_text,"('Call', ('Name', 'get_text_local'), (('Const', ""'admin_save_template_button'""), ('Const', ""'Vorlage speichern'"")), ())","('Call', 2, 0)",get_text_local,"submit_button_text = get_text_local(""admin_save_template_button"", ""Vorlage speichern"")"
.\admin_panel.py,1626,submit_button_text,"('Call', ('Name', 'get_text_local'), (('Const', ""'admin_update_template_button'""), ('Const', ""'Vorlage aktualisieren'"")), ())","('Call', 2, 0)",get_text_local,"if st.session_state[edit_mode_session_key] and st.session_state[edit_index_session_key] != -1: submit_button_text = get_text_local(""admin_update_template_button"", ""Vorlage aktualisieren"")"
.\crm.py,345,submitted,"('Call', ('Attr', 'st', 'form_submit_button'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'crm_save_customer_button'""), ('Const', ""'Kunden speichern'"")), ()),), ())","('Call', 1, 0)","get_text_crm,st,texts","submitted = st.form_submit_button(get_text_crm(texts, ""crm_save_customer_button"", ""Kunden speichern""))"
.\heatpump_ui.py,226,submitted,"('Call', ('Attr', 'st', 'form_submit_button'), (('Const', ""' Heizlast berechnen'""),), (('use_container_width', ('Const', 'True')),))","('Call', 1, 1)",st,"submitted = st.form_submit_button("" Heizlast berechnen"", use_container_width=True)"
.\crm_pipeline_ui.py,262,submitted,"('Call', ('Attr', 'st', 'form_submit_button'), (('Const', ""' Lead erstellen'""),), (('type', ('Const', ""'primary'"")),))","('Call', 1, 1)",st,"submitted = st.form_submit_button("" Lead erstellen"", type=""primary"")"
.\crm_calendar_ui.py,234,submitted,"('Call', ('Attr', 'st', 'form_submit_button'), (('Const', ""' Termin erstellen'""),), (('type', ('Const', ""'primary'"")),))","('Call', 1, 1)",st,"submitted = st.form_submit_button("" Termin erstellen"", type=""primary"")"
.\admin_product_attributes_ui.py,66,submitted,"('Call', ('Attr', 'st', 'form_submit_button'), (('Const', ""'Speichern'""),), ())","('Call', 1, 0)",st,"submitted = st.form_submit_button(""Speichern"")"
.\admin_panel.py,1627,submitted,"('Call', ('Attr', 'st', 'form_submit_button'), (('Name', 'submit_button_text'),), ())","('Call', 1, 0)","st,submit_button_text",submitted = st.form_submit_button(submit_button_text)
.\doc_output.py,2146,submitted_generate_pdf,"('Call', ('Attr', 'st', 'form_submit_button'), (('Other', 'JoinedStr'),), (('disabled', ('Name', 'submit_button_disabled')), ('type', ('Const', ""'primary'""))))","('Call', 1, 2)","get_text_pdf_ui,st,submit_button_disabled,texts",submitted_generate_pdf = st.form_submit_button(
.\pdf_ui.py,1063,submitted_generate_pdf,"('Call', ('Attr', 'st', 'form_submit_button'), (), (('disabled', ('Name', 'submit_button_disabled')), ('label', ('Other', 'JoinedStr')), ('type', ('Const', ""'primary'""))))","('Call', 0, 3)","get_text_pdf_ui,st,submit_button_disabled,texts","submitted_generate_pdf = st.form_submit_button(label=f""**{get_text_pdf_ui(texts, 'pdf_generate_button', 'Angebots-PDF erstellen')}**"", type=""primary"", disabled=submit_button_disabled)"
.\heatpump_pricing.py,230,subsidy,"('Call', ('Attr', 'offer', 'get'), (('Const', ""'beg_subsidy'""), ('Dict', ())), ())","('Call', 2, 0)",offer,"subsidy = offer.get(""beg_subsidy"", {})"
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,178,subsidy,"('Call', ('Attr', 'offer', 'get'), (('Const', ""'beg_subsidy'""), ('Dict', ())), ())","('Call', 2, 0)",offer,"subsidy = offer.get(""beg_subsidy"", {})"
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,178,subsidy,"('Call', ('Attr', 'offer', 'get'), (('Const', ""'beg_subsidy'""), ('Dict', ())), ())","('Call', 2, 0)",offer,"subsidy = offer.get(""beg_subsidy"", {})"
.\heatpump_ui.py,1173,subsidy,"('Call', ('Name', 'calculate_beg_subsidy'), (('Subscript', ('Name', 'mods'), ('Const', ""'final_price_net'"")), ('Name', 'natural_ref'), ('Name', 'replace_old'), ('Name', 'low_income')), ())","('Call', 4, 0)","calculate_beg_subsidy,low_income,mods,natural_ref,replace_old","subsidy = calculate_beg_subsidy(mods['final_price_net'], natural_ref, replace_old, low_income)"
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_ui.py.insert.py,97,subsidy,"('Call', ('Name', 'calculate_beg_subsidy'), (('Subscript', ('Name', 'mods'), ('Const', ""'final_price_net'"")), ('Name', 'natural_ref'), ('Name', 'replace_old'), ('Name', 'low_income')), ())","('Call', 4, 0)","calculate_beg_subsidy,low_income,mods,natural_ref,replace_old","subsidy = calculate_beg_subsidy(mods['final_price_net'], natural_ref, replace_old, low_income)"
.\notwendig oder nicht\wichtig\portings\patches\heatpump_ui.py.insert.py,98,subsidy,"('Call', ('Name', 'calculate_beg_subsidy'), (('Subscript', ('Name', 'mods'), ('Const', ""'final_price_net'"")), ('Name', 'natural_ref'), ('Name', 'replace_old'), ('Name', 'low_income')), ())","('Call', 4, 0)","calculate_beg_subsidy,low_income,mods,natural_ref,replace_old","subsidy = calculate_beg_subsidy(mods['final_price_net'], natural_ref, replace_old, low_income)"
.\tools\out_selected\patches\heatpump_ui.py.insert.py,97,subsidy,"('Call', ('Name', 'calculate_beg_subsidy'), (('Subscript', ('Name', 'mods'), ('Const', ""'final_price_net'"")), ('Name', 'natural_ref'), ('Name', 'replace_old'), ('Name', 'low_income')), ())","('Call', 4, 0)","calculate_beg_subsidy,low_income,mods,natural_ref,replace_old","subsidy = calculate_beg_subsidy(mods['final_price_net'], natural_ref, replace_old, low_income)"
.\tools\portings\patches\heatpump_ui.py.insert.py,98,subsidy,"('Call', ('Name', 'calculate_beg_subsidy'), (('Subscript', ('Name', 'mods'), ('Const', ""'final_price_net'"")), ('Name', 'natural_ref'), ('Name', 'replace_old'), ('Name', 'low_income')), ())","('Call', 4, 0)","calculate_beg_subsidy,low_income,mods,natural_ref,replace_old","subsidy = calculate_beg_subsidy(mods['final_price_net'], natural_ref, replace_old, low_income)"
.\heatpump_pricing.py,200,subsidy,"('Call', ('Name', 'calculate_beg_subsidy'), (('Subscript', ('Name', 'mods'), ('Const', ""'final_price_net'"")),), (('low_income', ('Call', ('Attr', 'beg_flags', 'get'), (('Const', ""'low_income'""), ('Const', 'False')), ())), ('replace_old_heating', ('Call', ('Attr', 'beg_flags', 'get'), (('Const', ""'replace_old'""), ('Const', 'False')), ())), ('use_natural_refrigerant', ('Call', ('Attr', 'beg_flags', 'get'), (('Const', ""'natural_refrigerant'""), ('Const', 'True')), ()))))","('Call', 1, 3)","beg_flags,calculate_beg_subsidy,mods","subsidy = calculate_beg_subsidy(mods[""final_price_net""],"
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,147,subsidy,"('Call', ('Name', 'calculate_beg_subsidy'), (('Subscript', ('Name', 'mods'), ('Const', ""'final_price_net'"")),), (('low_income', ('Call', ('Attr', 'beg_flags', 'get'), (('Const', ""'low_income'""), ('Const', 'False')), ())), ('replace_old_heating', ('Call', ('Attr', 'beg_flags', 'get'), (('Const', ""'replace_old'""), ('Const', 'False')), ())), ('use_natural_refrigerant', ('Call', ('Attr', 'beg_flags', 'get'), (('Const', ""'natural_refrigerant'""), ('Const', 'True')), ()))))","('Call', 1, 3)","beg_flags,calculate_beg_subsidy,mods","subsidy = calculate_beg_subsidy(mods[""final_price_net""],"
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,147,subsidy,"('Call', ('Name', 'calculate_beg_subsidy'), (('Subscript', ('Name', 'mods'), ('Const', ""'final_price_net'"")),), (('low_income', ('Call', ('Attr', 'beg_flags', 'get'), (('Const', ""'low_income'""), ('Const', 'False')), ())), ('replace_old_heating', ('Call', ('Attr', 'beg_flags', 'get'), (('Const', ""'replace_old'""), ('Const', 'False')), ())), ('use_natural_refrigerant', ('Call', ('Attr', 'beg_flags', 'get'), (('Const', ""'natural_refrigerant'""), ('Const', 'True')), ()))))","('Call', 1, 3)","beg_flags,calculate_beg_subsidy,mods","subsidy = calculate_beg_subsidy(mods[""final_price_net""],"
.\pdf_template_engine\placeholders.py,2517,subsidy_amount,"('Call', ('Attr', 'beg_data', 'get'), (('Const', ""'beg_subsidy_amount_eur'""), ('Const', '0')), ())","('Call', 2, 0)",beg_data,"subsidy_amount = beg_data.get('beg_subsidy_amount_eur', 0)"
.\heatpump_ui.py,513,subsidy_amount,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Förderung BEG (€)'""),), (('help', ('Const', ""'Bundesförderung für effiziente Gebäude'"")), ('max_value', ('Const', '20000')), ('min_value', ('Const', '0')), ('step', ('Const', '500')), ('value', ('Const', '7500'))))","('Call', 1, 5)",st,subsidy_amount = st.number_input(
.\heatpump_ui.py,895,subsidy_amount,"('Const', '7500')","('Const',)",,subsidy_amount = 7500
.\heatpump_pricing.py,147,subsidy_amount,"('Mult', (('Div', ('Name', 'capped_pct'), ('Const', '100.0')), ('Name', 'eligible_costs')))","('Mult', (('Div', ('Name',), ('Const',)), ('Name',)))","capped_pct,eligible_costs",subsidy_amount = eligible_costs * (capped_pct / 100.0)
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,92,subsidy_amount,"('Mult', (('Div', ('Name', 'capped_pct'), ('Const', '100.0')), ('Name', 'eligible_costs')))","('Mult', (('Div', ('Name',), ('Const',)), ('Name',)))","capped_pct,eligible_costs",subsidy_amount = eligible_costs * (capped_pct / 100.0)
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,92,subsidy_amount,"('Mult', (('Div', ('Name', 'capped_pct'), ('Const', '100.0')), ('Name', 'eligible_costs')))","('Mult', (('Div', ('Name',), ('Const',)), ('Name',)))","capped_pct,eligible_costs",subsidy_amount = eligible_costs * (capped_pct / 100.0)
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,41,success,"('Call', ('Name', 'add_brand_logo'), (('Const', ""'TestHersteller'""), ('Name', 'test_logo_b64'), ('Const', ""'PNG'"")), ())","('Call', 3, 0)","add_brand_logo,test_logo_b64","success = add_brand_logo(""TestHersteller"", test_logo_b64, ""PNG"")"
.\tests\test_logo_integration.py,42,success,"('Call', ('Name', 'add_brand_logo'), (('Const', ""'TestHersteller'""), ('Name', 'test_logo_b64'), ('Const', ""'PNG'"")), ())","('Call', 3, 0)","add_brand_logo,test_logo_b64","success = add_brand_logo(""TestHersteller"", test_logo_b64, ""PNG"")"
.\tools\portings\patches\test_logo_integration.py.insert.py,41,success,"('Call', ('Name', 'add_brand_logo'), (('Const', ""'TestHersteller'""), ('Name', 'test_logo_b64'), ('Const', ""'PNG'"")), ())","('Call', 3, 0)","add_brand_logo,test_logo_b64","success = add_brand_logo(""TestHersteller"", test_logo_b64, ""PNG"")"
.\notwendig oder nicht\wichtig\portings\patches\test_brand_logos.py.insert.py,83,success,"('Call', ('Name', 'add_brand_logo'), (('Name', 'brand'), ('Name', 'logo_b64'), ('Const', ""'PNG'"")), ())","('Call', 3, 0)","add_brand_logo,brand,logo_b64","success = add_brand_logo(brand, logo_b64, ""PNG"")"
.\tests\test_brand_logos.py,72,success,"('Call', ('Name', 'add_brand_logo'), (('Name', 'brand'), ('Name', 'logo_b64'), ('Const', ""'PNG'"")), ())","('Call', 3, 0)","add_brand_logo,brand,logo_b64","success = add_brand_logo(brand, logo_b64, ""PNG"")"
.\tools\portings\patches\test_brand_logos.py.insert.py,83,success,"('Call', ('Name', 'add_brand_logo'), (('Name', 'brand'), ('Name', 'logo_b64'), ('Const', ""'PNG'"")), ())","('Call', 3, 0)","add_brand_logo,brand,logo_b64","success = add_brand_logo(brand, logo_b64, ""PNG"")"
.\admin_logo_management_ui.py,198,success,"('Call', ('Name', 'add_brand_logo'), (('Name', 'brand_name'), ('Name', 'logo_base64'), ('Name', 'logo_format')), ())","('Call', 3, 0)","add_brand_logo,brand_name,logo_base64,logo_format","success = add_brand_logo(brand_name, logo_base64, logo_format)"
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,188,success,"('Call', ('Name', 'add_brand_logo'), (('Name', 'brand_name'), ('Name', 'logo_base64'), ('Name', 'logo_format')), ())","('Call', 3, 0)","add_brand_logo,brand_name,logo_base64,logo_format","success = add_brand_logo(brand_name, logo_base64, logo_format)"
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,229,success,"('Call', ('Name', 'add_brand_logo'), (('Name', 'brand_name'), ('Name', 'logo_base64'), ('Name', 'logo_format')), ())","('Call', 3, 0)","add_brand_logo,brand_name,logo_base64,logo_format","success = add_brand_logo(brand_name, logo_base64, logo_format)"
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,188,success,"('Call', ('Name', 'add_brand_logo'), (('Name', 'brand_name'), ('Name', 'logo_base64'), ('Name', 'logo_format')), ())","('Call', 3, 0)","add_brand_logo,brand_name,logo_base64,logo_format","success = add_brand_logo(brand_name, logo_base64, logo_format)"
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,229,success,"('Call', ('Name', 'add_brand_logo'), (('Name', 'brand_name'), ('Name', 'logo_base64'), ('Name', 'logo_format')), ())","('Call', 3, 0)","add_brand_logo,brand_name,logo_base64,logo_format","success = add_brand_logo(brand_name, logo_base64, logo_format)"
.\debug_logo_pdf.py,84,success,"('Call', ('Name', 'apply_dynamic_overlay_to_pdf'), (), (('dynamic_data', ('Name', 'dynamic_data')), ('output_path', ('Name', 'temp_output')), ('page_number', ('Const', '4')), ('template_path', ('Name', 'template_path'))))","('Call', 0, 4)","apply_dynamic_overlay_to_pdf,dynamic_data,temp_output,template_path",success = apply_dynamic_overlay_to_pdf(
.\notwendig oder nicht\wichtig\portings\patches\debug_logo_pdf.py.insert.py,82,success,"('Call', ('Name', 'apply_dynamic_overlay_to_pdf'), (), (('dynamic_data', ('Name', 'dynamic_data')), ('output_path', ('Name', 'temp_output')), ('page_number', ('Const', '4')), ('template_path', ('Name', 'template_path'))))","('Call', 0, 4)","apply_dynamic_overlay_to_pdf,dynamic_data,temp_output,template_path",success = apply_dynamic_overlay_to_pdf(
.\tools\portings\patches\debug_logo_pdf.py.insert.py,82,success,"('Call', ('Name', 'apply_dynamic_overlay_to_pdf'), (), (('dynamic_data', ('Name', 'dynamic_data')), ('output_path', ('Name', 'temp_output')), ('page_number', ('Const', '4')), ('template_path', ('Name', 'template_path'))))","('Call', 0, 4)","apply_dynamic_overlay_to_pdf,dynamic_data,temp_output,template_path",success = apply_dynamic_overlay_to_pdf(
.\admin_logo_management_ui.py,278,success,"('Call', ('Name', 'delete_brand_logo'), (('Subscript', ('Name', 'selected_logo'), ('Const', ""'brand_name'"")),), ())","('Call', 1, 0)","delete_brand_logo,selected_logo",success = delete_brand_logo(selected_logo['brand_name'])
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,271,success,"('Call', ('Name', 'delete_brand_logo'), (('Subscript', ('Name', 'selected_logo'), ('Const', ""'brand_name'"")),), ())","('Call', 1, 0)","delete_brand_logo,selected_logo",success = delete_brand_logo(selected_logo['brand_name'])
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,322,success,"('Call', ('Name', 'delete_brand_logo'), (('Subscript', ('Name', 'selected_logo'), ('Const', ""'brand_name'"")),), ())","('Call', 1, 0)","delete_brand_logo,selected_logo",success = delete_brand_logo(selected_logo['brand_name'])
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,271,success,"('Call', ('Name', 'delete_brand_logo'), (('Subscript', ('Name', 'selected_logo'), ('Const', ""'brand_name'"")),), ())","('Call', 1, 0)","delete_brand_logo,selected_logo",success = delete_brand_logo(selected_logo['brand_name'])
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,322,success,"('Call', ('Name', 'delete_brand_logo'), (('Subscript', ('Name', 'selected_logo'), ('Const', ""'brand_name'"")),), ())","('Call', 1, 0)","delete_brand_logo,selected_logo",success = delete_brand_logo(selected_logo['brand_name'])
.\migrate_logo_database.py,69,success,"('Call', ('Name', 'migrate_logo_database'), (), ())","('Call', 0, 0)",migrate_logo_database,success = migrate_logo_database()
.\tests\test_hp_functions.py,213,success,"('Call', ('Name', 'run_all_tests'), (), ())","('Call', 0, 0)",run_all_tests,success = run_all_tests()
.\tests\test_logo_integration.py,200,success,"('Call', ('Name', 'run_all_tests'), (), ())","('Call', 0, 0)",run_all_tests,success = run_all_tests()
.\admin_logo_positions_ui.py,151,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())), ())","('Call', 2, 0)","DEFAULT_POSITIONS,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", DEFAULT_POSITIONS.copy())"
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_positions_ui.py.insert.py,126,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())), ())","('Call', 2, 0)","DEFAULT_POSITIONS,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", DEFAULT_POSITIONS.copy())"
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_positions_ui.py.insert.py,127,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())), ())","('Call', 2, 0)","DEFAULT_POSITIONS,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", DEFAULT_POSITIONS.copy())"
.\tools\out_selected\patches\admin_logo_positions_ui.py.insert.py,126,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())), ())","('Call', 2, 0)","DEFAULT_POSITIONS,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", DEFAULT_POSITIONS.copy())"
.\tools\portings\patches\admin_logo_positions_ui.py.insert.py,127,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Call', ('Attr', 'DEFAULT_POSITIONS', 'copy'), (), ())), ())","('Call', 2, 0)","DEFAULT_POSITIONS,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", DEFAULT_POSITIONS.copy())"
.\admin_logo_positions_ui.py,139,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Name', 'edited_positions')), ())","('Call', 2, 0)","edited_positions,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", edited_positions)"
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_positions_ui.py.insert.py,114,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Name', 'edited_positions')), ())","('Call', 2, 0)","edited_positions,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", edited_positions)"
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_positions_ui.py.insert.py,115,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Name', 'edited_positions')), ())","('Call', 2, 0)","edited_positions,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", edited_positions)"
.\tools\out_selected\patches\admin_logo_positions_ui.py.insert.py,114,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Name', 'edited_positions')), ())","('Call', 2, 0)","edited_positions,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", edited_positions)"
.\tools\portings\patches\admin_logo_positions_ui.py.insert.py,115,success,"('Call', ('Name', 'save_admin_setting_func'), (('Const', ""'pdf_logo_positions'""), ('Name', 'edited_positions')), ())","('Call', 2, 0)","edited_positions,save_admin_setting_func","success = save_admin_setting_func(""pdf_logo_positions"", edited_positions)"
.\tests\test_section_titles_logos.py,120,success,"('Call', ('Name', 'test_section_titles_and_logos'), (), ())","('Call', 0, 0)",test_section_titles_and_logos,success = test_section_titles_and_logos()
.\notwendig oder nicht\wichtig\portings\patches\test_admin_upload.py.insert.py,61,success,"('Call', ('Name', 'update_product'), (('Name', 'new_id'), ('Name', 'update_data')), ())","('Call', 2, 0)","new_id,update_data,update_product","success = update_product(new_id, update_data)"
.\tests\test_admin_upload.py,61,success,"('Call', ('Name', 'update_product'), (('Name', 'new_id'), ('Name', 'update_data')), ())","('Call', 2, 0)","new_id,update_data,update_product","success = update_product(new_id, update_data)"
.\tools\portings\patches\test_admin_upload.py.insert.py,61,success,"('Call', ('Name', 'update_product'), (('Name', 'new_id'), ('Name', 'update_data')), ())","('Call', 2, 0)","new_id,update_data,update_product","success = update_product(new_id, update_data)"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,133,success,"('Call', ('Name', 'update_product'), (('Name', 'product_id'), ('Name', 'product_data_to_save_db')), ())","('Call', 2, 0)","product_data_to_save_db,product_id,update_product","success = update_product(product_id, product_data_to_save_db)"
.\tests\test_admin_workflow.py,124,success,"('Call', ('Name', 'update_product'), (('Name', 'product_id'), ('Name', 'product_data_to_save_db')), ())","('Call', 2, 0)","product_data_to_save_db,product_id,update_product","success = update_product(product_id, product_data_to_save_db)"
.\tools\portings\patches\test_admin_workflow.py.insert.py,133,success,"('Call', ('Name', 'update_product'), (('Name', 'product_id'), ('Name', 'product_data_to_save_db')), ())","('Call', 2, 0)","product_data_to_save_db,product_id,update_product","success = update_product(product_id, product_data_to_save_db)"
.\create_png_test_images.py,67,success,"('Call', ('Name', 'update_product_image'), (('Name', 'product_id'), ('Name', 'png_b64')), ())","('Call', 2, 0)","png_b64,product_id,update_product_image","success = update_product_image(product_id, png_b64)"
.\notwendig oder nicht\wichtig\portings\patches\create_png_test_images.py.insert.py,77,success,"('Call', ('Name', 'update_product_image'), (('Name', 'product_id'), ('Name', 'png_b64')), ())","('Call', 2, 0)","png_b64,product_id,update_product_image","success = update_product_image(product_id, png_b64)"
.\tools\portings\patches\create_png_test_images.py.insert.py,77,success,"('Call', ('Name', 'update_product_image'), (('Name', 'product_id'), ('Name', 'png_b64')), ())","('Call', 2, 0)","png_b64,product_id,update_product_image","success = update_product_image(product_id, png_b64)"
.\add_test_product_images.py,50,success,"('Call', ('Name', 'update_product_image'), (('Name', 'product_id'), ('Name', 'test_image_b64')), ())","('Call', 2, 0)","product_id,test_image_b64,update_product_image","success = update_product_image(product_id, test_image_b64)"
.\notwendig oder nicht\wichtig\portings\patches\add_test_product_images.py.insert.py,68,success,"('Call', ('Name', 'update_product_image'), (('Name', 'product_id'), ('Name', 'test_image_b64')), ())","('Call', 2, 0)","product_id,test_image_b64,update_product_image","success = update_product_image(product_id, test_image_b64)"
.\tools\portings\patches\add_test_product_images.py.insert.py,68,success,"('Call', ('Name', 'update_product_image'), (('Name', 'product_id'), ('Name', 'test_image_b64')), ())","('Call', 2, 0)","product_id,test_image_b64,update_product_image","success = update_product_image(product_id, test_image_b64)"
.\database.py,172,success,"('Compare', ('Attr', 'cur', 'rowcount'), ('Gt',), (('Const', '0'),))","('Compare', ('Gt',), 1)",cur,success = cur.rowcount > 0
.\database.py,1950,success,"('Compare', ('Attr', 'cursor', 'rowcount'), ('Gt',), (('Const', '0'),))","('Compare', ('Gt',), 1)",cursor,success = cursor.rowcount > 0
.\tests\test_admin_fix.py,84,success,"('Const', 'True')","('Const',)",,success = True
.\multi_offer_generator_old.py,1441,success_count,"('Call', ('Name', 'sum'), (('Other', 'GeneratorExp'),), ())","('Call', 1, 0)","_,results,success,sum","success_count = sum(1 for success, _, _ in results.values() if success)"
.\database.py,448,success_count,"('Const', '0')","('Const',)",,success_count = 0
.\options.py,144,success_count,"('Const', '0')","('Const',)",,success_count = 0
.\options.py,636,success_count,"('Const', '0')","('Const',)",,success_count = 0
.\heatpump_ui.py,403,suitable,"('Call', ('Name', 'sorted'), (('Name', 'suitable'),), (('key', ('Other', 'Lambda')),))","('Call', 1, 1)","hp,sorted,suitable","suitable = sorted(suitable, key=lambda hp: hp.get('heating_power', 0))"
.\heatpump_ui.py,866,suitable,"('Call', ('Name', 'sorted'), (('Name', 'suitable'),), (('key', ('Other', 'Lambda')),))","('Call', 1, 1)","float,hp,sorted,suitable","suitable = sorted(suitable, key=lambda hp: float(hp.get('heating_power', 0) or 0))"
.\heatpump_ui.py,401,suitable,"('Other', 'ListComp')","('Other', 'ListComp')","candidates,hp,required_kw","suitable = [hp for hp in candidates if hp.get('heating_power', 0) >= required_kw]"
.\heatpump_ui.py,864,suitable,"('Other', 'ListComp')","('Other', 'ListComp')","candidates,float,hp,required_kw","suitable = [hp for hp in candidates if float(hp.get('heating_power', 0) or 0) >= required_kw]"
.\tools\import_module_attributes_generic.py,587,summary,"('Call', ('Name', 'import_any_from_path'), (('Name', 'arg'),), ())","('Call', 1, 0)","arg,import_any_from_path",summary = import_any_from_path(arg)
.\excel_eval.py,338,summary,"('Dict', (('KV', ('Const', ""'abs_tol'""), ('Name', 'abs_tol')), ('KV', ('Const', ""'checked_cells'""), ('Call', ('Name', 'len'), (('Name', 'refs'),), ())), ('KV', ('Const', ""'file'""), ('Call', ('Name', 'str'), (('Name', 'path'),), ())), ('KV', ('Const', ""'mismatches'""), ('Call', ('Name', 'len'), (('Name', 'mismatches'),), ())), ('KV', ('Const', ""'rel_tol'""), ('Name', 'rel_tol'))))","('Dict', 5)","abs_tol,len,mismatches,path,refs,rel_tol,str",summary = {
.\tools\import_module_attributes_generic.py,282,summary,"('Dict', (('KV', ('Const', ""'ensured'""), ('Const', '0')), ('KV', ('Const', ""'ensured_created'""), ('Const', '0')), ('KV', ('Const', ""'ensured_existing'""), ('Const', '0')), ('KV', ('Const', ""'model'""), ('Const', 'None')), ('KV', ('Const', ""'pid'""), ('Const', 'None')), ('KV', ('Const', ""'reason'""), ('Const', 'None')), ('KV', ('Const', ""'skipped'""), ('Const', '0')), ('KV', ('Const', ""'updated'""), ('Const', '0')), ('KV', ('Const', ""'upserted'""), ('Const', '0'))))","('Dict', 9)",,"summary = {""ensured"": 0, ""ensured_existing"": 0, ""ensured_created"": 0, ""updated"": 0, ""upserted"": 0, ""skipped"": 0, ""reason"": None, ""pid"": None, ""model"": None}"
.\analysis.py,6745,summary,"('Dict', (('KV', ('Const', ""'financing_amount'""), ('Const', '0')), ('KV', ('Const', ""'financing_type'""), ('Const', ""'Nicht verfügbar'"")), ('KV', ('Const', ""'has_data'""), ('Call', ('Name', 'bool'), (('Name', 'financing_data'),), ())), ('KV', ('Const', ""'sections'""), ('Call', ('Name', 'list'), (('Call', ('Attr', 'financing_data', 'keys'), (), ()),), ())), ('KV', ('Const', ""'total_charts'""), ('Const', '0'))))","('Dict', 5)","bool,financing_data,list",summary = {
.\admin_panel.py,570,summary_pm,"('Call', ('Name', 'import_modules_batch_pm'), (('Name', 'target_dir_pm'),), (('default_category', ('Name', 'sel_category_pm')),))","('Call', 1, 1)","import_modules_batch_pm,sel_category_pm,target_dir_pm","summary_pm = import_modules_batch_pm(target_dir_pm, default_category=sel_category_pm)"
.\admin_panel.py,573,summary_pm,"('Const', 'None')","('Const',)",,summary_pm = None
.\multi_offer_generator_old.py,1066,surcharge,"('Div', ('Mult', (('Name', 'base'), ('Subscript', ('Subscript', ('Name', 'config'), ('Const', ""'custom_pricing'"")), ('Const', ""'surcharge_percent'"")))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Subscript',))), ('Const',))","base,config",surcharge = base * config['custom_pricing']['surcharge_percent'] / 100
.\multi_offer_generator_old.py,1145,surcharge,"('Div', ('Mult', (('Name', 'base_price'), ('Subscript', ('Subscript', ('Name', 'config'), ('Const', ""'custom_pricing'"")), ('Const', ""'surcharge_percent'"")))), ('Const', '100'))","('Div', ('Mult', (('Name',), ('Subscript',))), ('Const',))","base_price,config",surcharge = base_price * config['custom_pricing']['surcharge_percent'] / 100
.\live_preview_helpers.py,30,surcharge_percent,"('Call', ('Attr', 'modifications', 'get'), (('Const', ""'surcharge_percent'""), ('Const', '0.0')), ())","('Call', 2, 0)",modifications,"surcharge_percent = modifications.get('surcharge_percent', 0.0)"
.\analysis.py,316,surcharge_percent,"('Call', ('Attr', 'st', 'slider'), (('Const', ""'Aufpreis (%)'""),), (('help', ('Const', ""'Prozentualer Aufpreis auf den Nettobetrag'"")), ('key', ('Const', ""'pricing_modifications_surcharge_slider'"")), ('max_value', ('Const', '50.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '0.5')), ('value', ('Const', '0.0'))))","('Call', 1, 6)",st,surcharge_percent = st.slider(
.\analysis.py,5230,surcharge_percent,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_surcharge_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,surcharge_percent = st.session_state.get(
.\gui.py,154,surcharge_percent,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_surcharge_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,"surcharge_percent = st.session_state.get(""pricing_modifications_surcharge_slider"", 0.0)"
.\pdf_ui.py,102,surcharge_percent,"('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'pricing_modifications_surcharge_slider'""), ('Const', '0.0')), ())","('Call', 2, 0)",st,"surcharge_percent = st.session_state.get(""pricing_modifications_surcharge_slider"", 0.0)"
.\live_calculation_engine.py,50,surplus_for_feed_in,"('Call', ('Name', 'max'), (('Const', '0'), ('Name', 'surplus_for_feed_in')), ())","('Call', 2, 0)","max,surplus_for_feed_in","surplus_for_feed_in = max(0, surplus_for_feed_in)"
.\live_calculation_engine.py,49,surplus_for_feed_in,"('Sub', ('Sub', ('Name', 'annual_production_kwh'), ('Name', 'direct_consumption_kwh')), ('Name', 'battery_charged_kwh'))","('Sub', ('Sub', ('Name',), ('Name',)), ('Name',))","annual_production_kwh,battery_charged_kwh,direct_consumption_kwh",surplus_for_feed_in = annual_production_kwh - direct_consumption_kwh - battery_charged_kwh
.\analysis.py,9059,system_data,"('Dict', (('KV', ('Const', ""'Anlagengröße'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'Module Anzahl'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'Modulleistung'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'Performance Ratio'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'Systemverluste'""), ('Other', 'JoinedStr')), ('KV', ('Const', ""'Wechselrichter-Effizienz'""), ('Other', 'JoinedStr'))))","('Dict', 6)",results,system_data = {
.\analysis.py,3085,system_data,"('Dict', (('KV', ('Const', ""'annual_consumption_kwh'""), ('Call', ('Attr', 'project_data', 'get'), (('Const', ""'energy_consumption_annual_kwh'""), ('Const', '4000')), ())), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'annual_pv_production_kwh'""), ('Const', '10000')), ())), ('KV', ('Const', ""'electricity_price_per_kwh'""), ('Call', ('Attr', 'project_data', 'get'), (('Const', ""'electricity_price_per_kwh'""), ('Const', '0.32')), ())), ('KV', ('Const', ""'feed_in_tariff_per_kwh'""), ('Const', '0.08')), ('KV', ('Const', ""'self_consumption_kwh'""), ('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'annual_self_supply_kwh'""), ('Const', '3000')), ())), ('KV', ('Const', ""'system_kwp'""), ('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '10')), ())), ('KV', ('Const', ""'total_investment'""), ('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'total_investment_cost_netto'""), ('Const', '20000')), ()))))","('Dict', 7)","analysis_results,project_data",system_data = {
.\central_pdf_system.py,570,system_func,"('Call', ('Attr', 'self', 'get_system'), (('Const', ""'mega_hybrid'""),), ())","('Call', 1, 0)",self,system_func = self.get_system('mega_hybrid')
.\central_pdf_system.py,596,system_func,"('Call', ('Attr', 'self', 'get_system'), (('Const', ""'standard'""),), ())","('Call', 1, 0)",self,system_func = self.get_system('standard')
.\central_pdf_system.py,584,system_func,"('Call', ('Attr', 'self', 'get_system'), (('Const', ""'tom90'""),), ())","('Call', 1, 0)",self,system_func = self.get_system('tom90')
.\calculations.py,1922,system_kwp,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '10')), ())","('Call', 2, 0)",calc_results,"system_kwp = calc_results.get(""anlage_kwp"", 10)"
.\calculations.py,1270,system_kwp,"('Call', ('Attr', 'calc_results', 'get'), (('Const', ""'anlage_kwp'""), ('Const', '10.0')), ())","('Call', 2, 0)",calc_results,"system_kwp = calc_results.get(""anlage_kwp"", 10.0)"
.\analysis.py,3016,system_kwp,"('Call', ('Attr', 'system_data', 'get'), (('Const', ""'system_kwp'""), ('Const', '10')), ())","('Call', 2, 0)",system_data,"system_kwp = system_data.get(""system_kwp"", 10)"
.\calculations.py,2049,system_optimization,"('Dict', (('KV', ('Const', ""'optimal_azimuth'""), ('Const', '0')), ('KV', ('Const', ""'optimal_battery_size'""), ('Const', '8.0')), ('KV', ('Const', ""'optimal_dc_ac_ratio'""), ('Const', '1.15')), ('KV', ('Const', ""'optimal_tilt'""), ('Const', '30'))))","('Dict', 4)",,system_optimization = {
.\analysis.py,6542,system_optimization,"('Subscript', ('Name', 'optimization_results'), ('Const', ""'system_optimization'""))","('Subscript',)",optimization_results,"system_optimization = optimization_results[""system_optimization""]"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,85,t,"('Call', ('Attr', ""(el.get('text') or '').strip().replace('.', '')"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",el,"t = (el.get(""text"") or """").strip().replace(""."", """").replace("","", ""."")"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,103,t,"('Call', ('Attr', ""(el.get('text') or '').strip().replace('.', '')"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",el,"t = (el.get(""text"") or """").strip().replace(""."", """").replace("","", ""."")"
.\pdf_template_engine\dynamic_overlay.py,598,t,"('Call', ('Attr', ""(el.get('text') or '').strip().replace('.', '')"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",el,"t = (el.get(""text"") or """").strip().replace(""."", """").replace("","", ""."")"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,85,t,"('Call', ('Attr', ""(el.get('text') or '').strip().replace('.', '')"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",el,"t = (el.get(""text"") or """").strip().replace(""."", """").replace("","", ""."")"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,103,t,"('Call', ('Attr', ""(el.get('text') or '').strip().replace('.', '')"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",el,"t = (el.get(""text"") or """").strip().replace(""."", """").replace("","", ""."")"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,75,t,"('Call', ('Attr', ""el.get('text') or ''"", 'strip'), (), ())","('Call', 0, 0)",el,"t = (el.get(""text"") or """").strip()"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,233,t,"('Call', ('Attr', ""el.get('text') or ''"", 'strip'), (), ())","('Call', 0, 0)",el,"t = (el.get(""text"") or """").strip()"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,93,t,"('Call', ('Attr', ""el.get('text') or ''"", 'strip'), (), ())","('Call', 0, 0)",el,"t = (el.get(""text"") or """").strip()"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,251,t,"('Call', ('Attr', ""el.get('text') or ''"", 'strip'), (), ())","('Call', 0, 0)",el,"t = (el.get(""text"") or """").strip()"
.\pdf_template_engine\dynamic_overlay.py,588,t,"('Call', ('Attr', ""el.get('text') or ''"", 'strip'), (), ())","('Call', 0, 0)",el,"t = (el.get(""text"") or """").strip()"
.\pdf_template_engine\dynamic_overlay.py,746,t,"('Call', ('Attr', ""el.get('text') or ''"", 'strip'), (), ())","('Call', 0, 0)",el,"t = (el.get(""text"") or """").strip()"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,75,t,"('Call', ('Attr', ""el.get('text') or ''"", 'strip'), (), ())","('Call', 0, 0)",el,"t = (el.get(""text"") or """").strip()"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,233,t,"('Call', ('Attr', ""el.get('text') or ''"", 'strip'), (), ())","('Call', 0, 0)",el,"t = (el.get(""text"") or """").strip()"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,93,t,"('Call', ('Attr', ""el.get('text') or ''"", 'strip'), (), ())","('Call', 0, 0)",el,"t = (el.get(""text"") or """").strip()"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,251,t,"('Call', ('Attr', ""el.get('text') or ''"", 'strip'), (), ())","('Call', 0, 0)",el,"t = (el.get(""text"") or """").strip()"
.\pdf_template_engine\dynamic_overlay.py,933,t,"('Call', ('Attr', 'Transformation().scale(scale, scale)', 'translate'), (('Name', 'tx'), ('Name', 'ty')), ())","('Call', 2, 0)","Transformation,scale,tx,ty","t = Transformation().scale(scale, scale).translate(tx, ty)"
.\pdf_template_engine\dynamic_overlay.py,960,t,"('Call', ('Attr', 'Transformation().scale(scale, scale)', 'translate'), (('Name', 'tx'), ('Name', 'ty')), ())","('Call', 2, 0)","Transformation,scale,tx,ty","t = Transformation().scale(scale, scale).translate(tx, ty)"
.\analysis.py,126,t,"('Call', ('Name', 'getattr'), (('Attr', 'figure_or_data.layout', 'title'), ('Const', ""'text'""), ('Const', 'None')), ())","('Call', 3, 0)","figure_or_data,getattr","t = getattr(figure_or_data.layout.title, ""text"", None)"
.\notwendig oder nicht\python_function_recipes.py,30,table,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'table'),), ())","('Call', 1, 0)","pd,table",table = pd.DataFrame(table)
.\notwendig oder nicht\python_function_recipes.py,236,table,"('Call', ('Attr', 'pd', 'DataFrame'), (('Name', 'table'),), ())","('Call', 1, 0)","pd,table",table = pd.DataFrame(table)
.\pdf_generator.py,221,table,"('Call', ('Name', 'Table'), (('Name', 'data'),), (('colWidths', ('List', (('Mult', (('Const', '1.5'), ('Name', 'cm'))), ('Mult', (('Const', '8'), ('Name', 'cm'))), ('Mult', (('Const', '2'), ('Name', 'cm'))), ('Mult', (('Const', '2.5'), ('Name', 'cm'))), ('Mult', (('Const', '3'), ('Name', 'cm')))))),))","('Call', 1, 1)","Table,cm,data","table = Table(data, colWidths=[1.5*cm, 8*cm, 2*cm, 2.5*cm, 3*cm])"
.\tools\schema_extractor.py,92,table,"('Call', ('Name', 'parse_table'), (('Name', 'c'),), ())","('Call', 1, 0)","c,parse_table",table = parse_table(c)
.\tools\schema_extractor.py,36,table,"('Dict', (('KV', ('Const', ""'columns'""), ('Dict', ())), ('KV', ('Const', ""'fks'""), ('List', ())), ('KV', ('Const', ""'indexes'""), ('List', ()))))","('Dict', 3)",,"table: Dict[str, Any] = {""columns"": {}, ""fks"": [], ""indexes"": []}"
.\pdf_generator.py,2747,table_data,"('List', (('Name', 'headers'),))","('List', 1)",headers,table_data = [headers]
.\admin_logo_positions_ui.py,171,table_data,"('List', ())","('List', 0)",,table_data = []
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_positions_ui.py.insert.py,146,table_data,"('List', ())","('List', 0)",,table_data = []
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_positions_ui.py.insert.py,147,table_data,"('List', ())","('List', 0)",,table_data = []
.\tools\out_selected\patches\admin_logo_positions_ui.py.insert.py,146,table_data,"('List', ())","('List', 0)",,table_data = []
.\tools\portings\patches\admin_logo_positions_ui.py.insert.py,147,table_data,"('List', ())","('List', 0)",,table_data = []
.\crm.py,165,table_info_cursor,"('Call', ('Attr', ""conn.execute(f'PRAGMA table_info(customers)')"", 'fetchall'), (), ())","('Call', 0, 0)",conn,"table_info_cursor = conn.execute(f""PRAGMA table_info(customers)"").fetchall()"
.\crm.py,211,table_info_cursor,"('Call', ('Attr', ""conn.execute(f'PRAGMA table_info(projects)')"", 'fetchall'), (), ())","('Call', 0, 0)",conn,"table_info_cursor = conn.execute(f""PRAGMA table_info(projects)"").fetchall()"
.\doc_output.py,481,table_style,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""' Tabellenstil'""), ('List', (('Const', ""'Standard'""), ('Const', ""'Elegant'""), ('Const', ""'Kompakt'""), ('Const', ""'Detailliert'"")))), (('key', ('Const', ""'pdf_table_style'"")),))","('Call', 2, 1)",st,"table_style = st.selectbox("" Tabellenstil"","
.\doc_output.py,1001,table_style,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Tabellen-Stil:'""), ('List', (('Const', ""'basic'""), ('Const', ""'striped'""), ('Const', ""'bordered'""), ('Const', ""'modern'""), ('Const', ""'business'"")))), ())","('Call', 2, 0)",st,table_style = st.selectbox(
.\pdf_styles.py,923,tabs,"('Call', ('Attr', 'st', 'tabs'), (('List', (('Const', ""' Diagramme'""), ('Const', ""' Layout'""), ('Const', ""' Farben'""), ('Const', ""' Effekte'""))),), ())","('Call', 1, 0)",st,"tabs = st.tabs(["" Diagramme"", "" Layout"", "" Farben"", "" Effekte""])"
.\analysis.py,8754,tabs,"('Call', ('Attr', 'st', 'tabs'), (('List', (('Const', ""' Finanzanalyse'""), ('Const', ""' Energieoptimierung'""), ('Const', ""' Umwelt-Impact'""), ('Const', ""' Technische Details'""), ('Const', ""' Vergleichsanalysen'""))),), ())","('Call', 1, 0)",st,tabs = st.tabs([
.\heatpump_ui.py,49,tabs,"('Call', ('Attr', 'st', 'tabs'), (('List', (('Const', ""' Gebäudeanalyse'""), ('Const', ""' Wärmepumpen-Auswahl'""), ('Const', ""' Wirtschaftlichkeit'""), ('Const', ""' PV-Integration'""), ('Const', ""' Komponenten & Angebot'""), ('Const', ""' Ergebnisse'""))),), ())","('Call', 1, 0)",st,tabs = st.tabs([
.\multi_offer_generator_old.py,1005,tabs,"('Call', ('Attr', 'st', 'tabs'), (('List', (('Const', ""' Inhalte'""), ('Const', ""' Preise'""), ('Const', ""' Texte'""), ('Const', ""' Visualisierungen'""))),), ())","('Call', 1, 0)",st,"tabs = st.tabs(["" Inhalte"", "" Preise"", "" Texte"", "" Visualisierungen""])"
.\crm_dashboard_ui.py,46,tabs,"('Call', ('Attr', 'st', 'tabs'), (('List', (('Const', ""' Übersicht'""), ('Const', ""' Kunden'""), ('Const', ""' Projekte'""), ('Const', ""' Umsatz'""), ('Const', ""' Statistiken'""))),), ())","('Call', 1, 0)",st,tabs = st.tabs([
.\analysis.py,3102,tabs,"('Call', ('Attr', 'st', 'tabs'), (('List', (('Const', ""'Energieoptimierung'""), ('Const', ""' Netzanalyse'""), ('Const', ""'Wettereinfluss'""), ('Const', ""'Degradation'""), ('Const', ""'Finanzszenarien'""), ('Const', ""'Umwelt'""), ('Const', ""'Batterie'""))),), ())","('Call', 1, 0)",st,tabs = st.tabs(
.\analysis.py,5305,tabs,"('Call', ('Attr', 'st', 'tabs'), (('List', (('Const', ""'Erweiterte Wirtschaftlichkeit'""), ('Const', ""'Detaillierte Energieanalyse'""), ('Const', ""'Technische Berechnungen'""), ('Const', ""'Finanzielle Szenarien'""), ('Const', ""'Umwelt & Nachhaltigkeit'""), ('Const', ""'Optimierungsvorschläge'""))),), ())","('Call', 1, 0)",st,tabs = st.tabs(
.\multi_offer_generator_old.py,1350,tabs,"('Call', ('Attr', 'st', 'tabs'), (('Other', 'ListComp'),), ())","('Call', 1, 0)","i,len,range,selected_companies,st","tabs = st.tabs([f""Firma {i+1}"" for i in range(len(selected_companies))])"
.\calculations.py,1443,targets,"('List', (('Const', '1'), ('Const', '2'), ('Const', '3'), ('Const', '6'), ('Const', '6'), ('Const', '6')))","('List', 6)",,targets = [
.\dev_tools\kakerlake_ultra_cleaner.py,129,targets,"('Other', 'IfExp')","('Other', 'IfExp')","ast,isinstance,node","targets = node.targets if isinstance(node, ast.Assign) else ([node.target] if node.target is not None else [])"
.\mnt\data\kakerlake_ultra_cleaner.py,129,targets,"('Other', 'IfExp')","('Other', 'IfExp')","ast,isinstance,node","targets = node.targets if isinstance(node, ast.Assign) else ([node.target] if node.target is not None else [])"
.\tools\kakerlake_ultra_cleaner.py,130,targets,"('Other', 'IfExp')","('Other', 'IfExp')","ast,isinstance,node","targets = node.targets if isinstance(node, ast.Assign) else ([node.target] if node.target is not None else [])"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,59,tariffs_data,"('BoolOp', 'Or', (('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'feed_in_tariffs'""), ('Dict', ())), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",load_admin_setting_func,"tariffs_data = load_admin_setting_func(""feed_in_tariffs"", {}) or {}"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,81,tariffs_data,"('BoolOp', 'Or', (('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'feed_in_tariffs'""), ('Dict', ())), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",load_admin_setting_func,"tariffs_data = load_admin_setting_func(""feed_in_tariffs"", {}) or {}"
.\pdf_template_engine\placeholders.py,98,tariffs_data,"('BoolOp', 'Or', (('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'feed_in_tariffs'""), ('Dict', ())), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",load_admin_setting_func,"tariffs_data = load_admin_setting_func(""feed_in_tariffs"", {}) or {}"
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,59,tariffs_data,"('BoolOp', 'Or', (('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'feed_in_tariffs'""), ('Dict', ())), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",load_admin_setting_func,"tariffs_data = load_admin_setting_func(""feed_in_tariffs"", {}) or {}"
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,81,tariffs_data,"('BoolOp', 'Or', (('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'feed_in_tariffs'""), ('Dict', ())), ()), ('Dict', ())))","('BoolOp', 'Or', 2)",load_admin_setting_func,"tariffs_data = load_admin_setting_func(""feed_in_tariffs"", {}) or {}"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,57,tariffs_data,"('Dict', ())","('Dict', 0)",,tariffs_data = {}
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,61,tariffs_data,"('Dict', ())","('Dict', 0)",,tariffs_data = {}
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,79,tariffs_data,"('Dict', ())","('Dict', 0)",,tariffs_data = {}
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,83,tariffs_data,"('Dict', ())","('Dict', 0)",,tariffs_data = {}
.\pdf_template_engine\placeholders.py,96,tariffs_data,"('Dict', ())","('Dict', 0)",,tariffs_data = {}
.\pdf_template_engine\placeholders.py,100,tariffs_data,"('Dict', ())","('Dict', 0)",,tariffs_data = {}
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,57,tariffs_data,"('Dict', ())","('Dict', 0)",,tariffs_data = {}
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,61,tariffs_data,"('Dict', ())","('Dict', 0)",,tariffs_data = {}
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,79,tariffs_data,"('Dict', ())","('Dict', 0)",,tariffs_data = {}
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,83,tariffs_data,"('Dict', ())","('Dict', 0)",,tariffs_data = {}
.\calculations.py,3284,tax_benefit_feed_in_year1,"('Const', '0.0')","('Const',)",,tax_benefit_feed_in_year1 = 0.0
.\calculations.py,3292,tax_benefit_feed_in_year1,"('Mult', (('Div', ('Name', 'income_tax_rate_percent'), ('Const', '100.0')), ('Name', 'annual_feed_in_revenue_year1')))","('Mult', (('Div', ('Name',), ('Const',)), ('Name',)))","annual_feed_in_revenue_year1,income_tax_rate_percent",tax_benefit_feed_in_year1 = annual_feed_in_revenue_year1 * (
.\pdf_widgets.py,189,template,"('Call', ('Attr', 'self.content_templates', 'get'), (('Name', 'content_type'), ('Dict', ())), ())","('Call', 2, 0)","content_type,self","template = self.content_templates.get(content_type, {})"
.\pdf_widgets.py,407,template,"('Subscript', ('Name', 'templates'), ('Name', 'selected_template'))","('Subscript',)","selected_template,templates",template = templates[selected_template]
.\central_pdf_system.py,919,template_config,"('Dict', (('KV', ('Const', ""'created'""), ('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())), ('KV', ('Const', ""'inclusion_options'""), ('Call', ('Attr', 'current_options', 'copy'), (), ())), ('KV', ('Const', ""'name'""), ('Name', 'template_name')), ('KV', ('Const', ""'selected_sections'""), ('Call', ('Attr', 'st.session_state', 'get'), (('Other', 'JoinedStr'), ('List', ())), ())), ('KV', ('Const', ""'theme_name'""), ('Call', ('Attr', 'st.session_state', 'get'), (('Other', 'JoinedStr'), ('Const', ""'Blau Elegant'"")), ()))))","('Dict', 5)","current_options,datetime,self,st,template_name",template_config = {
.\central_pdf_system.py,1761,template_config,"('Dict', (('KV', ('Const', ""'created'""), ('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())), ('KV', ('Const', ""'inclusion_options'""), ('Name', 'current_options')), ('KV', ('Const', ""'name'""), ('Name', 'template_name')), ('KV', ('Const', ""'selected_sections'""), ('Name', 'updated_sections')), ('KV', ('Const', ""'theme_name'""), ('Name', 'selected_theme'))))","('Dict', 5)","current_options,datetime,selected_theme,template_name,updated_sections",template_config = {
.\admin_panel.py,2025,template_id,"('Call', ('Name', 'add_company_image_template'), (), (('company_id', ('Name', 'company_id')), ('image_data', ('Name', 'image_bytes')), ('name', ('Call', ('Attr', 'template_name', 'strip'), (), ())), ('original_filename', ('Attr', 'uploaded_image', 'name')), ('template_type', ('Name', 'template_type'))))","('Call', 0, 5)","add_company_image_template,company_id,image_bytes,template_name,template_type,uploaded_image",template_id = add_company_image_template(
.\admin_panel.py,1909,template_id,"('Call', ('Name', 'add_company_text_template'), (), (('company_id', ('Name', 'company_id')), ('content', ('Call', ('Attr', 'template_content', 'strip'), (), ())), ('name', ('Call', ('Attr', 'template_name', 'strip'), (), ())), ('template_type', ('Name', 'template_type'))))","('Call', 0, 4)","add_company_text_template,company_id,template_content,template_name,template_type",template_id = add_company_text_template(
.\admin_panel.py,1989,template_name,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Name der Bildvorlage'""),), (('placeholder', ('Const', ""'z.B. Firmenlogo groß, Referenzbild Projekt A, Titellogo'"")),))","('Call', 1, 1)",st,template_name = st.text_input(
.\admin_panel.py,1878,template_name,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Name der Vorlage'""),), (('placeholder', ('Const', ""'z.B. Willkommenstext, Beratungstext, Abschlusstext'"")),))","('Call', 1, 1)",st,template_name = st.text_input(
.\central_pdf_system.py,1757,template_name,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Vorlagen-Name:'""),), (('placeholder', ('Const', ""'Meine PDF-Konfiguration'"")),))","('Call', 1, 1)",st,"template_name = st.text_input(""Vorlagen-Name:"", placeholder=""Meine PDF-Konfiguration"")"
.\central_pdf_system.py,915,template_name,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Vorlagenname:'""),), (('key', ('Const', ""'new_template_name'"")), ('placeholder', ('Const', ""'Meine PDF-Konfiguration'""))))","('Call', 1, 2)",st,"template_name = st.text_input(""Vorlagenname:"", placeholder=""Meine PDF-Konfiguration"", key=""new_template_name"")"
.\central_pdf_system.py,940,template_name,"('Call', ('Attr', 'template', 'get'), (('Const', ""'name'""), ('Other', 'JoinedStr')), ())","('Call', 2, 0)","i,template","template_name = template.get('name', f'Vorlage {i+1}')"
.\central_pdf_system.py,1094,template_name,"('Call', ('Attr', 'template', 'get'), (('Const', ""'name'""), ('Other', 'JoinedStr')), ())","('Call', 2, 0)",template,"template_name = template.get('name', f""Textvorlage {template.get('id')}"")"
.\central_pdf_system.py,1131,template_name,"('Call', ('Attr', 'template', 'get'), (('Const', ""'name'""), ('Other', 'JoinedStr')), ())","('Call', 2, 0)",template,"template_name = template.get('name', f""Bildvorlage {template.get('id')}"")"
.\admin_panel.py,1994,template_type,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Bildtyp'""),), (('format_func', ('Other', 'Lambda')), ('options', ('List', (('Const', ""'title_image'""), ('Const', ""'logo'""), ('Const', ""'reference'""), ('Const', ""'background'""), ('Const', ""'custom'""))))))","('Call', 1, 2)","st,x",template_type = st.selectbox(
.\admin_panel.py,1883,template_type,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Vorlagentyp'""),), (('format_func', ('Other', 'Lambda')), ('options', ('List', (('Const', ""'offer_text'""), ('Const', ""'cover_letter'""), ('Const', ""'title_text'""), ('Const', ""'footer_text'""), ('Const', ""'custom'""))))))","('Call', 1, 2)","st,x",template_type = st.selectbox(
.\central_pdf_system.py,1096,template_type,"('Call', ('Attr', 'template', 'get'), (('Const', ""'template_type'""), ('Const', ""'Standard'"")), ())","('Call', 2, 0)",template,"template_type = template.get('template_type', 'Standard')"
.\central_pdf_system.py,1132,template_type,"('Call', ('Attr', 'template', 'get'), (('Const', ""'template_type'""), ('Const', ""'Standard'"")), ())","('Call', 2, 0)",template,"template_type = template.get('template_type', 'Standard')"
.\check_companies.py,57,templates,"('Call', ('Attr', 'cursor', 'fetchall'), (), ())","('Call', 0, 0)",cursor,templates = cursor.fetchall()
.\check_companies.py,87,templates,"('Call', ('Attr', 'json', 'loads'), (('Subscript', ('Name', 'result'), ('Const', '0')),), ())","('Call', 1, 0)","json,result",templates = json.loads(result[0])
.\admin_panel.py,1581,templates,"('Call', ('Name', '_load_admin_setting_safe'), (('Name', 'template_list_setting_key'), ('List', ())), ())","('Call', 2, 0)","_load_admin_setting_safe,template_list_setting_key","templates: List[Dict[str, Any]] = _load_admin_setting_safe(template_list_setting_key, [])"
.\pdf_widgets.py,382,templates,"('Dict', (('KV', ('Const', ""'compact'""), ('Dict', (('KV', ('Const', ""'description'""), ('Const', ""'Kurze Übersicht mit wichtigsten Informationen'"")), ('KV', ('Const', ""'name'""), ('Const', ""'Kompakt-Angebot'"")), ('KV', ('Const', ""'sections'""), ('List', (('Const', ""'cover_page'""), ('Const', ""'project_overview'""), ('Const', ""'cost_details'""))))))), ('KV', ('Const', ""'standard'""), ('Dict', (('KV', ('Const', ""'description'""), ('Const', ""'Vollständiges Angebot mit allen Details'"")), ('KV', ('Const', ""'name'""), ('Const', ""'Standard-Angebot'"")), ('KV', ('Const', ""'sections'""), ('List', (('Const', ""'cover_page'""), ('Const', ""'project_overview'""), ('Const', ""'technical_components'""), ('Const', ""'cost_details'""), ('Const', ""'economics'""))))))), ('KV', ('Const', ""'technical'""), ('Dict', (('KV', ('Const', ""'description'""), ('Const', ""'Fokus auf technische Details'"")), ('KV', ('Const', ""'name'""), ('Const', ""'Technisches Angebot'"")), ('KV', ('Const', ""'sections'""), ('List', (('Const', ""'cover_page'""), ('Const', ""'technical_components'""), ('Const', ""'economics'"")))))))))","('Dict', 3)",,templates = {
.\admin_panel.py,1582,templates,"('List', ())","('List', 0)",,"if not isinstance(templates, list): st.error(f""Fehler: Vorlagendaten für '{template_list_setting_key}' nicht im Listenformat.""); templates = []"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_upload.py.insert.py,17,test_image_b64,"('Call', ('Attr', 'base64.b64encode(png_data)', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)","base64,png_data",test_image_b64 = base64.b64encode(png_data).decode('utf-8')
.\tests\test_admin_upload.py,17,test_image_b64,"('Call', ('Attr', 'base64.b64encode(png_data)', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)","base64,png_data",test_image_b64 = base64.b64encode(png_data).decode('utf-8')
.\tools\portings\patches\test_admin_upload.py.insert.py,17,test_image_b64,"('Call', ('Attr', 'base64.b64encode(png_data)', 'decode'), (('Const', ""'utf-8'""),), ())","('Call', 1, 0)","base64,png_data",test_image_b64 = base64.b64encode(png_data).decode('utf-8')
.\add_test_product_images.py,36,test_image_b64,"('Call', ('Name', 'create_simple_svg_image'), (), ())","('Call', 0, 0)",create_simple_svg_image,test_image_b64 = create_simple_svg_image()
.\notwendig oder nicht\wichtig\portings\patches\add_test_product_images.py.insert.py,54,test_image_b64,"('Call', ('Name', 'create_simple_svg_image'), (), ())","('Call', 0, 0)",create_simple_svg_image,test_image_b64 = create_simple_svg_image()
.\tools\portings\patches\add_test_product_images.py.insert.py,54,test_image_b64,"('Call', ('Name', 'create_simple_svg_image'), (), ())","('Call', 0, 0)",create_simple_svg_image,test_image_b64 = create_simple_svg_image()
.\heatpump_ui.py,1283,test_project_data,"('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '12.5')), ('KV', ('Const', ""'annual_pv_production_kwh'""), ('Const', '15000'))))","('Dict', 2)",,test_project_data = {
.\crm.py,834,test_project_data,"('Dict', (('KV', ('Const', ""'creation_date'""), ('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())), ('KV', ('Const', ""'customer_id'""), ('Name', 'customer_id')), ('KV', ('Const', ""'include_storage'""), ('Const', '1')), ('KV', ('Const', ""'latitude'""), ('Const', '52.5')), ('KV', ('Const', ""'longitude'""), ('Const', '13.4')), ('KV', ('Const', ""'module_quantity'""), ('Const', '20')), ('KV', ('Const', ""'project_name'""), ('Const', ""'PV Anlage Musterhaus'"")), ('KV', ('Const', ""'project_status'""), ('Const', ""'Angebot'"")), ('KV', ('Const', ""'selected_inverter_id'""), ('Const', '3')), ('KV', ('Const', ""'selected_module_id'""), ('Const', '1')), ('KV', ('Const', ""'selected_storage_id'""), ('Const', '4')), ('KV', ('Const', ""'selected_storage_storage_power_kw'""), ('Const', '10.0')), ('KV', ('Const', ""'visualize_roof_in_pdf'""), ('Const', '1'))))","('Dict', 13)","customer_id,datetime",test_project_data = {
.\notwendig oder nicht\wichtig\portings\patches\test_hp_functions.py.insert.py,92,test_project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Test'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Kunde'""))))), ('KV', ('Const', ""'heatpump_offer'""), ('Dict', (('KV', ('Const', ""'beg_subsidy'""), ('Dict', (('KV', ('Const', ""'effective_total_after_subsidy_net'""), ('Const', '15000')),))), ('KV', ('Const', ""'demand_inputs'""), ('Dict', (('KV', ('Const', ""'heating_costs_yearly'""), ('Const', '2400')), ('KV', ('Const', ""'heating_type'""), ('Const', ""'Gas'"")))))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '10.0')),)))))","('Dict', 3)",,test_project_data = {
.\tests\test_hp_functions.py,79,test_project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Test'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Kunde'""))))), ('KV', ('Const', ""'heatpump_offer'""), ('Dict', (('KV', ('Const', ""'beg_subsidy'""), ('Dict', (('KV', ('Const', ""'effective_total_after_subsidy_net'""), ('Const', '15000')),))), ('KV', ('Const', ""'demand_inputs'""), ('Dict', (('KV', ('Const', ""'heating_costs_yearly'""), ('Const', '2400')), ('KV', ('Const', ""'heating_type'""), ('Const', ""'Gas'"")))))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '10.0')),)))))","('Dict', 3)",,test_project_data = {
.\tools\portings\patches\test_hp_functions.py.insert.py,92,test_project_data,"('Dict', (('KV', ('Const', ""'customer_data'""), ('Dict', (('KV', ('Const', ""'first_name'""), ('Const', ""'Test'"")), ('KV', ('Const', ""'last_name'""), ('Const', ""'Kunde'""))))), ('KV', ('Const', ""'heatpump_offer'""), ('Dict', (('KV', ('Const', ""'beg_subsidy'""), ('Dict', (('KV', ('Const', ""'effective_total_after_subsidy_net'""), ('Const', '15000')),))), ('KV', ('Const', ""'demand_inputs'""), ('Dict', (('KV', ('Const', ""'heating_costs_yearly'""), ('Const', '2400')), ('KV', ('Const', ""'heating_type'""), ('Const', ""'Gas'"")))))))), ('KV', ('Const', ""'project_details'""), ('Dict', (('KV', ('Const', ""'anlage_kwp'""), ('Const', '10.0')),)))))","('Dict', 3)",,test_project_data = {
.\heatpump_ui.py,1278,test_texts,"('Dict', (('KV', ('Const', ""'building_analysis'""), ('Const', ""'Gebäudeanalyse'"")), ('KV', ('Const', ""'heatpump_analysis'""), ('Const', ""'Wärmepumpen-Analyse'""))))","('Dict', 2)",,test_texts = {
.\crm_dashboard_ui.py,397,test_texts,"('Dict', (('KV', ('Const', ""'crm_dashboard'""), ('Const', ""'CRM Dashboard'"")), ('KV', ('Const', ""'customers'""), ('Const', ""'Kunden'"")), ('KV', ('Const', ""'projects'""), ('Const', ""'Projekte'""))))","('Dict', 3)",,test_texts = {
.\notwendig oder nicht\wichtig\portings\patches\test_hp_functions.py.insert.py,219,tests,"('List', (('Name', 'test_imports'), ('Name', 'test_coords_wp_directory'), ('Name', 'test_placeholders'), ('Name', 'test_analysis_functions'), ('Name', 'test_pdf_functions')))","('List', 5)","test_analysis_functions,test_coords_wp_directory,test_imports,test_pdf_functions,test_placeholders",tests = [
.\tests\test_hp_functions.py,182,tests,"('List', (('Name', 'test_imports'), ('Name', 'test_coords_wp_directory'), ('Name', 'test_placeholders'), ('Name', 'test_analysis_functions'), ('Name', 'test_pdf_functions')))","('List', 5)","test_analysis_functions,test_coords_wp_directory,test_imports,test_pdf_functions,test_placeholders",tests = [
.\tools\portings\patches\test_hp_functions.py.insert.py,219,tests,"('List', (('Name', 'test_imports'), ('Name', 'test_coords_wp_directory'), ('Name', 'test_placeholders'), ('Name', 'test_analysis_functions'), ('Name', 'test_pdf_functions')))","('List', 5)","test_analysis_functions,test_coords_wp_directory,test_imports,test_pdf_functions,test_placeholders",tests = [
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,187,tests,"('List', (('Tuple', (('Const', ""'Logo-Datenbank'""), ('Name', 'test_logo_database'))), ('Tuple', (('Const', ""'PDF-Logo-Integration'""), ('Name', 'test_logo_integration'))), ('Tuple', (('Const', ""'Platzhalter-Integration'""), ('Name', 'test_placeholder_integration'))), ('Tuple', (('Const', ""'Koordinaten-Update'""), ('Name', 'test_coords_update')))))","('List', 4)","test_coords_update,test_logo_database,test_logo_integration,test_placeholder_integration",tests = [
.\tests\test_logo_integration.py,160,tests,"('List', (('Tuple', (('Const', ""'Logo-Datenbank'""), ('Name', 'test_logo_database'))), ('Tuple', (('Const', ""'PDF-Logo-Integration'""), ('Name', 'test_logo_integration'))), ('Tuple', (('Const', ""'Platzhalter-Integration'""), ('Name', 'test_placeholder_integration'))), ('Tuple', (('Const', ""'Koordinaten-Update'""), ('Name', 'test_coords_update')))))","('List', 4)","test_coords_update,test_logo_database,test_logo_integration,test_placeholder_integration",tests = [
.\tools\portings\patches\test_logo_integration.py.insert.py,187,tests,"('List', (('Tuple', (('Const', ""'Logo-Datenbank'""), ('Name', 'test_logo_database'))), ('Tuple', (('Const', ""'PDF-Logo-Integration'""), ('Name', 'test_logo_integration'))), ('Tuple', (('Const', ""'Platzhalter-Integration'""), ('Name', 'test_placeholder_integration'))), ('Tuple', (('Const', ""'Koordinaten-Update'""), ('Name', 'test_coords_update')))))","('List', 4)","test_coords_update,test_logo_database,test_logo_integration,test_placeholder_integration",tests = [
.\notwendig oder nicht\wichtig\repo_porter.py,159,text,"('Add', (('Call', ('Attr', ""'\\n'"", 'join'), (('Name', 'lines'),), ()), ('Other', 'IfExp')))","('Add', (('Call', 1, 0), ('Other', 'IfExp')))",lines,"text = ""\n"".join(lines) + (""\n"" if lines else """")"
.\notwendig oder nicht\wichtig\repo_porter.py,468,text,"('Add', (('Call', ('Attr', ""'\\n'"", 'join'), (('Name', 'lines'),), ()), ('Other', 'IfExp')))","('Add', (('Call', 1, 0), ('Other', 'IfExp')))",lines,"text = ""\n"".join(lines) + (""\n"" if lines else """")"
.\tools\repo_porter.py,159,text,"('Add', (('Call', ('Attr', ""'\\n'"", 'join'), (('Name', 'lines'),), ()), ('Other', 'IfExp')))","('Add', (('Call', 1, 0), ('Other', 'IfExp')))",lines,"text = ""\n"".join(lines) + (""\n"" if lines else """")"
.\tools\repo_porter.py,468,text,"('Add', (('Call', ('Attr', ""'\\n'"", 'join'), (('Name', 'lines'),), ()), ('Other', 'IfExp')))","('Add', (('Call', 1, 0), ('Other', 'IfExp')))",lines,"text = ""\n"".join(lines) + (""\n"" if lines else """")"
.\pdf_template_engine\dynamic_overlay.py,96,text,"('BoolOp', 'Or', (('Call', ('Name', 'load_admin_setting'), (('Const', ""'pdf_global_watermark_text'""), ('Const', ""'VERTRAULICH'"")), ()), ('Const', ""'VERTRAULICH'"")))","('BoolOp', 'Or', 2)",load_admin_setting,"text = load_admin_setting(""pdf_global_watermark_text"", ""VERTRAULICH"") or ""VERTRAULICH"""
.\utils\export_coords.py,26,text,"('Call', ('Attr', ""' '"", 'join'), (('Other', 'GeneratorExp'),), ())","('Call', 1, 0)","w,wlist","text = "" "".join(w[""text""] for w in wlist)"
.\pdf_generator.py,194,text,"('Call', ('Attr', ""get_cover_letter_template(customer_name=self.offer_data.get('customer', {}).get('name', 'N/A'), offer_id=self.offer_data.get('offer_id', 'N/A'))"", 'replace'), (('Const', ""'\\n'""), ('Const', ""'<br/>'"")), ())","('Call', 2, 0)","get_cover_letter_template,self",text = get_cover_letter_template(
.\analysis_utils.py,322,text,"('Call', ('Attr', ""text.replace('.', '')"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",text,"text = text.replace('.', '').replace(',', '.')"
.\central_pdf_system.py,45,text,"('Call', ('Attr', ""text.replace('Ä', 'Ä').replace('Ö', 'Ö')"", 'replace'), (('Const', ""'Ü'""), ('Const', ""'Ü'"")), ())","('Call', 2, 0)",text,"text = text.replace('\xc4', 'Ä').replace('\xd6', 'Ö').replace('\xdc', 'Ü')"
.\central_pdf_system.py,44,text,"('Call', ('Attr', ""text.replace('ä', 'ä').replace('ö', 'ö')"", 'replace'), (('Const', ""'ü'""), ('Const', ""'ü'"")), ())","('Call', 2, 0)",text,"text = text.replace('\xe4', 'ä').replace('\xf6', 'ö').replace('\xfc', 'ü')"
.\pdf_template_engine\dynamic_overlay.py,409,text,"('Call', ('Attr', 'elem', 'get'), (('Const', ""'text'""), ('Const', ""''"")), ())","('Call', 2, 0)",elem,"text = elem.get(""text"", """")"
.\tools\import_module_attributes_generic.py,494,text,"('Call', ('Attr', 'f', 'read'), (), ())","('Call', 0, 0)",f,text = f.read()
.\notwendig oder nicht\wichtig\repo_porter_select.py,159,text,"('Call', ('Attr', 'patch_src', 'read_text'), (), (('encoding', ('Const', ""'utf-8'"")),))","('Call', 0, 1)",patch_src,"text = patch_src.read_text(encoding=""utf-8"")"
.\tools\repo_porter_select.py,159,text,"('Call', ('Attr', 'patch_src', 'read_text'), (), (('encoding', ('Const', ""'utf-8'"")),))","('Call', 0, 1)",patch_src,"text = patch_src.read_text(encoding=""utf-8"")"
.\central_pdf_system.py,50,text,"('Call', ('Attr', 're', 'sub'), (('Const', ""'</b></b>'""), ('Const', ""'</b>'""), ('Name', 'text')), ())","('Call', 3, 0)","re,text","text = re.sub(r'</b></b>', r'</b>', text)  # Doppelte closing tags"
.\central_pdf_system.py,49,text,"('Call', ('Attr', 're', 'sub'), (('Const', ""'<b>([^<]*)</para>'""), ('Const', ""'<b>\\\\1</b></para>'""), ('Name', 'text')), ())","('Call', 3, 0)","re,text","text = re.sub(r'<b>([^<]*)</para>', r'<b>\1</b></para>', text)"
.\central_pdf_system.py,51,text,"('Call', ('Attr', 're', 'sub'), (('Const', ""'<b><b>'""), ('Const', ""'<b>'""), ('Name', 'text')), ())","('Call', 3, 0)","re,text","text = re.sub(r'<b><b>', r'<b>', text)    # Doppelte opening tags"
.\central_pdf_system.py,46,text,"('Call', ('Attr', 'text', 'replace'), (('Const', ""'ß'""), ('Const', ""'ß'"")), ())","('Call', 2, 0)",text,"text = text.replace('\xdf', 'ß')"
.\central_pdf_system.py,56,text,"('Call', ('Attr', 'text', 'replace'), (('Name', 'emoji'), ('Const', ""'•'"")), ())","('Call', 2, 0)","emoji,text","text = text.replace(emoji, '•')"
.\locales.py,81,text,"('Call', ('Attr', 'translations', 'get'), (('Name', 'key'), ('BoolOp', 'Or', (('Name', 'fallback'), ('Name', 'key')))), ())","('Call', 2, 0)","fallback,key,translations","text = translations.get(key, fallback or key)"
.\dev_tools\kakerlake_ultra_cleaner.py,549,text,"('Call', ('Name', 'read_text'), (('Name', 'path'),), ())","('Call', 1, 0)","path,read_text",try: text=read_text(path)
.\mnt\data\kakerlake_ultra_cleaner.py,549,text,"('Call', ('Name', 'read_text'), (('Name', 'path'),), ())","('Call', 1, 0)","path,read_text",try: text=read_text(path)
.\tools\kakerlake_ultra_cleaner.py,550,text,"('Call', ('Name', 'read_text'), (('Name', 'path'),), ())","('Call', 1, 0)","path,read_text",try: text=read_text(path)
.\dev_tools\kakerlake_ultra_cleaner.py,518,text,"('Other', 'IfExp')","('Other', 'IfExp')","ext,p,read_text","text=read_text(p) if ext in {"".py"","".ts"","".tsx"","".js"","".json"","".yml"","".yaml"","".md"","".txt"","".ini"","".cfg""} else """""
.\dev_tools\kakerlake_ultra_cleaner_v2.py,404,text,"('Other', 'IfExp')","('Other', 'IfExp')","ext,p,read_text","text=read_text(p) if ext in {"".py"","".ts"","".tsx"","".js"","".json"","".yml"","".yaml"","".md"","".txt"","".ini"","".cfg""} else """""
.\mnt\data\kakerlake_ultra_cleaner.py,518,text,"('Other', 'IfExp')","('Other', 'IfExp')","ext,p,read_text","text=read_text(p) if ext in {"".py"","".ts"","".tsx"","".js"","".json"","".yml"","".yaml"","".md"","".txt"","".ini"","".cfg""} else """""
.\mnt\data\kakerlake_ultra_cleaner_v2.py,404,text,"('Other', 'IfExp')","('Other', 'IfExp')","ext,p,read_text","text=read_text(p) if ext in {"".py"","".ts"","".tsx"","".js"","".json"","".yml"","".yaml"","".md"","".txt"","".ini"","".cfg""} else """""
.\tools\kakerlake_ultra_cleaner.py,519,text,"('Other', 'IfExp')","('Other', 'IfExp')","ext,p,read_text","text=read_text(p) if ext in {"".py"","".ts"","".tsx"","".js"","".json"","".yml"","".yaml"","".md"","".txt"","".ini"","".cfg""} else """""
.\pdf_generator.py,248,text,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","data,self","text = f"""""""
.\pdf_ui.py,643,text_content,"('Call', ('Attr', 'st', 'text_area'), (('Const', ""'Text-Inhalt:'""),), (('height', ('Const', '120')), ('key', ('Const', ""'custom_text_content'"")), ('placeholder', ('Const', ""'Geben Sie hier Ihren individuellen Text ein...'""))))","('Call', 1, 3)",st,text_content = st.text_area(
.\pdf_generator.py,1145,text_content,"('Call', ('Name', 'get_cover_letter_template'), (), (('customer_name', ('Subscript', ('Subscript', ('Name', 'offer_data'), ('Const', ""'customer'"")), ('Const', ""'name'""))), ('offer_id', ('Subscript', ('Name', 'offer_data'), ('Const', ""'offer_id'"")))))","('Call', 0, 2)","get_cover_letter_template,offer_data",text_content = get_cover_letter_template(
.\pdf_generator.py,132,text_width,"('Call', ('Attr', 'canvas', 'stringWidth'), (('Name', 'footer_text'), ('Const', ""'Helvetica'""), ('Const', '8')), ())","('Call', 3, 0)","canvas,footer_text","text_width = canvas.stringWidth(footer_text, ""Helvetica"", 8)"
.\pdf_generator.py,1382,text_width,"('Call', ('Attr', 'canvas_obj', 'stringWidth'), (('Name', 'footer_text'), ('Const', ""'Helvetica'""), ('Const', '10')), ())","('Call', 3, 0)","canvas_obj,footer_text","text_width = canvas_obj.stringWidth(footer_text, ""Helvetica"", 10)"
.\notwendig oder nicht\wichtig\portings\patches\test_brand_logos.py.insert.py,31,text_width,"('Sub', ('Subscript', ('Name', 'bbox'), ('Const', '2')), ('Subscript', ('Name', 'bbox'), ('Const', '0')))","('Sub', ('Subscript',), ('Subscript',))",bbox,text_width = bbox[2] - bbox[0]
.\tests\test_brand_logos.py,28,text_width,"('Sub', ('Subscript', ('Name', 'bbox'), ('Const', '2')), ('Subscript', ('Name', 'bbox'), ('Const', '0')))","('Sub', ('Subscript',), ('Subscript',))",bbox,text_width = bbox[2] - bbox[0]
.\tools\portings\patches\test_brand_logos.py.insert.py,31,text_width,"('Sub', ('Subscript', ('Name', 'bbox'), ('Const', '2')), ('Subscript', ('Name', 'bbox'), ('Const', '0')))","('Sub', ('Subscript',), ('Subscript',))",bbox,text_width = bbox[2] - bbox[0]
.\notwendig oder nicht\calculations_cli.py,46,texts,"('Call', ('Attr', 'data', 'get'), (('Const', ""'texts'""), ('Dict', ())), ())","('Call', 2, 0)",data,"texts: Dict[str, str] = data.get(""texts"", {})"
.\notwendig oder nicht\keine ahnung\calculations_cli.py,46,texts,"('Call', ('Attr', 'data', 'get'), (('Const', ""'texts'""), ('Dict', ())), ())","('Call', 2, 0)",data,"texts: Dict[str, str] = data.get(""texts"", {})"
.\notwendig oder nicht\need or not\calculations_cli.py,46,texts,"('Call', ('Attr', 'data', 'get'), (('Const', ""'texts'""), ('Dict', ())), ())","('Call', 2, 0)",data,"texts: Dict[str, str] = data.get(""texts"", {})"
.\locales.py,40,texts,"('Call', ('Attr', 'json', 'load'), (('Name', 'f'),), ())","('Call', 1, 0)","f,json",texts = json.load(f)
.\tests\test_main_pdf.py,38,texts,"('Call', ('Attr', 'json', 'loads'), (('Call', ('Attr', 'de_path', 'read_text'), (), (('encoding', ('Const', ""'utf-8'"")),)),), ())","('Call', 1, 0)","de_path,json",texts = json.loads(de_path.read_text(encoding='utf-8'))
.\tools\test_main_pdf.py,38,texts,"('Call', ('Attr', 'json', 'loads'), (('Call', ('Attr', 'de_path', 'read_text'), (), (('encoding', ('Const', ""'utf-8'"")),)),), ())","('Call', 1, 0)","de_path,json",texts = json.loads(de_path.read_text(encoding='utf-8'))
.\pdf_erstellen_komplett.py,68,texts,"('Call', ('Name', '_load_texts'), (), ())","('Call', 0, 0)",_load_texts,texts = _load_texts()
.\tests\test_main_pdf.py,34,texts,"('Dict', ())","('Dict', 0)",,texts = {}
.\tools\test_main_pdf.py,34,texts,"('Dict', ())","('Dict', 0)",,texts = {}
.\calculations.py,2178,texts,"('Other', 'IfExp')","('Other', 'IfExp')",texts,"texts = texts if texts is not None else {}  # Sicherstellen, dass texts ein Dict ist"
.\pdf_styles.py,726,theme,"('Call', ('Attr', 'st', 'selectbox'), (('Const', ""'Chart-Theme'""),), (('format_func', ('Other', 'Lambda')), ('options', ('Call', ('Name', 'list'), (('Call', ('Attr', 'enhancer.chart_themes', 'keys'), (), ()),), ()))))","('Call', 1, 2)","enhancer,list,st,x",theme = st.selectbox(
.\pdf_generator.py,1216,theme,"('Call', ('Name', 'get_theme'), (('Name', 'theme_name'),), ())","('Call', 1, 0)","get_theme,theme_name",theme = get_theme(theme_name)
.\pdf_styles.py,890,theme,"('Subscript', ('Name', 'all_themes'), ('Name', 'selected_theme'))","('Subscript',)","all_themes,selected_theme",theme = all_themes[selected_theme]
.\pdf_styles.py,1256,theme_data,"('Call', ('Attr', 'json', 'load'), (('Name', 'uploaded_theme'),), ())","('Call', 1, 0)","json,uploaded_theme",theme_data = json.load(uploaded_theme)
.\pdf_styles.py,1231,theme_data,"('Dict', (('KV', ('Const', ""'settings'""), ('Attr', 'st.session_state', 'pdf_theme_settings')), ('KV', ('Const', ""'theme'""), ('Subscript', ('Name', 'all_themes'), ('Name', 'current_theme'))), ('KV', ('Const', ""'timestamp'""), ('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ()))))","('Dict', 3)","all_themes,current_theme,datetime,st",theme_data = {
.\pdf_styles.py,1207,theme_key,"('Call', ('Attr', 'manager', 'create_custom_theme'), (('Name', 'new_theme_name'), ('Name', 'base_theme')), ())","('Call', 2, 0)","base_theme,manager,new_theme_name","theme_key = manager.create_custom_theme(new_theme_name, base_theme)"
.\pdf_styles.py,1139,theme_key,"('Other', 'JoinedStr')","('Other', 'JoinedStr')",name,"theme_key = f""custom_{name.lower().replace(' ', '_')}"""
.\analysis.py,7078,timestamp,"('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())","('Call', 0, 0)",datetime,timestamp = datetime.now().isoformat()
.\calculations.py,3955,timestamp,"('Call', ('Attr', 'datetime.now()', 'isoformat'), (), ())","('Call', 0, 0)",datetime,timestamp = datetime.now().isoformat()
.\admin_panel.py,1031,timestamp,"('Call', ('Attr', 'datetime.now()', 'strftime'), (('Const', ""'%Y%m%d%H%M%S'""),), ())","('Call', 1, 0)",datetime,"timestamp = datetime.now().strftime(""%Y%m%d%H%M%S"")"
.\admin_panel.py,1068,timestamp,"('Call', ('Attr', 'datetime.now()', 'strftime'), (('Const', ""'%Y%m%d%H%M%S'""),), ())","('Call', 1, 0)",datetime,"timestamp = datetime.now().strftime(""%Y%m%d%H%M%S"")"
.\database.py,1453,timestamp,"('Call', ('Attr', 'datetime.now()', 'strftime'), (('Const', ""'%Y%m%d%H%M%S'""),), ())","('Call', 1, 0)",datetime,"timestamp = datetime.now().strftime(""%Y%m%d%H%M%S"")"
.\database.py,1512,timestamp,"('Call', ('Attr', 'datetime.now()', 'strftime'), (('Const', ""'%Y%m%d%H%M%S'""),), ())","('Call', 1, 0)",datetime,"timestamp = datetime.now().strftime(""%Y%m%d%H%M%S"")"
.\central_pdf_system.py,2057,timestamp,"('Call', ('Attr', 'datetime.now()', 'strftime'), (('Const', ""'%Y%m%d_%H%M%S'""),), ())","('Call', 1, 0)",datetime,"timestamp = datetime.now().strftime(""%Y%m%d_%H%M%S"")"
.\doc_output.py,2366,timestamp_file,"('Call', ('Attr', ""base64.b32encode(os.urandom(5)).decode('utf-8')"", 'lower'), (), ())","('Call', 0, 0)","base64,os",timestamp_file = base64.b32encode(os.urandom(5)).decode('utf-8').lower()
.\pdf_ui.py,1177,timestamp_file,"('Call', ('Attr', ""base64.b32encode(os.urandom(5)).decode('utf-8')"", 'lower'), (), ())","('Call', 0, 0)","base64,os",timestamp_file = base64.b32encode(os.urandom(5)).decode('utf-8').lower()
.\pdf_ui.py,1182,timestamp_file,"('Subscript', ('Name', 'meta'), ('Const', ""'timestamp'""))","('Subscript',)",meta,timestamp_file = meta['timestamp']
.\pdf_template_engine\placeholders.py,477,title,"('Call', ('Attr', ""as_str(customer.get('title') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,customer","title = as_str(customer.get(""title"") or """").strip()"
.\pdf_generator.py,692,title,"('Call', ('Attr', ""str(cust.get('title') or '')"", 'strip'), (), ())","('Call', 0, 0)","cust,str",title = str(cust.get('title') or '').strip()
.\pdf_generator.py,1396,title,"('Call', ('Attr', 'customer_data', 'get'), (('Const', ""'title'""), ('Const', ""''"")), ())","('Call', 2, 0)",customer_data,"title = customer_data.get(""title"", """")"
.\analysis.py,6500,title,"('Call', ('Attr', 'rec', 'get'), (('Const', ""'title'""), ('Other', 'JoinedStr')), ())","('Call', 2, 0)","i,rec","title = rec.get(""title"", f""Empfehlung {i}"")"
.\crm.py,327,title,"('Call', ('Attr', 'st', 'text_input'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'title_label'""), ('Const', ""'Titel'"")), ()),), (('value', ('Call', ('Attr', 'customer_to_edit', 'get'), (('Const', ""'title'""), ('Const', ""''"")), ())),))","('Call', 1, 1)","customer_to_edit,get_text_crm,st,texts","title = st.text_input(get_text_crm(texts, ""title_label"", ""Titel""), value=customer_to_edit.get('title', ''))"
.\crm_calendar_ui.py,166,title,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Titel *'""),), (('placeholder', ('Const', ""'z.B. Beratungstermin Herr Müller'"")),))","('Call', 1, 1)",st,"title = st.text_input(""Titel *"", placeholder=""z.B. Beratungstermin Herr Müller"")"
.\doc_output.py,1765,title,"('Call', ('Attr', 'st', 'text_input'), (('Other', 'JoinedStr'),), (('key', ('Other', 'JoinedStr')),))","('Call', 1, 1)","i,st","title = st.text_input(f""Titel {i+1}"", key=f""custom_text_title_{i}"")"
.\pdf_generator.py,3070,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'pdf_no_data_title'""), ('Const', ""'Photovoltaik-Angebot - Datensammlung erforderlich'"")), ())","('Call', 3, 0)","get_text,texts","title = get_text(texts, 'pdf_no_data_title', 'Photovoltaik-Angebot - Datensammlung erforderlich')"
.\analysis.py,2904,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_co2_savings_value_title_switcher'""), ('Const', ""'CO₂-Einsparnis und simulierter monetärer Wert über Zeit'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,3616,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_co2_savings_value_title_switcher'""), ('Const', ""'CO₂-Einsparung und monetärer Wert über Zeit'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,4039,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_cost_growth_title_switcher'""), ('Const', ""'Entwicklung Strompreis pro kWh (Szenarien)'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,2057,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_daily_production_title_switcher'""), ('Const', ""'Tagesproduktion (simuliert)'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,4481,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_income_proj_title_switcher'""), ('Const', ""'Prognose: Kumulierte Einnahmen & Ersparnisse'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,3759,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_investment_value_title_switcher'""), ('Const', ""'Illustrativer Investitionsnutzwert'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,4218,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_roi_comparison_title_switcher'""), ('Const', ""'ROI-Vergleich – Investitionen (Illustrativ)'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,4302,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_scenario_comp_title_switcher'""), ('Const', ""'Illustrativer Szenarienvergleich'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,4144,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_selfuse_ratio_title_switcher'""), ('Const', ""'Monatlicher Eigenversorgungsgrad (Autarkiegrad des Monats) - Jahr 1'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,3965,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_selfuse_stack_title_switcher'""), ('Const', ""'Jährlicher Eigenverbrauch vs. Einspeisung (Simuliert)'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,3863,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_storage_effect_title_switcher'""), ('Const', ""'Illustrative Speicherwirkung'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,4410,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_tariff_comp_title_switcher'""), ('Const', ""'Monatliche Stromkosten: Vorher vs. Nachher (Jahr 1)'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,2728,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_tariff_cube_switcher'""), ('Const', ""'Tarifvergleich - Anbieter (2D Diagramm)'"")), ())","('Call', 3, 0)","get_text,texts",title = get_text(
.\analysis.py,2794,title,"('Call', ('Name', 'get_text'), (('Name', 'texts'), ('Const', ""'viz_tariff_cube_title_switcher'""), ('Other', 'JoinedStr')), ())","('Call', 3, 0)","get_text,jahresverbrauch,texts",title = get_text(
.\analysis.py,5040,title,"('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'pie_chart_consumption_coverage_title'""), ('Const', ""'Deckung Gesamtverbrauch'"")), ())","('Call', 3, 0)","get_text,texts_local",title = get_text(
.\analysis.py,5192,title,"('Call', ('Name', 'get_text'), (('Name', 'texts_local'), ('Const', ""'pie_chart_pv_usage_title'""), ('Const', ""'Aufteilung Photovoltaik-Produktion'"")), ())","('Call', 3, 0)","get_text,texts_local",title = get_text(
.\pdf_template_engine\placeholders.py,479,title,"('Const', ""''"")","('Const',)",,"title = """""
.\doc_output.py,1909,title_image_options,"('Dict', (('KV', ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'no_title_images_available'""), ('Const', ""'Keine Titelbilder verfügbar'"")), ()), ('Const', 'None')),))","('Dict', 1)","get_text_pdf_ui,texts","title_image_options = {get_text_pdf_ui(texts, ""no_title_images_available"", ""Keine Titelbilder verfügbar""): None}"
.\pdf_ui.py,973,title_image_options,"('Dict', (('KV', ('Call', ('Name', 'get_text_pdf_ui'), (('Name', 'texts'), ('Const', ""'no_title_images_available'""), ('Const', ""'Keine Titelbilder verfügbar'"")), ()), ('Const', 'None')),))","('Dict', 1)","get_text_pdf_ui,texts","if not title_image_options: title_image_options = {get_text_pdf_ui(texts, ""no_title_images_available"", ""Keine Titelbilder verfügbar""): None}"
.\doc_output.py,1907,title_image_options,"('Other', 'DictComp')","('Other', 'DictComp')","dict,enumerate,i,isinstance,t,title_image_templates","title_image_options = {t.get('name', f""Bild {i+1}""): t.get('data') for i, t in enumerate(title_image_templates) if isinstance(t, dict) and t.get('name')}"
.\pdf_ui.py,972,title_image_options,"('Other', 'DictComp')","('Other', 'DictComp')","dict,enumerate,i,isinstance,t,title_image_templates","title_image_options = {t.get('name', f""Bild {i+1}""): t.get('data') for i, t in enumerate(title_image_templates) if isinstance(t,dict) and t.get('name')}"
.\doc_output.py,1864,title_image_templates,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'pdf_title_image_templates'""), ('List', ())), ())","('Call', 2, 0)",load_admin_setting_func,"title_image_templates = load_admin_setting_func('pdf_title_image_templates', [])"
.\pdf_ui.py,352,title_image_templates,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'pdf_title_image_templates'""), ('List', ())), ())","('Call', 2, 0)",load_admin_setting_func,"title_image_templates = load_admin_setting_func('pdf_title_image_templates', [])"
.\doc_output.py,1867,title_image_templates,"('List', ())","('List', 0)",,"if not isinstance(title_image_templates, list): title_image_templates = []"
.\pdf_ui.py,374,title_image_templates,"('List', ())","('List', 0)",,"if not isinstance(title_image_templates, list): title_image_templates = []"
.\multi_offer_generator.py,1049,title_image_templates,"('Other', 'IfExp')","('Other', 'IfExp')","callable,load_admin_setting","title_image_templates = load_admin_setting(""pdf_title_image_templates"", []) if callable(load_admin_setting) else []"
.\central_pdf_system.py,1817,title_templates,"('Call', ('Name', 'load_admin_setting_func'), (('Const', ""'pdf_title_image_templates'""), ('List', ())), ())","('Call', 2, 0)",load_admin_setting_func,"title_templates = load_admin_setting_func('pdf_title_image_templates', [])"
.\central_pdf_system.py,1821,title_templates,"('List', ())","('List', 0)",,title_templates = offer_templates = letter_templates = []
.\tools\schema_extractor.py,87,tname,"('Call', ('Attr', 'im', 'group'), (('Const', '1'),), ())","('Call', 1, 0)",im,"tname = im.group(1); cols = [c.strip() for c in im.group(2).split(',')]"
.\tools\schema_extractor.py,29,tname,"('Call', ('Attr', 'm', 'group'), (('Const', '1'),), ())","('Call', 1, 0)",m,tname = m.group(1)
.\tools\schema_extractor.py,91,tname,"('Subscript', ('Name', 'c'), ('Const', ""'table'""))","('Subscript',)",c,"tname = c[""table""]"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,140,top,"('Call', ('Name', 'max'), (('Add', (('Mult', (('Const', '0.02'), ('Name', 'max_val'))), ('Name', 'max_val'))), ('Add', (('Const', '1000.0'), ('Name', 'top')))), ())","('Call', 2, 0)","max,max_val,top","top = max(max_val + 0.02 * max_val, top + 1000.0)"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,158,top,"('Call', ('Name', 'max'), (('Add', (('Mult', (('Const', '0.02'), ('Name', 'max_val'))), ('Name', 'max_val'))), ('Add', (('Const', '1000.0'), ('Name', 'top')))), ())","('Call', 2, 0)","max,max_val,top","top = max(max_val + 0.02 * max_val, top + 1000.0)"
.\pdf_template_engine\dynamic_overlay.py,653,top,"('Call', ('Name', 'max'), (('Add', (('Mult', (('Const', '0.02'), ('Name', 'max_val'))), ('Name', 'max_val'))), ('Add', (('Const', '1000.0'), ('Name', 'top')))), ())","('Call', 2, 0)","max,max_val,top","top = max(max_val + 0.02 * max_val, top + 1000.0)"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,140,top,"('Call', ('Name', 'max'), (('Add', (('Mult', (('Const', '0.02'), ('Name', 'max_val'))), ('Name', 'max_val'))), ('Add', (('Const', '1000.0'), ('Name', 'top')))), ())","('Call', 2, 0)","max,max_val,top","top = max(max_val + 0.02 * max_val, top + 1000.0)"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,158,top,"('Call', ('Name', 'max'), (('Add', (('Mult', (('Const', '0.02'), ('Name', 'max_val'))), ('Name', 'max_val'))), ('Add', (('Const', '1000.0'), ('Name', 'top')))), ())","('Call', 2, 0)","max,max_val,top","top = max(max_val + 0.02 * max_val, top + 1000.0)"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,145,top,"('Const', '25000.0')","('Const',)",,top = 25000.0
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,163,top,"('Const', '25000.0')","('Const',)",,top = 25000.0
.\pdf_template_engine\dynamic_overlay.py,658,top,"('Const', '25000.0')","('Const',)",,top = 25000.0
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,145,top,"('Const', '25000.0')","('Const',)",,top = 25000.0
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,163,top,"('Const', '25000.0')","('Const',)",,top = 25000.0
.\pdf_template_engine\placeholders.py,1071,top,"('Mult', (('Call', ('Attr', 'math', 'ceil'), (('Div', ('Div', ('Name', 'max_val'), ('Name', 'step')), ('Const', '5.0')),), ()), ('Const', '5.0'), ('Name', 'step')))","('Mult', (('Call', 1, 0), ('Const',), ('Name',)))","math,max_val,step",top = math.ceil(max_val / step / 5.0) * step * 5.0
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,138,top,"('Mult', (('Call', ('Attr', 'math', 'ceil'), (('Div', ('Name', 'max_val'), ('Const', '1000.0')),), ()), ('Const', '1000.0')))","('Mult', (('Call', 1, 0), ('Const',)))","math,max_val",top = math.ceil(max_val / 1000.0) * 1000.0
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,156,top,"('Mult', (('Call', ('Attr', 'math', 'ceil'), (('Div', ('Name', 'max_val'), ('Const', '1000.0')),), ()), ('Const', '1000.0')))","('Mult', (('Call', 1, 0), ('Const',)))","math,max_val",top = math.ceil(max_val / 1000.0) * 1000.0
.\pdf_template_engine\dynamic_overlay.py,651,top,"('Mult', (('Call', ('Attr', 'math', 'ceil'), (('Div', ('Name', 'max_val'), ('Const', '1000.0')),), ()), ('Const', '1000.0')))","('Mult', (('Call', 1, 0), ('Const',)))","math,max_val",top = math.ceil(max_val / 1000.0) * 1000.0
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,138,top,"('Mult', (('Call', ('Attr', 'math', 'ceil'), (('Div', ('Name', 'max_val'), ('Const', '1000.0')),), ()), ('Const', '1000.0')))","('Mult', (('Call', 1, 0), ('Const',)))","math,max_val",top = math.ceil(max_val / 1000.0) * 1000.0
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,156,top,"('Mult', (('Call', ('Attr', 'math', 'ceil'), (('Div', ('Name', 'max_val'), ('Const', '1000.0')),), ()), ('Const', '1000.0')))","('Mult', (('Call', 1, 0), ('Const',)))","math,max_val",top = math.ceil(max_val / 1000.0) * 1000.0
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,143,top,"('Name', 'cap')","('Name',)",cap,top = cap
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,161,top,"('Name', 'cap')","('Name',)",cap,top = cap
.\pdf_template_engine\dynamic_overlay.py,656,top,"('Name', 'cap')","('Name',)",cap,top = cap
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,143,top,"('Name', 'cap')","('Name',)",cap,top = cap
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,161,top,"('Name', 'cap')","('Name',)",cap,top = cap
.\heatpump_ui.py,870,top,"('Other', 'IfExp')","('Other', 'IfExp')",candidates,top = candidates[0] if candidates else None
.\heatpump_ui.py,867,top,"('Subscript', ('Name', 'suitable'), ('Const', '0'))","('Subscript',)",suitable,top = suitable[0]
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,91,top_label_y1,"('Call', ('Name', 'min'), (('Name', 'candidates'),), ())","('Call', 1, 0)","candidates,min",top_label_y1 = min(candidates)
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,109,top_label_y1,"('Call', ('Name', 'min'), (('Name', 'candidates'),), ())","('Call', 1, 0)","candidates,min",top_label_y1 = min(candidates)
.\pdf_template_engine\dynamic_overlay.py,604,top_label_y1,"('Call', ('Name', 'min'), (('Name', 'candidates'),), ())","('Call', 1, 0)","candidates,min",top_label_y1 = min(candidates)
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,91,top_label_y1,"('Call', ('Name', 'min'), (('Name', 'candidates'),), ())","('Call', 1, 0)","candidates,min",top_label_y1 = min(candidates)
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,109,top_label_y1,"('Call', ('Name', 'min'), (('Name', 'candidates'),), ())","('Call', 1, 0)","candidates,min",top_label_y1 = min(candidates)
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,96,top_label_y1,"('Const', '192.7')","('Const',)",,top_label_y1 = 192.7
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,114,top_label_y1,"('Const', '192.7')","('Const',)",,top_label_y1 = 192.7
.\pdf_template_engine\dynamic_overlay.py,609,top_label_y1,"('Const', '192.7')","('Const',)",,top_label_y1 = 192.7
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,96,top_label_y1,"('Const', '192.7')","('Const',)",,top_label_y1 = 192.7
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,114,top_label_y1,"('Const', '192.7')","('Const',)",,top_label_y1 = 192.7
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,72,top_label_y1,"('Const', 'None')","('Const',)",,top_label_y1 = None
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,90,top_label_y1,"('Const', 'None')","('Const',)",,top_label_y1 = None
.\pdf_template_engine\dynamic_overlay.py,585,top_label_y1,"('Const', 'None')","('Const',)",,top_label_y1 = None
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,72,top_label_y1,"('Const', 'None')","('Const',)",,top_label_y1 = None
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,90,top_label_y1,"('Const', 'None')","('Const',)",,top_label_y1 = None
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,77,top_label_y1,"('Subscript', ('Subscript', ('Name', 'el'), ('Const', ""'position'"")), ('Const', '3'))","('Subscript',)",el,"top_label_y1 = el[""position""][3]"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,95,top_label_y1,"('Subscript', ('Subscript', ('Name', 'el'), ('Const', ""'position'"")), ('Const', '3'))","('Subscript',)",el,"top_label_y1 = el[""position""][3]"
.\pdf_template_engine\dynamic_overlay.py,590,top_label_y1,"('Subscript', ('Subscript', ('Name', 'el'), ('Const', ""'position'"")), ('Const', '3'))","('Subscript',)",el,"top_label_y1 = el[""position""][3]"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,77,top_label_y1,"('Subscript', ('Subscript', ('Name', 'el'), ('Const', ""'position'"")), ('Const', '3'))","('Subscript',)",el,"top_label_y1 = el[""position""][3]"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,95,top_label_y1,"('Subscript', ('Subscript', ('Name', 'el'), ('Const', ""'position'"")), ('Const', '3'))","('Subscript',)",el,"top_label_y1 = el[""position""][3]"
.\calculations.py,2029,top_recommendations,"('Call', ('Name', 'sorted'), (('Name', 'optimization_potentials'),), (('key', ('Other', 'Lambda')), ('reverse', ('Const', 'True'))))","('Call', 1, 2)","optimization_potentials,sorted,x",top_recommendations = sorted(
.\analysis.py,6492,top_recommendations,"('Subscript', ('Name', 'optimization_results'), ('Const', ""'top_recommendations'""))","('Subscript',)",optimization_results,"top_recommendations = optimization_results[""top_recommendations""]"
.\heatpump_pricing.py,95,total,"('Add', (('Name', 'labor_sum'), ('Name', 'material_sum')))","('Add', (('Name',), ('Name',)))","labor_sum,material_sum",total = material_sum + labor_sum
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,47,total,"('Add', (('Name', 'labor_sum'), ('Name', 'material_sum')))","('Add', (('Name',), ('Name',)))","labor_sum,material_sum",total = material_sum + labor_sum
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,47,total,"('Add', (('Name', 'labor_sum'), ('Name', 'material_sum')))","('Add', (('Name',), ('Name',)))","labor_sum,material_sum",total = material_sum + labor_sum
.\notwendig oder nicht\custom_dynamic_calculation.py,86,total,"('Add', (('Name', 'revenue_grid'), ('Name', 'savings_battery_surplus'), ('Name', 'savings_battery_usage'), ('Name', 'savings_direct')))","('Add', (('Name',), ('Name',), ('Name',), ('Name',)))","revenue_grid,savings_battery_surplus,savings_battery_usage,savings_direct",total = savings_direct + revenue_grid + savings_battery_usage + savings_battery_surplus
.\notwendig oder nicht\wichtig\out_selected\patches\tools\custom_dynamic_calculation.py.insert.py,49,total,"('Add', (('Name', 'revenue_grid'), ('Name', 'savings_battery_surplus'), ('Name', 'savings_battery_usage'), ('Name', 'savings_direct')))","('Add', (('Name',), ('Name',), ('Name',), ('Name',)))","revenue_grid,savings_battery_surplus,savings_battery_usage,savings_direct",total = (
.\notwendig oder nicht\wichtig\portings\patches\tools\custom_dynamic_calculation.py.insert.py,50,total,"('Add', (('Name', 'revenue_grid'), ('Name', 'savings_battery_surplus'), ('Name', 'savings_battery_usage'), ('Name', 'savings_direct')))","('Add', (('Name',), ('Name',), ('Name',), ('Name',)))","revenue_grid,savings_battery_surplus,savings_battery_usage,savings_direct",total = (
.\tools\custom_dynamic_calculation.py,86,total,"('Add', (('Name', 'revenue_grid'), ('Name', 'savings_battery_surplus'), ('Name', 'savings_battery_usage'), ('Name', 'savings_direct')))","('Add', (('Name',), ('Name',), ('Name',), ('Name',)))","revenue_grid,savings_battery_surplus,savings_battery_usage,savings_direct",total = (
.\tools\out_selected\patches\tools\custom_dynamic_calculation.py.insert.py,49,total,"('Add', (('Name', 'revenue_grid'), ('Name', 'savings_battery_surplus'), ('Name', 'savings_battery_usage'), ('Name', 'savings_direct')))","('Add', (('Name',), ('Name',), ('Name',), ('Name',)))","revenue_grid,savings_battery_surplus,savings_battery_usage,savings_direct",total = (
.\tools\portings\patches\tools\custom_dynamic_calculation.py.insert.py,50,total,"('Add', (('Name', 'revenue_grid'), ('Name', 'savings_battery_surplus'), ('Name', 'savings_battery_usage'), ('Name', 'savings_direct')))","('Add', (('Name',), ('Name',), ('Name',), ('Name',)))","revenue_grid,savings_battery_surplus,savings_battery_usage,savings_direct",total = (
.\analysis.py,2075,total,"('BoolOp', 'Or', (('Call', ('Name', 'sum'), (('Name', 'power'),), ()), ('Const', '1.0')))","('BoolOp', 'Or', 2)","power,sum",total = sum(power) or 1.0
.\multi_offer_generator_old.py,1192,total,"('Call', ('Name', 'len'), (('Name', 'company_ids'),), ())","('Call', 1, 0)","company_ids,len",total = len(company_ids)
.\add_test_product_images.py,89,total,"('Call', ('Name', 'len'), (('Name', 'products'),), ())","('Call', 1, 0)","len,products",total = len(products)
.\notwendig oder nicht\wichtig\portings\patches\add_test_product_images.py.insert.py,116,total,"('Call', ('Name', 'len'), (('Name', 'products'),), ())","('Call', 1, 0)","len,products",total = len(products)
.\tools\portings\patches\add_test_product_images.py.insert.py,116,total,"('Call', ('Name', 'len'), (('Name', 'products'),), ())","('Call', 1, 0)","len,products",total = len(products)
.\notwendig oder nicht\wichtig\portings\patches\test_logo_integration.py.insert.py,209,total,"('Call', ('Name', 'len'), (('Name', 'results'),), ())","('Call', 1, 0)","len,results",total = len(results)
.\tests\test_logo_integration.py,182,total,"('Call', ('Name', 'len'), (('Name', 'results'),), ())","('Call', 1, 0)","len,results",total = len(results)
.\tools\portings\patches\test_logo_integration.py.insert.py,209,total,"('Call', ('Name', 'len'), (('Name', 'results'),), ())","('Call', 1, 0)","len,results",total = len(results)
.\notwendig oder nicht\wichtig\portings\patches\test_hp_functions.py.insert.py,228,total,"('Call', ('Name', 'len'), (('Name', 'tests'),), ())","('Call', 1, 0)","len,tests",total = len(tests)
.\tests\test_hp_functions.py,191,total,"('Call', ('Name', 'len'), (('Name', 'tests'),), ())","('Call', 1, 0)","len,tests",total = len(tests)
.\tools\portings\patches\test_hp_functions.py.insert.py,228,total,"('Call', ('Name', 'len'), (('Name', 'tests'),), ())","('Call', 1, 0)","len,tests",total = len(tests)
.\pdf_template_engine\placeholders.py,2224,total,"('Call', ('Name', 'sum'), (('Other', 'GeneratorExp'),), ())","('Call', 1, 0)","_to_float,k,keys_sum,result,sum",total = sum(
.\analysis.py,1877,total_a2,"('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'stromkosten_gesamt_euro_jahr'""),), ()),), ())","('Call', 1, 0)","_parse_float,project_data","total_a2 = _parse_float(project_data.get(""stromkosten_gesamt_euro_jahr""))"
.\analysis.py,1879,total_a2,"('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_data', 'get'), (('Const', ""'stromkosten_gesamt_jahr_eur'""),), ()),), ())","('Call', 1, 0)","_parse_float,project_data","total_a2 = _parse_float(project_data.get(""stromkosten_gesamt_jahr_eur""))"
.\analysis.py,1893,total_a2,"('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'stromkosten_gesamt_euro_jahr'""),), ()),), ())","('Call', 1, 0)","_parse_float,project_details","total_a2 = _parse_float(project_details.get(""stromkosten_gesamt_euro_jahr""))"
.\analysis.py,1895,total_a2,"('Call', ('Name', '_parse_float'), (('Call', ('Attr', 'project_details', 'get'), (('Const', ""'stromkosten_gesamt_jahr_eur'""),), ()),), ())","('Call', 1, 0)","_parse_float,project_details","total_a2 = _parse_float(project_details.get(""stromkosten_gesamt_jahr_eur""))"
.\analysis.py,2934,total_co2_savings,"('Call', ('Name', 'sum'), (('Name', 'co2_savings_tonnes_per_year'),), ())","('Call', 1, 0)","co2_savings_tonnes_per_year,sum",total_co2_savings = sum(co2_savings_tonnes_per_year)
.\analysis.py,3646,total_co2_savings,"('Call', ('Name', 'sum'), (('Name', 'co2_savings_tonnes_per_year'),), ())","('Call', 1, 0)","co2_savings_tonnes_per_year,sum",total_co2_savings = sum(co2_savings_tonnes_per_year)
.\calculations.py,1944,total_co2_savings,"('Sub', ('Mult', (('Name', 'annual_co2_savings'), ('Name', 'years'))), ('Name', 'production_emissions'))","('Sub', ('Mult', (('Name',), ('Name',))), ('Name',))","annual_co2_savings,production_emissions,years",total_co2_savings = annual_co2_savings * years - production_emissions
.\calculations.py,871,total_cost,"('Const', '0')","('Const',)",,total_cost = 0
.\calculations.py,4148,total_cost,"('Sub', ('Name', 'new_cost'), ('Name', 'feed_in_revenue'))","('Sub', ('Name',), ('Name',))","feed_in_revenue,new_cost",total_cost = new_cost - feed_in_revenue
.\live_calculation_engine.py,69,total_cost_with_pv,"('Call', ('Name', 'max'), (('Const', '0'), ('Name', 'total_cost_with_pv')), ())","('Call', 2, 0)","max,total_cost_with_pv","total_cost_with_pv = max(0, total_cost_with_pv)"
.\live_calculation_engine.py,61,total_cost_with_pv,"('Const', '0')","('Const',)",,total_cost_with_pv = 0
.\multi_offer_generator_old.py,1442,total_count,"('Call', ('Name', 'len'), (('Name', 'results'),), ())","('Call', 1, 0)","len,results",total_count = len(results)
.\database.py,449,total_count,"('Call', ('Name', 'len'), (('Name', 'settings'),), ())","('Call', 1, 0)","len,settings",total_count = len(settings)
.\calculations.py,4209,total_degradation,"('Const', '0.0')","('Const',)",,total_degradation = 0.0
.\calculations.py,4205,total_degradation,"('Mult', (('Const', '100'), ('Div', ('Sub', ('Attr', 'self', 'initial_power'), ('Name', 'current_power')), ('Attr', 'self', 'initial_power'))))","('Mult', (('Const',), ('Div', ('Sub', ('Attr',), ('Name',)), ('Attr',))))","current_power,self",total_degradation = (
.\financial_tools.py,34,total_interest,"('Const', '0')","('Const',)",,total_interest = 0
.\heatpump_pricing.py,170,total_interest,"('Const', '0.0')","('Const',)",,total_interest = 0.0
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_pricing.py.insert.py,116,total_interest,"('Const', '0.0')","('Const',)",,total_interest = 0.0
.\tools\out_selected\patches\heatpump_pricing.py.insert.py,116,total_interest,"('Const', '0.0')","('Const',)",,total_interest = 0.0
.\financial_tools.py,38,total_interest,"('Sub', ('Mult', (('Name', 'monthly_payment'), ('Name', 'num_payments'))), ('Name', 'principal'))","('Sub', ('Mult', (('Name',), ('Name',))), ('Name',))","monthly_payment,num_payments,principal",total_interest = (monthly_payment * num_payments) - principal
.\central_pdf_system.py,506,total_investment,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'total_investment'""), ('Const', ""'N/A'"")), ())","('Call', 2, 0)",analysis_results,"total_investment = analysis_results.get('total_investment', 'N/A')"
.\analysis.py,6683,total_investment,"('Call', ('Attr', 'results', 'get'), (('Const', ""'total_investment_netto'""), ('Const', '0')), ())","('Call', 2, 0)",results,"total_investment = results.get(""total_investment_netto"", 0)"
.\analysis.py,7843,total_investment,"('Call', ('Attr', 'results', 'get'), (('Const', ""'total_investment_netto'""), ('Const', '25000.0')), ())","('Call', 2, 0)",results,"total_investment = results.get(""total_investment_netto"", 25000.0)"
.\analysis.py,8343,total_investment,"('Call', ('Attr', 'results', 'get'), (('Const', ""'total_investment_netto'""), ('Name', 'financing_amount')), ())","('Call', 2, 0)","financing_amount,results","total_investment = results.get(""total_investment_netto"", financing_amount)"
.\pv_visuals.py,190,total_investment,"('Other', 'IfExp')","('Other', 'IfExp')","float,int,isinstance,math,total_investment_raw","total_investment = float(total_investment_raw) if isinstance(total_investment_raw, (int, float)) and not (math.isnan(total_investment_raw) or math.isinf(total_investment_raw)) else 0.0"
.\heatpump_ui.py,550,total_investment,"('Sub', ('Add', (('Name', 'installation_cost'), ('Subscript', ('Name', 'heatpump'), ('Const', ""'price'"")))), ('Name', 'subsidy_amount'))","('Sub', ('Add', (('Name',), ('Subscript',))), ('Name',))","heatpump,installation_cost,subsidy_amount",total_investment = heatpump['price'] + installation_cost - subsidy_amount
.\heatpump_ui.py,903,total_investment,"('Sub', ('Add', (('Name', 'installation_cost'), ('Subscript', ('Name', 'heatpump'), ('Const', ""'price'"")))), ('Name', 'subsidy_amount'))","('Sub', ('Add', (('Name',), ('Subscript',))), ('Name',))","heatpump,installation_cost,subsidy_amount",total_investment = heatpump['price'] + installation_cost - subsidy_amount
.\analysis.py,2305,total_investment_netto_val,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'total_investment_netto'""), ('Const', '0.0')), ())","('Call', 2, 0)",analysis_results,"total_investment_netto_val = analysis_results.get(""total_investment_netto"", 0.0)"
.\analysis.py,2310,total_investment_netto_val,"('Const', '10000.0')","('Const',)",,total_investment_netto_val = 10000.0
.\pdf_generator.py,397,total_pages,"('Add', (('Call', ('Name', 'len'), (('Attr', 'PdfReader(_io.BytesIO(additional_pdf))', 'pages'),), ()), ('Const', '7')))","('Add', (('Call', 1, 0), ('Const',)))","PdfReader,_io,additional_pdf,len",total_pages = 7 + len(PdfReader(_io.BytesIO(additional_pdf)).pages)
.\pdf_template_engine\dynamic_overlay.py,1002,total_pages,"('Add', (('Call', ('Name', 'len'), (('Attr', 'add_reader', 'pages'),), ()), ('Const', '7')))","('Add', (('Call', 1, 0), ('Const',)))","add_reader,len",total_pages = 7 + len(add_reader.pages)
.\pdf_generator.py,679,total_pages,"('Add', (('Call', ('Name', 'len'), (('Attr', 'tmp_reader', 'pages'),), ()), ('Const', '7')))","('Add', (('Call', 1, 0), ('Const',)))","len,tmp_reader",total_pages = 7 + len(tmp_reader.pages)
.\pdf_helpers.py,86,total_pages,"('Attr', 'temp_doc', 'page')","('Attr',)",temp_doc,total_pages = temp_doc.page
.\pdf_template_engine\placeholders.py,2262,total_pages,"('Call', ('Attr', 'project_data', 'get'), (('Const', ""'total_pages'""), ('Const', '7')), ())","('Call', 2, 0)",project_data,"total_pages = project_data.get(""total_pages"", 7)"
.\pdf_erstellen_komplett.py,239,total_pages,"('Call', ('Name', 'len'), (('Attr', 'r', 'pages'),), ())","('Call', 1, 0)","len,r",total_pages = len(r.pages)
.\pdf_preview.py,272,total_pages,"('Call', ('Name', 'len'), (('Name', 'images'),), ())","('Call', 1, 0)","images,len",total_pages = len(images)
.\pdf_generator.py,392,total_pages,"('Const', '7')","('Const',)",,total_pages = 7
.\pdf_generator.py,399,total_pages,"('Const', '7')","('Const',)",,total_pages = 7
.\pdf_template_engine\dynamic_overlay.py,998,total_pages,"('Const', '7')","('Const',)",,total_pages = 7
.\pdf_template_engine\dynamic_overlay.py,1004,total_pages,"('Const', '7')","('Const',)",,total_pages = 7
.\pdf_erstellen_komplett.py,241,total_pages,"('Const', 'None')","('Const',)",,total_pages = None
.\dev_tools\kakerlake_ultra_cleaner.py,124,tree,"('Call', ('Attr', 'ast', 'parse'), (('Name', 'src'),), (('filename', ('Name', 'p')),))","('Call', 1, 1)","ast,p,src","src=read_text(p); tree=ast.parse(src, filename=p); lines=src.splitlines()"
.\mnt\data\kakerlake_ultra_cleaner.py,124,tree,"('Call', ('Attr', 'ast', 'parse'), (('Name', 'src'),), (('filename', ('Name', 'p')),))","('Call', 1, 1)","ast,p,src","src=read_text(p); tree=ast.parse(src, filename=p); lines=src.splitlines()"
.\tools\kakerlake_ultra_cleaner.py,125,tree,"('Call', ('Attr', 'ast', 'parse'), (('Name', 'src'),), (('filename', ('Name', 'p')),))","('Call', 1, 1)","ast,p,src","src=read_text(p); tree=ast.parse(src, filename=p); lines=src.splitlines()"
.\notwendig oder nicht\wichtig\repo_porter.py,160,tree,"('Call', ('Attr', 'ast', 'parse'), (('Name', 'text'),), ())","('Call', 1, 0)","ast,text",tree = ast.parse(text)
.\notwendig oder nicht\wichtig\repo_porter.py,469,tree,"('Call', ('Attr', 'ast', 'parse'), (('Name', 'text'),), ())","('Call', 1, 0)","ast,text",tree = ast.parse(text)
.\notwendig oder nicht\wichtig\repo_to_json.py,129,tree,"('Call', ('Attr', 'ast', 'parse'), (('Name', 'text'),), ())","('Call', 1, 0)","ast,text",tree = ast.parse(text)
.\tools\repo_porter.py,160,tree,"('Call', ('Attr', 'ast', 'parse'), (('Name', 'text'),), ())","('Call', 1, 0)","ast,text",tree = ast.parse(text)
.\tools\repo_porter.py,469,tree,"('Call', ('Attr', 'ast', 'parse'), (('Name', 'text'),), ())","('Call', 1, 0)","ast,text",tree = ast.parse(text)
.\tools\repo_to_json.py,129,tree,"('Call', ('Attr', 'ast', 'parse'), (('Name', 'text'),), ())","('Call', 1, 0)","ast,text",tree = ast.parse(text)
.\pv_visuals.py,245,trees_equiv,"('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'co2_equivalent_trees_per_year'""), ('Const', '0.0')), ())","('Call', 2, 0)",analysis_results,"trees_equiv = analysis_results.get('co2_equivalent_trees_per_year', 0.0)"
.\pdf_generator.py,2305,trees_equiv,"('Call', ('Attr', 'current_analysis_results_pdf', 'get'), (('Const', ""'co2_equivalent_trees_per_year'""), ('Const', '0.0')), ())","('Call', 2, 0)",current_analysis_results_pdf,"trees_equiv = current_analysis_results_pdf.get('co2_equivalent_trees_per_year', 0.0)"
.\pdf_generator.py,586,tri,"('Call', ('Attr', '_rl_canvas', 'Path'), (), ())","('Call', 0, 0)",_rl_canvas,tri = _rl_canvas.Path()
.\pdf_generator.py,588,tri,"('Const', 'None')","('Const',)",,tri = None
.\notwendig oder nicht\wichtig\repo_to_json.py,164,truncated,"('Const', 'False')","('Const',)",,truncated = False
.\tools\repo_to_json.py,164,truncated,"('Const', 'False')","('Const',)",,truncated = False
.\notwendig oder nicht\wichtig\repo_to_json.py,170,truncated,"('Const', 'True')","('Const',)",,truncated = True
.\tools\repo_to_json.py,170,truncated,"('Const', 'True')","('Const',)",,truncated = True
.\pdf_template_engine\dynamic_overlay.py,522,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Call', ('Name', 'str'), (('Name', 'draw_text'),), ()), ('Name', 'font_name'), ('Name', 'font_size')), ())","('Call', 3, 0)","c,draw_text,font_name,font_size,str","tw = c.stringWidth(str(draw_text), font_name, font_size)"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,173,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6)"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,191,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6)"
.\pdf_template_engine\dynamic_overlay.py,686,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6)"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,173,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6)"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,191,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6)"
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,171,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6.0')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6.0)"
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,189,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6.0')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6.0)"
.\pdf_template_engine\dynamic_overlay.py,684,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6.0')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6.0)"
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,171,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6.0')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6.0)"
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,189,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'lbl'), ('Const', ""'Helvetica'""), ('Const', '6.0')), ())","('Call', 3, 0)","c,lbl","tw = c.stringWidth(lbl, ""Helvetica"", 6.0)"
.\pdf_template_engine\dynamic_overlay.py,284,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'txt'), ('Const', ""'Helvetica-Bold'""), ('Const', '12')), ())","('Call', 3, 0)","c,txt","tw = c.stringWidth(txt, ""Helvetica-Bold"", 12)"
.\pdf_template_engine\dynamic_overlay.py,291,tw,"('Call', ('Attr', 'c', 'stringWidth'), (('Name', 'txt'), ('Const', ""'Helvetica-Bold'""), ('Const', '12')), ())","('Call', 3, 0)","c,txt","tw = c.stringWidth(txt, ""Helvetica-Bold"", 12)"
.\pdf_generator.py,641,tw,"('Call', ('Attr', 'canv', 'stringWidth'), (('Name', 'date_text'), ('Name', 'font_name'), ('Name', 'font_size')), ())","('Call', 3, 0)","canv,date_text,font_name,font_size","tw = canv.stringWidth(date_text, font_name, font_size)"
.\dev_tools\kakerlake_ultra_cleaner.py,433,tx,"('Call', ('Name', 'Tx'), (), ())","('Call', 0, 0)",Tx,tx=Tx(); new_mod=mod.visit(tx)
.\dev_tools\kakerlake_ultra_cleaner.py,495,tx,"('Call', ('Name', 'Tx'), (), ())","('Call', 0, 0)",Tx,tx=Tx(); new_mod=mod.visit(tx)
.\dev_tools\kakerlake_ultra_cleaner_v2.py,303,tx,"('Call', ('Name', 'Tx'), (), ())","('Call', 0, 0)",Tx,tx=Tx()
.\dev_tools\kakerlake_ultra_cleaner_v2.py,378,tx,"('Call', ('Name', 'Tx'), (), ())","('Call', 0, 0)",Tx,tx=Tx(); new_mod = mod.visit(tx)
.\dev_tools\kakerlake_ultra_cleaner_v3.py,321,tx,"('Call', ('Name', 'Tx'), (), ())","('Call', 0, 0)",Tx,tx=Tx(); new_mod = mod.visit(tx)
.\dev_tools\kakerlake_ultra_cleaner_v3.py,391,tx,"('Call', ('Name', 'Tx'), (), ())","('Call', 0, 0)",Tx,tx=Tx(); new_mod = mod.visit(tx)
.\mnt\data\kakerlake_ultra_cleaner.py,433,tx,"('Call', ('Name', 'Tx'), (), ())","('Call', 0, 0)",Tx,tx=Tx(); new_mod=mod.visit(tx)
.\mnt\data\kakerlake_ultra_cleaner.py,495,tx,"('Call', ('Name', 'Tx'), (), ())","('Call', 0, 0)",Tx,tx=Tx(); new_mod=mod.visit(tx)
.\mnt\data\kakerlake_ultra_cleaner_v2.py,303,tx,"('Call', ('Name', 'Tx'), (), ())","('Call', 0, 0)",Tx,tx=Tx()
.\mnt\data\kakerlake_ultra_cleaner_v2.py,378,tx,"('Call', ('Name', 'Tx'), (), ())","('Call', 0, 0)",Tx,tx=Tx(); new_mod = mod.visit(tx)
.\tools\kakerlake_ultra_cleaner.py,434,tx,"('Call', ('Name', 'Tx'), (), ())","('Call', 0, 0)",Tx,tx=Tx(); new_mod=mod.visit(tx)
.\tools\kakerlake_ultra_cleaner.py,496,tx,"('Call', ('Name', 'Tx'), (), ())","('Call', 0, 0)",Tx,tx=Tx(); new_mod=mod.visit(tx)
.\pdf_template_engine\dynamic_overlay.py,931,tx,"('Div', ('Sub', ('Name', 'bw'), ('Mult', (('Name', 'hw'), ('Name', 'scale')))), ('Const', '2.0'))","('Div', ('Sub', ('Name',), ('Mult', (('Name',), ('Name',)))), ('Const',))","bw,hw,scale",tx = (bw - hw * scale) / 2.0
.\pdf_template_engine\dynamic_overlay.py,958,tx,"('Div', ('Sub', ('Name', 'bw'), ('Mult', (('Name', 'hw'), ('Name', 'scale')))), ('Const', '2.0'))","('Div', ('Sub', ('Name',), ('Mult', (('Name',), ('Name',)))), ('Const',))","bw,hw,scale",tx = (bw - hw * scale) / 2.0
.\pdf_atomizer.py,271,txt,"('Call', ('Attr', ""span['text']"", 'strip'), (), ())","('Call', 0, 0)",span,"txt = span[""text""].strip()"
.\pdf_template_engine\dynamic_overlay.py,288,txt,"('Call', ('Attr', 'dynamic_data', 'get'), (('Const', ""'self_consumption_percent'""), ('Other', 'JoinedStr')), ())","('Call', 2, 0)","dynamic_data,int,pct_ev,round","txt = dynamic_data.get(""self_consumption_percent"", f""{int(round(pct_ev))}%"")"
.\pdf_template_engine\dynamic_overlay.py,281,txt,"('Call', ('Attr', 'dynamic_data', 'get'), (('Const', ""'self_supply_rate_percent'""), ('Other', 'JoinedStr')), ())","('Call', 2, 0)","dynamic_data,int,pct_autark,round","txt = dynamic_data.get(""self_supply_rate_percent"", f""{int(round(pct_autark))}%"")"
.\tools\schema_extractor.py,82,txt,"('Call', ('Attr', 'path', 'read_text'), (), (('encoding', ('Const', ""'utf-8'"")), ('errors', ('Const', ""'ignore'""))))","('Call', 0, 2)",path,"txt = path.read_text(encoding='utf-8', errors='ignore')"
.\product_attributes.py,254,unit,"('BoolOp', 'Or', (('Call', ('Attr', ""row.get('unit') or ''"", 'strip'), (), ()), ('Const', 'None')))","('BoolOp', 'Or', 2)",row,unit = (row.get('unit') or '').strip() or None
.\admin_product_attributes_ui.py,64,unit,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Einheit'""),), (('value', ('Const', ""''"")),))","('Call', 1, 1)",st,"unit = st.text_input(""Einheit"", value="""")"
.\analysis_utils.py,84,unit,"('Const', ""'GWh'"")","('Const',)",,"unit = ""GWh"""
.\analysis_utils.py,88,unit,"('Const', ""'MWh'"")","('Const',)",,"unit = ""MWh"""
.\analysis.py,7661,unit_in_table,"('Const', ""''"")","('Const',)",,"unit_in_table = """""
.\analysis.py,7664,unit_in_table,"('Const', ""'kWh'"")","('Const',)",,"unit_in_table = ""kWh"""
.\analysis.py,7672,unit_in_table,"('Const', ""'€'"")","('Const',)",,"unit_in_table = ""€"""
.\product_db.py,362,update_data,"('Dict', (('KV', ('Const', ""'brand'""), ('Const', ""'AlphaSolar Inc.'"")), ('KV', ('Const', ""'price_euro'""), ('Const', '182.5'))))","('Dict', 2)",,"update_data = {""price_euro"": 182.50, ""brand"": ""AlphaSolar Inc.""}"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_upload.py.insert.py,56,update_data,"('Dict', (('KV', ('Const', ""'description'""), ('Const', ""'Test Produkt für Upload-Test - AKTUALISIERT'"")), ('KV', ('Const', ""'image_base64'""), ('Name', 'new_image_b64'))))","('Dict', 2)",new_image_b64,update_data = {
.\tests\test_admin_upload.py,56,update_data,"('Dict', (('KV', ('Const', ""'description'""), ('Const', ""'Test Produkt für Upload-Test - AKTUALISIERT'"")), ('KV', ('Const', ""'image_base64'""), ('Name', 'new_image_b64'))))","('Dict', 2)",new_image_b64,update_data = {
.\tools\portings\patches\test_admin_upload.py.insert.py,56,update_data,"('Dict', (('KV', ('Const', ""'description'""), ('Const', ""'Test Produkt für Upload-Test - AKTUALISIERT'"")), ('KV', ('Const', ""'image_base64'""), ('Name', 'new_image_b64'))))","('Dict', 2)",new_image_b64,update_data = {
.\product_db.py,190,update_data,"('Other', 'DictComp')","('Other', 'DictComp')","db_columns,k,product_data,v","update_data = {k: v for k, v in product_data.items() if k in db_columns and k != 'id'}"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_upload.py.insert.py,66,updated,"('Call', ('Name', 'get_product_by_id'), (('Name', 'new_id'),), ())","('Call', 1, 0)","get_product_by_id,new_id",updated = get_product_by_id(new_id)
.\tests\test_admin_upload.py,66,updated,"('Call', ('Name', 'get_product_by_id'), (('Name', 'new_id'),), ())","('Call', 1, 0)","get_product_by_id,new_id",updated = get_product_by_id(new_id)
.\tools\portings\patches\test_admin_upload.py.insert.py,66,updated,"('Call', ('Name', 'get_product_by_id'), (('Name', 'new_id'),), ())","('Call', 1, 0)","get_product_by_id,new_id",updated = get_product_by_id(new_id)
.\create_png_test_images.py,60,updated,"('Const', '0')","('Const',)",,updated = 0
.\notwendig oder nicht\wichtig\portings\patches\create_png_test_images.py.insert.py,70,updated,"('Const', '0')","('Const',)",,updated = 0
.\tools\import_module_attributes_generic.py,349,updated,"('Const', '0')","('Const',)",,total_rows = 0; ensured=0; ensured_existing=0; ensured_created=0; updated=0; upserted=0; skipped=0
.\tools\import_module_attributes_generic.py,468,updated,"('Const', '0')","('Const',)",,total_rows = 0; ensured=0; updated=0; upserted=0; skipped=0
.\tools\portings\patches\create_png_test_images.py.insert.py,70,updated,"('Const', '0')","('Const',)",,updated = 0
.\brand_logo_db.py,273,updated_count,"('Attr', 'cursor', 'rowcount')","('Attr',)",cursor,updated_count = cursor.rowcount
.\brand_logo_db.py,356,updated_count,"('Attr', 'cursor', 'rowcount')","('Attr',)",cursor,updated_count = cursor.rowcount
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,283,updated_count,"('Attr', 'cursor', 'rowcount')","('Attr',)",cursor,updated_count = cursor.rowcount
.\notwendig oder nicht\wichtig\out_selected\patches\brand_logo_db.py.insert.py,372,updated_count,"('Attr', 'cursor', 'rowcount')","('Attr',)",cursor,updated_count = cursor.rowcount
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,326,updated_count,"('Attr', 'cursor', 'rowcount')","('Attr',)",cursor,updated_count = cursor.rowcount
.\notwendig oder nicht\wichtig\portings\patches\brand_logo_db.py.insert.py,429,updated_count,"('Attr', 'cursor', 'rowcount')","('Attr',)",cursor,updated_count = cursor.rowcount
.\tools\out_selected\patches\brand_logo_db.py.insert.py,283,updated_count,"('Attr', 'cursor', 'rowcount')","('Attr',)",cursor,updated_count = cursor.rowcount
.\tools\out_selected\patches\brand_logo_db.py.insert.py,372,updated_count,"('Attr', 'cursor', 'rowcount')","('Attr',)",cursor,updated_count = cursor.rowcount
.\tools\portings\patches\brand_logo_db.py.insert.py,326,updated_count,"('Attr', 'cursor', 'rowcount')","('Attr',)",cursor,updated_count = cursor.rowcount
.\tools\portings\patches\brand_logo_db.py.insert.py,429,updated_count,"('Attr', 'cursor', 'rowcount')","('Attr',)",cursor,updated_count = cursor.rowcount
.\add_test_product_images.py,41,updated_count,"('Const', '0')","('Const',)",,updated_count = 0
.\notwendig oder nicht\wichtig\portings\patches\add_test_product_images.py.insert.py,59,updated_count,"('Const', '0')","('Const',)",,updated_count = 0
.\tools\portings\patches\add_test_product_images.py.insert.py,59,updated_count,"('Const', '0')","('Const',)",,updated_count = 0
.\central_pdf_system.py,1417,updated_sections,"('List', ())","('List', 0)",,updated_sections = []
.\central_pdf_system.py,1479,updated_sections,"('Name', 'ordered_selected')","('Name',)",ordered_selected,updated_sections = ordered_selected
.\pdf_widgets.py,225,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Bild hochladen'""),), (('key', ('Other', 'JoinedStr')), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""), ('Const', ""'gif'""))))))","('Call', 1, 2)","content_idx,section_key,st",uploaded_file = st.file_uploader(
.\doc_output.py,724,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Bild hochladen:'""),), (('key', ('Other', 'JoinedStr')), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""), ('Const', ""'gif'""), ('Const', ""'bmp'""))))))","('Call', 1, 2)","item,st",uploaded_file = st.file_uploader(
.\pdf_widgets.py,368,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Konfigurationsdatei hochladen'""),), (('help', ('Const', ""'Laden Sie eine zuvor exportierte PDF-Konfiguration'"")), ('type', ('List', (('Const', ""'json'""),)))))","('Call', 1, 2)",st,uploaded_file = st.file_uploader(
.\admin_logo_management_ui.py,147,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Logo-Datei auswählen:'""),), (('key', ('Const', ""'logo_file_upload'"")), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""), ('Const', ""'svg'""), ('Const', ""'gif'""), ('Const', ""'webp'""))))))","('Call', 1, 2)",st,uploaded_file = st.file_uploader(
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_management_ui.py.insert.py,137,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Logo-Datei auswählen:'""),), (('key', ('Const', ""'logo_file_upload'"")), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""), ('Const', ""'svg'""), ('Const', ""'gif'""), ('Const', ""'webp'""))))))","('Call', 1, 2)",st,uploaded_file = st.file_uploader(
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_management_ui.py.insert.py,178,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Logo-Datei auswählen:'""),), (('key', ('Const', ""'logo_file_upload'"")), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""), ('Const', ""'svg'""), ('Const', ""'gif'""), ('Const', ""'webp'""))))))","('Call', 1, 2)",st,uploaded_file = st.file_uploader(
.\tools\out_selected\patches\admin_logo_management_ui.py.insert.py,137,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Logo-Datei auswählen:'""),), (('key', ('Const', ""'logo_file_upload'"")), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""), ('Const', ""'svg'""), ('Const', ""'gif'""), ('Const', ""'webp'""))))))","('Call', 1, 2)",st,uploaded_file = st.file_uploader(
.\tools\portings\patches\admin_logo_management_ui.py.insert.py,178,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Logo-Datei auswählen:'""),), (('key', ('Const', ""'logo_file_upload'"")), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""), ('Const', ""'svg'""), ('Const', ""'gif'""), ('Const', ""'webp'""))))))","('Call', 1, 2)",st,uploaded_file = st.file_uploader(
.\pdf_widgets.py,235,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'PDF hochladen'""),), (('key', ('Other', 'JoinedStr')), ('type', ('List', (('Const', ""'pdf'""),)))))","('Call', 1, 2)","content_idx,section_key,st","uploaded_file = st.file_uploader(""PDF hochladen"", type=[""pdf""], key=f""pdf_{section_key}_{content_idx}"")"
.\doc_output.py,1781,uploaded_file,"('Call', ('Attr', 'st', 'file_uploader'), (('Other', 'JoinedStr'),), (('key', ('Other', 'JoinedStr')), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""))))))","('Call', 1, 2)","i,st","uploaded_file = st.file_uploader(f""Bild {i+1}"", type=['png', 'jpg', 'jpeg'], key=f""custom_image_{i}"")"
.\doc_output.py,973,uploaded_image,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""' Bild hochladen:'""),), (('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""), ('Const', ""'gif'""), ('Const', ""'svg'"")))),))","('Call', 1, 1)",st,uploaded_image = st.file_uploader(
.\admin_panel.py,2006,uploaded_image,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Bild auswählen'""),), (('help', ('Const', ""'Unterstützte Formate: PNG, JPG, JPEG, SVG. Empfohlene Größe: 1920x1080 für Titelbilder.'"")), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""), ('Const', ""'svg'""))))))","('Call', 1, 2)",st,uploaded_image = st.file_uploader(
.\pdf_ui.py,695,uploaded_image,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Bild auswählen:'""),), (('key', ('Const', ""'custom_image_upload'"")), ('type', ('List', (('Const', ""'jpg'""), ('Const', ""'jpeg'""), ('Const', ""'png'""), ('Const', ""'gif'""), ('Const', ""'bmp'""))))))","('Call', 1, 2)",st,uploaded_image = st.file_uploader(
.\central_pdf_system.py,1274,uploaded_image,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Bild hochladen:'""),), (('help', ('Const', ""'Laden Sie ein eigenes Bild für die PDF hoch'"")), ('key', ('Other', 'JoinedStr')), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""))))))","('Call', 1, 3)","i,st",uploaded_image = st.file_uploader(
.\doc_output.py,1573,uploaded_images,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Bilder für PDF hochladen'""),), (('accept_multiple_files', ('Const', 'True')), ('key', ('Const', ""'pdf_custom_images'"")), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""), ('Const', ""'gif'""))))))","('Call', 1, 3)",st,uploaded_images = st.file_uploader(
.\central_pdf_system.py,1710,uploaded_images,"('Call', ('Attr', 'st', 'file_uploader'), (('Const', ""'Bilder hochladen:'""),), (('accept_multiple_files', ('Const', 'True')), ('help', ('Const', ""'Laden Sie eigene Bilder für die PDF hoch'"")), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""))))))","('Call', 1, 3)",st,uploaded_images = st.file_uploader(
.\admin_panel.py,925,uploaded_product_image_manual_file_form,"('Call', ('Attr', 'st', 'file_uploader'), (('Call', ('Name', 'get_text_local'), (('Const', ""'product_image_upload_label'""), ('Const', ""'Produktbild (PNG, JPG, max. 2MB)'"")), ()),), (('key', ('Other', 'JoinedStr')), ('type', ('List', (('Const', ""'png'""), ('Const', ""'jpg'""), ('Const', ""'jpeg'""))))))","('Call', 1, 2)","form_key_manual_prod_ui,get_text_local,st","uploaded_product_image_manual_file_form = st.file_uploader(get_text_local(""product_image_upload_label"",""Produktbild (PNG, JPG, max. 2MB)""), type=[""png"", ""jpg"", ""jpeg""], key=f""{form_key_manual_prod_ui}_image_upload_man"")"
.\notwendig oder nicht\wichtig\portings\patches\test_admin_workflow.py.insert.py,36,uploaded_product_image_manual_file_form,"('Const', 'True')","('Const',)",,uploaded_product_image_manual_file_form = True  # Simuliere dass ein File uploaded wurde
.\tests\test_admin_workflow.py,36,uploaded_product_image_manual_file_form,"('Const', 'True')","('Const',)",,uploaded_product_image_manual_file_form = True  # Simuliere dass ein File uploaded wurde
.\tools\portings\patches\test_admin_workflow.py.insert.py,36,uploaded_product_image_manual_file_form,"('Const', 'True')","('Const',)",,uploaded_product_image_manual_file_form = True  # Simuliere dass ein File uploaded wurde
.\pdf_template_engine\placeholders.py,934,upper_self_consumption,"('Add', (('Name', 'battery_charge_pct'), ('Name', 'direct_consumption_pct')))","('Add', (('Name',), ('Name',)))","battery_charge_pct,direct_consumption_pct",upper_self_consumption = battery_charge_pct + direct_consumption_pct
.\pdf_template_engine\placeholders.py,938,upper_self_consumption,"('Call', ('Name', 'max'), (('Const', '0.0'), ('Call', ('Name', 'min'), (('Const', '100.0'), ('Name', 'upper_self_consumption')), ())), ())","('Call', 2, 0)","max,min,upper_self_consumption","upper_self_consumption = max(0.0, min(100.0, upper_self_consumption))"
.\pdf_template_engine\placeholders.py,937,upper_self_consumption,"('Sub', ('Const', '100.0'), ('Name', 'feed_pct_swapped'))","('Sub', ('Const',), ('Name',))",feed_pct_swapped,upper_self_consumption = 100.0 - feed_pct_swapped
.\excel_eval.py,80,v,"('Attr', 'cell', 'value')","('Attr',)",cell,v = cell.value
.\pdf_template_engine\placeholders.py,1625,v,"('BoolOp', 'Or', (('Call', ('Attr', 'inverter_details', 'get'), (('Const', ""'power'""),), ()), ('Call', ('Attr', 'project_details', 'get'), (('Const', ""'inverter_power'""),), ())))","('BoolOp', 'Or', 2)","inverter_details,project_details","v = inverter_details.get(""power"") or project_details.get(""inverter_power"")"
.\excel_eval.py,184,v,"('Call', ('Attr', 'eng', 'evaluate'), (('Other', 'JoinedStr'),), ())","('Call', 1, 0)","address,eng,sheet","v = eng.evaluate(f""{sheet}!{address}"")"
.\excel_eval.py,182,v,"('Call', ('Attr', 'eng', 'value'), (('Name', 'sheet'), ('Name', 'address')), ())","('Call', 2, 0)","address,eng,sheet","v = eng.value(sheet, address)"
.\database.py,418,v,"('Call', ('Attr', 'logos', 'get'), (('Name', 'normalized_brand'),), ())","('Call', 1, 0)","logos,normalized_brand",v = logos.get(normalized_brand)
.\pdf_template_engine\placeholders.py,1386,v,"('Call', ('Attr', 'module_details', 'get'), (('Name', 'ak'),), ())","('Call', 1, 0)","ak,module_details",v = module_details.get(ak)
.\pdf_template_engine\placeholders.py,1553,v,"('Call', ('Attr', 'project_details', 'get'), (('Name', 'k'),), ())","('Call', 1, 0)","k,project_details",v = project_details.get(k)
.\pdf_template_engine\placeholders.py,1995,v,"('Call', ('Attr', 'project_details', 'get'), (('Name', 'k'),), ())","('Call', 1, 0)","k,project_details",v = project_details.get(k)
.\tools\import_module_attributes_generic.py,243,v,"('Call', ('Attr', 'v', 'strip'), (), ())","('Call', 0, 0)",v,v = v.strip()
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,35,v,"('Call', ('Name', '_fit_to_float'), (('Name', 'val'),), ())","('Call', 1, 0)","_fit_to_float,val",v = _fit_to_float(val)
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\placeholders.py.insert.py,50,v,"('Call', ('Name', '_fit_to_float'), (('Name', 'val'),), ())","('Call', 1, 0)","_fit_to_float,val",v = _fit_to_float(val)
.\pdf_template_engine\placeholders.py,77,v,"('Call', ('Name', '_fit_to_float'), (('Name', 'val'),), ())","('Call', 1, 0)","_fit_to_float,val",v = _fit_to_float(val)
.\tools\out_selected\patches\pdf_template_engine\placeholders.py.insert.py,35,v,"('Call', ('Name', '_fit_to_float'), (('Name', 'val'),), ())","('Call', 1, 0)","_fit_to_float,val",v = _fit_to_float(val)
.\tools\portings\patches\pdf_template_engine\placeholders.py.insert.py,50,v,"('Call', ('Name', '_fit_to_float'), (('Name', 'val'),), ())","('Call', 1, 0)","_fit_to_float,val",v = _fit_to_float(val)
.\pdf_template_engine\placeholders.py,1708,v,"('Call', ('Name', '_get_attr'), (('Call', ('Name', 'int'), (('Name', 'pid'),), ()), ('Name', 'k')), ())","('Call', 2, 0)","_get_attr,int,k,pid","v = _get_attr(int(pid), k)"
.\pdf_template_engine\placeholders.py,1910,v,"('Call', ('Name', '_get_attr'), (('Call', ('Name', 'int'), (('Name', 'pid'),), ()), ('Name', 'k')), ())","('Call', 2, 0)","_get_attr,int,k,pid","v = _get_attr(int(pid), k)"
.\pdf_template_engine\dynamic_overlay.py,223,v,"('Call', ('Name', '_parse_percent'), (('Call', ('Attr', 'dynamic_data', 'get'), (('Name', 'k'),), ()),), ())","('Call', 1, 0)","_parse_percent,dynamic_data,k",v = _parse_percent(dynamic_data.get(k))
.\pdf_template_engine\placeholders.py,1139,v,"('Call', ('Name', 'parse_float'), (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'annual_storage_charge_kwh'""),), ()),), ())","('Call', 1, 0)","analysis_results,parse_float","v = parse_float(analysis_results.get(""annual_storage_charge_kwh""))"
.\pdf_template_engine\placeholders.py,1142,v,"('Call', ('Name', 'parse_float'), (('Call', ('Attr', 'analysis_results', 'get'), (('Const', ""'annual_storage_discharge_kwh'""),), ()),), ())","('Call', 1, 0)","analysis_results,parse_float","v = parse_float(analysis_results.get(""annual_storage_discharge_kwh""))"
.\pdf_template_engine\placeholders.py,1805,v,"('Call', ('Name', 'parse_float'), (('Name', 'c'),), ())","('Call', 1, 0)","c,parse_float",v = parse_float(c)
.\excel_eval.py,186,v,"('Other', 'JoinedStr')","('Other', 'JoinedStr')","e,type","v = f""#ERR:{type(e).__name__}:{e}"""
.\dev_tools\kakerlake_ultra_cleaner.py,405,val,"('Attr', 'orig', 'value')","('Attr',)",orig,val=orig.value
.\mnt\data\kakerlake_ultra_cleaner.py,405,val,"('Attr', 'orig', 'value')","('Attr',)",orig,val=orig.value
.\tools\kakerlake_ultra_cleaner.py,406,val,"('Attr', 'orig', 'value')","('Attr',)",orig,val=orig.value
.\pdf_template_engine\dynamic_overlay.py,554,val,"('BoolOp', 'Or', (('Call', ('Attr', 'dynamic_data', 'get'), (('Name', 'dyn_key'),), ()), ('Call', ('Attr', 'meta', 'get'), (('Const', ""'original_text'""),), ()), ('Const', ""''"")))","('BoolOp', 'Or', 3)","dyn_key,dynamic_data,meta","val = dynamic_data.get(dyn_key) or meta.get(""original_text"") or """""
.\pdf_template_engine\placeholders.py,2318,val,"('BoolOp', 'Or', (('Call', ('Attr', 'project_data', 'get'), (('Name', 'key'),), ()), ('Call', ('Attr', 'project_details', 'get'), (('Name', 'key'),), ())))","('BoolOp', 'Or', 2)","key,project_data,project_details",val = project_data.get(key) or project_details.get(key)
.\pdf_template_engine\dynamic_overlay.py,168,val,"('Call', ('Attr', ""line.split(':', 1)[1]"", 'strip'), (), ())","('Call', 0, 0)",line,"val = line.split("":"", 1)[1].strip()"
.\pdf_template_engine\dynamic_overlay.py,162,val,"('Call', ('Attr', ""line.split(':', 1)[1].strip()"", 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",line,"val = line.split("":"", 1)[1].strip().replace("","", ""."")"
.\database.py,1281,val,"('Call', ('Attr', 'company_data', 'get'), (('Name', 'field_name'),), ())","('Call', 1, 0)","company_data,field_name",val = company_data.get(field_name)
.\pdf_template_engine\placeholders.py,1364,val,"('Call', ('Attr', 'module_details', 'get'), (('Name', 'src_key'),), ())","('Call', 1, 0)","module_details,src_key",val = module_details.get(src_key)
.\calculations.py,65,val,"('Call', ('Attr', 'results', 'get'), (('Name', 'key'), ('Const', 'None')), ())","('Call', 2, 0)","key,results","val = results.get(key, None)"
.\tools\kakerlake_ultra_cleaner.py,212,val,"('Call', ('Attr', 'results', 'get'), (('Name', 'key'), ('Const', 'None')), ())","('Call', 2, 0)","key,results","val = results.get(key, None)"
.\pdf_template_engine\placeholders.py,1871,val,"('Call', ('Attr', 'storage_details', 'get'), (('Name', 'k'),), ())","('Call', 1, 0)","k,storage_details",val = storage_details.get(k)
.\pdf_template_engine\placeholders.py,1449,val,"('Call', ('Name', '_get_attr'), (('Call', ('Name', 'int'), (('Name', 'pid'),), ()), ('Name', 'canonical')), ())","('Call', 2, 0)","_get_attr,canonical,int,pid","val = _get_attr(int(pid), canonical)"
.\pdf_template_engine\placeholders.py,1015,val,"('Call', ('Name', '_load'), (('Const', ""'electricity_price_increase_annual_percent'""), ('Const', '5.0')), ())","('Call', 2, 0)",_load,"val = _load(""electricity_price_increase_annual_percent"", 5.0)"
.\pdf_template_engine\placeholders.py,1491,val,"('Call', ('Name', '_resolve_attr'), (('Name', 'can_k'), ('Call', ('Attr', 'synonyms_map_attr', 'get'), (('Name', 'out_k'), ('List', ())), ())), ())","('Call', 2, 0)","_resolve_attr,can_k,out_k,synonyms_map_attr","val = _resolve_attr(can_k, synonyms_map_attr.get(out_k, []))"
.\analysis.py,390,val,"('Call', ('Name', 'float'), (('Call', ('Attr', 'cheat', 'get'), (('Const', ""'value_years'""),), ()),), ())","('Call', 1, 0)","cheat,float","val = float(cheat.get(""value_years""))"
.\calculations.py,3321,val,"('Call', ('Name', 'float'), (('Name', 'cheated_value_years'),), ())","('Call', 1, 0)","cheated_value_years,float",val = float(cheated_value_years)
.\pdf_template_engine\placeholders.py,1811,val,"('Call', ('Name', 'float'), (('Name', 'sto_kwh'),), ())","('Call', 1, 0)","float,sto_kwh",val = float(sto_kwh)
.\database.py,410,val,"('Call', ('Name', 'load_admin_setting'), (('Name', 'key'), ('Const', 'None')), ())","('Call', 2, 0)","key,load_admin_setting","val = load_admin_setting(key, None)"
.\pdf_template_engine\placeholders.py,851,val,"('Call', ('Name', 'max'), (('Const', '0.0'), ('Call', ('Name', 'min'), (('Const', '100.0'), ('Add', (('Call', ('Name', 'float'), (('Name', '_batt_q'),), ()), ('Call', ('Name', 'float'), (('Name', '_direct_q'),), ())))), ())), ())","('Call', 2, 0)","_batt_q,_direct_q,float,max,min","val = max(0.0, min(100.0, float(_direct_q) + float(_batt_q)))"
.\pdf_template_engine\placeholders.py,859,val,"('Call', ('Name', 'max'), (('Const', '0.0'), ('Call', ('Name', 'min'), (('Const', '100.0'), ('Div', ('Mult', (('Add', (('Call', ('Name', 'float'), (('Name', 'direct_sc_sum'),), ()), ('Call', ('Name', 'float'), (('Name', 'discharge_sc_sum'),), ()))), ('Const', '100.0'))), ('Name', 'prod'))), ())), ())","('Call', 2, 0)","direct_sc_sum,discharge_sc_sum,float,max,min,prod","val = max(0.0, min(100.0, 100.0 * (float(direct_sc_sum) + float(discharge_sc_sum)) / prod))"
.\pdf_template_engine\placeholders.py,616,val,"('Call', ('Name', 'parse_float'), (('Name', 'cand'),), ())","('Call', 1, 0)","cand,parse_float",val = parse_float(cand)
.\pdf_template_engine\placeholders.py,638,val,"('Call', ('Name', 'parse_float'), (('Name', 'f'),), ())","('Call', 1, 0)","f,parse_float",val = parse_float(f)
.\pdf_template_engine\placeholders.py,1009,val,"('Call', ('Name', 'parse_float'), (('Name', 'v'),), ())","('Call', 1, 0)","parse_float,v",val = parse_float(v)
.\database.py,389,val,"('Subscript', ('Name', 'row'), ('Const', '0'))","('Subscript',)",row,val = row[0]
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,211,val2,"('BoolOp', 'Or', (('Call', ('Attr', 'dynamic_data', 'get'), (('Const', ""'cost_20y_with_increase_number'""),), ()), ('Const', ""'0,00 €'"")))","('BoolOp', 'Or', 2)",dynamic_data,"val2 = dynamic_data.get(""cost_20y_with_increase_number"") or ""0,00 €"""
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,229,val2,"('BoolOp', 'Or', (('Call', ('Attr', 'dynamic_data', 'get'), (('Const', ""'cost_20y_with_increase_number'""),), ()), ('Const', ""'0,00 €'"")))","('BoolOp', 'Or', 2)",dynamic_data,"val2 = dynamic_data.get(""cost_20y_with_increase_number"") or ""0,00 €"""
.\pdf_template_engine\dynamic_overlay.py,724,val2,"('BoolOp', 'Or', (('Call', ('Attr', 'dynamic_data', 'get'), (('Const', ""'cost_20y_with_increase_number'""),), ()), ('Const', ""'0,00 €'"")))","('BoolOp', 'Or', 2)",dynamic_data,"val2 = dynamic_data.get(""cost_20y_with_increase_number"") or ""0,00 €"""
.\tools\out_selected\patches\pdf_template_engine\dynamic_overlay.py.insert.py,211,val2,"('BoolOp', 'Or', (('Call', ('Attr', 'dynamic_data', 'get'), (('Const', ""'cost_20y_with_increase_number'""),), ()), ('Const', ""'0,00 €'"")))","('BoolOp', 'Or', 2)",dynamic_data,"val2 = dynamic_data.get(""cost_20y_with_increase_number"") or ""0,00 €"""
.\tools\portings\patches\pdf_template_engine\dynamic_overlay.py.insert.py,229,val2,"('BoolOp', 'Or', (('Call', ('Attr', 'dynamic_data', 'get'), (('Const', ""'cost_20y_with_increase_number'""),), ()), ('Const', ""'0,00 €'"")))","('BoolOp', 'Or', 2)",dynamic_data,"val2 = dynamic_data.get(""cost_20y_with_increase_number"") or ""0,00 €"""
.\pdf_template_engine\placeholders.py,1454,val2,"('Call', ('Name', '_get_attr'), (('Call', ('Name', 'int'), (('Name', 'pid'),), ()), ('Name', 's')), ())","('Call', 2, 0)","_get_attr,int,pid,s","val2 = _get_attr(int(pid), s)"
.\admin_panel.py,1559,val_disp,"('Call', ('Attr', 'company_info_for_pdf', 'get'), (('Name', 'field_key'), ('Const', ""''"")), ())","('Call', 2, 0)","company_info_for_pdf,field_key","val_disp = company_info_for_pdf.get(field_key, '')"
.\admin_panel.py,1560,val_disp,"('Call', ('Attr', 'f""{company_info_for_pdf.get(\'zip_code\', \'\')} {company_info_for_pdf.get(\'city\', \'\')}""', 'strip'), (), ())","('Call', 0, 0)",company_info_for_pdf,"if field_key == ""zip_code"": val_disp = f""{company_info_for_pdf.get('zip_code', '')} {company_info_for_pdf.get('city', '')}"".strip()"
.\admin_panel.py,724,val_str,"('Call', ('Attr', 'val_str', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ())","('Call', 2, 0)",val_str,"val_str = val_str.replace(',', '.')"
.\admin_panel.py,723,val_str,"('Call', ('Attr', 'val_str', 'replace'), (('Const', ""'.'""), ('Const', ""''"")), ())","('Call', 2, 0)",val_str,"val_str = val_str.replace('.', '')"
.\admin_panel.py,720,val_str,"('Call', ('Name', 'str'), (('Subscript', ('Name', 'product_data_import_filtered'), ('Name', 'num_col')),), ())","('Call', 1, 0)","num_col,product_data_import_filtered,str",val_str = str(product_data_import_filtered[num_col])
.\admin_panel.py,1634,valid_to_save,"('Const', 'False')","('Const',)",,"elif not st.session_state[edit_mode_session_key]: st.error(get_text_local(""admin_image_required_for_new_template"", ""Für eine neue Bildvorlage..."")); valid_to_save = False"
.\admin_panel.py,1640,valid_to_save,"('Const', 'False')","('Const',)",,"else: st.error(get_text_local(""admin_template_update_error_invalid_index"", ""Fehler: Die zu aktualisierende Vorlage..."")); valid_to_save = False"
.\admin_panel.py,1631,valid_to_save,"('Const', 'True')","('Const',)",,"new_template_entry = {""name"": new_template_name.strip()}; valid_to_save = True"
.\doc_output.py,94,validation_result,"('Call', ('Name', '_validate_pdf_data_availability'), (('BoolOp', 'Or', (('Dict', ()), ('Name', 'project_data'))), ('BoolOp', 'Or', (('Dict', ()), ('Name', 'analysis_results'))), ('Name', 'texts')), ())","('Call', 3, 0)","_validate_pdf_data_availability,analysis_results,project_data,texts","validation_result = _validate_pdf_data_availability(project_data or {}, analysis_results or {}, texts)"
.\pdf_generator.py,1845,validation_result,"('Call', ('Name', '_validate_pdf_data_availability'), (('BoolOp', 'Or', (('Dict', ()), ('Name', 'project_data'))), ('BoolOp', 'Or', (('Dict', ()), ('Name', 'analysis_results'))), ('Name', 'texts')), ())","('Call', 3, 0)","_validate_pdf_data_availability,analysis_results,project_data,texts","validation_result = _validate_pdf_data_availability(project_data or {}, analysis_results or {}, texts)"
.\doc_output.py,2430,validation_result,"('Call', ('Name', '_validate_pdf_data_availability'), (('Name', 'project_data'), ('Name', 'analysis_results'), ('Name', 'texts')), ())","('Call', 3, 0)","_validate_pdf_data_availability,analysis_results,project_data,texts","validation_result = _validate_pdf_data_availability(project_data, analysis_results, texts)"
.\pdf_ui.py,1086,validation_result,"('Call', ('Name', '_validate_pdf_data_availability'), (), (('analysis_results', ('Name', 'analysis_results')), ('project_data', ('Name', 'project_data')), ('texts', ('Name', 'texts'))))","('Call', 0, 3)","_validate_pdf_data_availability,analysis_results,project_data,texts",validation_result = _validate_pdf_data_availability(
.\doc_output.py,2210,validation_result,"('Call', ('Name', 'validate_pdf_data'), (), (('analysis_results', ('Name', 'analysis_results')), ('company_info', ('Name', 'company_info_for_pdf')), ('project_data', ('Name', 'project_data'))))","('Call', 0, 3)","analysis_results,company_info_for_pdf,project_data,validate_pdf_data",validation_result = validate_pdf_data(
.\doc_output.py,88,validation_result,"('Const', 'None')","('Const',)",,validation_result = None
.\doc_output.py,107,validation_result,"('Dict', (('KV', ('Const', ""'critical_errors'""), ('List', ())), ('KV', ('Const', ""'is_valid'""), ('Const', 'True')), ('KV', ('Const', ""'missing_data_summary'""), ('List', ())), ('KV', ('Const', ""'warnings'""), ('List', ()))))","('Dict', 4)",,"validation_result = {'is_valid': True, 'warnings': [], 'critical_errors': [], 'missing_data_summary': []}"
.\pdf_generator.py,2976,validation_result,"('Dict', (('KV', ('Const', ""'critical_errors'""), ('List', ())), ('KV', ('Const', ""'is_valid'""), ('Const', 'True')), ('KV', ('Const', ""'missing_data_summary'""), ('List', ())), ('KV', ('Const', ""'warnings'""), ('List', ()))))","('Dict', 4)",,validation_result = {
.\pdf_template_engine\placeholders.py,1073,vals,"('Add', (('List', (('Const', '0.0'),)), ('Other', 'ListComp')))","('Add', (('List', 1), ('Other', 'ListComp')))","i,range,top","vals = [top * i / 5.0 for i in range(5, 0, -1)] + [0.0]"
.\notwendig oder nicht\excel_range_reader.py,58,vals,"('Call', ('Name', 'range_values'), (('Name', 'sheet_name'), ('Name', 'a1_range')), ())","('Call', 2, 0)","a1_range,range_values,sheet_name","vals = range_values(sheet_name, a1_range)"
.\notwendig oder nicht\python_function_recipes.py,8,vals,"('List', ())","('List', 0)",,vals = []
.\notwendig oder nicht\python_function_recipes.py,89,vals,"('List', ())","('List', 0)",,vals = []
.\notwendig oder nicht\python_function_recipes.py,100,vals,"('List', ())","('List', 0)",,vals = []
.\notwendig oder nicht\python_function_recipes.py,147,vals,"('List', ())","('List', 0)",,vals = []
.\dev_tools\kakerlake_ultra_cleaner.py,72,vals,"('Other', 'IfExp')","('Other', 'IfExp')","ast,isinstance,node,node_signature,sorted,tuple,v","vals = tuple(sorted(node_signature(v) for v in node.values)) if isinstance(node.op,(ast.And,ast.Or)) else tuple(node_signature(v) for v in node.values)"
.\mnt\data\kakerlake_ultra_cleaner.py,72,vals,"('Other', 'IfExp')","('Other', 'IfExp')","ast,isinstance,node,node_signature,sorted,tuple,v","vals = tuple(sorted(node_signature(v) for v in node.values)) if isinstance(node.op,(ast.And,ast.Or)) else tuple(node_signature(v) for v in node.values)"
.\tools\kakerlake_ultra_cleaner.py,73,vals,"('Other', 'IfExp')","('Other', 'IfExp')","ast,isinstance,node,node_signature,sorted,tuple,v","vals = tuple(sorted(node_signature(v) for v in node.values)) if isinstance(node.op,(ast.And,ast.Or)) else tuple(node_signature(v) for v in node.values)"
.\notwendig oder nicht\wichtig\portings\patches\test_product_images.py.insert.py,49,value,"('Call', ('Attr', 'dynamic_data', 'get'), (('Name', 'key'), ('Const', ""''"")), ())","('Call', 2, 0)","dynamic_data,key","value = dynamic_data.get(key, """")"
.\tests\test_product_images.py,50,value,"('Call', ('Attr', 'dynamic_data', 'get'), (('Name', 'key'), ('Const', ""''"")), ())","('Call', 2, 0)","dynamic_data,key","value = dynamic_data.get(key, """")"
.\tools\portings\patches\test_product_images.py.insert.py,49,value,"('Call', ('Attr', 'dynamic_data', 'get'), (('Name', 'key'), ('Const', ""''"")), ())","('Call', 2, 0)","dynamic_data,key","value = dynamic_data.get(key, """")"
.\analysis.py,231,value,"('Call', ('Name', 'float'), (('Call', ('Attr', 'value', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ()),), ())","('Call', 1, 0)","float,value","value = float(value.replace("","", "".""))"
.\live_preview_helpers.py,103,value,"('Call', ('Name', 'float'), (('Call', ('Attr', 'value', 'replace'), (('Const', ""','""), ('Const', ""'.'"")), ()),), ())","('Call', 1, 0)","float,value","value = float(value.replace("","", "".""))"
.\pdf_generator.py,754,value,"('Call', ('Name', 'float'), (('Name', 'cleaned_value_str'),), ())","('Call', 1, 0)","cleaned_value_str,float",value = float(cleaned_value_str)
.\analysis_utils.py,87,value,"('Div', ('Name', 'value'), ('Const', '1000'))","('Div', ('Name',), ('Const',))",value,value = value / 1000
.\analysis_utils.py,83,value,"('Div', ('Name', 'value'), ('Const', '1000000'))","('Div', ('Name',), ('Const',))",value,value = value / 1000000
.\analysis_utils.py,262,value,"('Mult', (('Add', (('Const', '1'), ('Div', ('Name', 'percentage'), ('Const', '100')))), ('Name', 'base_value')))","('Mult', (('Add', (('Const',), ('Div', ('Name',), ('Const',)))), ('Name',)))","base_value,percentage",value = base_value * (1 + percentage / 100)
.\calculations.py,2101,value,"('Name', 'value_float')","('Name',)",value_float,value = value_float  # Konvertiere zu float für die weitere Formatierung
.\dev_tools\kakerlake_ultra_cleaner.py,130,value,"('Other', 'IfExp')","('Other', 'IfExp')","hasattr,node","value = node.value if hasattr(node,'value') else None"
.\mnt\data\kakerlake_ultra_cleaner.py,130,value,"('Other', 'IfExp')","('Other', 'IfExp')","hasattr,node","value = node.value if hasattr(node,'value') else None"
.\tools\kakerlake_ultra_cleaner.py,131,value,"('Other', 'IfExp')","('Other', 'IfExp')","hasattr,node","value = node.value if hasattr(node,'value') else None"
.\notwendig oder nicht\wichtig\portings\patches\simple_logo_test.py.insert.py,61,value,"('Subscript', ('Name', 'dynamic_data'), ('Name', 'key'))","('Subscript',)","dynamic_data,key",value = dynamic_data[key]
.\notwendig oder nicht\wichtig\portings\patches\test_section_titles_logos.py.insert.py,68,value,"('Subscript', ('Name', 'dynamic_data'), ('Name', 'key'))","('Subscript',)","dynamic_data,key",value = dynamic_data[key]
.\simple_logo_test.py,63,value,"('Subscript', ('Name', 'dynamic_data'), ('Name', 'key'))","('Subscript',)","dynamic_data,key",value = dynamic_data[key]
.\tests\test_section_titles_logos.py,70,value,"('Subscript', ('Name', 'dynamic_data'), ('Name', 'key'))","('Subscript',)","dynamic_data,key",value = dynamic_data[key]
.\tools\portings\patches\simple_logo_test.py.insert.py,61,value,"('Subscript', ('Name', 'dynamic_data'), ('Name', 'key'))","('Subscript',)","dynamic_data,key",value = dynamic_data[key]
.\tools\portings\patches\test_section_titles_logos.py.insert.py,68,value,"('Subscript', ('Name', 'dynamic_data'), ('Name', 'key'))","('Subscript',)","dynamic_data,key",value = dynamic_data[key]
.\database.py,330,value,"('Subscript', ('Name', 'row'), ('Const', ""'value'""))","('Subscript',)",row,value = row['value']
.\pdf_generator.py,1660,value_prod,"('Call', ('Attr', 'product_details', 'get'), (('Name', 'key_prod'),), ())","('Call', 1, 0)","key_prod,product_details",value_prod = product_details.get(key_prod)
.\pdf_generator.py,1665,value_prod,"('Call', ('Name', '_get_attr_value_safe'), (('Call', ('Attr', 'product_details', 'get'), (('Const', ""'id'""),), ()), ('Name', 'key_prod')), ())","('Call', 2, 0)","_get_attr_value_safe,key_prod,product_details","value_prod = _get_attr_value_safe(product_details.get('id'), key_prod)"
.\pdf_generator.py,1682,value_str_prod,"('Call', ('Name', 'format_kpi_value'), (('Name', 'value_prod'),), (('na_text_key', ('Const', ""'value_not_available_short_pdf'"")), ('precision', ('Name', 'prec_prod')), ('texts_dict', ('Name', 'texts')), ('unit', ('Name', 'unit_prod'))))","('Call', 1, 4)","format_kpi_value,prec_prod,texts,unit_prod,value_prod","value_str_prod = format_kpi_value(value_prod, unit=unit_prod, precision=prec_prod, texts_dict=texts, na_text_key=""value_not_available_short_pdf"")"
.\pdf_generator.py,1680,value_str_prod,"('Call', ('Name', 'str'), (('Name', 'value_prod'),), ())","('Call', 1, 0)","str,value_prod",value_str_prod = str(value_prod)
.\pdf_generator.py,1496,value_style_name,"('Const', ""'TableBoldRight'"")","('Const',)",,"if result_key in ['total_investment_netto', 'total_investment_brutto', 'subtotal_netto']: value_style_name = 'TableBoldRight'"
.\pdf_generator.py,1497,value_style_name,"('Const', ""'TableNumber'"")","('Const',)",,"elif is_euro_val or unit_pdf == ""%"": value_style_name = 'TableNumber'"
.\pdf_generator.py,1495,value_style_name,"('Name', 'base_style_name')","('Name',)",base_style_name,value_style_name = base_style_name
.\admin_panel.py,1692,value_to_save,"('Call', ('Attr', 'new_value_from_input', 'strip'), (), ())","('Call', 0, 0)",new_value_from_input,value_to_save = new_value_from_input.strip()
.\database.py,1127,value_to_save,"('Other', 'IfExp')","('Other', 'IfExp')","dict,isinstance,json,list,value","value_to_save = json.dumps(value) if isinstance(value, (dict, list)) else value"
.\database.py,1129,value_to_save,"('Other', 'IfExp')","('Other', 'IfExp')",value,value_to_save = 1 if value else 0
.\pdf_styles.py,416,values,"('Call', ('Attr', 'data', 'get'), (('Const', ""'values'""), ('List', ())), ())","('Call', 2, 0)",data,"values = data.get('values', [])"
.\product_db.py,192,values,"('Call', ('Name', 'list'), (('Call', ('Attr', 'update_data', 'values'), (), ()),), ())","('Call', 1, 0)","list,update_data","fields_to_set = [f""{k}=?"" for k in update_data.keys()]; values = list(update_data.values()); values.append(int(product_id))"
.\analysis.py,5178,values,"('List', (('Name', 'direct_cons_float'), ('Name', 'storage_cons_float'), ('Name', 'feed_in_prod_perc')))","('List', 3)","direct_cons_float,feed_in_prod_perc,storage_cons_float","values = [direct_cons_float, storage_cons_float, feed_in_prod_perc]"
.\calculations.py,1451,values,"('List', (('Name', 'direct_consumption'), ('Name', 'battery_charge'), ('Name', 'grid_feed_in'), ('Name', 'battery_discharge'), ('Name', 'grid_purchase'), ('Name', 'direct_consumption')))","('List', 6)","battery_charge,battery_discharge,direct_consumption,grid_feed_in,grid_purchase",values = [
.\analysis.py,5025,values,"('List', (('Name', 'self_supply_float'), ('Name', 'grid_cons_float')))","('List', 2)","grid_cons_float,self_supply_float","values = [self_supply_float, grid_cons_float]"
.\notwendig oder nicht\excel_range_reader.py,47,values,"('List', ())","('List', 0)",,values = []
.\crm.py,174,values,"('Other', 'ListComp')","('Other', 'ListComp')","data_to_save,k",values = [data_to_save[k] for k in data_to_save if k != 'id']
.\crm.py,219,values,"('Other', 'ListComp')","('Other', 'ListComp')","insert_data,k",values = [insert_data[k] for k in insert_data if k != 'id']
.\pdf_template_engine\placeholders.py,2062,vat_amount,"('Call', ('Name', 'max'), (('Const', '0.0'), ('Sub', ('Call', ('Name', 'float'), (('Name', 'brutto'),), ()), ('Call', ('Name', 'float'), (('Name', 'netto'),), ()))), ())","('Call', 2, 0)","brutto,float,max,netto","vat_amount = max(0.0, float(brutto) - float(netto))"
.\pdf_template_engine\placeholders.py,2054,vat_amount,"('Const', 'None')","('Const',)",,vat_amount = None
.\pdf_template_engine\placeholders.py,2056,vat_amount,"('Mult', (('Call', ('Name', 'float'), (('Name', 'base_net'),), ()), ('Const', '0.19')))","('Mult', (('Call', 1, 0), ('Const',)))","base_net,float",vat_amount = float(base_net) * 0.19
.\analysis.py,6910,viz_settings,"('Call', ('Name', '_get_visualization_settings'), (), ())","('Call', 0, 0)",_get_visualization_settings,viz_settings = _get_visualization_settings()
.\analysis.py,1613,viz_settings,"('Dict', ())","('Dict', 0)",,viz_settings = {}
.\analysis.py,1952,viz_settings,"('Dict', ())","('Dict', 0)",,viz_settings = {}
.\analysis.py,4514,viz_settings,"('Dict', ())","('Dict', 0)",,viz_settings = {}
.\analysis.py,4691,viz_settings,"('Dict', ())","('Dict', 0)",,viz_settings = {}
.\analysis.py,4816,viz_settings,"('Dict', ())","('Dict', 0)",,viz_settings = {}
.\admin_panel.py,1470,viz_settings,"('Subscript', ('Name', 'current_global_constants'), ('Const', ""'visualization_settings'""))","('Subscript',)",current_global_constants,"viz_settings = current_global_constants['visualization_settings']; default_viz_settings_fallback = _DEFAULT_GLOBAL_CONSTANTS_FALLBACK.get('visualization_settings', {})"
.\dev_tools\kakerlake_ultra_cleaner.py,445,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('List', (('Const', ""'file'""), ('Const', ""'lineno'""), ('Const', ""'before'""), ('Const', ""'after'""), ('Const', ""'reason'"")))),))","('Call', 1, 1)","csv,f","w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""]); w.writeheader(); [w.writerow(r) for r in report]"
.\dev_tools\kakerlake_ultra_cleaner.py,507,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('List', (('Const', ""'file'""), ('Const', ""'lineno'""), ('Const', ""'before'""), ('Const', ""'after'""), ('Const', ""'reason'"")))),))","('Call', 1, 1)","csv,f","w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""]); w.writeheader(); [w.writerow(r) for r in report]"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,320,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('List', (('Const', ""'file'""), ('Const', ""'lineno'""), ('Const', ""'before'""), ('Const', ""'after'""), ('Const', ""'reason'"")))),))","('Call', 1, 1)","csv,f","w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""]); w.writeheader(); [w.writerow(r) for r in report]"
.\dev_tools\kakerlake_ultra_cleaner_v2.py,393,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('List', (('Const', ""'file'""), ('Const', ""'lineno'""), ('Const', ""'before'""), ('Const', ""'after'""), ('Const', ""'reason'"")))),))","('Call', 1, 1)","csv,f","w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""]); w.writeheader(); [w.writerow(r) for r in report]"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,337,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('List', (('Const', ""'file'""), ('Const', ""'lineno'""), ('Const', ""'before'""), ('Const', ""'after'""), ('Const', ""'reason'"")))),))","('Call', 1, 1)","csv,f","w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""]); w.writeheader(); [w.writerow(r) for r in report]"
.\dev_tools\kakerlake_ultra_cleaner_v3.py,405,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('List', (('Const', ""'file'""), ('Const', ""'lineno'""), ('Const', ""'before'""), ('Const', ""'after'""), ('Const', ""'reason'"")))),))","('Call', 1, 1)","csv,f","w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""]); w.writeheader(); [w.writerow(r) for r in report]"
.\mnt\data\kakerlake_ultra_cleaner.py,445,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('List', (('Const', ""'file'""), ('Const', ""'lineno'""), ('Const', ""'before'""), ('Const', ""'after'""), ('Const', ""'reason'"")))),))","('Call', 1, 1)","csv,f","w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""]); w.writeheader(); [w.writerow(r) for r in report]"
.\mnt\data\kakerlake_ultra_cleaner.py,507,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('List', (('Const', ""'file'""), ('Const', ""'lineno'""), ('Const', ""'before'""), ('Const', ""'after'""), ('Const', ""'reason'"")))),))","('Call', 1, 1)","csv,f","w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""]); w.writeheader(); [w.writerow(r) for r in report]"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,320,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('List', (('Const', ""'file'""), ('Const', ""'lineno'""), ('Const', ""'before'""), ('Const', ""'after'""), ('Const', ""'reason'"")))),))","('Call', 1, 1)","csv,f","w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""]); w.writeheader(); [w.writerow(r) for r in report]"
.\mnt\data\kakerlake_ultra_cleaner_v2.py,393,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('List', (('Const', ""'file'""), ('Const', ""'lineno'""), ('Const', ""'before'""), ('Const', ""'after'""), ('Const', ""'reason'"")))),))","('Call', 1, 1)","csv,f","w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""]); w.writeheader(); [w.writerow(r) for r in report]"
.\tools\kakerlake_ultra_cleaner.py,446,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('List', (('Const', ""'file'""), ('Const', ""'lineno'""), ('Const', ""'before'""), ('Const', ""'after'""), ('Const', ""'reason'"")))),))","('Call', 1, 1)","csv,f","w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""]); w.writeheader(); [w.writerow(r) for r in report]"
.\tools\kakerlake_ultra_cleaner.py,508,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('List', (('Const', ""'file'""), ('Const', ""'lineno'""), ('Const', ""'before'""), ('Const', ""'after'""), ('Const', ""'reason'"")))),))","('Call', 1, 1)","csv,f","w=csv.DictWriter(f, fieldnames=[""file"",""lineno"",""before"",""after"",""reason""]); w.writeheader(); [w.writerow(r) for r in report]"
.\notwendig oder nicht\wichtig\repo_porter_select.py,143,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('Name', 'HDR')),))","('Call', 1, 1)","HDR,csv,f","w = csv.DictWriter(f, fieldnames=HDR)"
.\tools\repo_porter_select.py,143,w,"('Call', ('Attr', 'csv', 'DictWriter'), (('Name', 'f'),), (('fieldnames', ('Name', 'HDR')),))","('Call', 1, 1)","HDR,csv,f","w = csv.DictWriter(f, fieldnames=HDR)"
.\excel_eval.py,212,w,"('Call', ('Attr', 'csv', 'writer'), (('Name', 'f'),), ())","('Call', 1, 0)","csv,f",w = csv.writer(f)
.\excel_eval.py,350,w,"('Call', ('Attr', 'csv', 'writer'), (('Name', 'f'),), ())","('Call', 1, 0)","csv,f",w = csv.writer(f)
.\notwendig oder nicht\wichtig\repo_porter.py,350,w,"('Call', ('Attr', 'csv', 'writer'), (('Name', 'f'),), ())","('Call', 1, 0)","csv,f",w = csv.writer(f)
.\tools\repo_porter.py,350,w,"('Call', ('Attr', 'csv', 'writer'), (('Name', 'f'),), ())","('Call', 1, 0)","csv,f",w = csv.writer(f)
.\doc_output.py,1377,watermark_opacity,"('Call', ('Attr', 'st', 'slider'), (('Const', ""'Transparenz:'""), ('Const', '0.1'), ('Const', '0.5'), ('Const', '0.1')), ())","('Call', 4, 0)",st,"watermark_opacity = st.slider(""Transparenz:"", 0.1, 0.5, 0.1)"
.\pdf_styles.py,1093,watermark_opacity,"('Call', ('Attr', 'st', 'slider'), (('Const', ""'Wasserzeichen-Transparenz'""),), (('max_value', ('Const', '0.5')), ('min_value', ('Const', '0.1')), ('step', ('Const', '0.05')), ('value', ('Const', '0.2'))))","('Call', 1, 4)",st,watermark_opacity = st.slider(
.\doc_output.py,1376,watermark_text,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Text:'""), ('Const', ""'SOLAR ANALYSE'"")), ())","('Call', 2, 0)",st,"watermark_text = st.text_input(""Text:"", ""SOLAR ANALYSE"")"
.\pdf_styles.py,1088,watermark_text,"('Call', ('Attr', 'st', 'text_input'), (('Const', ""'Wasserzeichen-Text'""),), (('placeholder', ('Const', ""'z.B. VERTRAULICH'"")), ('value', ('Const', ""'ENTWURF'""))))","('Call', 1, 2)",st,watermark_text = st.text_input(
.\pdf_template_engine\placeholders.py,1609,watt_val,"('Const', 'None')","('Const',)",,watt_val = None
.\pdf_template_engine\placeholders.py,1619,watt_val,"('Mult', (('Const', '1000.0'), ('Name', 'pf')))","('Mult', (('Const',), ('Name',)))",pf,watt_val = pf * 1000.0  # kW zu Watt konvertieren
.\pdf_template_engine\placeholders.py,1641,watt_val,"('Mult', (('Const', '1000.0'), ('Name', 'total_pf')))","('Mult', (('Const',), ('Name',)))",total_pf,watt_val = total_pf * 1000.0
.\pdf_template_engine\placeholders.py,1617,watt_val,"('Name', 'pf')","('Name',)",pf,watt_val = pf  # Bereits in Watt
.\pdf_template_engine\placeholders.py,1621,watt_val,"('Name', 'pf')","('Name',)",pf,watt_val = pf
.\pdf_template_engine\placeholders.py,1628,watt_val,"('Other', 'IfExp')","('Other', 'IfExp')",pf,watt_val = pf if pf >= 1000 else pf * 1000.0
.\pdf_styles.py,797,width,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Breite (px)'""),), (('max_value', ('Const', '2000')), ('min_value', ('Const', '100')), ('value', ('Const', '800'))))","('Call', 1, 3)",st,"width = st.number_input(""Breite (px)"", value=800, min_value=100, max_value=2000)"
.\admin_logo_positions_ui.py,100,width,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Breite:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '200.0')), ('min_value', ('Const', '10.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'width'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'width'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",width = st.number_input(
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_positions_ui.py.insert.py,75,width,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Breite:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '200.0')), ('min_value', ('Const', '10.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'width'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'width'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",width = st.number_input(
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_positions_ui.py.insert.py,76,width,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Breite:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '200.0')), ('min_value', ('Const', '10.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'width'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'width'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",width = st.number_input(
.\tools\out_selected\patches\admin_logo_positions_ui.py.insert.py,75,width,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Breite:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '200.0')), ('min_value', ('Const', '10.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'width'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'width'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",width = st.number_input(
.\tools\portings\patches\admin_logo_positions_ui.py.insert.py,76,width,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Breite:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '200.0')), ('min_value', ('Const', '10.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'width'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'width'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",width = st.number_input(
.\pdf_preview.py,304,width,"('Call', ('Name', 'int'), (('Div', ('Mult', (('Attr', 'current_img', 'width'), ('Name', 'preview_zoom'))), ('Const', '100')),), ())","('Call', 1, 0)","current_img,int,preview_zoom",width = int(current_img.width * preview_zoom / 100)
.\pdf_preview.py,248,width,"('Call', ('Name', 'int'), (('Div', ('Mult', (('Attr', 'img', 'width'), ('Name', 'preview_zoom'))), ('Const', '100')),), ())","('Call', 1, 0)","img,int,preview_zoom",width = int(img.width * preview_zoom / 100)
.\pdf_styles.py,387,width,"('Const', '0.35')","('Const',)",,width = 0.35
.\calculations_heatpump.py,224,wood_ster,"('Add', (('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Call', ('Attr', 'consumption', 'get'), (('Const', ""'wood_ster'""), ('Const', '0')), ()), ('Const', '0'))),), ()), ('Call', ('Name', 'float'), (('BoolOp', 'Or', (('Const', '0'), ('Name', 'wood_ster_additional'))),), ())))","('Add', (('Call', 1, 0), ('Call', 1, 0)))","consumption,float,wood_ster_additional","wood_ster = float(consumption.get('wood_ster', 0) or 0) + float(wood_ster_additional or 0)"
.\heatpump_ui.py,185,wood_ster,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Holz (Ster/Jahr)'""),), (('help', ('Const', ""'Zusätzlicher Holzverbrauch wird stets als Zusatz berücksichtigt.'"")), ('min_value', ('Const', '0.0')), ('step', ('Const', '0.5')), ('value', ('Const', '0.0'))))","('Call', 1, 4)",st,"wood_ster = st.number_input(""Holz (Ster/Jahr)"", min_value=0.0, value=0.0, step=0.5, help=""Zusätzlicher Holzverbrauch wird stets als Zusatz berücksichtigt."")"
.\analysis.py,5833,worst_month,"('Call', ('Attr', 'shading_analysis', 'get'), (('Const', ""'worst_month'""), ('Const', ""'Unbekannt'"")), ())","('Call', 2, 0)",shading_analysis,"worst_month = shading_analysis.get(""worst_month"", ""Unbekannt"")"
.\calculations.py,1615,worst_month,"('Subscript', ('List', (('Const', ""'Jan'""), ('Const', ""'Feb'""), ('Const', ""'Mär'""), ('Const', ""'Apr'""), ('Const', ""'Mai'""), ('Const', ""'Jun'""), ('Const', ""'Jul'""), ('Const', ""'Aug'""), ('Const', ""'Sep'""), ('Const', ""'Okt'""), ('Const', ""'Nov'""), ('Const', ""'Dez'""))), ('Name', 'worst_month_idx'))","('Subscript',)",worst_month_idx,worst_month = [
.\calculations.py,1629,worst_month_loss,"('Call', ('Attr', 'np', 'mean'), (('Subscript', ('Name', 'shading_matrix'), ('Name', 'worst_month_idx')),), ())","('Call', 1, 0)","np,shading_matrix,worst_month_idx",worst_month_loss = np.mean(shading_matrix[worst_month_idx])
.\analysis.py,5834,worst_month_loss,"('Call', ('Attr', 'shading_analysis', 'get'), (('Const', ""'worst_month_loss'""), ('Const', '0.0')), ())","('Call', 2, 0)",shading_analysis,"worst_month_loss = shading_analysis.get(""worst_month_loss"", 0.0)"
.\pdf_ui.py,282,wp_default_index,"('Const', '0')","('Const',)",,wp_default_index = 0
.\pdf_ui.py,287,wp_default_index,"('Name', 'idx')","('Name',)",idx,pv_default_index = idx; wp_default_index = idx; break
.\product_attributes.py,195,writer,"('Call', ('Attr', 'csv', 'writer'), (('Name', 'f'),), ())","('Call', 1, 0)","csv,f",writer = csv.writer(f)
.\product_attributes.py,219,writer,"('Call', ('Attr', 'csv', 'writer'), (('Name', 'f'),), ())","('Call', 1, 0)","csv,f",writer = csv.writer(f)
.\notwendig oder nicht\wichtig\out_selected\patches\pdf_template_engine\merger.py.insert.py,11,writer,"('Call', ('Name', 'PdfWriter'), (), ())","('Call', 0, 0)",PdfWriter,writer = PdfWriter()
.\notwendig oder nicht\wichtig\portings\patches\pdf_template_engine\merger.py.insert.py,12,writer,"('Call', ('Name', 'PdfWriter'), (), ())","('Call', 0, 0)",PdfWriter,writer = PdfWriter()
.\pdf_generator.py,425,writer,"('Call', ('Name', 'PdfWriter'), (), ())","('Call', 0, 0)",PdfWriter,writer = PdfWriter()
.\pdf_generator.py,570,writer,"('Call', ('Name', 'PdfWriter'), (), ())","('Call', 0, 0)",PdfWriter,writer = PdfWriter()
.\pdf_generator.py,674,writer,"('Call', ('Name', 'PdfWriter'), (), ())","('Call', 0, 0)",PdfWriter,writer = PdfWriter()
.\pdf_template_engine\dynamic_overlay.py,877,writer,"('Call', ('Name', 'PdfWriter'), (), ())","('Call', 0, 0)",PdfWriter,writer = PdfWriter()
.\pdf_template_engine\dynamic_overlay.py,980,writer,"('Call', ('Name', 'PdfWriter'), (), ())","('Call', 0, 0)",PdfWriter,writer = PdfWriter()
.\pdf_template_engine\merger.py,9,writer,"('Call', ('Name', 'PdfWriter'), (), ())","('Call', 0, 0)",PdfWriter,writer = PdfWriter()
.\tools\out_selected\patches\pdf_template_engine\merger.py.insert.py,11,writer,"('Call', ('Name', 'PdfWriter'), (), ())","('Call', 0, 0)",PdfWriter,writer = PdfWriter()
.\tools\portings\patches\pdf_template_engine\merger.py.insert.py,12,writer,"('Call', ('Name', 'PdfWriter'), (), ())","('Call', 0, 0)",PdfWriter,writer = PdfWriter()
.\pdf_styles.py,386,x,"('Call', ('Attr', 'np', 'arange'), (('Call', ('Name', 'len'), (('Name', 'months'),), ()),), ())","('Call', 1, 0)","len,months,np",x = np.arange(len(months))
.\admin_logo_positions_ui.py,80,x,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'X-Position:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '595.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'x'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'x'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",x = st.number_input(
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_positions_ui.py.insert.py,55,x,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'X-Position:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '595.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'x'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'x'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",x = st.number_input(
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_positions_ui.py.insert.py,56,x,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'X-Position:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '595.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'x'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'x'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",x = st.number_input(
.\tools\out_selected\patches\admin_logo_positions_ui.py.insert.py,55,x,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'X-Position:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '595.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'x'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'x'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",x = st.number_input(
.\tools\portings\patches\admin_logo_positions_ui.py.insert.py,56,x,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'X-Position:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '595.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'x'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'x'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",x = st.number_input(
.\pdf_template_engine\dynamic_overlay.py,804,x,"('Call', ('Name', 'float'), (('Call', ('Attr', 'pos', 'get'), (('Const', ""'x'""), ('Const', '50.0')), ()),), ())","('Call', 1, 0)","float,pos","x = float(pos.get(""x"", 50.0))"
.\utils\export_coords.py,28,x,"('Call', ('Name', 'min'), (('Other', 'GeneratorExp'),), ())","('Call', 1, 0)","min,w,wlist","x = min(w[""x0""] for w in wlist)"
.\dev_tools\kakerlake_ultra_cleaner.py,571,x,"('Const', 'None')","('Const',)",,x=y=p=None
.\mnt\data\kakerlake_ultra_cleaner.py,571,x,"('Const', 'None')","('Const',)",,x=y=p=None
.\tools\kakerlake_ultra_cleaner.py,572,x,"('Const', 'None')","('Const',)",,x=y=p=None
.\notwendig oder nicht\wichtig\portings\patches\test_brand_logos.py.insert.py,34,x,"('FloorDiv', ('Sub', ('Name', 'width'), ('Name', 'text_width')), ('Const', '2'))","('FloorDiv', ('Sub', ('Name',), ('Name',)), ('Const',))","text_width,width",x = (width - text_width) // 2
.\tests\test_brand_logos.py,31,x,"('FloorDiv', ('Sub', ('Name', 'width'), ('Name', 'text_width')), ('Const', '2'))","('FloorDiv', ('Sub', ('Name',), ('Name',)), ('Const',))","text_width,width",x = (width - text_width) // 2
.\tools\portings\patches\test_brand_logos.py.insert.py,34,x,"('FloorDiv', ('Sub', ('Name', 'width'), ('Name', 'text_width')), ('Const', '2'))","('FloorDiv', ('Sub', ('Name',), ('Name',)), ('Const',))","text_width,width",x = (width - text_width) // 2
.\pdf_styles.py,675,x,"('Mult', (('Const', '1.5'), ('Name', 'col'), ('Name', 'hex_size')))","('Mult', (('Const',), ('Name',), ('Name',)))","col,hex_size",x = col * hex_size * 1.5
.\dev_tools\kakerlake_ultra_cleaner.py,567,x,"('Other', 'IfExp')","('Other', 'IfExp')","float,o,xk",x=float(o[xk]) if xk and o.get(xk) is not None else None
.\mnt\data\kakerlake_ultra_cleaner.py,567,x,"('Other', 'IfExp')","('Other', 'IfExp')","float,o,xk",x=float(o[xk]) if xk and o.get(xk) is not None else None
.\tools\kakerlake_ultra_cleaner.py,568,x,"('Other', 'IfExp')","('Other', 'IfExp')","float,o,xk",x=float(o[xk]) if xk and o.get(xk) is not None else None
.\pdf_atomizer.py,274,x,"('Subscript', ('Subscript', ('Name', 'span'), ('Const', ""'bbox'"")), ('Const', '0'))","('Subscript',)",span,"x = span[""bbox""][0]"
.\analysis.py,7310,x_vals,"('BoolOp', 'Or', (('Call', ('Attr', 'st.session_state', 'get'), (('Const', ""'page3_20y_series_years'""),), ()), ('List', ())))","('BoolOp', 'Or', 2)",st,"x_vals = st.session_state.get(""page3_20y_series_years"") or []"
.\analysis.py,613,x_vals,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '1'), ('Add', (('Const', '1'), ('Name', 'years')))), ()),), ())","('Call', 1, 0)","list,range,years","x_vals = list(range(1, years + 1))"
.\admin_logo_positions_ui.py,90,y,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Y-Position:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '842.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'y'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'y'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",y = st.number_input(
.\notwendig oder nicht\wichtig\out_selected\patches\admin_logo_positions_ui.py.insert.py,65,y,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Y-Position:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '842.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'y'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'y'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",y = st.number_input(
.\notwendig oder nicht\wichtig\portings\patches\admin_logo_positions_ui.py.insert.py,66,y,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Y-Position:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '842.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'y'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'y'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",y = st.number_input(
.\tools\out_selected\patches\admin_logo_positions_ui.py.insert.py,65,y,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Y-Position:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '842.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'y'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'y'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",y = st.number_input(
.\tools\portings\patches\admin_logo_positions_ui.py.insert.py,66,y,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Y-Position:'""),), (('key', ('Other', 'JoinedStr')), ('max_value', ('Const', '842.0')), ('min_value', ('Const', '0.0')), ('step', ('Const', '1.0')), ('value', ('Call', ('Name', 'float'), (('Call', ('Attr', 'current_pos', 'get'), (('Const', ""'y'""), ('Subscript', ('Name', 'default_pos'), ('Const', ""'y'""))), ()),), ()))))","('Call', 1, 5)","category,current_pos,default_pos,float,st",y = st.number_input(
.\dev_tools\kakerlake_ultra_cleaner.py,571,y,"('Const', 'None')","('Const',)",,x=y=p=None
.\mnt\data\kakerlake_ultra_cleaner.py,571,y,"('Const', 'None')","('Const',)",,x=y=p=None
.\tools\kakerlake_ultra_cleaner.py,572,y,"('Const', 'None')","('Const',)",,x=y=p=None
.\notwendig oder nicht\wichtig\portings\patches\test_brand_logos.py.insert.py,35,y,"('FloorDiv', ('Sub', ('Name', 'height'), ('Name', 'text_height')), ('Const', '2'))","('FloorDiv', ('Sub', ('Name',), ('Name',)), ('Const',))","height,text_height",y = (height - text_height) // 2
.\tests\test_brand_logos.py,32,y,"('FloorDiv', ('Sub', ('Name', 'height'), ('Name', 'text_height')), ('Const', '2'))","('FloorDiv', ('Sub', ('Name',), ('Name',)), ('Const',))","height,text_height",y = (height - text_height) // 2
.\tools\portings\patches\test_brand_logos.py.insert.py,35,y,"('FloorDiv', ('Sub', ('Name', 'height'), ('Name', 'text_height')), ('Const', '2'))","('FloorDiv', ('Sub', ('Name',), ('Name',)), ('Const',))","height,text_height",y = (height - text_height) // 2
.\pdf_styles.py,676,y,"('Mult', (('Call', ('Attr', 'np', 'sqrt'), (('Const', '3'),), ()), ('Name', 'hex_size'), ('Name', 'row')))","('Mult', (('Call', 1, 0), ('Name',), ('Name',)))","hex_size,np,row",y = row * hex_size * np.sqrt(3)
.\dev_tools\kakerlake_ultra_cleaner.py,568,y,"('Other', 'IfExp')","('Other', 'IfExp')","float,o,yk",y=float(o[yk]) if yk and o.get(yk) is not None else None
.\mnt\data\kakerlake_ultra_cleaner.py,568,y,"('Other', 'IfExp')","('Other', 'IfExp')","float,o,yk",y=float(o[yk]) if yk and o.get(yk) is not None else None
.\tools\kakerlake_ultra_cleaner.py,569,y,"('Other', 'IfExp')","('Other', 'IfExp')","float,o,yk",y=float(o[yk]) if yk and o.get(yk) is not None else None
.\utils\export_coords.py,29,y,"('Sub', ('Name', 'h'), ('Call', ('Name', 'min'), (('Other', 'GeneratorExp'),), ()))","('Sub', ('Name',), ('Call', 1, 0))","h,min,w,wlist","y = h - min(w[""top""] for w in wlist)"
.\pdf_atomizer.py,275,y,"('Sub', ('Name', 'h'), ('Subscript', ('Subscript', ('Name', 'span'), ('Const', ""'bbox'"")), ('Const', '1')))","('Sub', ('Name',), ('Subscript',))","h,span","y = h - span[""bbox""][1]          # y invertieren"
.\pdf_template_engine\dynamic_overlay.py,812,y,"('Sub', ('Name', 'y_top'), ('Name', 'dh'))","('Sub', ('Name',), ('Name',))","dh,y_top",y = y_top - dh
.\pdf_generator.py,1031,y_pos,"('Const', '0')","('Const',)",,y_pos = 0
.\pdf_generator.py,1035,y_pos,"('Div', ('USub', ('Attr', 'self', 'thickness')), ('Const', '2.0'))","('Div', ('USub', ('Attr',)), ('Const',))",self,y_pos = -self.thickness / 2.0
.\pdf_generator.py,1033,y_pos,"('USub', ('Attr', 'self', 'thickness'))","('USub', ('Attr',))",self,y_pos = -self.thickness
.\central_pdf_system.py,532,y_position,"('Const', '50')","('Const',)",,y_position = 50
.\central_pdf_system.py,468,y_position,"('Const', '750')","('Const',)",,y_position = 750
.\calculations.py,4043,year,"('Const', '0')","('Const',)",,year = 0
.\calculations.py,4063,year,"('Const', '0')","('Const',)",,year = 0
.\calculations.py,4084,year,"('Const', '0')","('Const',)",,year = 0
.\calculations.py,4103,year,"('Const', '0')","('Const',)",,year = 0
.\calculations.py,891,year,"('Subscript', ('Name', 'item'), ('Const', ""'year'""))","('Subscript',)",item,"year = item[""year""]"
.\live_calculation_engine.py,38,yearly_cost,"('Mult', (('Name', 'base_yearly_cost'), ('Pow', ('Add', (('Const', '1'), ('Div', ('Name', 'price_increase_percent'), ('Const', '100')))), ('Sub', ('Name', 'year'), ('Const', '1')))))","('Mult', (('Name',), ('Pow', ('Add', (('Const',), ('Div', ('Name',), ('Const',)))), ('Sub', ('Name',), ('Const',)))))","base_yearly_cost,price_increase_percent,year",yearly_cost = base_yearly_cost * ((1 + price_increase_percent/100) ** (year - 1))
.\live_calculation_engine.py,63,yearly_cost,"('Mult', (('Name', 'yearly_cost_with_pv_base'), ('Pow', ('Add', (('Const', '1'), ('Div', ('Name', 'price_increase_percent'), ('Const', '100')))), ('Sub', ('Name', 'year'), ('Const', '1')))))","('Mult', (('Name',), ('Pow', ('Add', (('Const',), ('Div', ('Name',), ('Const',)))), ('Sub', ('Name',), ('Const',)))))","price_increase_percent,year,yearly_cost_with_pv_base",yearly_cost = yearly_cost_with_pv_base * ((1 + price_increase_percent/100) ** (year - 1))
.\analysis.py,2569,yearly_production,"('Mult', (('Const', '1000'), ('Name', 'anlage_kwp_val')))","('Mult', (('Const',), ('Name',)))",anlage_kwp_val,yearly_production = anlage_kwp_val * 1000
.\calculations.py,1334,yearly_production,"('Mult', (('Name', 'annual_production'), ('Pow', ('Sub', ('Const', '1'), ('Name', 'degradation_rate')), ('Sub', ('Name', 'year'), ('Const', '1')))))","('Mult', (('Name',), ('Pow', ('Sub', ('Const',), ('Name',)), ('Sub', ('Name',), ('Const',)))))","annual_production,degradation_rate,year",yearly_production = annual_production * (1 - degradation_rate) ** (year - 1)
.\pdf_styles.py,443,years,"('Call', ('Attr', 'data', 'get'), (('Const', ""'years'""), ('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '0'), ('Const', '21')), ()),), ())), ())","('Call', 2, 0)","data,list,range","years = data.get('years', list(range(0, 21)))"
.\heatpump_ui.py,1182,years,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Laufzeit Jahre'""),), (('max_value', ('Const', '30')), ('min_value', ('Const', '1')), ('value', ('Const', '15'))))","('Call', 1, 3)",st,"years = st.number_input(""Laufzeit Jahre"", min_value=1, max_value=30, value=15)"
.\notwendig oder nicht\wichtig\out_selected\patches\heatpump_ui.py.insert.py,106,years,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Laufzeit Jahre'""),), (('max_value', ('Const', '30')), ('min_value', ('Const', '1')), ('value', ('Const', '15'))))","('Call', 1, 3)",st,"years = st.number_input(""Laufzeit Jahre"", min_value=1, max_value=30, value=15)"
.\notwendig oder nicht\wichtig\portings\patches\heatpump_ui.py.insert.py,107,years,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Laufzeit Jahre'""),), (('max_value', ('Const', '30')), ('min_value', ('Const', '1')), ('value', ('Const', '15'))))","('Call', 1, 3)",st,"years = st.number_input(""Laufzeit Jahre"", min_value=1, max_value=30, value=15)"
.\tools\out_selected\patches\heatpump_ui.py.insert.py,106,years,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Laufzeit Jahre'""),), (('max_value', ('Const', '30')), ('min_value', ('Const', '1')), ('value', ('Const', '15'))))","('Call', 1, 3)",st,"years = st.number_input(""Laufzeit Jahre"", min_value=1, max_value=30, value=15)"
.\tools\portings\patches\heatpump_ui.py.insert.py,107,years,"('Call', ('Attr', 'st', 'number_input'), (('Const', ""'Laufzeit Jahre'""),), (('max_value', ('Const', '30')), ('min_value', ('Const', '1')), ('value', ('Const', '15'))))","('Call', 1, 3)",st,"years = st.number_input(""Laufzeit Jahre"", min_value=1, max_value=30, value=15)"
.\analysis.py,1915,years,"('Call', ('Name', 'int'), (('Call', ('Name', 'max'), (('Const', '1'), ('Name', 'years')), ()),), ())","('Call', 1, 0)","int,max,years","years = int(max(1, years))"
.\calculations.py,772,years,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Add', (('Call', ('Name', 'int'), (('Name', 'expected_lifetime_years'),), ()), ('Const', '1'))),), ()),), ())","('Call', 1, 0)","expected_lifetime_years,int,list,range",years = list(range(int(expected_lifetime_years) + 1))
.\heatpump_ui.py,642,years,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '0'), ('Const', '21')), ()),), ())","('Call', 1, 0)","list,range","years = list(range(0, 21))"
.\analysis.py,8418,years,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '1'), ('Const', '11')), ()),), ())","('Call', 1, 0)","list,range","years = list(range(1, 11))"
.\analysis.py,5467,years,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '1'), ('Const', '26')), ()),), ())","('Call', 1, 0)","list,range","years = list(range(1, 26))"
.\calculations.py,1061,years,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '1'), ('Const', '26')), ()),), ())","('Call', 1, 0)","list,range","years = list(range(1, 26))  # 25 Jahre"
.\calculations.py,1243,years,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '1'), ('Const', '26')), ()),), ())","('Call', 1, 0)","list,range","years = list(range(1, 26))"
.\analysis.py,8837,years,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '21'),), ()),), ())","('Call', 1, 0)","list,range",years = list(range(21))
.\analysis.py,9021,years,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '21'),), ()),), ())","('Call', 1, 0)","list,range",years = list(range(21))
.\analysis.py,3422,years,"('Call', ('Name', 'list'), (('Call', ('Name', 'range'), (('Const', '26'),), ()),), ())","('Call', 1, 0)","list,range",years = list(range(26))
.\calculations_extended.py,41,years,"('Const', '0')","('Const',)",,years = 0
.\analysis.py,592,years,"('Const', '20')","('Const',)",,years = 20
.\analysis.py,6973,years,"('Const', '20')","('Const',)",,years = 20
.\calculations.py,639,years,"('Const', '25')","('Const',)",,years = 25
.\calculations.py,1824,years,"('Const', '25')","('Const',)",,years = 25
.\calculations.py,1923,years,"('Const', '25')","('Const',)",,years = 25
.\analysis.py,3274,years,"('List', (('Const', '0'), ('Const', '1'), ('Const', '5'), ('Const', '10'), ('Const', '15'), ('Const', '20'), ('Const', '25')))","('List', 7)",,"years = [0, 1, 5, 10, 15, 20, 25]"
.\analysis.py,9093,years,"('List', (('Const', '0'), ('Const', '5'), ('Const', '10'), ('Const', '15'), ('Const', '20'), ('Const', '25')))","('List', 6)",,"years = [0, 5, 10, 15, 20, 25]"
.\pdf_template_engine\placeholders.py,1342,years_str,"('Call', ('Name', 'as_str'), (('Name', 'perf_years'),), ())","('Call', 1, 0)","as_str,perf_years",years_str = as_str(perf_years)
.\pdf_template_engine\placeholders.py,1340,years_str,"('Call', ('Name', 'fmt_number'), (('Call', ('Name', 'float'), (('Name', 'perf_years'),), ()), ('Const', '0'), ('Const', ""'Jahre'"")), ())","('Call', 3, 0)","float,fmt_number,perf_years","years_str = fmt_number(float(perf_years), 0, ""Jahre"")"
.\pdf_template_engine\placeholders.py,486,zip_code,"('Call', ('Attr', ""as_str(customer.get('zip_code') or '')"", 'strip'), (), ())","('Call', 0, 0)","as_str,customer","zip_code = as_str(customer.get(""zip_code"") or """").strip()"
.\crm.py,334,zip_code,"('Call', ('Attr', 'st', 'text_input'), (('Call', ('Name', 'get_text_crm'), (('Name', 'texts'), ('Const', ""'zip_code_label'""), ('Const', ""'PLZ'"")), ()),), (('value', ('Call', ('Attr', 'customer_to_edit', 'get'), (('Const', ""'zip_code'""), ('Const', ""''"")), ())),))","('Call', 1, 1)","customer_to_edit,get_text_crm,st,texts","zip_code = st.text_input(get_text_crm(texts, ""zip_code_label"", ""PLZ""), value=customer_to_edit.get('zip_code', ''))"
